   Compiling tmux v0.0.0 (/mnt/c/Users/sebir/Documents/Research/tidyclippy/Edited_Code_and_Results/tmux_edits)
warning: this `if` statement can be collapsed
    --> src/alerts.rs:1257:5
     |
1257 | /     if flags & 0x1 as libc::c_int != 0 {
1258 | |         if options_get_number(
1259 | |             (*w).options,
1260 | |             b"monitor-bell\0" as *const u8 as *const libc::c_char,
...    |
1264 | |         }
1265 | |     }
     | |_____^
     |
     = note: `#[warn(clippy::collapsible_if)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1257 ~     if flags & 0x1 as libc::c_int != 0 && options_get_number(
1258 +             (*w).options,
1259 +             b"monitor-bell\0" as *const u8 as *const libc::c_char,
1260 +         ) != 0 {
1261 +         return 1 as libc::c_int;
1262 +     }
     |

warning: this `if` statement can be collapsed
    --> src/alerts.rs:1266:5
     |
1266 | /     if flags & 0x2 as libc::c_int != 0 {
1267 | |         if options_get_number(
1268 | |             (*w).options,
1269 | |             b"monitor-activity\0" as *const u8 as *const libc::c_char,
...    |
1273 | |         }
1274 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1266 ~     if flags & 0x2 as libc::c_int != 0 && options_get_number(
1267 +             (*w).options,
1268 +             b"monitor-activity\0" as *const u8 as *const libc::c_char,
1269 +         ) != 0 {
1270 +         return 1 as libc::c_int;
1271 +     }
     |

warning: this `if` statement can be collapsed
    --> src/alerts.rs:1275:5
     |
1275 | /     if flags & 0x8 as libc::c_int != 0 {
1276 | |         if options_get_number(
1277 | |             (*w).options,
1278 | |             b"monitor-silence\0" as *const u8 as *const libc::c_char,
...    |
1282 | |         }
1283 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1275 ~     if flags & 0x8 as libc::c_int != 0 && options_get_number(
1276 +             (*w).options,
1277 +             b"monitor-silence\0" as *const u8 as *const libc::c_char,
1278 +         ) != 0 as libc::c_int as libc::c_longlong {
1279 +         return 1 as libc::c_int;
1280 +     }
     |

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1291:13
     |
1291 | /             if !(cp.is_null() || cp.offset_from(s) as libc::c_long as size_t != wanted) {
1292 | |                 if strncmp(*old_argv.offset(0 as libc::c_int as isize), s, wanted)
1293 | |                     == 0 as libc::c_int
1294 | |                 {
1295 | |                     break;
1296 | |                 }
1297 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1291 ~             if !(cp.is_null() || cp.offset_from(s) as libc::c_long as size_t != wanted) && strncmp(*old_argv.offset(0 as libc::c_int as isize), s, wanted) == 0 as libc::c_int {
1292 +                 break;
1293 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1461:9
     |
1461 | /         if !args.is_null() {
1462 | |             if !((*entry).args.lower != -(1 as libc::c_int)
1463 | |                 && (*args).argc < (*entry).args.lower)
1464 | |             {
...    |
1483 | |             }
1484 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1461 ~         if !args.is_null() && !((*entry).args.lower != -(1 as libc::c_int)
1462 +                 && (*args).argc < (*entry).args.lower) {
1463 +             if !((*entry).args.upper != -(1 as libc::c_int)
1464 +                 && (*args).argc > (*entry).args.upper)
1465 +             {
1466 +                 cmd = xcalloc(
1467 +                     1 as libc::c_int as size_t,
1468 +                     ::core::mem::size_of::<cmd>() as libc::c_ulong,
1469 +                 ) as *mut cmd;
1470 +                 (*cmd).entry = entry;
1471 +                 (*cmd).args = args;
1472 +                 if !file.is_null() {
1473 +                     (*cmd).file = xstrdup(file);
1474 +                 }
1475 +                 (*cmd).line = line;
1476 +                 if allocated != 0 {
1477 +                     cmd_free_argv(argc, argv);
1478 +                 }
1479 +                 return cmd;
1480 +             }
1481 +         }
     |

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1462:13
     |
1462 | /             if !((*entry).args.lower != -(1 as libc::c_int)
1463 | |                 && (*args).argc < (*entry).args.lower)
1464 | |             {
1465 | |                 if !((*entry).args.upper != -(1 as libc::c_int)
...    |
1482 | |                 }
1483 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1462 ~             if !((*entry).args.lower != -(1 as libc::c_int)
1463 +                 && (*args).argc < (*entry).args.lower) && !((*entry).args.upper != -(1 as libc::c_int)
1464 +                     && (*args).argc > (*entry).args.upper) {
1465 +                 cmd = xcalloc(
1466 +                     1 as libc::c_int as size_t,
1467 +                     ::core::mem::size_of::<cmd>() as libc::c_ulong,
1468 +                 ) as *mut cmd;
1469 +                 (*cmd).entry = entry;
1470 +                 (*cmd).args = args;
1471 +                 if !file.is_null() {
1472 +                     (*cmd).file = xstrdup(file);
1473 +                 }
1474 +                 (*cmd).line = line;
1475 +                 if allocated != 0 {
1476 +                     cmd_free_argv(argc, argv);
1477 +                 }
1478 +                 return cmd;
1479 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:1174:9
     |
1174 | /         if !((*c_loop).session).is_null() {
1175 | |             if !(!s.is_null() && (*c_loop).session != s) {
1176 | |                 if cmd_find_client_better(c_loop, c) != 0 {
1177 | |                     c = c_loop;
1178 | |                 }
1179 | |             }
1180 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1174 ~         if !((*c_loop).session).is_null() && !(!s.is_null() && (*c_loop).session != s) {
1175 +             if cmd_find_client_better(c_loop, c) != 0 {
1176 +                 c = c_loop;
1177 +             }
1178 +         }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:1175:13
     |
1175 | /             if !(!s.is_null() && (*c_loop).session != s) {
1176 | |                 if cmd_find_client_better(c_loop, c) != 0 {
1177 | |                     c = c_loop;
1178 | |                 }
1179 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1175 ~             if !(!s.is_null() && (*c_loop).session != s) && cmd_find_client_better(c_loop, c) != 0 {
1176 +                 c = c_loop;
1177 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:2647:17
     |
2647 | /                 if !(strncmp(
2648 | |                     (*c).ttyname,
2649 | |                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 | |                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
...    |
2665 | |                     }
2666 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2647 ~                 if !(strncmp(
2648 +                     (*c).ttyname,
2649 +                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 +                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
2651 +                         .wrapping_sub(1 as libc::c_int as libc::c_ulong),
2652 +                 ) != 0 as libc::c_int) && strcmp(
2653 +                         copy,
2654 +                         ((*c).ttyname)
2655 +                             .offset(
2656 +                                 ::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong
2657 +                                     as isize,
2658 +                             )
2659 +                             .offset(-(1 as libc::c_int as isize)),
2660 +                     ) == 0 as libc::c_int {
2661 +                     break;
2662 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_queue.rs:1199:13
     |
1199 | /             if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) {
1200 | |                 if (*entry).flags & 0x4 as libc::c_int != 0 {
1201 | |                     if cmd_find_valid_state(&mut (*item).target) != 0 {
1202 | |                         fsp = &mut (*item).target;
...    |
1230 | |                 }
1231 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1199 ~             if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) && (*entry).flags & 0x4 as libc::c_int != 0 {
1200 +                 if cmd_find_valid_state(&mut (*item).target) != 0 {
1201 +                     fsp = &mut (*item).target;
1202 +                     current_block = 9606288038608642794;
1203 +                 } else if cmd_find_valid_state(&mut (*(*item).shared).current) != 0 {
1204 +                     fsp = &mut (*(*item).shared).current;
1205 +                     current_block = 9606288038608642794;
1206 +                 } else if cmd_find_from_client(
1207 +                     &mut fs,
1208 +                     (*item).client,
1209 +                     0 as libc::c_int,
1210 +                 ) == 0 as libc::c_int
1211 +                 {
1212 +                     fsp = &mut fs;
1213 +                     current_block = 9606288038608642794;
1214 +                 } else {
1215 +                     current_block = 15835115521126477143;
1216 +                 }
1217 +                 match current_block {
1218 +                     15835115521126477143 => {}
1219 +                     _ => {
1220 +                         hooks_insert(
1221 +                             (*(*fsp).s).hooks,
1222 +                             item,
1223 +                             fsp,
1224 +                             b"after-%s\0" as *const u8 as *const libc::c_char,
1225 +                             (*entry).name,
1226 +                         );
1227 +                     }
1228 +                 }
1229 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_set_option.rs:1435:53
     |
1435 | / ...                   if !((*w).active).is_null() {
1436 | | ...                       if options_get_number(
1437 | | ...                           (*w).options,
1438 | | ...                           b"automatic-rename\0" as *const u8 as *const libc::c_char,
...    |
1442 | | ...                       }
1443 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1435 ~                                                     if !((*w).active).is_null() && options_get_number(
1436 +                                                             (*w).options,
1437 +                                                             b"automatic-rename\0" as *const u8 as *const libc::c_char,
1438 +                                                         ) != 0 {
1439 +                                                         (*(*w).active).flags |= 0x80 as libc::c_int;
1440 +                                                     }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_show_environment.rs:1047:5
     |
1047 | /     if !target.is_null() {
1048 | |         if ((*item).target.s).is_null() {
1049 | |             cmdq_error(
1050 | |                 item,
...    |
1055 | |         }
1056 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1047 ~     if !target.is_null() && ((*item).target.s).is_null() {
1048 +         cmdq_error(
1049 +             item,
1050 +             b"no such session: %s\0" as *const u8 as *const libc::c_char,
1051 +             target,
1052 +         );
1053 +         return CMD_RETURN_ERROR;
1054 +     }
     |

warning: operator precedence can trip the unwary
  --> src/colour.rs:93:16
   |
93 |           return 16 as libc::c_int + 36 as libc::c_int * qr + 6 as libc::c_int * qg + qb
   |  ________________^
94 | |             | 0x1000000 as libc::c_int;
   | |______________________________________^ help: consider parenthesizing your expression: `(16 as libc::c_int + 36 as libc::c_int * qr + 6 as libc::c_int * qg + qb) | 0x1000000 as libc::c_int`
   |
   = note: `#[warn(clippy::precedence)]` on by default
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
   --> src/compat/imsg.rs:507:5
    |
507 | /     if datalen != 0 {
508 | |         if ibuf_add(msg, data, datalen as size_t) == -(1 as libc::c_int) {
509 | |             ibuf_free(msg);
510 | |             return -(1 as libc::c_int);
511 | |         }
512 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
507 ~     if datalen != 0 && ibuf_add(msg, data, datalen as size_t) == -(1 as libc::c_int) {
508 +         ibuf_free(msg);
509 +         return -(1 as libc::c_int);
510 +     }
    |

warning: this `if` statement can be collapsed
   --> src/compat/imsg_buffer.rs:169:5
    |
169 | /     if ((*buf).wpos).wrapping_add(len) > (*buf).size {
170 | |         if ibuf_realloc(buf, len) == -(1 as libc::c_int) {
171 | |             return -(1 as libc::c_int);
172 | |         }
173 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
169 ~     if ((*buf).wpos).wrapping_add(len) > (*buf).size && ibuf_realloc(buf, len) == -(1 as libc::c_int) {
170 +         return -(1 as libc::c_int);
171 +     }
    |

warning: this `if` statement can be collapsed
   --> src/compat/imsg_buffer.rs:184:5
    |
184 | /     if ((*buf).wpos).wrapping_add(len) > (*buf).size {
185 | |         if ibuf_realloc(buf, len) == -(1 as libc::c_int) {
186 | |             return 0 as *mut libc::c_void;
187 | |         }
188 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
184 ~     if ((*buf).wpos).wrapping_add(len) > (*buf).size && ibuf_realloc(buf, len) == -(1 as libc::c_int) {
185 +         return 0 as *mut libc::c_void;
186 +     }
    |

warning: this `if` statement can be collapsed
    --> src/control_notify.rs:1006:13
     |
1006 | /             if !(winlink_find_by_window_id(&mut (*s).windows, (*w).id)).is_null() {
1007 | |                 if !((*w).layout_root).is_null() {
1008 | |                     wl = winlink_find_by_window(&mut (*s).windows, w);
1009 | |                     if !wl.is_null() {
...    |
1025 | |                 }
1026 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1006 ~             if !(winlink_find_by_window_id(&mut (*s).windows, (*w).id)).is_null() && !((*w).layout_root).is_null() {
1007 +                 wl = winlink_find_by_window(&mut (*s).windows, w);
1008 +                 if !wl.is_null() {
1009 +                     cp = format_single(
1010 +                         0 as *mut cmdq_item,
1011 +                         template,
1012 +                         c,
1013 +                         0 as *mut session,
1014 +                         wl,
1015 +                         0 as *mut window_pane,
1016 +                     );
1017 +                     control_write(
1018 +                         c,
1019 +                         b"%s\0" as *const u8 as *const libc::c_char,
1020 +                         cp,
1021 +                     );
1022 +                     free(cp as *mut libc::c_void);
1023 +                 }
1024 +             }
     |

warning: this `if` statement can be collapsed
    --> src/format.rs:3420:17
     |
3420 | /                 if !(*__errno_location() == 34 as libc::c_int
3421 | |                     && (limit
3422 | |                         == -(9223372036854775807 as libc::c_long) - 1 as libc::c_long
3423 | |                         || limit == 9223372036854775807 as libc::c_long))
...    |
3427 | |                     }
3428 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3420 ~                 if !(*__errno_location() == 34 as libc::c_int
3421 +                     && (limit
3422 +                         == -(9223372036854775807 as libc::c_long) - 1 as libc::c_long
3423 +                         || limit == 9223372036854775807 as libc::c_long)) && !(*endptr as libc::c_int != ':' as i32) {
3424 +                     copy = endptr.offset(1 as libc::c_int as isize);
3425 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/input.rs:4801:13
     |
4801 | /             if !(n == -(1 as libc::c_int)) {
4802 | |                 if !((*ictx).last == -(1 as libc::c_int)) {
4803 | |                     (*ictx).ch = (*ictx).last;
4804 | |                     i = 0 as libc::c_int;
...    |
4810 | |                 }
4811 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4801 ~             if !(n == -(1 as libc::c_int)) && !((*ictx).last == -(1 as libc::c_int)) {
4802 +                 (*ictx).ch = (*ictx).last;
4803 +                 i = 0 as libc::c_int;
4804 +                 while i < n {
4805 +                     input_print(ictx);
4806 +                     i += 1;
4807 +                     i;
4808 +                 }
4809 +             }
     |

warning: this `if` statement can be collapsed
    --> src/input_keys.rs:1804:9
     |
1804 | /         if !((*ike).flags & 0x1 as libc::c_int != 0
1805 | |             && (*(*wp).screen).mode & 0x8 as libc::c_int == 0)
1806 | |         {
1807 | |             if !((*ike).flags & 0x2 as libc::c_int != 0
...    |
1818 | |             }
1819 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1804 ~         if !((*ike).flags & 0x1 as libc::c_int != 0
1805 +             && (*(*wp).screen).mode & 0x8 as libc::c_int == 0) && !((*ike).flags & 0x2 as libc::c_int != 0
1806 +                 && (*(*wp).screen).mode & 0x4 as libc::c_int == 0) {
1807 +             if key & 0x200000000000 as libc::c_ulonglong != 0
1808 +                 && (*ike).key | 0x200000000000 as libc::c_ulonglong == key
1809 +             {
1810 +                 break;
1811 +             }
1812 +             if (*ike).key == key {
1813 +                 break;
1814 +             }
1815 +         }
     |

warning: this `if` statement can be collapsed
    --> src/key_string.rs:1210:5
     |
1210 | /     if key > 127 as libc::c_int as key_code && key < 0x10000000 as libc::c_ulonglong {
1211 | |         if utf8_split(key as wchar_t, &mut ud) as libc::c_uint
1212 | |             == UTF8_DONE as libc::c_int as libc::c_uint
1213 | |         {
...    |
1223 | |         }
1224 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1210 ~     if key > 127 as libc::c_int as key_code && key < 0x10000000 as libc::c_ulonglong && utf8_split(key as wchar_t, &mut ud) as libc::c_uint == UTF8_DONE as libc::c_int as libc::c_uint {
1211 +         off = strlen(out.as_mut_ptr());
1212 +         memcpy(
1213 +             out.as_mut_ptr().offset(off as isize) as *mut libc::c_void,
1214 +             (ud.data).as_mut_ptr() as *const libc::c_void,
1215 +             ud.size as libc::c_ulong,
1216 +         );
1217 +         out[off.wrapping_add(ud.size as size_t)
1218 +             as usize] = '\0' as i32 as libc::c_char;
1219 +         return out.as_mut_ptr();
1220 +     }
     |

warning: this `if` statement can be collapsed
    --> src/layout.rs:1676:13
     |
1676 | /             if !((*lcchild).type_0 as libc::c_uint
1677 | |                 == LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint)
1678 | |             {
1679 | |                 if layout_set_size_check(w, lcchild, type_0, size) == 0 {
1680 | |                     return 0 as libc::c_int;
1681 | |                 }
1682 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1676 ~             if !((*lcchild).type_0 as libc::c_uint
1677 +                 == LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint) && layout_set_size_check(w, lcchild, type_0, size) == 0 {
1678 +                 return 0 as libc::c_int;
1679 +             }
     |

warning: this `if` statement can be collapsed
   --> src/proc.rs:480:5
    |
480 | /     if events as libc::c_int & 0x4 as libc::c_int != 0 {
481 | |         if msgbuf_write(&mut (*peer).ibuf.w) <= 0 as libc::c_int
482 | |             && *__errno_location() != 11 as libc::c_int
483 | |         {
...   |
487 | |         }
488 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
480 ~     if events as libc::c_int & 0x4 as libc::c_int != 0 && msgbuf_write(&mut (*peer).ibuf.w) <= 0 as libc::c_int && *__errno_location() != 11 as libc::c_int {
481 +         ((*peer).dispatchcb)
482 +             .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
483 +         return;
484 +     }
    |

warning: this `if` statement can be collapsed
   --> src/resize.rs:958:13
    |
958 | /             if !((*c).flags & 0x40 as libc::c_int != 0) {
959 | |                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 | |                     == 0x2000 as libc::c_int)
961 | |                 {
...   |
985 | |                 }
986 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
958 ~             if !((*c).flags & 0x40 as libc::c_int != 0) && !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
959 +                     == 0x2000 as libc::c_int) {
960 +                 if (*c).session == s {
961 +                     if (*c).tty.sx < ssx {
962 +                         ssx = (*c).tty.sx;
963 +                     }
964 +                     (*c).flags &= !(0x800000 as libc::c_int);
965 +                     if lines != 0 as libc::c_int as u_int
966 +                         && lines.wrapping_add(2 as libc::c_int as u_int)
967 +                             > (*c).tty.sy
968 +                     {
969 +                         (*c).flags |= 0x800000 as libc::c_int;
970 +                     }
971 +                     if !(*c).flags & 0x800000 as libc::c_int != 0
972 +                         && (*c).flags & 0x2000 as libc::c_int == 0
973 +                         && (*c).tty.sy > lines
974 +                         && ((*c).tty.sy).wrapping_sub(lines) < ssy
975 +                     {
976 +                         ssy = ((*c).tty.sy).wrapping_sub(lines);
977 +                     } else if (*c).tty.sy < ssy {
978 +                         ssy = (*c).tty.sy;
979 +                     }
980 +                     (*s).attached = ((*s).attached).wrapping_add(1);
981 +                     (*s).attached;
982 +                 }
983 +             }
    |

warning: this `if` statement can be collapsed
   --> src/resize.rs:959:17
    |
959 | /                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 | |                     == 0x2000 as libc::c_int)
961 | |                 {
962 | |                     if (*c).session == s {
...   |
984 | |                     }
985 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
959 ~                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 +                     == 0x2000 as libc::c_int) && (*c).session == s {
961 +                     if (*c).tty.sx < ssx {
962 +                         ssx = (*c).tty.sx;
963 +                     }
964 +                     (*c).flags &= !(0x800000 as libc::c_int);
965 +                     if lines != 0 as libc::c_int as u_int
966 +                         && lines.wrapping_add(2 as libc::c_int as u_int)
967 +                             > (*c).tty.sy
968 +                     {
969 +                         (*c).flags |= 0x800000 as libc::c_int;
970 +                     }
971 +                     if !(*c).flags & 0x800000 as libc::c_int != 0
972 +                         && (*c).flags & 0x2000 as libc::c_int == 0
973 +                         && (*c).tty.sy > lines
974 +                         && ((*c).tty.sy).wrapping_sub(lines) < ssy
975 +                     {
976 +                         ssy = ((*c).tty.sy).wrapping_sub(lines);
977 +                     } else if (*c).tty.sy < ssy {
978 +                         ssy = (*c).tty.sy;
979 +                     }
980 +                     (*s).attached = ((*s).attached).wrapping_add(1);
981 +                     (*s).attached;
982 +                 }
    |

warning: this `if` statement can be collapsed
    --> src/screen_redraw.rs:1676:13
     |
1676 | /             if !(type_0 == 0 as libc::c_int as u_int) {
1677 | |                 if !(type_0 == 12 as libc::c_int as u_int && small != 0 && i > msgx
1678 | |                     && j == msgy)
1679 | |                 {
...    |
1730 | |                 }
1731 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1676 ~             if !(type_0 == 0 as libc::c_int as u_int) && !(type_0 == 12 as libc::c_int as u_int && small != 0 && i > msgx
1677 +                     && j == msgy) {
1678 +                 active = screen_redraw_check_is(
1679 +                     i,
1680 +                     j,
1681 +                     type_0 as libc::c_int,
1682 +                     pane_status,
1683 +                     w,
1684 +                     (*w).active,
1685 +                     wp,
1686 +                 );
1687 +                 if server_is_marked(s, (*s).curw, marked_pane.wp) != 0
1688 +                     && screen_redraw_check_is(
1689 +                         i,
1690 +                         j,
1691 +                         type_0 as libc::c_int,
1692 +                         pane_status,
1693 +                         w,
1694 +                         marked_pane.wp,
1695 +                         wp,
1696 +                     ) != 0
1697 +                 {
1698 +                     if active != 0 {
1699 +                         tty_attributes(
1700 +                             tty,
1701 +                             &mut m_active_gc,
1702 +                             0 as *const window_pane,
1703 +                         );
1704 +                     } else {
1705 +                         tty_attributes(
1706 +                             tty,
1707 +                             &mut m_other_gc,
1708 +                             0 as *const window_pane,
1709 +                         );
1710 +                     }
1711 +                 } else if active != 0 {
1712 +                     tty_attributes(tty, &mut active_gc, 0 as *const window_pane);
1713 +                 } else {
1714 +                     tty_attributes(tty, &mut other_gc, 0 as *const window_pane);
1715 +                 }
1716 +                 if top != 0 {
1717 +                     tty_cursor(tty, i, lines.wrapping_add(j));
1718 +                 } else {
1719 +                     tty_cursor(tty, i, j);
1720 +                 }
1721 +                 tty_putc(
1722 +                     tty,
1723 +                     (*::core::mem::transmute::<
1724 +                         &[u8; 14],
1725 +                         &[libc::c_char; 14],
1726 +                     >(b" xqlkmjwvtun~\0"))[type_0 as usize] as u_char,
1727 +                 );
1728 +             }
     |

warning: this `if` statement can be collapsed
    --> src/server.rs:1595:5
     |
1595 | /     if options_get_number(
1596 | |         global_options,
1597 | |         b"exit-unattached\0" as *const u8 as *const libc::c_char,
1598 | |     ) == 0
...    |
1602 | |         }
1603 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1595 ~     if options_get_number(
1596 +         global_options,
1597 +         b"exit-unattached\0" as *const u8 as *const libc::c_char,
1598 +     ) == 0 && !(sessions.rbh_root).is_null() {
1599 +         return 0 as libc::c_int;
1600 +     }
     |

warning: this `if` statement can be collapsed
    --> src/server.rs:1946:13
     |
1946 | /             if (*wp).pid == pid {
1947 | |                 if killpg(pid, 18 as libc::c_int) != 0 as libc::c_int {
1948 | |                     kill(pid, 18 as libc::c_int);
1949 | |                 }
1950 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1946 ~             if (*wp).pid == pid && killpg(pid, 18 as libc::c_int) != 0 as libc::c_int {
1947 +                 kill(pid, 18 as libc::c_int);
1948 +             }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2481:5
     |
2481 | /     if !(key
2482 | |         & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2483 | |             | 0x800000000000 as libc::c_ulonglong | 0x1000000000000 as libc::c_ulonglong)
2484 | |         >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
...    |
2626 | |         }
2627 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2481 ~     if !(key
2482 +         & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2483 +             | 0x800000000000 as libc::c_ulonglong | 0x1000000000000 as libc::c_ulonglong)
2484 +         >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
2485 +         && key
2486 +             & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2487 +                 | 0x800000000000 as libc::c_ulonglong
2488 +                 | 0x1000000000000 as libc::c_ulonglong)
2489 +             < KEYC_BSPACE as libc::c_int as libc::c_ulonglong
2490 +         && options_get_number(
2491 +             (*s).options,
2492 +             b"mouse\0" as *const u8 as *const libc::c_char,
2493 +         ) == 0) && !(!(key
2494 +             & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2495 +                 | 0x800000000000 as libc::c_ulonglong
2496 +                 | 0x1000000000000 as libc::c_ulonglong)
2497 +             >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
2498 +             && key
2499 +                 & !(0x200000000000 as libc::c_ulonglong
2500 +                     | 0x400000000000 as libc::c_ulonglong
2501 +                     | 0x800000000000 as libc::c_ulonglong
2502 +                     | 0x1000000000000 as libc::c_ulonglong)
2503 +                 < KEYC_BSPACE as libc::c_int as libc::c_ulonglong)
2504 +             && server_client_assume_paste(s) != 0) {
2505 +         if server_client_is_default_key_table(c, (*c).keytable) != 0 && !wp.is_null()
2506 +             && !((*wp).mode).is_null() && ((*(*wp).mode).key_table).is_some()
2507 +         {
2508 +             table = key_bindings_get_table(
2509 +                 ((*(*wp).mode).key_table).expect("non-null function pointer")(wp),
2510 +                 1 as libc::c_int,
2511 +             );
2512 +         } else {
2513 +             table = (*c).keytable;
2514 +         }
2515 +         first = table;
2516 +         loop {
2517 +             key0 = key & !(0x1000000000000 as libc::c_ulonglong);
2518 +             if (key0
2519 +                 == options_get_number(
2520 +                     (*s).options,
2521 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2522 +                 ) as key_code
2523 +                 || key0
2524 +                     == options_get_number(
2525 +                         (*s).options,
2526 +                         b"prefix2\0" as *const u8 as *const libc::c_char,
2527 +                     ) as key_code)
2528 +                 && strcmp(
2529 +                     (*table).name,
2530 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2531 +                 ) != 0 as libc::c_int
2532 +             {
2533 +                 server_client_set_key_table(
2534 +                     c,
2535 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2536 +                 );
2537 +                 server_status_client(c);
2538 +                 return;
2539 +             }
2540 +             flags = (*c).flags;
2541 +             if wp.is_null() {
2542 +                 log_debug(
2543 +                     b"key table %s (no pane)\0" as *const u8 as *const libc::c_char,
2544 +                     (*table).name,
2545 +                 );
2546 +             } else {
2547 +                 log_debug(
2548 +                     b"key table %s (pane %%%u)\0" as *const u8
2549 +                         as *const libc::c_char,
2550 +                     (*table).name,
2551 +                     (*wp).id,
2552 +                 );
2553 +             }
2554 +             if (*c).flags & 0x20 as libc::c_int != 0 {
2555 +                 log_debug(
2556 +                     b"currently repeating\0" as *const u8 as *const libc::c_char,
2557 +                 );
2558 +             }
2559 +             bd_find.key = key0;
2560 +             bd = key_bindings_RB_FIND(&mut (*table).key_bindings, &mut bd_find);
2561 +             if !bd.is_null() {
2562 +                 if (*c).flags & 0x20 as libc::c_int != 0
2563 +                     && !(*bd).flags & 0x1 as libc::c_int != 0
2564 +                 {
2565 +                     server_client_set_key_table(c, 0 as *const libc::c_char);
2566 +                     (*c).flags &= !(0x20 as libc::c_int);
2567 +                     server_status_client(c);
2568 +                     table = (*c).keytable;
2569 +                 } else {
2570 +                     log_debug(
2571 +                         b"found in key table %s\0" as *const u8
2572 +                             as *const libc::c_char,
2573 +                         (*table).name,
2574 +                     );
2575 +                     (*table).references = ((*table).references).wrapping_add(1);
2576 +                     (*table).references;
2577 +                     xtimeout = options_get_number(
2578 +                         (*s).options,
2579 +                         b"repeat-time\0" as *const u8 as *const libc::c_char,
2580 +                     ) as libc::c_int;
2581 +                     if xtimeout != 0 as libc::c_int
2582 +                         && (*bd).flags & 0x1 as libc::c_int != 0
2583 +                     {
2584 +                         (*c).flags |= 0x20 as libc::c_int;
2585 +                         tv.tv_sec = (xtimeout / 1000 as libc::c_int) as __time_t;
2586 +                         tv
2587 +                             .tv_usec = (xtimeout % 1000 as libc::c_int) as libc::c_long
2588 +                             * 1000 as libc::c_long;
2589 +                         event_del(&mut (*c).repeat_timer);
2590 +                         event_add(&mut (*c).repeat_timer, &mut tv);
2591 +                     } else {
2592 +                         (*c).flags &= !(0x20 as libc::c_int);
2593 +                         server_client_set_key_table(c, 0 as *const libc::c_char);
2594 +                     }
2595 +                     server_status_client(c);
2596 +                     key_bindings_dispatch(bd, 0 as *mut cmdq_item, c, m, &mut fs);
2597 +                     key_bindings_unref_table(table);
2598 +                     return;
2599 +                 }
2600 +             } else {
2601 +                 log_debug(
2602 +                     b"not found in key table %s\0" as *const u8
2603 +                         as *const libc::c_char,
2604 +                     (*table).name,
2605 +                 );
2606 +                 if server_client_is_default_key_table(c, table) == 0
2607 +                     || (*c).flags & 0x20 as libc::c_int != 0
2608 +                 {
2609 +                     server_client_set_key_table(c, 0 as *const libc::c_char);
2610 +                     (*c).flags &= !(0x20 as libc::c_int);
2611 +                     server_status_client(c);
2612 +                     table = (*c).keytable;
2613 +                 } else {
2614 +                     if first != table && !flags & 0x20 as libc::c_int != 0 {
2615 +                         server_client_set_key_table(c, 0 as *const libc::c_char);
2616 +                         server_status_client(c);
2617 +                         return;
2618 +                     }
2619 +                     break;
2620 +                 }
2621 +             }
2622 +         }
2623 +     }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2846:5
     |
2846 | /     if !((*(*wp).window).active != wp) {
2847 | |         if !((*wp).screen != &mut (*wp).base as *mut screen) {
2848 | |             c = clients.tqh_first;
2849 | |             loop {
...    |
2880 | |         }
2881 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2846 ~     if !((*(*wp).window).active != wp) && !((*wp).screen != &mut (*wp).base as *mut screen) {
2847 +         c = clients.tqh_first;
2848 +         loop {
2849 +             if c.is_null() {
2850 +                 current_block = 5678390700704197724;
2851 +                 break;
2852 +             }
2853 +             if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0)
2854 +             {
2855 +                 if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2856 +                     if (*(*(*c).session).curw).window == (*wp).window {
2857 +                         current_block = 15899604225187311481;
2858 +                         break;
2859 +                     }
2860 +                 }
2861 +             }
2862 +             c = (*c).entry.tqe_next;
2863 +         }
2864 +         match current_block {
2865 +             5678390700704197724 => {}
2866 +             _ => {
2867 +                 if push != 0 || (*wp).flags & 0x4 as libc::c_int == 0 {
2868 +                     bufferevent_write(
2869 +                         (*wp).event,
2870 +                         b"\x1B[I\0" as *const u8 as *const libc::c_char
2871 +                             as *const libc::c_void,
2872 +                         3 as libc::c_int as size_t,
2873 +                     );
2874 +                 }
2875 +                 (*wp).flags |= 0x4 as libc::c_int;
2876 +                 return;
2877 +             }
2878 +         }
2879 +     }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2854:17
     |
2854 | /                 if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0)
2855 | |                 {
2856 | |                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2857 | |                         if (*(*(*c).session).curw).window == (*wp).window {
...    |
2861 | |                     }
2862 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2854 ~                 if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0) && !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2855 +                     if (*(*(*c).session).curw).window == (*wp).window {
2856 +                         current_block = 15899604225187311481;
2857 +                         break;
2858 +                     }
2859 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2856:21
     |
2856 | /                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2857 | |                         if (*(*(*c).session).curw).window == (*wp).window {
2858 | |                             current_block = 15899604225187311481;
2859 | |                             break;
2860 | |                         }
2861 | |                     }
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2856 ~                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) && (*(*(*c).session).curw).window == (*wp).window {
2857 +                         current_block = 15899604225187311481;
2858 +                         break;
2859 +                     }
     |

warning: this `if` statement can be collapsed
    --> src/server_fn.rs:1697:9
     |
1697 | /         if !(s_loop == s) {
1698 | |             if s_out.is_null()
1699 | |                 || (if (*s_loop).activity_time.tv_sec == (*s_out).activity_time.tv_sec {
1700 | |                     ((*s_loop).activity_time.tv_usec < (*s_out).activity_time.tv_usec)
...    |
1708 | |             }
1709 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1697 ~         if !(s_loop == s) && (s_out.is_null() || (if (*s_loop).activity_time.tv_sec == (*s_out).activity_time.tv_sec {
1698 +                     ((*s_loop).activity_time.tv_usec < (*s_out).activity_time.tv_usec)
1699 +                         as libc::c_int
1700 +                 } else {
1701 +                     ((*s_loop).activity_time.tv_sec < (*s_out).activity_time.tv_sec)
1702 +                         as libc::c_int
1703 +                 }) != 0) {
1704 +             s_out = s_loop;
1705 +         }
     |

warning: this `if` statement can be collapsed
    --> src/server_fn.rs:1757:9
     |
1757 | /         if !((*s).flags & 0x1 as libc::c_int == 0) {
1758 | |             if options_get_number(
1759 | |                 (*s).options,
1760 | |                 b"destroy-unattached\0" as *const u8 as *const libc::c_char,
...    |
1771 | |             }
1772 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1757 ~         if !((*s).flags & 0x1 as libc::c_int == 0) && options_get_number(
1758 +                 (*s).options,
1759 +                 b"destroy-unattached\0" as *const u8 as *const libc::c_char,
1760 +             ) != 0 {
1761 +             session_destroy(
1762 +                 s,
1763 +                 (*::core::mem::transmute::<
1764 +                     &[u8; 24],
1765 +                     &[libc::c_char; 24],
1766 +                 >(b"server_check_unattached\0"))
1767 +                     .as_ptr(),
1768 +             );
1769 +         }
     |

warning: this `if` statement can be collapsed
   --> src/tmux.rs:742:12
    |
742 |       } else if !(mkdir(
    |  ____________^
743 | |         resolved.as_mut_ptr(),
744 | |         (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int) as __mode_t,
745 | |     ) != 0 as libc::c_int && *__errno_location() != 17 as libc::c_int)
...   |
768 | |         }
769 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
742 ~     } else if !(mkdir(
743 +         resolved.as_mut_ptr(),
744 +         (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int) as __mode_t,
745 +     ) != 0 as libc::c_int && *__errno_location() != 17 as libc::c_int) && !(lstat(resolved.as_mut_ptr(), &mut sb) != 0 as libc::c_int) {
746 +         if !(sb.st_mode & 0o170000 as libc::c_int as __mode_t
747 +             == 0o40000 as libc::c_int as __mode_t)
748 +         {
749 +             *__errno_location() = 20 as libc::c_int;
750 +         } else if sb.st_uid != uid
751 +             || sb.st_mode
752 +                 & ((0o400 as libc::c_int | 0o200 as libc::c_int
753 +                     | 0o100 as libc::c_int) >> 3 as libc::c_int >> 3 as libc::c_int)
754 +                     as __mode_t != 0 as libc::c_int as __mode_t
755 +         {
756 +             *__errno_location() = 13 as libc::c_int;
757 +         } else {
758 +             xasprintf(
759 +                 &mut path as *mut *mut libc::c_char,
760 +                 b"%s/%s\0" as *const u8 as *const libc::c_char,
761 +                 resolved.as_mut_ptr(),
762 +                 label,
763 +             );
764 +             return path;
765 +         }
766 +     }
    |

warning: this `if` statement can be collapsed
    --> src/tty.rs:1711:5
     |
1711 | /     if tty_term_flag((*tty).term, TTYC_XT) != 0 {
1712 | |         if (*tty).flags & 0x40 as libc::c_int != 0 {
1713 | |             (*tty).flags &= !(0x40 as libc::c_int);
1714 | |             tty_raw(tty, b"\x1B[?1004l\0" as *const u8 as *const libc::c_char);
1715 | |         }
1716 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1711 ~     if tty_term_flag((*tty).term, TTYC_XT) != 0 && (*tty).flags & 0x40 as libc::c_int != 0 {
1712 +         (*tty).flags &= !(0x40 as libc::c_int);
1713 +         tty_raw(tty, b"\x1B[?1004l\0" as *const u8 as *const libc::c_char);
1714 +     }
     |

warning: this `if` statement can be collapsed
    --> src/tty.rs:3656:9
     |
3656 | /         if !((*tty).term_flags & 0x1 as libc::c_int != 0
3657 | |             || tty_term_has((*tty).term, TTYC_RGB) != 0)
3658 | |         {
3659 | |             if (*(*tty).term).flags & 0x1 as libc::c_int != 0 {
...    |
3677 | |             }
3678 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3656 ~         if !((*tty).term_flags & 0x1 as libc::c_int != 0
3657 +             || tty_term_has((*tty).term, TTYC_RGB) != 0) && (*(*tty).term).flags & 0x1 as libc::c_int != 0 {
3658 +             if *type_0 as libc::c_int == '3' as i32 {
3659 +                 if tty_term_has((*tty).term, TTYC_SETAF) == 0 {
3660 +                     current_block = 2218127186595632659;
3661 +                 } else {
3662 +                     tty_putcode1(tty, TTYC_SETAF, colour & 0xff as libc::c_int);
3663 +                     current_block = 14523784380283086299;
3664 +                 }
3665 +             } else if tty_term_has((*tty).term, TTYC_SETAB) == 0 {
3666 +                 current_block = 2218127186595632659;
3667 +             } else {
3668 +                 tty_putcode1(tty, TTYC_SETAB, colour & 0xff as libc::c_int);
3669 +                 current_block = 14523784380283086299;
3670 +             }
3671 +             match current_block {
3672 +                 2218127186595632659 => {}
3673 +                 _ => return 0 as libc::c_int,
3674 +             }
3675 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:3635:9
     |
3635 | /         if !(window_pane_visible(wp) == 0) {
3636 | |             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3637 | |                 if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3638 | |                     return wp;
3639 | |                 }
3640 | |             }
3641 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3635 ~         if !(window_pane_visible(wp) == 0) && !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3636 +             if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3637 +                 return wp;
3638 +             }
3639 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:3636:13
     |
3636 | /             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3637 | |                 if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3638 | |                     return wp;
3639 | |                 }
3640 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3636 ~             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) && !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3637 +                 return wp;
3638 +             }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4849:5
     |
4849 | /     if (*wp).modelast < time(0 as *mut time_t) - 180 as libc::c_int as time_t {
4850 | |         if ioctl(
4851 | |             (*wp).fd,
4852 | |             0x541b as libc::c_int as libc::c_ulong,
...    |
4857 | |         }
4858 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4849 ~     if (*wp).modelast < time(0 as *mut time_t) - 180 as libc::c_int as time_t && (ioctl(
4850 +             (*wp).fd,
4851 +             0x541b as libc::c_int as libc::c_ulong,
4852 +             &mut n as *mut libc::c_int,
4853 +         ) == -(1 as libc::c_int) || n > 0 as libc::c_int) {
4854 +         window_pane_reset_mode(wp);
4855 +     }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4972:13
     |
4972 | /             if !(wp2 == wp || !((*wp2).mode).is_null()) {
4973 | |                 if !((*wp2).fd == -(1 as libc::c_int)
4974 | |                     || (*wp2).flags & 0x40 as libc::c_int != 0)
4975 | |                 {
...    |
4979 | |                 }
4980 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4972 ~             if !(wp2 == wp || !((*wp2).mode).is_null()) && !((*wp2).fd == -(1 as libc::c_int)
4973 +                     || (*wp2).flags & 0x40 as libc::c_int != 0) {
4974 +                 if window_pane_visible(wp2) != 0 {
4975 +                     input_key(wp2, key, 0 as *mut mouse_event);
4976 +                 }
4977 +             }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4973:17
     |
4973 | /                 if !((*wp2).fd == -(1 as libc::c_int)
4974 | |                     || (*wp2).flags & 0x40 as libc::c_int != 0)
4975 | |                 {
4976 | |                     if window_pane_visible(wp2) != 0 {
4977 | |                         input_key(wp2, key, 0 as *mut mouse_event);
4978 | |                     }
4979 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4973 ~                 if !((*wp2).fd == -(1 as libc::c_int)
4974 +                     || (*wp2).flags & 0x40 as libc::c_int != 0) && window_pane_visible(wp2) != 0 {
4975 +                     input_key(wp2, key, 0 as *mut mouse_event);
4976 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5102:9
     |
5102 | /         if !(next == wp || window_pane_visible(next) == 0) {
5103 | |             if !(((*next).yoff)
5104 | |                 .wrapping_add((*next).sy)
5105 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
...    |
5127 | |             }
5128 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5102 ~         if !(next == wp || window_pane_visible(next) == 0) && !(((*next).yoff)
5103 +                 .wrapping_add((*next).sy)
5104 +                 .wrapping_add(1 as libc::c_int as u_int) != edge) {
5105 +             end = ((*next).xoff)
5106 +                 .wrapping_add((*next).sx)
5107 +                 .wrapping_sub(1 as libc::c_int as u_int);
5108 +             found = 0 as libc::c_int;
5109 +             if (*next).xoff < left && end > right 
5110 +             || ((*next).xoff >= left && (*next).xoff <= right)
5111 +             || (end >= left && end <= right) {
5112 +                 found = 1 as libc::c_int;
5113 +             } 
5114 +             if !(found == 0) {
5115 +                 list = xreallocarray(
5116 +                     list as *mut libc::c_void,
5117 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5118 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5119 +                 ) as *mut *mut window_pane;
5120 +                 let fresh10 = size;
5121 +                 size = size.wrapping_add(1);
5122 +                 let ref mut fresh11 = *list.offset(fresh10 as isize);
5123 +                 *fresh11 = next;
5124 +             }
5125 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5179:9
     |
5179 | /         if !(next == wp || window_pane_visible(next) == 0) {
5180 | |             if !((*next).yoff != edge) {
5181 | |                 end = ((*next).xoff)
5182 | |                     .wrapping_add((*next).sx)
...    |
5201 | |             }
5202 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5179 ~         if !(next == wp || window_pane_visible(next) == 0) && !((*next).yoff != edge) {
5180 +             end = ((*next).xoff)
5181 +                 .wrapping_add((*next).sx)
5182 +                 .wrapping_sub(1 as libc::c_int as u_int);
5183 +             found = 0 as libc::c_int;
5184 +             if (*next).xoff < left && end > right 
5185 +             || ((*next).xoff >= left && (*next).xoff <= right)
5186 +             || (end >= left && end <= right){
5187 +                 found = 1 as libc::c_int;
5188 +             } 
5189 +             if !(found == 0) {
5190 +                 list = xreallocarray(
5191 +                     list as *mut libc::c_void,
5192 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5193 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5194 +                 ) as *mut *mut window_pane;
5195 +                 let fresh12 = size;
5196 +                 size = size.wrapping_add(1);
5197 +                 let ref mut fresh13 = *list.offset(fresh12 as isize);
5198 +                 *fresh13 = next;
5199 +             }
5200 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5235:9
     |
5235 | /         if !(next == wp || window_pane_visible(next) == 0) {
5236 | |             if !(((*next).xoff)
5237 | |                 .wrapping_add((*next).sx)
5238 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
...    |
5260 | |             }
5261 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5235 ~         if !(next == wp || window_pane_visible(next) == 0) && !(((*next).xoff)
5236 +                 .wrapping_add((*next).sx)
5237 +                 .wrapping_add(1 as libc::c_int as u_int) != edge) {
5238 +             end = ((*next).yoff)
5239 +                 .wrapping_add((*next).sy)
5240 +                 .wrapping_sub(1 as libc::c_int as u_int);
5241 +             found = 0 as libc::c_int;
5242 +             if (*next).yoff < top && end > bottom 
5243 +             || ((*next).yoff >= top && (*next).yoff <= bottom)
5244 +             || (end >= top && end <= bottom){
5245 +                 found = 1 as libc::c_int;
5246 +             } 
5247 +             if !(found == 0) {
5248 +                 list = xreallocarray(
5249 +                     list as *mut libc::c_void,
5250 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5251 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5252 +                 ) as *mut *mut window_pane;
5253 +                 let fresh14 = size;
5254 +                 size = size.wrapping_add(1);
5255 +                 let ref mut fresh15 = *list.offset(fresh14 as isize);
5256 +                 *fresh15 = next;
5257 +             }
5258 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5294:9
     |
5294 | /         if !(next == wp || window_pane_visible(next) == 0) {
5295 | |             if !((*next).xoff != edge) {
5296 | |                 end = ((*next).yoff)
5297 | |                     .wrapping_add((*next).sy)
...    |
5316 | |             }
5317 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5294 ~         if !(next == wp || window_pane_visible(next) == 0) && !((*next).xoff != edge) {
5295 +             end = ((*next).yoff)
5296 +                 .wrapping_add((*next).sy)
5297 +                 .wrapping_sub(1 as libc::c_int as u_int);
5298 +             found = 0 as libc::c_int;
5299 +             if (*next).yoff < top && end > bottom 
5300 +             || ((*next).yoff >= top && (*next).yoff <= bottom)
5301 +             || (end >= top && end <= bottom){
5302 +                 found = 1 as libc::c_int;
5303 +             } 
5304 +             if !(found == 0) {
5305 +                 list = xreallocarray(
5306 +                     list as *mut libc::c_void,
5307 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5308 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5309 +                 ) as *mut *mut window_pane;
5310 +                 let fresh16 = size;
5311 +                 size = size.wrapping_add(1);
5312 +                 let ref mut fresh17 = *list.offset(fresh16 as isize);
5313 +                 *fresh17 = next;
5314 +             }
5315 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2004:9
     |
2004 | /         if strcmp(command, b"other-end\0" as *const u8 as *const libc::c_char)
2005 | |             == 0 as libc::c_int
2006 | |         {
2007 | |             if np % 2 as libc::c_int as u_int != 0 as libc::c_int as u_int {
2008 | |                 window_copy_other_end(wp);
2009 | |             }
2010 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2004 ~         if strcmp(command, b"other-end\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && np % 2 as libc::c_int as u_int != 0 as libc::c_int as u_int {
2005 +             window_copy_other_end(wp);
2006 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2201:9
     |
2201 | /         if strcmp(command, b"copy-pipe\0" as *const u8 as *const libc::c_char)
2202 | |             == 0 as libc::c_int
2203 | |         {
2204 | |             if !s.is_null() {
2205 | |                 window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
2206 | |             }
2207 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2201 ~         if strcmp(command, b"copy-pipe\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && !s.is_null() {
2202 +             window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
2203 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2208:9
     |
2208 | /         if strcmp(command, b"copy-pipe-and-cancel\0" as *const u8 as *const libc::c_char)
2209 | |             == 0 as libc::c_int
2210 | |         {
2211 | |             if !s.is_null() {
...    |
2214 | |             }
2215 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2208 ~         if strcmp(command, b"copy-pipe-and-cancel\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && !s.is_null() {
2209 +             window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
2210 +             cancel = 1 as libc::c_int;
2211 +         }
     |

warning: unused variable: `fd`
    --> src/alerts.rs:1166:9
     |
1166 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `events`
    --> src/alerts.rs:1167:9
     |
1167 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/alerts.rs:1178:9
     |
1178 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/alerts.rs:1179:9
     |
1179 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `arg`
    --> src/alerts.rs:1180:9
     |
1180 |     mut arg: *mut libc::c_void,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_arg`

warning: unused variable: `item`
    --> src/cfg.rs:1067:9
     |
1067 |     mut item: *mut cmdq_item,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_item`

warning: unused variable: `data`
    --> src/cfg.rs:1068:9
     |
1068 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `item`
    --> src/cfg.rs:1076:9
     |
1076 |     mut item: *mut cmdq_item,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_item`

warning: unused variable: `data`
    --> src/cfg.rs:1077:9
     |
1077 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `fd`
    --> src/client.rs:1987:9
     |
1987 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/client.rs:1988:9
     |
1988 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `arg`
    --> src/client.rs:1989:9
     |
1989 |     mut arg: *mut libc::c_void,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_arg`

warning: unused variable: `arg`
    --> src/client.rs:2173:63
     |
2173 | unsafe extern "C" fn client_dispatch(mut imsg: *mut imsg, mut arg: *mut libc::c_void) {
     |                                                               ^^^ help: if this is intentional, prefix it with an underscore: `_arg`

warning: unused variable: `done`
    --> src/cmd_confirm_before.rs:1057:9
     |
1057 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `item`
   --> src/cmd_kill_server.rs:971:9
    |
971 |     mut item: *mut cmdq_item,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_item`

warning: unused variable: `bufev`
    --> src/cmd_pipe_pane.rs:1211:9
     |
1211 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `bufev`
    --> src/cmd_pipe_pane.rs:1234:9
     |
1234 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `bufev`
    --> src/cmd_pipe_pane.rs:1244:9
     |
1244 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `what`
    --> src/cmd_pipe_pane.rs:1245:9
     |
1245 |     mut what: libc::c_short,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_what`

warning: unused variable: `data`
    --> src/cmd_source_file.rs:1085:9
     |
1085 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `item`
    --> src/cmd_wait_for.rs:1570:9
     |
1570 |     mut item: *mut cmdq_item,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_item`

warning: unused variable: `ptmfd`
  --> src/compat/fdforkpty.rs:41:9
   |
41 |     mut ptmfd: libc::c_int,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_ptmfd`

warning: unused variable: `data`
   --> src/control.rs:968:9
    |
968 |     mut data: *mut libc::c_void,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `s`
    --> src/control_notify.rs:1049:9
     |
1049 |     mut s: *mut session,
     |         ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `s`
    --> src/control_notify.rs:1079:9
     |
1079 |     mut s: *mut session,
     |         ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `s`
    --> src/control_notify.rs:1188:61
     |
1188 | pub unsafe extern "C" fn control_notify_session_created(mut s: *mut session) {
     |                                                             ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `s`
    --> src/control_notify.rs:1202:60
     |
1202 | pub unsafe extern "C" fn control_notify_session_closed(mut s: *mut session) {
     |                                                            ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `fd`
    --> src/format.rs:2596:9
     |
2596 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/format.rs:2597:9
     |
2597 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `arg`
    --> src/format.rs:2598:9
     |
2598 |     mut arg: *mut libc::c_void,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_arg`

warning: unused variable: `ft`
    --> src/format.rs:2620:9
     |
2620 |     mut ft: *mut format_tree,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_ft`

warning: unused variable: `ft`
    --> src/format.rs:2635:9
     |
2635 |     mut ft: *mut format_tree,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_ft`

warning: unused variable: `ft`
    --> src/format.rs:2654:40
     |
2654 | unsafe extern "C" fn format_cb_pid(mut ft: *mut format_tree, mut fe: *mut format_entry) {
     |                                        ^^ help: if this is intentional, prefix it with an underscore: `_ft`

warning: unused variable: `fd`
    --> src/input.rs:3751:9
     |
3751 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/input.rs:3752:9
     |
3752 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `bufev`
    --> src/job.rs:1181:9
     |
1181 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `bufev`
    --> src/job.rs:1190:9
     |
1190 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `bufev`
    --> src/job.rs:1209:9
     |
1209 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `events`
    --> src/job.rs:1210:9
     |
1210 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `data`
    --> src/key_bindings.rs:2605:9
     |
2605 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `severity`
  --> src/log.rs:99:9
   |
99 |     mut severity: libc::c_int,
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_severity`

warning: unused variable: `c`
    --> src/mode_tree.rs:2079:9
     |
2079 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `done`
    --> src/mode_tree.rs:2082:9
     |
2082 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `c`
    --> src/mode_tree.rs:2101:9
     |
2101 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `done`
    --> src/mode_tree.rs:2104:9
     |
2104 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `fd`
   --> src/names.rs:970:9
    |
970 |     mut fd: libc::c_int,
    |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
   --> src/names.rs:971:9
    |
971 |     mut events: libc::c_short,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `tty`
  --> src/osdep_linux.rs:77:9
   |
77 |     mut tty: *mut libc::c_char,
   |         ^^^ help: if this is intentional, prefix it with an underscore: `_tty`

warning: unused variable: `fd`
   --> src/proc.rs:423:9
    |
423 |     mut fd: libc::c_int,
    |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
   --> src/proc.rs:500:9
    |
500 |     mut events: libc::c_short,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `data`
    --> src/server.rs:1743:9
     |
1743 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `fd`
    --> src/server_client.rs:1395:9
     |
1395 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:1396:9
     |
1396 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:1732:9
     |
1732 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:1733:9
     |
1733 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:2726:9
     |
2726 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:2727:9
     |
2727 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:2942:9
     |
2942 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:2943:9
     |
2943 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:2954:9
     |
2954 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:2955:9
     |
2955 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:2987:9
     |
2987 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:2988:9
     |
2988 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `data`
    --> src/server_client.rs:2989:9
     |
2989 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `data`
    --> src/server_client.rs:3293:9
     |
3293 |     mut data: *mut libc::c_void,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `fd`
    --> src/server_client.rs:3651:9
     |
3651 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:3652:9
     |
3652 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/server_client.rs:3735:9
     |
3735 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/server_client.rs:3736:9
     |
3736 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/session.rs:2423:9
     |
2423 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/session.rs:2424:9
     |
2424 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/session.rs:2489:9
     |
2489 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/session.rs:2490:9
     |
2490 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/status.rs:1364:9
     |
1364 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/status.rs:1365:9
     |
1365 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/status.rs:2129:9
     |
2129 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `event`
    --> src/status.rs:2130:9
     |
2130 |     mut event: libc::c_short,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `fd`
    --> src/tty.rs:1383:9
     |
1383 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/tty.rs:1384:9
     |
1384 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/tty.rs:1406:9
     |
1406 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/tty.rs:1407:9
     |
1407 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fd`
    --> src/tty.rs:1469:9
     |
1469 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/tty.rs:1470:9
     |
1470 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `tty`
    --> src/tty.rs:2107:9
     |
2107 |     mut tty: *mut tty,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_tty`

warning: unused variable: `fd`
    --> src/tty_keys.rs:3737:9
     |
3737 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/tty_keys.rs:3738:9
     |
3738 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `bufev`
    --> src/window.rs:4605:9
     |
4605 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `bufev`
    --> src/window.rs:4628:9
     |
4628 |     mut bufev: *mut bufferevent,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_bufev`

warning: unused variable: `what`
    --> src/window.rs:4629:9
     |
4629 |     mut what: libc::c_short,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_what`

warning: unused variable: `fd`
    --> src/window.rs:4829:9
     |
4829 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/window.rs:4830:9
     |
4830 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `tag`
    --> src/window_buffer.rs:1185:9
     |
1185 |     mut tag: *mut uint64_t,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_tag`

warning: unused variable: `modedata`
    --> src/window_buffer.rs:1309:9
     |
1309 |     mut modedata: *mut libc::c_void,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_modedata`

warning: unused variable: `modedata`
    --> src/window_buffer.rs:1373:9
     |
1373 |     mut modedata: *mut libc::c_void,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_modedata`

warning: unused variable: `fs`
    --> src/window_buffer.rs:1398:9
     |
1398 |     mut fs: *mut cmd_find_state,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fs`

warning: unused variable: `c`
    --> src/window_buffer.rs:1499:9
     |
1499 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `key`
    --> src/window_buffer.rs:1500:9
     |
1500 |     mut key: key_code,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `key`
    --> src/window_buffer.rs:1517:9
     |
1517 |     mut key: key_code,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `s`
    --> src/window_buffer.rs:1535:9
     |
1535 |     mut s: *mut session,
     |         ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `tag`
    --> src/window_client.rs:1265:9
     |
1265 |     mut tag: *mut uint64_t,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_tag`

warning: unused variable: `modedata`
    --> src/window_client.rs:1404:9
     |
1404 |     mut modedata: *mut libc::c_void,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_modedata`

warning: unused variable: `fs`
    --> src/window_client.rs:1460:9
     |
1460 |     mut fs: *mut cmd_find_state,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fs`

warning: unused variable: `c`
    --> src/window_client.rs:1554:9
     |
1554 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `s`
    --> src/window_client.rs:1573:9
     |
1573 |     mut s: *mut session,
     |         ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `fd`
    --> src/window_clock.rs:1545:9
     |
1545 |     mut fd: libc::c_int,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fd`

warning: unused variable: `events`
    --> src/window_clock.rs:1546:9
     |
1546 |     mut events: libc::c_short,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

warning: unused variable: `fs`
    --> src/window_clock.rs:1600:9
     |
1600 |     mut fs: *mut cmd_find_state,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fs`

warning: unused variable: `args`
    --> src/window_clock.rs:1601:9
     |
1601 |     mut args: *mut args,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_args`

warning: unused variable: `c`
    --> src/window_clock.rs:1662:9
     |
1662 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `sess`
    --> src/window_clock.rs:1663:9
     |
1663 |     mut sess: *mut session,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_sess`

warning: unused variable: `key`
    --> src/window_clock.rs:1664:9
     |
1664 |     mut key: key_code,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `m`
    --> src/window_clock.rs:1665:9
     |
1665 |     mut m: *mut mouse_event,
     |         ^ help: if this is intentional, prefix it with an underscore: `_m`

warning: unused variable: `fs`
    --> src/window_copy.rs:1199:9
     |
1199 |     mut fs: *mut cmd_find_state,
     |         ^^ help: if this is intentional, prefix it with an underscore: `_fs`

warning: unused variable: `args`
    --> src/window_copy.rs:1200:9
     |
1200 |     mut args: *mut args,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_args`

warning: unused variable: `c`
    --> src/window_copy.rs:4694:9
     |
4694 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `modedata`
    --> src/window_tree.rs:2399:9
     |
2399 |     mut modedata: *mut libc::c_void,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_modedata`

warning: unused variable: `key`
    --> src/window_tree.rs:2617:9
     |
2617 |     mut key: key_code,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `item`
    --> src/window_tree.rs:2638:9
     |
2638 |     mut item: *mut cmdq_item,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_item`

warning: unused variable: `done`
    --> src/window_tree.rs:2654:9
     |
2654 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `modedata`
    --> src/window_tree.rs:2700:9
     |
2700 |     mut modedata: *mut libc::c_void,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_modedata`

warning: unused variable: `c`
    --> src/window_tree.rs:2702:9
     |
2702 |     mut c: *mut client,
     |         ^ help: if this is intentional, prefix it with an underscore: `_c`

warning: unused variable: `key`
    --> src/window_tree.rs:2703:9
     |
2703 |     mut key: key_code,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `done`
    --> src/window_tree.rs:2741:9
     |
2741 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `done`
    --> src/window_tree.rs:2782:9
     |
2782 |     mut done: libc::c_int,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_done`

warning: unused variable: `s`
    --> src/window_tree.rs:2911:9
     |
2911 |     mut s: *mut session,
     |         ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `l`
 --> src/xchecks/xchecks.rs:7:9
  |
7 |     mut l: *mut libc::c_void,
  |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
 --> src/xchecks/xchecks.rs:8:9
  |
8 |     mut depth: size_t,
  |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:14:9
   |
14 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:15:9
   |
15 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:21:9
   |
21 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:22:9
   |
22 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:28:9
   |
28 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:29:9
   |
29 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:35:9
   |
35 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:36:9
   |
36 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:42:9
   |
42 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:43:9
   |
43 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `l`
  --> src/xchecks/xchecks.rs:49:9
   |
49 |     mut l: *mut libc::c_void,
   |         ^ help: if this is intentional, prefix it with an underscore: `_l`

warning: unused variable: `depth`
  --> src/xchecks/xchecks.rs:50:9
   |
50 |     mut depth: size_t,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unnecessary `unsafe` block
   --> src/cmd_attach_session.rs:991:54
    |
991 | pub static mut cmd_attach_session_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/cmd_bind_key.rs:918:48
    |
918 | pub static mut cmd_bind_key_entry: cmd_entry = unsafe {
    |                                                ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_break_pane.rs:944:50
    |
944 | pub static mut cmd_break_pane_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_capture_pane.rs:957:52
    |
957 | pub static mut cmd_capture_pane_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_capture_pane.rs:995:53
    |
995 | pub static mut cmd_clear_history_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_choose_tree.rs:912:51
    |
912 | pub static mut cmd_choose_tree_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_choose_tree.rs:950:53
    |
950 | pub static mut cmd_choose_client_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_choose_tree.rs:988:53
    |
988 | pub static mut cmd_choose_buffer_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_command_prompt.rs:970:54
    |
970 | pub static mut cmd_command_prompt_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_confirm_before.rs:953:54
    |
953 | pub static mut cmd_confirm_before_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_copy_mode.rs:917:49
    |
917 | pub static mut cmd_copy_mode_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_copy_mode.rs:954:50
    |
954 | pub static mut cmd_clock_mode_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_detach_client.rs:946:53
    |
946 | pub static mut cmd_detach_client_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_detach_client.rs:984:54
    |
984 | pub static mut cmd_suspend_client_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_display_message.rs:932:55
    |
932 | pub static mut cmd_display_message_entry: cmd_entry = unsafe {
    |                                                       ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_display_panes.rs:948:53
    |
948 | pub static mut cmd_display_panes_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_find_window.rs:921:51
    |
921 | pub static mut cmd_find_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_if_shell.rs:989:48
    |
989 | pub static mut cmd_if_shell_entry: cmd_entry = unsafe {
    |                                                ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_join_pane.rs:931:49
    |
931 | pub static mut cmd_join_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_join_pane.rs:972:49
    |
972 | pub static mut cmd_move_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_pane.rs:906:49
    |
906 | pub static mut cmd_kill_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_server.rs:902:51
    |
902 | pub static mut cmd_kill_server_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_server.rs:936:52
    |
936 | pub static mut cmd_start_server_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_session.rs:914:52
    |
914 | pub static mut cmd_kill_session_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_window.rs:908:51
    |
908 | pub static mut cmd_kill_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_kill_window.rs:945:53
    |
945 | pub static mut cmd_unlink_window_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_buffers.rs:914:52
    |
914 | pub static mut cmd_list_buffers_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_clients.rs:932:52
    |
932 | pub static mut cmd_list_clients_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_keys.rs:953:49
    |
953 | pub static mut cmd_list_keys_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_keys.rs:987:53
    |
987 | pub static mut cmd_list_commands_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_panes.rs:935:50
    |
935 | pub static mut cmd_list_panes_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_sessions.rs:932:53
    |
932 | pub static mut cmd_list_sessions_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_list_windows.rs:935:52
    |
935 | pub static mut cmd_list_windows_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_load_buffer.rs:997:51
    |
997 | pub static mut cmd_load_buffer_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_lock_server.rs:910:51
    |
910 | pub static mut cmd_lock_server_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_lock_server.rs:944:52
    |
944 | pub static mut cmd_lock_session_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_lock_server.rs:981:51
    |
981 | pub static mut cmd_lock_client_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_move_window.rs:926:51
    |
926 | pub static mut cmd_move_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_move_window.rs:964:51
    |
964 | pub static mut cmd_link_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_new_session.rs:1064:51
     |
1064 | pub static mut cmd_new_session_entry: cmd_entry = unsafe {
     |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_new_session.rs:1103:51
     |
1103 | pub static mut cmd_has_session_entry: cmd_entry = unsafe {
     |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_new_window.rs:966:50
    |
966 | pub static mut cmd_new_window_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_paste_buffer.rs:919:52
    |
919 | pub static mut cmd_paste_buffer_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_pipe_pane.rs:995:49
    |
995 | pub static mut cmd_pipe_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_refresh_client.rs:913:54
    |
913 | pub static mut cmd_refresh_client_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_rename_session.rs:928:54
    |
928 | pub static mut cmd_rename_session_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_rename_window.rs:922:53
    |
922 | pub static mut cmd_rename_window_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_resize_pane.rs:930:51
    |
930 | pub static mut cmd_resize_pane_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_respawn_pane.rs:952:52
    |
952 | pub static mut cmd_respawn_pane_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_respawn_window.rs:957:54
    |
957 | pub static mut cmd_respawn_window_entry: cmd_entry = unsafe {
    |                                                      ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_rotate_window.rs:911:53
    |
911 | pub static mut cmd_rotate_window_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_run_shell.rs:990:49
    |
990 | pub static mut cmd_run_shell_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_save_buffer.rs:982:51
    |
982 | pub static mut cmd_save_buffer_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_save_buffer.rs:1016:51
     |
1016 | pub static mut cmd_show_buffer_entry: cmd_entry = unsafe {
     |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_layout.rs:912:53
    |
912 | pub static mut cmd_select_layout_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_layout.rs:950:51
    |
950 | pub static mut cmd_next_layout_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_layout.rs:987:55
    |
987 | pub static mut cmd_previous_layout_entry: cmd_entry = unsafe {
    |                                                       ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_pane.rs:958:51
    |
958 | pub static mut cmd_select_pane_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_pane.rs:996:49
    |
996 | pub static mut cmd_last_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_window.rs:916:53
    |
916 | pub static mut cmd_select_window_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_window.rs:953:51
    |
953 | pub static mut cmd_next_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_select_window.rs:990:55
    |
990 | pub static mut cmd_previous_window_entry: cmd_entry = unsafe {
    |                                                       ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_select_window.rs:1027:51
     |
1027 | pub static mut cmd_last_window_entry: cmd_entry = unsafe {
     |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_send_keys.rs:951:49
    |
951 | pub static mut cmd_send_keys_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_send_keys.rs:989:51
    |
989 | pub static mut cmd_send_prefix_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_set_buffer.rs:928:50
    |
928 | pub static mut cmd_set_buffer_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_set_buffer.rs:963:53
    |
963 | pub static mut cmd_delete_buffer_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_set_environment.rs:913:55
    |
913 | pub static mut cmd_set_environment_entry: cmd_entry = unsafe {
    |                                                       ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_set_hook.rs:933:48
    |
933 | pub static mut cmd_set_hook_entry: cmd_entry = unsafe {
    |                                                ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_set_hook.rs:971:50
    |
971 | pub static mut cmd_show_hooks_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_set_option.rs:1053:50
     |
1053 | pub static mut cmd_set_option_entry: cmd_entry = unsafe {
     |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_set_option.rs:1091:57
     |
1091 | pub static mut cmd_set_window_option_entry: cmd_entry = unsafe {
     |                                                         ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_show_environment.rs:926:56
    |
926 | pub static mut cmd_show_environment_entry: cmd_entry = unsafe {
    |                                                        ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_show_messages.rs:1162:53
     |
1162 | pub static mut cmd_show_messages_entry: cmd_entry = unsafe {
     |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_show_options.rs:983:52
    |
983 | pub static mut cmd_show_options_entry: cmd_entry = unsafe {
    |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_show_options.rs:1021:59
     |
1021 | pub static mut cmd_show_window_options_entry: cmd_entry = unsafe {
     |                                                           ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_source_file.rs:963:51
    |
963 | pub static mut cmd_source_file_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/cmd_split_window.rs:1005:52
     |
1005 | pub static mut cmd_split_window_entry: cmd_entry = unsafe {
     |                                                    ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_swap_pane.rs:906:49
    |
906 | pub static mut cmd_swap_pane_entry: cmd_entry = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_swap_window.rs:928:51
    |
928 | pub static mut cmd_swap_window_entry: cmd_entry = unsafe {
    |                                                   ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_switch_client.rs:934:53
    |
934 | pub static mut cmd_switch_client_entry: cmd_entry = unsafe {
    |                                                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_unbind_key.rs:907:50
    |
907 | pub static mut cmd_unbind_key_entry: cmd_entry = unsafe {
    |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/cmd_wait_for.rs:955:48
    |
955 | pub static mut cmd_wait_for_entry: cmd_entry = unsafe {
    |                                                ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/layout_set.rs:930:49
    |
930 | static mut layout_sets: [C2RustUnnamed_34; 5] = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/window_buffer.rs:1076:50
     |
1076 | pub static mut window_buffer_mode: window_mode = unsafe {
     |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/window_client.rs:1105:50
     |
1105 | pub static mut window_client_mode: window_mode = unsafe {
     |                                                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/window_clock.rs:988:49
    |
988 | pub static mut window_clock_mode: window_mode = unsafe {
    |                                                 ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/window_copy.rs:1161:48
     |
1161 | pub static mut window_copy_mode: window_mode = unsafe {
     |                                                ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/window_tree.rs:1278:48
     |
1278 | pub static mut window_tree_mode: window_mode = unsafe {
     |                                                ^^^^^^ unnecessary `unsafe` block

warning: `0 as *mut _` detected
    --> src/alerts.rs:1182:30
     |
1182 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = note: `#[warn(clippy::zero_ptr)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/alerts.rs:1183:31
     |
1183 |     let mut w1: *mut window = 0 as *mut window;
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/alerts.rs:1235:5
     |
1235 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = note: `#[warn(clippy::needless_return)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/alerts.rs:1242:5
     |
1242 |     return alerts;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `alerts`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/alerts.rs:1245:1
     |
1245 | / pub unsafe extern "C" fn alerts_check_session(mut s: *mut session) {
1246 | |     let mut wl: *mut winlink = 0 as *mut winlink;
1247 | |     wl = winlinks_RB_MINMAX(&mut (*s).windows, -(1 as libc::c_int));
1248 | |     while !wl.is_null() {
...    |
1251 | |     }
1252 | | }
     | |_^
     |
     = note: `#[warn(clippy::missing_safety_doc)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/alerts.rs:1246:32
     |
1246 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/alerts.rs:1284:5
     |
1284 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/alerts.rs:1287:1
     |
1287 | / pub unsafe extern "C" fn alerts_reset_all() {
1288 | |     let mut w: *mut window = 0 as *mut window;
1289 | |     w = windows_RB_MINMAX(&mut windows, -(1 as libc::c_int));
1290 | |     while !w.is_null() {
...    |
1293 | |     }
1294 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/alerts.rs:1288:30
     |
1288 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/alerts.rs:1297:26
     |
1297 |     if event_initialized(&mut (*w).alerts_timer) == 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_add` doesn't need a mutable reference
    --> src/alerts.rs:1328:43
     |
1328 |         event_add(&mut (*w).alerts_timer, &mut tv);
     |                                           ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/alerts.rs:1332:1
     |
1332 | / pub unsafe extern "C" fn alerts_queue(mut w: *mut window, mut flags: libc::c_int) {
1333 | |     alerts_reset(w);
1334 | |     if (*w).flags & flags != flags {
1335 | |         (*w).flags |= flags;
...    |
1379 | |     }
1380 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/alerts.rs:1345:42
     |
1345 |             (*w).alerts_entry.tqe_next = 0 as *mut window;
     |                                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/alerts.rs:1374:17
     |
1374 |                 0 as *mut libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/alerts.rs:1375:17
     |
1375 |                 0 as *const timeval,
     |                 ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/alerts.rs:1406:12
     |
1406 |           if !(alerts_action_applies(
     |  ____________^
1407 | |             wl,
1408 | |             b"bell-action\0" as *const u8 as *const libc::c_char,
1409 | |         ) == 0)
     | |_______________^
     |
     = note: `#[warn(clippy::nonminimal_bool)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1406 ~         if alerts_action_applies(
1407 +             wl,
1408 +             b"bell-action\0" as *const u8 as *const libc::c_char,
1409 +         ) != 0
     |

warning: this boolean expression can be simplified
    --> src/alerts.rs:1412:16
     |
1412 |             if !((*s).flags & 0x4 as libc::c_int != 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*s).flags & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/alerts.rs:1423:5
     |
1423 |     return 0x1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0x1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/alerts.rs:1382:32
     |
1382 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/alerts.rs:1383:31
     |
1383 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/alerts.rs:1445:12
     |
1445 |         if !((*wl).flags & 0x2 as libc::c_int != 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*wl).flags & 0x2 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/alerts.rs:1451:16
     |
1451 |               if !(alerts_action_applies(
     |  ________________^
1452 | |                 wl,
1453 | |                 b"activity-action\0" as *const u8 as *const libc::c_char,
1454 | |             ) == 0)
     | |___________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1451 ~             if alerts_action_applies(
1452 +                 wl,
1453 +                 b"activity-action\0" as *const u8 as *const libc::c_char,
1454 +             ) != 0
     |

warning: this boolean expression can be simplified
    --> src/alerts.rs:1460:20
     |
1460 |                 if !((*s).flags & 0x4 as libc::c_int != 0) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*s).flags & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/alerts.rs:1472:5
     |
1472 |     return 0x2 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0x2 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/alerts.rs:1426:32
     |
1426 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/alerts.rs:1427:31
     |
1427 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/alerts.rs:1494:12
     |
1494 |         if !((*wl).flags & 0x4 as libc::c_int != 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*wl).flags & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/alerts.rs:1500:16
     |
1500 |               if !(alerts_action_applies(
     |  ________________^
1501 | |                 wl,
1502 | |                 b"silence-action\0" as *const u8 as *const libc::c_char,
1503 | |             ) == 0)
     | |___________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1500 ~             if alerts_action_applies(
1501 +                 wl,
1502 +                 b"silence-action\0" as *const u8 as *const libc::c_char,
1503 +             ) != 0
     |

warning: this boolean expression can be simplified
    --> src/alerts.rs:1509:20
     |
1509 |                 if !((*s).flags & 0x4 as libc::c_int != 0) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*s).flags & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/alerts.rs:1521:5
     |
1521 |     return 0x8 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0x8 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/alerts.rs:1475:32
     |
1475 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/alerts.rs:1476:31
     |
1476 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/alerts.rs:1537:16
     |
1537 |             if !(visual == 0 as libc::c_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `visual != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/alerts.rs:1528:30
     |
1528 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/alerts.rs:1563:9
     |
1559 | /         let mut init = C2RustUnnamed_34 {
1560 | |             tqh_first: 0 as *mut window,
1561 | |             tqh_last: &mut alerts_list.tqh_first,
1562 | |         };
     | |__________- unnecessary `let` binding
1563 |           init
     |           ^^^^
     |
     = note: `#[warn(clippy::let_and_return)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1559 ~         
1560 ~         C2RustUnnamed_34 {
1561 +             tqh_first: 0 as *mut window,
1562 +             tqh_last: &mut alerts_list.tqh_first,
1563 +         }
     |

warning: `0 as *mut _` detected
    --> src/alerts.rs:1560:24
     |
1560 |             tqh_first: 0 as *mut window,
     |                        ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
  --> src/arguments.rs:78:12
   |
78 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
  --> src/arguments.rs:73:39
   |
73 |     let mut parent: *mut args_entry = 0 as *mut args_entry;
   |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/arguments.rs:74:40
   |
74 |     let mut gparent: *mut args_entry = 0 as *mut args_entry;
   |                                        ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/arguments.rs:75:36
   |
75 |     let mut tmp: *mut args_entry = 0 as *mut args_entry;
   |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/arguments.rs:108:21
    |
108 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = note: `#[warn(clippy::unnecessary_operation)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:132:17
    |
132 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:160:21
    |
160 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:184:17
    |
184 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
   --> src/arguments.rs:206:5
    |
206 |     return 0 as *mut args_entry;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut args_entry`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
   --> src/arguments.rs:198:9
    |
198 | /         if comp < 0 as libc::c_int {
199 | |             tmp = (*tmp).entry.rbe_left;
200 | |         } else if comp > 0 as libc::c_int {
201 | |             tmp = (*tmp).entry.rbe_right;
202 | |         } else {
203 | |             return tmp
204 | |         }
    | |_________^
    |
    = note: `#[warn(clippy::comparison_chain)]` on by default
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
   --> src/arguments.rs:206:12
    |
206 |     return 0 as *mut args_entry;
    |            ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/arguments.rs:298:5
    |
298 |     return old;
    |     ^^^^^^^^^^^ help: remove `return`: `old`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:213:38
    |
213 |     let mut child: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:214:39
    |
214 |     let mut parent: *mut args_entry = 0 as *mut args_entry;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:224:41
    |
224 |         let mut left: *mut args_entry = 0 as *mut args_entry;
    |                                         ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/arguments.rs:276:5
    |
276 | /     match current_block {
277 | |         7245201122033322888 => {
278 | |             parent = (*elm).entry.rbe_parent;
279 | |             color = (*elm).entry.rbe_color;
...   |
293 | |         _ => {}
294 | |     }
    | |_____^
    |
    = note: `#[warn(clippy::single_match)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
276 ~     if current_block == 7245201122033322888 {
277 +         parent = (*elm).entry.rbe_parent;
278 +         color = (*elm).entry.rbe_color;
279 +         if !child.is_null() {
280 +             (*child).entry.rbe_parent = parent;
281 +         }
282 +         if !parent.is_null() {
283 +             if (*parent).entry.rbe_left == elm {
284 +                 (*parent).entry.rbe_left = child;
285 +             } else {
286 +                 (*parent).entry.rbe_right = child;
287 +             }
288 +         } else {
289 +             (*head).rbh_root = child;
290 +         }
291 +     }
    |

warning: `0 as *mut _` detected
   --> src/arguments.rs:305:36
    |
305 |     let mut tmp: *mut args_entry = 0 as *mut args_entry;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/arguments.rs:331:17
    |
331 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/arguments.rs:346:54
    |
346 |                     let mut oleft: *mut args_entry = 0 as *mut args_entry;
    |                                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/arguments.rs:369:21
    |
369 |                     !((*oleft).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:394:17
    |
394 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:420:17
    |
420 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/arguments.rs:435:55
    |
435 |                     let mut oright: *mut args_entry = 0 as *mut args_entry;
    |                                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/arguments.rs:458:21
    |
458 |                     !((*oright).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/arguments.rs:483:17
    |
483 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
   --> src/arguments.rs:511:5
    |
511 |     return elm;
    |     ^^^^^^^^^^^ help: remove `return`: `elm`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/arguments.rs:546:5
    |
546 |     return 0 as *mut args_entry;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut args_entry`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:517:36
    |
517 |     let mut tmp: *mut args_entry = 0 as *mut args_entry;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:518:39
    |
518 |     let mut parent: *mut args_entry = 0 as *mut args_entry;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
   --> src/arguments.rs:524:9
    |
524 | /         if comp < 0 as libc::c_int {
525 | |             tmp = (*tmp).entry.rbe_left;
526 | |         } else if comp > 0 as libc::c_int {
527 | |             tmp = (*tmp).entry.rbe_right;
528 | |         } else {
529 | |             return tmp
530 | |         }
    | |_________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
   --> src/arguments.rs:533:30
    |
533 |     (*elm).entry.rbe_right = 0 as *mut args_entry;
    |                              ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:546:12
    |
546 |     return 0 as *mut args_entry;
    |            ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/arguments.rs:562:5
    |
562 |     return parent;
    |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:553:39
    |
553 |     let mut parent: *mut args_entry = 0 as *mut args_entry;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/arguments.rs:568:5
    |
568 |     return (*a1).flag as libc::c_int - (*a2).flag as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*a1).flag as libc::c_int - (*a2).flag as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/arguments.rs:582:5
    |
582 |     return args_tree_RB_FIND(&mut (*args).tree, &mut entry);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `args_tree_RB_FIND(&mut (*args).tree, &mut entry)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:573:16
    |
573 |         value: 0 as *mut libc::c_char,
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:575:23
    |
575 |             rbe_left: 0 as *mut args_entry,
    |                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:576:24
    |
576 |             rbe_right: 0 as *mut args_entry,
    |                        ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:577:25
    |
577 |             rbe_parent: 0 as *mut args_entry,
    |                         ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:585:1
    |
585 | / pub unsafe extern "C" fn args_parse(
586 | |     mut template: *const libc::c_char,
587 | |     mut argc: libc::c_int,
588 | |     mut argv: *mut *mut libc::c_char,
...   |
616 | |     return args;
617 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/arguments.rs:600:12
    |
600 |         if !(opt != -(1 as libc::c_int)) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `opt == -(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/arguments.rs:616:5
    |
616 |     return args;
    |     ^^^^^^^^^^^^ help: remove `return`: `args`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:590:31
    |
590 |     let mut args: *mut args = 0 as *mut args;
    |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:608:20
    |
608 |             return 0 as *mut args;
    |                    ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:619:1
    |
619 | / pub unsafe extern "C" fn args_free(mut args: *mut args) {
620 | |     let mut entry: *mut args_entry = 0 as *mut args_entry;
621 | |     let mut entry1: *mut args_entry = 0 as *mut args_entry;
622 | |     cmd_free_argv((*args).argc, (*args).argv);
...   |
635 | |     free(args as *mut libc::c_void);
636 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/arguments.rs:620:38
    |
620 |     let mut entry: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:621:39
    |
621 |     let mut entry1: *mut args_entry = 0 as *mut args_entry;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:638:1
    |
638 | / pub unsafe extern "C" fn args_print(mut args: *mut args) -> *mut libc::c_char {
639 | |     let mut len: size_t = 0;
640 | |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
641 | |     let mut escaped: *mut libc::c_char = 0 as *mut libc::c_char;
...   |
751 | |     return buf;
752 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/arguments.rs:751:5
    |
751 |     return buf;
    |     ^^^^^^^^^^^ help: remove `return`: `buf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:640:38
    |
640 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:641:42
    |
641 |     let mut escaped: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:644:38
    |
644 |     let mut entry: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/arguments.rs:749:9
    |
749 |         i;
    |         ^^
    |
    = note: `#[warn(clippy::no_effect)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:754:1
    |
754 | / pub unsafe extern "C" fn args_has(mut args: *mut args, mut ch: u_char) -> libc::c_int {
755 | |     return (args_find(args, ch) != 0 as *mut libc::c_void as *mut args_entry)
756 | |         as libc::c_int;
757 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/arguments.rs:755:5
    |
755 | /     return (args_find(args, ch) != 0 as *mut libc::c_void as *mut args_entry)
756 | |         as libc::c_int;
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
755 ~     (args_find(args, ch) != 0 as *mut libc::c_void as *mut args_entry)
756 +         as libc::c_int
    |

warning: `0 as *mut _` detected
   --> src/arguments.rs:755:36
    |
755 |     return (args_find(args, ch) != 0 as *mut libc::c_void as *mut args_entry)
    |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:759:1
    |
759 | / pub unsafe extern "C" fn args_set(
760 | |     mut args: *mut args,
761 | |     mut ch: u_char,
762 | |     mut value: *const libc::c_char,
...   |
779 | |     }
780 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/arguments.rs:764:38
    |
764 |     let mut entry: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:768:26
    |
768 |         (*entry).value = 0 as *mut libc::c_char;
    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:782:1
    |
782 | / pub unsafe extern "C" fn args_get(
783 | |     mut args: *mut args,
784 | |     mut ch: u_char,
785 | | ) -> *const libc::c_char {
...   |
791 | |     return (*entry).value;
792 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/arguments.rs:791:5
    |
791 |     return (*entry).value;
    |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*entry).value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/arguments.rs:786:38
    |
786 |     let mut entry: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/arguments.rs:789:16
    |
789 |         return 0 as *const libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/arguments.rs:794:1
    |
794 | / pub unsafe extern "C" fn args_strtonum(
795 | |     mut args: *mut args,
796 | |     mut ch: u_char,
797 | |     mut minval: libc::c_longlong,
...   |
815 | |     return ll;
816 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/arguments.rs:815:5
    |
815 |     return ll;
    |     ^^^^^^^^^^ help: remove `return`: `ll`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/arguments.rs:801:43
    |
801 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:803:38
    |
803 |     let mut entry: *mut args_entry = 0 as *mut args_entry;
    |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/arguments.rs:814:14
    |
814 |     *cause = 0 as *mut libc::c_char;
    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
  --> src/attributes.rs:22:1
   |
22 | / pub unsafe extern "C" fn attributes_tostring(
23 | |     mut attr: libc::c_int,
24 | | ) -> *const libc::c_char {
25 | |     static mut buf: [libc::c_char; 128] = [0; 128];
...  |
79 | |     return buf.as_mut_ptr();
80 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/attributes.rs:79:5
   |
79 |     return buf.as_mut_ptr();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `buf.as_mut_ptr()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/attributes.rs:82:1
    |
82  | / pub unsafe extern "C" fn attributes_fromstring(
83  | |     mut str: *const libc::c_char,
84  | | ) -> libc::c_int {
85  | |     let delimiters: [libc::c_char; 4] = *::core::mem::transmute::<
...   |
175 | |     return attr;
176 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/attributes.rs:171:12
    |
171 |         if !(*str as libc::c_int != '\0' as i32) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*str as libc::c_int == '\0' as i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/attributes.rs:175:5
    |
175 |     return attr;
    |     ^^^^^^^^^^^^ help: remove `return`: `attr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cfg.rs:1073:5
     |
1073 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cfg.rs:1090:5
     |
1090 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cfg.rs:1093:1
     |
1093 | / pub unsafe extern "C" fn set_cfg_file(mut path: *const libc::c_char) {
1094 | |     free(cfg_file as *mut libc::c_void);
1095 | |     cfg_file = xstrdup(path);
1096 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cfg.rs:1098:1
     |
1098 | / pub unsafe extern "C" fn start_cfg() {
1099 | |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
1100 | |     let mut quiet: libc::c_int = 0 as libc::c_int;
1101 | |     let mut c: *mut client = 0 as *mut client;
...    |
1152 | |     );
1153 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/cfg.rs:1099:41
     |
1099 |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1101:30
     |
1101 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1113:13
     |
1113 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1119:9
     |
1119 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1120:9
     |
1120 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1137:28
     |
1137 |         load_cfg(cfg_file, 0 as *mut client, 0 as *mut cmdq_item, quiet);
     |                            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1137:46
     |
1137 |         load_cfg(cfg_file, 0 as *mut client, 0 as *mut cmdq_item, quiet);
     |                                              ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1140:9
     |
1140 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1150:13
     |
1150 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cfg.rs:1189:5
     |
1189 |     return result;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `result`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cfg.rs:1160:36
     |
1160 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1161:36
     |
1161 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cfg.rs:1167:9
     |
1167 |         p;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cfg.rs:1179:9
     |
1179 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1180:9
     |
1180 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1197:35
     |
1197 |     let mut cond: *mut cfg_cond = 0 as *mut cfg_cond;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cfg.rs:1292:9
     |
1292 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cfg.rs:1323:1
     |
1323 | / pub unsafe extern "C" fn load_cfg(
1324 | |     mut path: *const libc::c_char,
1325 | |     mut c: *mut client,
1326 | |     mut item: *mut cmdq_item,
...    |
1453 | |     return found as libc::c_int;
1454 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cfg.rs:1453:5
     |
1453 |     return found as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `found as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cfg.rs:1329:28
     |
1329 |     let mut f: *mut FILE = 0 as *mut FILE;
     |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1337:38
     |
1337 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1338:41
     |
1338 |     let mut cause1: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1339:36
     |
1339 |     let mut p: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1340:36
     |
1340 |     let mut q: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1341:38
     |
1341 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1342:40
     |
1342 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1343:35
     |
1343 |     let mut cond: *mut cfg_cond = 0 as *mut cfg_cond;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1344:36
     |
1344 |     let mut cond1: *mut cfg_cond = 0 as *mut cfg_cond;
     |                                    ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1346:20
     |
1346 |         tqh_first: 0 as *mut cfg_cond,
     |                    ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1347:19
     |
1347 |         tqh_last: 0 as *mut *mut cfg_cond,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1349:23
     |
1349 |     conds.tqh_first = 0 as *mut cfg_cond;
     |                       ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cfg_cond>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1365:27
     |
1365 |         buf = fparseln(f, 0 as *mut size_t, &mut line, delim.as_ptr(), 0 as libc::c_int);
     |                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<size_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cfg.rs:1376:13
     |
1376 |             p;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cfg.rs:1415:25
     |
1415 |                         0 as *mut cmd_find_state,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1416:25
     |
1416 |                         0 as *mut mouse_event,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cfg.rs:1426:21
     |
1426 |                     found;
     |                     ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cfg.rs:1456:1
     |
1456 | / pub unsafe extern "C" fn cfg_print_causes(mut item: *mut cmdq_item) {
1457 | |     let mut i: u_int = 0;
1458 | |     i = 0 as libc::c_int as u_int;
1459 | |     while i < cfg_ncauses {
...    |
1471 | |     cfg_ncauses = 0 as libc::c_int as u_int;
1472 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/cfg.rs:1467:9
     |
1467 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cfg.rs:1470:18
     |
1470 |     cfg_causes = 0 as *mut *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cfg.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn cfg_show_causes(mut s: *mut session) {
1475 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
1476 | |     let mut i: u_int = 0;
1477 | |     if s.is_null() || cfg_ncauses == 0 as libc::c_int as u_int {
...    |
1501 | |     cfg_ncauses = 0 as libc::c_int as u_int;
1502 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/cfg.rs:1475:36
     |
1475 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1484:9
     |
1484 |         0 as *mut cmd_find_state,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cfg.rs:1485:9
     |
1485 |         0 as *mut args,
     |         ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cfg.rs:1497:9
     |
1497 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cfg.rs:1500:18
     |
1500 |     cfg_causes = 0 as *mut *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/client.rs:1460:5
     |
1460 |     return lockfd;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `lockfd`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/client.rs:1499:12
     |
1499 |           if !(connect(
     |  ____________^
1500 | |             fd,
1501 | |             __CONST_SOCKADDR_ARG {
1502 | |                 __sockaddr__: &mut sa as *mut sockaddr_un as *mut sockaddr,
1503 | |             },
1504 | |             ::core::mem::size_of::<sockaddr_un>() as libc::c_ulong as socklen_t,
1505 | |         ) == -(1 as libc::c_int))
     | |_________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1499 ~         if connect(
1500 +             fd,
1501 +             __CONST_SOCKADDR_ARG {
1502 +                 __sockaddr__: &mut sa as *mut sockaddr_un as *mut sockaddr,
1503 +             },
1504 +             ::core::mem::size_of::<sockaddr_un>() as libc::c_ulong as socklen_t,
1505 +         ) != -(1 as libc::c_int)
     |

warning: unneeded `return` statement
    --> src/client.rs:1565:13
     |
1565 |             return -(1 as libc::c_int);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/client.rs:1573:13
     |
1573 |             return fd;
     |             ^^^^^^^^^^ help: remove `return`: `fd`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/client.rs:1476:43
     |
1476 |     let mut lockfile: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1538:28
     |
1538 |                 lockfile = 0 as *mut libc::c_char;
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/client.rs:1612:5
     |
1612 |     return b"unknown reason\0" as *const u8 as *const libc::c_char;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `b"unknown reason\0" as *const u8 as *const libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/client.rs:1610:9
     |
1610 |         0 | _ => {}
     |         ^^^^^
     |
     = note: `#[warn(clippy::wildcard_in_or_patterns)]` on by default
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unsafe function's docs miss `# Safety` section
    --> src/client.rs:1615:1
     |
1615 | / pub unsafe extern "C" fn client_main(
1616 | |     mut base: *mut event_base,
1617 | |     mut argc: libc::c_int,
1618 | |     mut argv: *mut *mut libc::c_char,
...    |
1897 | |     return client_exitval;
1898 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/client.rs:1897:5
     |
1897 |     return client_exitval;
     |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `client_exitval`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/client.rs:1621:29
     |
1621 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1622:38
     |
1622 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1623:43
     |
1623 |     let mut data: *mut msg_command_data = 0 as *mut msg_command_data;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<msg_command_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:1627:43
     |
1627 |     let mut ttynam: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:1628:40
     |
1628 |     let mut cwd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1631:40
     |
1631 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:1674:13
     |
1674 |             0 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1718:9
     |
1718 |         0 as *mut libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1763:9
     |
1763 |         0 as *mut libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `cfgetispeed` doesn't need a mutable reference
    --> src/client.rs:1782:43
     |
1782 |         cfsetispeed(&mut tio, cfgetispeed(&mut saved_tio));
     |                                           ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `cfgetospeed` doesn't need a mutable reference
    --> src/client.rs:1783:43
     |
1783 |         cfsetospeed(&mut tio, cfgetospeed(&mut saved_tio));
     |                                           ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/client.rs:1784:55
     |
1784 |         tcsetattr(0 as libc::c_int, 0 as libc::c_int, &mut tio);
     |                                                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/client.rs:1797:13
     |
1797 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/client.rs:1848:13
     |
1848 |             0 as *const libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/client.rs:1855:59
     |
1855 |             tcsetattr(1 as libc::c_int, 2 as libc::c_int, &mut saved_tio);
     |                                                           ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/client.rs:1886:55
     |
1886 |         tcsetattr(1 as libc::c_int, 2 as libc::c_int, &mut saved_tio);
     |                                                       ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: this boolean expression can be simplified
    --> src/client.rs:1963:12
     |
1963 |           if !(sslen
     |  ____________^
1964 | |             > (16384 as libc::c_int as libc::c_ulong)
1965 | |                 .wrapping_sub(::core::mem::size_of::<imsg_hdr>() as libc::c_ulong))
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1963 ~         if sslen <= (16384 as libc::c_int as libc::c_ulong)
1964 +                 .wrapping_sub(::core::mem::size_of::<imsg_hdr>() as libc::c_ulong)
     |

warning: `0 as *const _` detected
    --> src/client.rs:1903:38
     |
1903 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:1904:42
     |
1904 |     let mut ss: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:1949:9
     |
1949 |         0 as *const libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/client.rs:1976:9
     |
1976 |         ss;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/client.rs:1982:9
     |
1982 |         0 as *const libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2049:41
     |
2049 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2050:40
     |
2050 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:2051:40
     |
2051 |     let mut argv0: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:2089:9
     |
2089 |         0 as *mut libc::c_void as *mut libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2118:21
     |
2118 |                     0 as *const libc::c_void,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2129:21
     |
2129 |                     0 as *const libc::c_void,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2138:21
     |
2138 |                     0 as *const libc::c_void,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
    --> src/client.rs:2156:49
     |
2156 |                 if sigaction(20 as libc::c_int, &mut sigact, 0 as *mut sigaction)
     |                                                 ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/client.rs:2156:62
     |
2156 |                 if sigaction(20 as libc::c_int, &mut sigact, 0 as *mut sigaction)
     |                                                              ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2165:21
     |
2165 |                     0 as *const libc::c_void,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:2187:39
     |
2187 |     let mut data: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2238:17
     |
2238 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2246:42
     |
2246 |             event_add(&mut client_stdin, 0 as *const timeval);
     |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2310:17
     |
2310 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/client.rs:2329:39
     |
2329 |     let mut data: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2353:17
     |
2353 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2375:17
     |
2375 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2390:17
     |
2390 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2409:17
     |
2409 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
    --> src/client.rs:2427:45
     |
2427 |             if sigaction(20 as libc::c_int, &mut sigact, 0 as *mut sigaction)
     |                                             ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/client.rs:2427:58
     |
2427 |             if sigaction(20 as libc::c_int, &mut sigact, 0 as *mut sigaction)
     |                                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/client.rs:2446:17
     |
2446 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1125:1
     |
1125 | / pub unsafe extern "C" fn cmd_pack_argv(
1126 | |     mut argc: libc::c_int,
1127 | |     mut argv: *mut *mut libc::c_char,
1128 | |     mut buf: *mut libc::c_char,
...    |
1149 | |     return 0 as libc::c_int;
1150 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1149:5
     |
1149 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/cmd.rs:1147:9
     |
1147 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1152:1
     |
1152 | / pub unsafe extern "C" fn cmd_unpack_argv(
1153 | |     mut buf: *mut libc::c_char,
1154 | |     mut len: size_t,
1155 | |     mut argc: libc::c_int,
...    |
1185 | |     return 0 as libc::c_int;
1186 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1185:5
     |
1185 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd.rs:1178:13
     |
1178 |         let ref mut fresh0 = *(*argv).offset(i as isize);
     |         ----^^^^^^^^^^^^^^------------------------------- help: try: `let fresh0 = &mut (*(*argv).offset(i as isize));`
     |
     = note: `#[warn(clippy::toplevel_ref_arg)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/cmd.rs:1183:9
     |
1183 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1188:1
     |
1188 | / pub unsafe extern "C" fn cmd_copy_argv(
1189 | |     mut argc: libc::c_int,
1190 | |     mut argv: *mut *mut libc::c_char,
1191 | | ) -> *mut *mut libc::c_char {
...    |
1210 | |     return new_argv;
1211 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1210:5
     |
1210 |     return new_argv;
     |     ^^^^^^^^^^^^^^^^ help: remove `return`: `new_argv`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1192:48
     |
1192 |     let mut new_argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1195:16
     |
1195 |         return 0 as *mut *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd.rs:1204:17
     |
1204 |             let ref mut fresh1 = *new_argv.offset(i as isize);
     |             ----^^^^^^^^^^^^^^-------------------------------- help: try: `let fresh1 = &mut (*new_argv.offset(i as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/cmd.rs:1208:9
     |
1208 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1213:1
     |
1213 | / pub unsafe extern "C" fn cmd_free_argv(
1214 | |     mut argc: libc::c_int,
1215 | |     mut argv: *mut *mut libc::c_char,
1216 | | ) {
...    |
1227 | |     free(argv as *mut libc::c_void);
1228 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/cmd.rs:1225:9
     |
1225 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1230:1
     |
1230 | / pub unsafe extern "C" fn cmd_stringify_argv(
1231 | |     mut argc: libc::c_int,
1232 | |     mut argv: *mut *mut libc::c_char,
1233 | | ) -> *mut libc::c_char {
...    |
1259 | |     return buf;
1260 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1259:5
     |
1259 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1234:38
     |
1234 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1241:11
     |
1241 |     buf = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd.rs:1257:9
     |
1257 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd.rs:1348:5
     |
1348 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1265:37
     |
1265 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1269:48
     |
1269 |     let mut new_argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1274:38
     |
1274 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1275:39
     |
1275 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd.rs:1300:9
     |
1300 |         idx;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd.rs:1320:13
     |
1320 |         let ref mut fresh2 = *(*argv).offset(i as isize);
     |         ----^^^^^^^^^^^^^^------------------------------- help: try: `let fresh2 = &mut (*(*argv).offset(i as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/cmd.rs:1323:9
     |
1323 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd.rs:1327:13
     |
1327 |         let ref mut fresh3 = *(*argv).offset((new_argc + i - 1 as libc::c_int) as isize);
     |         ----^^^^^^^^^^^^^^--------------------------------------------------------------- help: try: `let fresh3 = &mut (*(*argv).offset((new_argc + i - 1 as libc::c_int) as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/cmd.rs:1330:9
     |
1330 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd.rs:1345:9
     |
1345 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1351:1
     |
1351 | / pub unsafe extern "C" fn cmd_parse(
1352 | |     mut argc: libc::c_int,
1353 | |     mut argv: *mut *mut libc::c_char,
1354 | |     mut file: *const libc::c_char,
...    |
1495 | |     };
1496 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/cmd.rs:1385:20
     |
1385 |                   if !(strncmp(
     |  ____________________^
1386 | |                     (**entryp).name,
1387 | |                     *argv.offset(0 as libc::c_int as isize),
1388 | |                     strlen(*argv.offset(0 as libc::c_int as isize)),
1389 | |                 ) != 0 as libc::c_int)
     | |______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1385 ~                 if strncmp(
1386 +                     (**entryp).name,
1387 +                     *argv.offset(0 as libc::c_int as isize),
1388 +                     strlen(*argv.offset(0 as libc::c_int as isize)),
1389 +                 ) == 0 as libc::c_int
     |

warning: this boolean expression can be simplified
    --> src/cmd.rs:1416:16
     |
1416 |               if !(strncmp(
     |  ________________^
1417 | |                 (**entryp).name,
1418 | |                 *argv.offset(0 as libc::c_int as isize),
1419 | |                 strlen(*argv.offset(0 as libc::c_int as isize)),
1420 | |             ) != 0 as libc::c_int)
     | |__________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
1416 ~             if strncmp(
1417 +                 (**entryp).name,
1418 +                 *argv.offset(0 as libc::c_int as isize),
1419 +                 strlen(*argv.offset(0 as libc::c_int as isize)),
1420 +             ) == 0 as libc::c_int
     |

warning: unneeded `return` statement
    --> src/cmd.rs:1450:9
     |
1450 |         return 0 as *mut cmd;
     |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut cmd`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd.rs:1494:9
     |
1494 |         return 0 as *mut cmd;
     |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut cmd`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd.rs:1358:41
     |
1358 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1359:45
     |
1359 |     let mut entryp: *mut *const cmd_entry = 0 as *mut *const cmd_entry;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const cmd_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1360:39
     |
1360 |     let mut entry: *const cmd_entry = 0 as *const cmd_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<cmd_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1361:29
     |
1361 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1362:31
     |
1362 |     let mut args: *mut args = 0 as *mut args;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1366:14
     |
1366 |     *cause = 0 as *mut libc::c_char;
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1369:16
     |
1369 |         return 0 as *mut cmd;
     |                ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1374:17
     |
1374 |         entry = 0 as *const cmd_entry;
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<cmd_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd.rs:1402:17
     |
1402 |                 entryp;
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd.rs:1440:13
     |
1440 |             entryp;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd.rs:1450:16
     |
1450 |         return 0 as *mut cmd;
     |                ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1458:20
     |
1458 |             return 0 as *mut cmd;
     |                    ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1494:16
     |
1494 |         return 0 as *mut cmd;
     |                ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1498:1
     |
1498 | / pub unsafe extern "C" fn cmd_print(mut cmd: *mut cmd) -> *mut libc::c_char {
1499 | |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
1500 | |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
1501 | |     s = args_print((*cmd).args);
...    |
1513 | |     return out;
1514 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1513:5
     |
1513 |     return out;
     |     ^^^^^^^^^^^ help: remove `return`: `out`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1499:38
     |
1499 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1500:36
     |
1500 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1516:1
     |
1516 | / pub unsafe extern "C" fn cmd_mouse_at(
1517 | |     mut wp: *mut window_pane,
1518 | |     mut m: *mut mouse_event,
1519 | |     mut xp: *mut u_int,
...    |
1550 | |     return 0 as libc::c_int;
1551 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1550:5
     |
1550 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/cmd.rs:1534:9
     |
1534 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1553:1
     |
1553 | / pub unsafe extern "C" fn cmd_mouse_window(
1554 | |     mut m: *mut mouse_event,
1555 | |     mut sp: *mut *mut session,
1556 | | ) -> *mut winlink {
...    |
1574 | |     return winlink_find_by_window(&mut (*s).windows, w);
1575 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1574:5
     |
1574 |     return winlink_find_by_window(&mut (*s).windows, w);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `winlink_find_by_window(&mut (*s).windows, w)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1557:31
     |
1557 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1558:30
     |
1558 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1561:16
     |
1561 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1565:16
     |
1565 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1569:16
     |
1569 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1577:1
     |
1577 | / pub unsafe extern "C" fn cmd_mouse_pane(
1578 | |     mut m: *mut mouse_event,
1579 | |     mut sp: *mut *mut session,
1580 | |     mut wlp: *mut *mut winlink,
...    |
1598 | |     return wp;
1599 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1598:5
     |
1598 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1582:32
     |
1582 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1583:36
     |
1583 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1586:16
     |
1586 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1590:16
     |
1590 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd.rs:1593:16
     |
1593 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd.rs:1601:1
     |
1601 | / pub unsafe extern "C" fn cmd_template_replace(
1602 | |     mut template: *const libc::c_char,
1603 | |     mut s: *const libc::c_char,
1604 | |     mut idx: libc::c_int,
...    |
1701 | |     return buf;
1702 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd.rs:1701:5
     |
1701 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd.rs:1607:38
     |
1607 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1608:40
     |
1608 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd.rs:1609:39
     |
1609 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd.rs:1630:9
     |
1630 | /         match ch as libc::c_int {
1631 | |             37 => {
1632 | |                 if (*ptr as libc::c_int) < '1' as i32 || *ptr as libc::c_int > '9' as i32
1633 | |                     || *ptr as libc::c_int - '0' as i32 != idx
...    |
1690 | |             _ => {}
1691 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1630 ~         if ch as libc::c_int == 37 {
1631 +             if (*ptr as libc::c_int) < '1' as i32 || *ptr as libc::c_int > '9' as i32
1632 +                 || *ptr as libc::c_int - '0' as i32 != idx
1633 +             {
1634 +                 if *ptr as libc::c_int != '%' as i32 || replaced != 0 {
1635 +                     current_block_26 = 11298138898191919651;
1636 +                 } else {
1637 +                     replaced = 1 as libc::c_int;
1638 +                     current_block_26 = 2868539653012386629;
1639 +                 }
1640 +             } else {
1641 +                 current_block_26 = 2868539653012386629;
1642 +             }
1643 +             match current_block_26 {
1644 +                 11298138898191919651 => {}
1645 +                 _ => {
1646 +                     ptr = ptr.offset(1);
1647 +                     ptr;
1648 +                     quoted = (*ptr as libc::c_int == '%' as i32) as libc::c_int;
1649 +                     if quoted != 0 {
1650 +                         ptr = ptr.offset(1);
1651 +                         ptr;
1652 +                     }
1653 +                     buf = xrealloc(
1654 +                         buf as *mut libc::c_void,
1655 +                         len
1656 +                             .wrapping_add(
1657 +                                 (strlen(s)).wrapping_mul(3 as libc::c_int as libc::c_ulong),
1658 +                             )
1659 +                             .wrapping_add(1 as libc::c_int as libc::c_ulong),
1660 +                     ) as *mut libc::c_char;
1661 +                     cp = s;
1662 +                     while *cp as libc::c_int != '\0' as i32 {
1663 +                         if quoted != 0
1664 +                             && !(strchr(quote.as_ptr(), *cp as libc::c_int)).is_null()
1665 +                         {
1666 +                             let fresh5 = len;
1667 +                             len = len.wrapping_add(1);
1668 +                             *buf.offset(fresh5 as isize) = '\\' as i32 as libc::c_char;
1669 +                         }
1670 +                         if quoted != 0 && *cp as libc::c_int == ';' as i32 {
1671 +                             let fresh6 = len;
1672 +                             len = len.wrapping_add(1);
1673 +                             *buf.offset(fresh6 as isize) = '\\' as i32 as libc::c_char;
1674 +                             let fresh7 = len;
1675 +                             len = len.wrapping_add(1);
1676 +                             *buf.offset(fresh7 as isize) = '\\' as i32 as libc::c_char;
1677 +                         }
1678 +                         let fresh8 = len;
1679 +                         len = len.wrapping_add(1);
1680 +                         *buf.offset(fresh8 as isize) = *cp;
1681 +                         cp = cp.offset(1);
1682 +                         cp;
1683 +                     }
1684 +                     *buf.offset(len as isize) = '\0' as i32 as libc::c_char;
1685 +                     continue;
1686 +                 }
1687 +             }
1688 +         }
     |

warning: statement with no effect
    --> src/cmd.rs:1648:25
     |
1648 |                         ptr;
     |                         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd.rs:1652:29
     |
1652 | ...                   ptr;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd.rs:1683:29
     |
1683 | ...                   cp;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/cmd_attach_session.rs:1022:9
     |
993  | /         let mut init = cmd_entry {
994  | |             name: b"attach-session\0" as *const u8 as *const libc::c_char,
995  | |             alias: b"attach\0" as *const u8 as *const libc::c_char,
996  | |             args: {
...    |
1020 | |             ),
1021 | |         };
     | |__________- unnecessary `let` binding
1022 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
993  ~         
994  ~         cmd_entry {
995  +             name: b"attach-session\0" as *const u8 as *const libc::c_char,
996  +             alias: b"attach\0" as *const u8 as *const libc::c_char,
997  +             args: {
998  +                 let mut init = C2RustUnnamed_31 {
999  +                     template: b"c:dErt:\0" as *const u8 as *const libc::c_char,
1000 +                     lower: 0 as libc::c_int,
1001 +                     upper: 0 as libc::c_int,
1002 +                 };
1003 +                 init
1004 +             },
1005 +             usage: b"[-dEr] [-c working-directory] [-t target-session]\0" as *const u8
1006 +                 as *const libc::c_char,
1007 +             source: cmd_entry_flag {
1008 +                 flag: 0,
1009 +                 type_0: CMD_FIND_PANE,
1010 +                 flags: 0,
1011 +             },
1012 +             target: cmd_entry_flag {
1013 +                 flag: 0,
1014 +                 type_0: CMD_FIND_PANE,
1015 +                 flags: 0,
1016 +             },
1017 +             flags: 0x1 as libc::c_int,
1018 +             exec: Some(
1019 +                 cmd_attach_session_exec
1020 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1021 +             ),
1022 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_attach_session.rs:1002:17
     |
997  | /                 let mut init = C2RustUnnamed_31 {
998  | |                     template: b"c:dErt:\0" as *const u8 as *const libc::c_char,
999  | |                     lower: 0 as libc::c_int,
1000 | |                     upper: 0 as libc::c_int,
1001 | |                 };
     | |__________________- unnecessary `let` binding
1002 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
997  ~                 
998  ~                 C2RustUnnamed_31 {
999  +                     template: b"c:dErt:\0" as *const u8 as *const libc::c_char,
1000 +                     lower: 0 as libc::c_int,
1001 +                     upper: 0 as libc::c_int,
1002 +                 }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_attach_session.rs:1026:1
     |
1026 | / pub unsafe extern "C" fn cmd_attach_session(
1027 | |     mut item: *mut cmdq_item,
1028 | |     mut tflag: *const libc::c_char,
1029 | |     mut dflag: libc::c_int,
...    |
1171 | |     return CMD_RETURN_NORMAL;
1172 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_attach_session.rs:1171:5
     |
1171 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1038:35
     |
1038 |     let mut c_loop: *mut client = 0 as *mut client;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1039:31
     |
1039 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1040:32
     |
1040 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1041:36
     |
1041 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1042:40
     |
1042 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_attach_session.rs:1107:44
     |
1107 |             server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1114:36
     |
1114 |         session_update_activity(s, 0 as *mut timeval);
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1115:52
     |
1115 |         gettimeofday(&mut (*s).last_attached_time, 0 as *mut libc::c_void);
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_attach_session.rs:1145:40
     |
1145 |         server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1151:36
     |
1151 |         session_update_activity(s, 0 as *mut timeval);
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_attach_session.rs:1152:52
     |
1152 |         gettimeofday(&mut (*s).last_attached_time, 0 as *mut libc::c_void);
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_attach_session.rs:1161:17
     |
1161 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_attach_session.rs:1178:5
     |
1178 | /     return cmd_attach_session(
1179 | |         item,
1180 | |         args_get(args, 't' as i32 as u_char),
1181 | |         args_has(args, 'd' as i32 as u_char),
...    |
1184 | |         args_has(args, 'E' as i32 as u_char),
1185 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1178 ~     cmd_attach_session(
1179 +         item,
1180 +         args_get(args, 't' as i32 as u_char),
1181 +         args_has(args, 'd' as i32 as u_char),
1182 +         args_has(args, 'r' as i32 as u_char),
1183 +         args_get(args, 'c' as i32 as u_char),
1184 +         args_has(args, 'E' as i32 as u_char),
1185 +     )
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_bind_key.rs:949:9
    |
920 | /         let mut init = cmd_entry {
921 | |             name: b"bind-key\0" as *const u8 as *const libc::c_char,
922 | |             alias: b"bind\0" as *const u8 as *const libc::c_char,
923 | |             args: {
...   |
947 | |             ),
948 | |         };
    | |__________- unnecessary `let` binding
949 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
920 ~         
921 ~         cmd_entry {
922 +             name: b"bind-key\0" as *const u8 as *const libc::c_char,
923 +             alias: b"bind\0" as *const u8 as *const libc::c_char,
924 +             args: {
925 +                 let mut init = C2RustUnnamed_31 {
926 +                     template: b"cnrT:\0" as *const u8 as *const libc::c_char,
927 +                     lower: 2 as libc::c_int,
928 +                     upper: -(1 as libc::c_int),
929 +                 };
930 +                 init
931 +             },
932 +             usage: b"[-cnr] [-T key-table] key command [arguments]\0" as *const u8
933 +                 as *const libc::c_char,
934 +             source: cmd_entry_flag {
935 +                 flag: 0,
936 +                 type_0: CMD_FIND_PANE,
937 +                 flags: 0,
938 +             },
939 +             target: cmd_entry_flag {
940 +                 flag: 0,
941 +                 type_0: CMD_FIND_PANE,
942 +                 flags: 0,
943 +             },
944 +             flags: 0x4 as libc::c_int,
945 +             exec: Some(
946 +                 cmd_bind_key_exec
947 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
948 +             ),
949 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_bind_key.rs:929:17
    |
924 | /                 let mut init = C2RustUnnamed_31 {
925 | |                     template: b"cnrT:\0" as *const u8 as *const libc::c_char,
926 | |                     lower: 2 as libc::c_int,
927 | |                     upper: -(1 as libc::c_int),
928 | |                 };
    | |__________________- unnecessary `let` binding
929 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
924 ~                 
925 ~                 C2RustUnnamed_31 {
926 +                     template: b"cnrT:\0" as *const u8 as *const libc::c_char,
927 +                     lower: 2 as libc::c_int,
928 +                     upper: -(1 as libc::c_int),
929 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_bind_key.rs:992:5
    |
992 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_bind_key.rs:957:40
    |
957 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_bind_key.rs:958:38
    |
958 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_bind_key.rs:960:46
    |
960 |     let mut tablename: *const libc::c_char = 0 as *const libc::c_char;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_bind_key.rs:982:9
    |
982 |         0 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_break_pane.rs:981:9
    |
946 | /         let mut init = cmd_entry {
947 | |             name: b"break-pane\0" as *const u8 as *const libc::c_char,
948 | |             alias: b"breakp\0" as *const u8 as *const libc::c_char,
949 | |             args: {
...   |
979 | |             ),
980 | |         };
    | |__________- unnecessary `let` binding
981 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
946 ~         
947 ~         cmd_entry {
948 +             name: b"break-pane\0" as *const u8 as *const libc::c_char,
949 +             alias: b"breakp\0" as *const u8 as *const libc::c_char,
950 +             args: {
951 +                 let mut init = C2RustUnnamed_31 {
952 +                     template: b"dPF:n:s:t:\0" as *const u8 as *const libc::c_char,
953 +                     lower: 0 as libc::c_int,
954 +                     upper: 0 as libc::c_int,
955 +                 };
956 +                 init
957 +             },
958 +             usage: b"[-dP] [-F format] [-n window-name] [-s src-pane] [-t dst-window]\0"
959 +                 as *const u8 as *const libc::c_char,
960 +             source: {
961 +                 let mut init = cmd_entry_flag {
962 +                     flag: 's' as i32 as libc::c_char,
963 +                     type_0: CMD_FIND_PANE,
964 +                     flags: 0 as libc::c_int,
965 +                 };
966 +                 init
967 +             },
968 +             target: {
969 +                 let mut init = cmd_entry_flag {
970 +                     flag: 't' as i32 as libc::c_char,
971 +                     type_0: CMD_FIND_WINDOW,
972 +                     flags: 0x4 as libc::c_int,
973 +                 };
974 +                 init
975 +             },
976 +             flags: 0 as libc::c_int,
977 +             exec: Some(
978 +                 cmd_break_pane_exec
979 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
980 +             ),
981 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_break_pane.rs:955:17
    |
950 | /                 let mut init = C2RustUnnamed_31 {
951 | |                     template: b"dPF:n:s:t:\0" as *const u8 as *const libc::c_char,
952 | |                     lower: 0 as libc::c_int,
953 | |                     upper: 0 as libc::c_int,
954 | |                 };
    | |__________________- unnecessary `let` binding
955 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
950 ~                 
951 ~                 C2RustUnnamed_31 {
952 +                     template: b"dPF:n:s:t:\0" as *const u8 as *const libc::c_char,
953 +                     lower: 0 as libc::c_int,
954 +                     upper: 0 as libc::c_int,
955 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_break_pane.rs:965:17
    |
960 | /                 let mut init = cmd_entry_flag {
961 | |                     flag: 's' as i32 as libc::c_char,
962 | |                     type_0: CMD_FIND_PANE,
963 | |                     flags: 0 as libc::c_int,
964 | |                 };
    | |__________________- unnecessary `let` binding
965 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
960 ~                 
961 ~                 cmd_entry_flag {
962 +                     flag: 's' as i32 as libc::c_char,
963 +                     type_0: CMD_FIND_PANE,
964 +                     flags: 0 as libc::c_int,
965 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_break_pane.rs:973:17
    |
968 | /                 let mut init = cmd_entry_flag {
969 | |                     flag: 't' as i32 as libc::c_char,
970 | |                     type_0: CMD_FIND_WINDOW,
971 | |                     flags: 0x4 as libc::c_int,
972 | |                 };
    | |__________________- unnecessary `let` binding
973 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
968 ~                 
969 ~                 cmd_entry_flag {
970 +                     flag: 't' as i32 as libc::c_char,
971 +                     type_0: CMD_FIND_WINDOW,
972 +                     flags: 0x4 as libc::c_int,
973 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_break_pane.rs:1086:5
     |
1086 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_break_pane.rs:992:9
    |
992 |         0 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_break_pane.rs:1000:39
     |
1000 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_break_pane.rs:1001:40
     |
1001 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_break_pane.rs:1003:45
     |
1003 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_break_pane.rs:1004:37
     |
1004 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_capture_pane.rs:991:9
    |
959 | /         let mut init = cmd_entry {
960 | |             name: b"capture-pane\0" as *const u8 as *const libc::c_char,
961 | |             alias: b"capturep\0" as *const u8 as *const libc::c_char,
962 | |             args: {
...   |
989 | |             ),
990 | |         };
    | |__________- unnecessary `let` binding
991 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
959 ~         
960 ~         cmd_entry {
961 +             name: b"capture-pane\0" as *const u8 as *const libc::c_char,
962 +             alias: b"capturep\0" as *const u8 as *const libc::c_char,
963 +             args: {
964 +                 let mut init = C2RustUnnamed_31 {
965 +                     template: b"ab:CeE:JpPqS:t:\0" as *const u8 as *const libc::c_char,
966 +                     lower: 0 as libc::c_int,
967 +                     upper: 0 as libc::c_int,
968 +                 };
969 +                 init
970 +             },
971 +             usage: b"[-aCeJpPq] [-b buffer-name] [-E end-line] [-S start-line][-t target-pane]\0"
972 +                 as *const u8 as *const libc::c_char,
973 +             source: cmd_entry_flag {
974 +                 flag: 0,
975 +                 type_0: CMD_FIND_PANE,
976 +                 flags: 0,
977 +             },
978 +             target: {
979 +                 let mut init = cmd_entry_flag {
980 +                     flag: 't' as i32 as libc::c_char,
981 +                     type_0: CMD_FIND_PANE,
982 +                     flags: 0 as libc::c_int,
983 +                 };
984 +                 init
985 +             },
986 +             flags: 0x4 as libc::c_int,
987 +             exec: Some(
988 +                 cmd_capture_pane_exec
989 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
990 +             ),
991 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_capture_pane.rs:968:17
    |
963 | /                 let mut init = C2RustUnnamed_31 {
964 | |                     template: b"ab:CeE:JpPqS:t:\0" as *const u8 as *const libc::c_char,
965 | |                     lower: 0 as libc::c_int,
966 | |                     upper: 0 as libc::c_int,
967 | |                 };
    | |__________________- unnecessary `let` binding
968 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
963 ~                 
964 ~                 C2RustUnnamed_31 {
965 +                     template: b"ab:CeE:JpPqS:t:\0" as *const u8 as *const libc::c_char,
966 +                     lower: 0 as libc::c_int,
967 +                     upper: 0 as libc::c_int,
968 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_capture_pane.rs:983:17
    |
978 | /                 let mut init = cmd_entry_flag {
979 | |                     flag: 't' as i32 as libc::c_char,
980 | |                     type_0: CMD_FIND_PANE,
981 | |                     flags: 0 as libc::c_int,
982 | |                 };
    | |__________________- unnecessary `let` binding
983 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
978 ~                 
979 ~                 cmd_entry_flag {
980 +                     flag: 't' as i32 as libc::c_char,
981 +                     type_0: CMD_FIND_PANE,
982 +                     flags: 0 as libc::c_int,
983 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_capture_pane.rs:1028:9
     |
997  | /         let mut init = cmd_entry {
998  | |             name: b"clear-history\0" as *const u8 as *const libc::c_char,
999  | |             alias: b"clearhist\0" as *const u8 as *const libc::c_char,
1000 | |             args: {
...    |
1026 | |             ),
1027 | |         };
     | |__________- unnecessary `let` binding
1028 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
997  ~         
998  ~         cmd_entry {
999  +             name: b"clear-history\0" as *const u8 as *const libc::c_char,
1000 +             alias: b"clearhist\0" as *const u8 as *const libc::c_char,
1001 +             args: {
1002 +                 let mut init = C2RustUnnamed_31 {
1003 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1004 +                     lower: 0 as libc::c_int,
1005 +                     upper: 0 as libc::c_int,
1006 +                 };
1007 +                 init
1008 +             },
1009 +             usage: b"[-t target-pane]\0" as *const u8 as *const libc::c_char,
1010 +             source: cmd_entry_flag {
1011 +                 flag: 0,
1012 +                 type_0: CMD_FIND_PANE,
1013 +                 flags: 0,
1014 +             },
1015 +             target: {
1016 +                 let mut init = cmd_entry_flag {
1017 +                     flag: 't' as i32 as libc::c_char,
1018 +                     type_0: CMD_FIND_PANE,
1019 +                     flags: 0 as libc::c_int,
1020 +                 };
1021 +                 init
1022 +             },
1023 +             flags: 0x4 as libc::c_int,
1024 +             exec: Some(
1025 +                 cmd_capture_pane_exec
1026 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1027 +             ),
1028 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_capture_pane.rs:1006:17
     |
1001 | /                 let mut init = C2RustUnnamed_31 {
1002 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
1003 | |                     lower: 0 as libc::c_int,
1004 | |                     upper: 0 as libc::c_int,
1005 | |                 };
     | |__________________- unnecessary `let` binding
1006 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1001 ~                 
1002 ~                 C2RustUnnamed_31 {
1003 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1004 +                     lower: 0 as libc::c_int,
1005 +                     upper: 0 as libc::c_int,
1006 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_capture_pane.rs:1020:17
     |
1015 | /                 let mut init = cmd_entry_flag {
1016 | |                     flag: 't' as i32 as libc::c_char,
1017 | |                     type_0: CMD_FIND_PANE,
1018 | |                     flags: 0 as libc::c_int,
1019 | |                 };
     | |__________________- unnecessary `let` binding
1020 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1015 ~                 
1016 ~                 cmd_entry_flag {
1017 +                     flag: 't' as i32 as libc::c_char,
1018 +                     type_0: CMD_FIND_PANE,
1019 +                     flags: 0 as libc::c_int,
1020 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_capture_pane.rs:1047:5
     |
1047 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_capture_pane.rs:1095:5
     |
1095 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1054:38
     |
1054 |     let mut pending: *mut evbuffer = 0 as *mut evbuffer;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<evbuffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1055:38
     |
1055 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1056:39
     |
1056 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_capture_pane.rs:1090:13
     |
1090 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_capture_pane.rs:1236:5
     |
1236 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1103:29
     |
1103 |     let mut gd: *mut grid = 0 as *mut grid;
     |                             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_capture_pane.rs:1104:36
     |
1104 |     let mut gl: *const grid_line = 0 as *const grid_line;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1105:34
     |
1105 |     let mut gc: *mut grid_cell = 0 as *mut grid_cell;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1115:40
     |
1115 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1116:38
     |
1116 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1117:39
     |
1117 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_capture_pane.rs:1118:42
     |
1118 |     let mut Sflag: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_capture_pane.rs:1119:42
     |
1119 |     let mut Eflag: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1130:24
     |
1130 |                 return 0 as *mut libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1211:11
     |
1211 |     buf = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_capture_pane.rs:1234:9
     |
1234 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_capture_pane.rs:1300:5
     |
1300 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1243:30
     |
1243 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1245:38
     |
1245 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_capture_pane.rs:1246:40
     |
1246 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_capture_pane.rs:1247:44
     |
1247 |     let mut bufname: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_capture_pane.rs:1289:19
     |
1289 |         bufname = 0 as *const libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:946:9
    |
914 | /         let mut init = cmd_entry {
915 | |             name: b"choose-tree\0" as *const u8 as *const libc::c_char,
916 | |             alias: 0 as *const libc::c_char,
917 | |             args: {
...   |
944 | |             ),
945 | |         };
    | |__________- unnecessary `let` binding
946 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
914 ~         
915 ~         cmd_entry {
916 +             name: b"choose-tree\0" as *const u8 as *const libc::c_char,
917 +             alias: 0 as *const libc::c_char,
918 +             args: {
919 +                 let mut init = C2RustUnnamed_31 {
920 +                     template: b"F:Gf:NO:st:wZ\0" as *const u8 as *const libc::c_char,
921 +                     lower: 0 as libc::c_int,
922 +                     upper: 1 as libc::c_int,
923 +                 };
924 +                 init
925 +             },
926 +             usage: b"[-GNsw] [-F format] [-f filter] [-O sort-order] [-t target-pane]\0"
927 +                 as *const u8 as *const libc::c_char,
928 +             source: cmd_entry_flag {
929 +                 flag: 0,
930 +                 type_0: CMD_FIND_PANE,
931 +                 flags: 0,
932 +             },
933 +             target: {
934 +                 let mut init = cmd_entry_flag {
935 +                     flag: 't' as i32 as libc::c_char,
936 +                     type_0: CMD_FIND_PANE,
937 +                     flags: 0 as libc::c_int,
938 +                 };
939 +                 init
940 +             },
941 +             flags: 0 as libc::c_int,
942 +             exec: Some(
943 +                 cmd_choose_tree_exec
944 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
945 +             ),
946 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:923:17
    |
918 | /                 let mut init = C2RustUnnamed_31 {
919 | |                     template: b"F:Gf:NO:st:wZ\0" as *const u8 as *const libc::c_char,
920 | |                     lower: 0 as libc::c_int,
921 | |                     upper: 1 as libc::c_int,
922 | |                 };
    | |__________________- unnecessary `let` binding
923 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
918 ~                 
919 ~                 C2RustUnnamed_31 {
920 +                     template: b"F:Gf:NO:st:wZ\0" as *const u8 as *const libc::c_char,
921 +                     lower: 0 as libc::c_int,
922 +                     upper: 1 as libc::c_int,
923 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:938:17
    |
933 | /                 let mut init = cmd_entry_flag {
934 | |                     flag: 't' as i32 as libc::c_char,
935 | |                     type_0: CMD_FIND_PANE,
936 | |                     flags: 0 as libc::c_int,
937 | |                 };
    | |__________________- unnecessary `let` binding
938 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
933 ~                 
934 ~                 cmd_entry_flag {
935 +                     flag: 't' as i32 as libc::c_char,
936 +                     type_0: CMD_FIND_PANE,
937 +                     flags: 0 as libc::c_int,
938 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:984:9
    |
952 | /         let mut init = cmd_entry {
953 | |             name: b"choose-client\0" as *const u8 as *const libc::c_char,
954 | |             alias: 0 as *const libc::c_char,
955 | |             args: {
...   |
982 | |             ),
983 | |         };
    | |__________- unnecessary `let` binding
984 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
952 ~         
953 ~         cmd_entry {
954 +             name: b"choose-client\0" as *const u8 as *const libc::c_char,
955 +             alias: 0 as *const libc::c_char,
956 +             args: {
957 +                 let mut init = C2RustUnnamed_31 {
958 +                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
959 +                     lower: 0 as libc::c_int,
960 +                     upper: 1 as libc::c_int,
961 +                 };
962 +                 init
963 +             },
964 +             usage: b"[-N] [-F format] [-f filter] [-O sort-order] [-t target-pane]\0"
965 +                 as *const u8 as *const libc::c_char,
966 +             source: cmd_entry_flag {
967 +                 flag: 0,
968 +                 type_0: CMD_FIND_PANE,
969 +                 flags: 0,
970 +             },
971 +             target: {
972 +                 let mut init = cmd_entry_flag {
973 +                     flag: 't' as i32 as libc::c_char,
974 +                     type_0: CMD_FIND_PANE,
975 +                     flags: 0 as libc::c_int,
976 +                 };
977 +                 init
978 +             },
979 +             flags: 0 as libc::c_int,
980 +             exec: Some(
981 +                 cmd_choose_tree_exec
982 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
983 +             ),
984 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:961:17
    |
956 | /                 let mut init = C2RustUnnamed_31 {
957 | |                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
958 | |                     lower: 0 as libc::c_int,
959 | |                     upper: 1 as libc::c_int,
960 | |                 };
    | |__________________- unnecessary `let` binding
961 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
956 ~                 
957 ~                 C2RustUnnamed_31 {
958 +                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
959 +                     lower: 0 as libc::c_int,
960 +                     upper: 1 as libc::c_int,
961 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:976:17
    |
971 | /                 let mut init = cmd_entry_flag {
972 | |                     flag: 't' as i32 as libc::c_char,
973 | |                     type_0: CMD_FIND_PANE,
974 | |                     flags: 0 as libc::c_int,
975 | |                 };
    | |__________________- unnecessary `let` binding
976 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
971 ~                 
972 ~                 cmd_entry_flag {
973 +                     flag: 't' as i32 as libc::c_char,
974 +                     type_0: CMD_FIND_PANE,
975 +                     flags: 0 as libc::c_int,
976 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_choose_tree.rs:1022:9
     |
990  | /         let mut init = cmd_entry {
991  | |             name: b"choose-buffer\0" as *const u8 as *const libc::c_char,
992  | |             alias: 0 as *const libc::c_char,
993  | |             args: {
...    |
1020 | |             ),
1021 | |         };
     | |__________- unnecessary `let` binding
1022 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
990  ~         
991  ~         cmd_entry {
992  +             name: b"choose-buffer\0" as *const u8 as *const libc::c_char,
993  +             alias: 0 as *const libc::c_char,
994  +             args: {
995  +                 let mut init = C2RustUnnamed_31 {
996  +                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
997  +                     lower: 0 as libc::c_int,
998  +                     upper: 1 as libc::c_int,
999  +                 };
1000 +                 init
1001 +             },
1002 +             usage: b"[-N] [-F format] [-f filter] [-O sort-order] [-t target-pane]\0"
1003 +                 as *const u8 as *const libc::c_char,
1004 +             source: cmd_entry_flag {
1005 +                 flag: 0,
1006 +                 type_0: CMD_FIND_PANE,
1007 +                 flags: 0,
1008 +             },
1009 +             target: {
1010 +                 let mut init = cmd_entry_flag {
1011 +                     flag: 't' as i32 as libc::c_char,
1012 +                     type_0: CMD_FIND_PANE,
1013 +                     flags: 0 as libc::c_int,
1014 +                 };
1015 +                 init
1016 +             },
1017 +             flags: 0 as libc::c_int,
1018 +             exec: Some(
1019 +                 cmd_choose_tree_exec
1020 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1021 +             ),
1022 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_choose_tree.rs:999:17
    |
994 | /                 let mut init = C2RustUnnamed_31 {
995 | |                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
996 | |                     lower: 0 as libc::c_int,
997 | |                     upper: 1 as libc::c_int,
998 | |                 };
    | |__________________- unnecessary `let` binding
999 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
994 ~                 
995 ~                 C2RustUnnamed_31 {
996 +                     template: b"F:f:NO:t:Z\0" as *const u8 as *const libc::c_char,
997 +                     lower: 0 as libc::c_int,
998 +                     upper: 1 as libc::c_int,
999 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_choose_tree.rs:1014:17
     |
1009 | /                 let mut init = cmd_entry_flag {
1010 | |                     flag: 't' as i32 as libc::c_char,
1011 | |                     type_0: CMD_FIND_PANE,
1012 | |                     flags: 0 as libc::c_int,
1013 | |                 };
     | |__________________- unnecessary `let` binding
1014 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1009 ~                 
1010 ~                 cmd_entry_flag {
1011 +                     flag: 't' as i32 as libc::c_char,
1012 +                     type_0: CMD_FIND_PANE,
1013 +                     flags: 0 as libc::c_int,
1014 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_choose_tree.rs:1046:5
     |
1046 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_choose_tree.rs:1031:40
     |
1031 |     let mut mode: *const window_mode = 0 as *const window_mode;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_mode>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_choose_tree.rs:1033:27
     |
1033 |         if (paste_get_top(0 as *mut *const libc::c_char)).is_null() {
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_command_prompt.rs:1001:9
     |
972  | /         let mut init = cmd_entry {
973  | |             name: b"command-prompt\0" as *const u8 as *const libc::c_char,
974  | |             alias: 0 as *const libc::c_char,
975  | |             args: {
...    |
999  | |             ),
1000 | |         };
     | |__________- unnecessary `let` binding
1001 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
972  ~         
973  ~         cmd_entry {
974  +             name: b"command-prompt\0" as *const u8 as *const libc::c_char,
975  +             alias: 0 as *const libc::c_char,
976  +             args: {
977  +                 let mut init = C2RustUnnamed_31 {
978  +                     template: b"1iI:Np:t:\0" as *const u8 as *const libc::c_char,
979  +                     lower: 0 as libc::c_int,
980  +                     upper: 1 as libc::c_int,
981  +                 };
982  +                 init
983  +             },
984  +             usage: b"[-1Ni] [-I inputs] [-p prompts] [-t target-client] [template]\0"
985  +                 as *const u8 as *const libc::c_char,
986  +             source: cmd_entry_flag {
987  +                 flag: 0,
988  +                 type_0: CMD_FIND_PANE,
989  +                 flags: 0,
990  +             },
991  +             target: cmd_entry_flag {
992  +                 flag: 0,
993  +                 type_0: CMD_FIND_PANE,
994  +                 flags: 0,
995  +             },
996  +             flags: 0 as libc::c_int,
997  +             exec: Some(
998  +                 cmd_command_prompt_exec
999  +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1000 +             ),
1001 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_command_prompt.rs:981:17
    |
976 | /                 let mut init = C2RustUnnamed_31 {
977 | |                     template: b"1iI:Np:t:\0" as *const u8 as *const libc::c_char,
978 | |                     lower: 0 as libc::c_int,
979 | |                     upper: 1 as libc::c_int,
980 | |                 };
    | |__________________- unnecessary `let` binding
981 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
976 ~                 
977 ~                 C2RustUnnamed_31 {
978 +                     template: b"1iI:Np:t:\0" as *const u8 as *const libc::c_char,
979 +                     lower: 0 as libc::c_int,
980 +                     upper: 1 as libc::c_int,
981 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_command_prompt.rs:1098:5
     |
1098 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_command_prompt.rs:1009:43
     |
1009 |     let mut inputs: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_command_prompt.rs:1010:44
     |
1010 |     let mut prompts: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1011:52
     |
1011 |     let mut cdata: *mut cmd_command_prompt_cdata = 0 as *mut cmd_command_prompt_cdata;
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_command_prompt_cdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1012:30
     |
1012 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1013:41
     |
1013 |     let mut prompt: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1014:38
     |
1014 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1015:40
     |
1015 |     let mut input: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1028:23
     |
1028 |     (*cdata).inputs = 0 as *mut libc::c_char;
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1029:27
     |
1029 |     (*cdata).next_input = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1030:24
     |
1030 |     (*cdata).prompts = 0 as *mut libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1031:28
     |
1031 |     (*cdata).next_prompt = 0 as *mut libc::c_char;
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1032:25
     |
1032 |     (*cdata).template = 0 as *mut libc::c_char;
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_command_prompt.rs:1107:5
     |
1107 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_command_prompt.rs:1208:5
     |
1208 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1116:38
     |
1116 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1117:40
     |
1117 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1118:40
     |
1118 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1119:47
     |
1119 |     let mut new_template: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1120:41
     |
1120 |     let mut prompt: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1121:38
     |
1121 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1122:40
     |
1122 |     let mut input: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_command_prompt.rs:1155:9
     |
1155 |         (*cdata).idx;
     |         ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/cmd_command_prompt.rs:1160:9
     |
1160 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1178:24
     |
1178 |             new_item = 0 as *mut cmdq_item;
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1183:13
     |
1183 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_command_prompt.rs:1184:13
     |
1184 |             0 as *mut mouse_event,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_confirm_before.rs:984:9
    |
955 | /         let mut init = cmd_entry {
956 | |             name: b"confirm-before\0" as *const u8 as *const libc::c_char,
957 | |             alias: b"confirm\0" as *const u8 as *const libc::c_char,
958 | |             args: {
...   |
982 | |             ),
983 | |         };
    | |__________- unnecessary `let` binding
984 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
955 ~         
956 ~         cmd_entry {
957 +             name: b"confirm-before\0" as *const u8 as *const libc::c_char,
958 +             alias: b"confirm\0" as *const u8 as *const libc::c_char,
959 +             args: {
960 +                 let mut init = C2RustUnnamed_31 {
961 +                     template: b"p:t:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 1 as libc::c_int,
963 +                     upper: 1 as libc::c_int,
964 +                 };
965 +                 init
966 +             },
967 +             usage: b"[-p prompt] [-t target-client] command\0" as *const u8
968 +                 as *const libc::c_char,
969 +             source: cmd_entry_flag {
970 +                 flag: 0,
971 +                 type_0: CMD_FIND_PANE,
972 +                 flags: 0,
973 +             },
974 +             target: cmd_entry_flag {
975 +                 flag: 0,
976 +                 type_0: CMD_FIND_PANE,
977 +                 flags: 0,
978 +             },
979 +             flags: 0 as libc::c_int,
980 +             exec: Some(
981 +                 cmd_confirm_before_exec
982 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
983 +             ),
984 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_confirm_before.rs:964:17
    |
959 | /                 let mut init = C2RustUnnamed_31 {
960 | |                     template: b"p:t:\0" as *const u8 as *const libc::c_char,
961 | |                     lower: 1 as libc::c_int,
962 | |                     upper: 1 as libc::c_int,
963 | |                 };
    | |__________________- unnecessary `let` binding
964 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
959 ~                 
960 ~                 C2RustUnnamed_31 {
961 +                     template: b"p:t:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 1 as libc::c_int,
963 +                     upper: 1 as libc::c_int,
964 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_confirm_before.rs:1042:5
     |
1042 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:992:51
    |
992 |     let mut cdata: *mut cmd_confirm_before_data = 0 as *mut cmd_confirm_before_data;
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_confirm_before_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:993:30
    |
993 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:994:38
    |
994 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:995:39
    |
995 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:996:45
    |
996 |     let mut new_prompt: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_confirm_before.rs:997:38
    |
997 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_confirm_before.rs:998:43
    |
998 |     let mut prompt: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_confirm_before.rs:1027:9
     |
1027 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_confirm_before.rs:1051:5
     |
1051 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_confirm_before.rs:1109:5
     |
1109 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1060:38
     |
1060 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1061:40
     |
1061 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1062:40
     |
1062 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_confirm_before.rs:1077:9
     |
1077 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1095:24
     |
1095 |             new_item = 0 as *mut cmdq_item;
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1100:13
     |
1100 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_confirm_before.rs:1101:13
     |
1101 |             0 as *mut mouse_event,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:950:9
    |
919 | /         let mut init = cmd_entry {
920 | |             name: b"copy-mode\0" as *const u8 as *const libc::c_char,
921 | |             alias: 0 as *const libc::c_char,
922 | |             args: {
...   |
948 | |             ),
949 | |         };
    | |__________- unnecessary `let` binding
950 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
919 ~         
920 ~         cmd_entry {
921 +             name: b"copy-mode\0" as *const u8 as *const libc::c_char,
922 +             alias: 0 as *const libc::c_char,
923 +             args: {
924 +                 let mut init = C2RustUnnamed_31 {
925 +                     template: b"Met:u\0" as *const u8 as *const libc::c_char,
926 +                     lower: 0 as libc::c_int,
927 +                     upper: 0 as libc::c_int,
928 +                 };
929 +                 init
930 +             },
931 +             usage: b"[-Mu] [-t target-pane]\0" as *const u8 as *const libc::c_char,
932 +             source: cmd_entry_flag {
933 +                 flag: 0,
934 +                 type_0: CMD_FIND_PANE,
935 +                 flags: 0,
936 +             },
937 +             target: {
938 +                 let mut init = cmd_entry_flag {
939 +                     flag: 't' as i32 as libc::c_char,
940 +                     type_0: CMD_FIND_PANE,
941 +                     flags: 0 as libc::c_int,
942 +                 };
943 +                 init
944 +             },
945 +             flags: 0x4 as libc::c_int,
946 +             exec: Some(
947 +                 cmd_copy_mode_exec
948 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
949 +             ),
950 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:928:17
    |
923 | /                 let mut init = C2RustUnnamed_31 {
924 | |                     template: b"Met:u\0" as *const u8 as *const libc::c_char,
925 | |                     lower: 0 as libc::c_int,
926 | |                     upper: 0 as libc::c_int,
927 | |                 };
    | |__________________- unnecessary `let` binding
928 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
923 ~                 
924 ~                 C2RustUnnamed_31 {
925 +                     template: b"Met:u\0" as *const u8 as *const libc::c_char,
926 +                     lower: 0 as libc::c_int,
927 +                     upper: 0 as libc::c_int,
928 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:942:17
    |
937 | /                 let mut init = cmd_entry_flag {
938 | |                     flag: 't' as i32 as libc::c_char,
939 | |                     type_0: CMD_FIND_PANE,
940 | |                     flags: 0 as libc::c_int,
941 | |                 };
    | |__________________- unnecessary `let` binding
942 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
937 ~                 
938 ~                 cmd_entry_flag {
939 +                     flag: 't' as i32 as libc::c_char,
940 +                     type_0: CMD_FIND_PANE,
941 +                     flags: 0 as libc::c_int,
942 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:987:9
    |
956 | /         let mut init = cmd_entry {
957 | |             name: b"clock-mode\0" as *const u8 as *const libc::c_char,
958 | |             alias: 0 as *const libc::c_char,
959 | |             args: {
...   |
985 | |             ),
986 | |         };
    | |__________- unnecessary `let` binding
987 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
956 ~         
957 ~         cmd_entry {
958 +             name: b"clock-mode\0" as *const u8 as *const libc::c_char,
959 +             alias: 0 as *const libc::c_char,
960 +             args: {
961 +                 let mut init = C2RustUnnamed_31 {
962 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
963 +                     lower: 0 as libc::c_int,
964 +                     upper: 0 as libc::c_int,
965 +                 };
966 +                 init
967 +             },
968 +             usage: b"[-t target-pane]\0" as *const u8 as *const libc::c_char,
969 +             source: cmd_entry_flag {
970 +                 flag: 0,
971 +                 type_0: CMD_FIND_PANE,
972 +                 flags: 0,
973 +             },
974 +             target: {
975 +                 let mut init = cmd_entry_flag {
976 +                     flag: 't' as i32 as libc::c_char,
977 +                     type_0: CMD_FIND_PANE,
978 +                     flags: 0 as libc::c_int,
979 +                 };
980 +                 init
981 +             },
982 +             flags: 0x4 as libc::c_int,
983 +             exec: Some(
984 +                 cmd_copy_mode_exec
985 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
986 +             ),
987 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:965:17
    |
960 | /                 let mut init = C2RustUnnamed_31 {
961 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
962 | |                     lower: 0 as libc::c_int,
963 | |                     upper: 0 as libc::c_int,
964 | |                 };
    | |__________________- unnecessary `let` binding
965 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
960 ~                 
961 ~                 C2RustUnnamed_31 {
962 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
963 +                     lower: 0 as libc::c_int,
964 +                     upper: 0 as libc::c_int,
965 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_copy_mode.rs:979:17
    |
974 | /                 let mut init = cmd_entry_flag {
975 | |                     flag: 't' as i32 as libc::c_char,
976 | |                     type_0: CMD_FIND_PANE,
977 | |                     flags: 0 as libc::c_int,
978 | |                 };
    | |__________________- unnecessary `let` binding
979 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
974 ~                 
975 ~                 cmd_entry_flag {
976 +                     flag: 't' as i32 as libc::c_char,
977 +                     type_0: CMD_FIND_PANE,
978 +                     flags: 0 as libc::c_int,
979 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_copy_mode.rs:1043:5
     |
1043 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_copy_mode.rs:997:31
    |
997 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_copy_mode.rs:1001:59
     |
1001 |         wp = cmd_mouse_pane(&mut (*shared).mouse, &mut s, 0 as *mut *mut winlink);
     |                                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_copy_mode.rs:1013:13
     |
1013 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_copy_mode.rs:1014:13
     |
1014 |             0 as *mut args,
     |             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_copy_mode.rs:1022:13
     |
1022 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_copy_mode.rs:1023:13
     |
1023 |             0 as *mut args,
     |             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_detach_client.rs:980:9
    |
948 | /         let mut init = cmd_entry {
949 | |             name: b"detach-client\0" as *const u8 as *const libc::c_char,
950 | |             alias: b"detach\0" as *const u8 as *const libc::c_char,
951 | |             args: {
...   |
978 | |             ),
979 | |         };
    | |__________- unnecessary `let` binding
980 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
948 ~         
949 ~         cmd_entry {
950 +             name: b"detach-client\0" as *const u8 as *const libc::c_char,
951 +             alias: b"detach\0" as *const u8 as *const libc::c_char,
952 +             args: {
953 +                 let mut init = C2RustUnnamed_31 {
954 +                     template: b"aE:s:t:P\0" as *const u8 as *const libc::c_char,
955 +                     lower: 0 as libc::c_int,
956 +                     upper: 0 as libc::c_int,
957 +                 };
958 +                 init
959 +             },
960 +             usage: b"[-aP] [-E shell-command] [-s target-session] [-t target-client]\0"
961 +                 as *const u8 as *const libc::c_char,
962 +             source: {
963 +                 let mut init = cmd_entry_flag {
964 +                     flag: 's' as i32 as libc::c_char,
965 +                     type_0: CMD_FIND_SESSION,
966 +                     flags: 0x40 as libc::c_int,
967 +                 };
968 +                 init
969 +             },
970 +             target: cmd_entry_flag {
971 +                 flag: 0,
972 +                 type_0: CMD_FIND_PANE,
973 +                 flags: 0,
974 +             },
975 +             flags: 0x2 as libc::c_int,
976 +             exec: Some(
977 +                 cmd_detach_client_exec
978 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
979 +             ),
980 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_detach_client.rs:957:17
    |
952 | /                 let mut init = C2RustUnnamed_31 {
953 | |                     template: b"aE:s:t:P\0" as *const u8 as *const libc::c_char,
954 | |                     lower: 0 as libc::c_int,
955 | |                     upper: 0 as libc::c_int,
956 | |                 };
    | |__________________- unnecessary `let` binding
957 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
952 ~                 
953 ~                 C2RustUnnamed_31 {
954 +                     template: b"aE:s:t:P\0" as *const u8 as *const libc::c_char,
955 +                     lower: 0 as libc::c_int,
956 +                     upper: 0 as libc::c_int,
957 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_detach_client.rs:967:17
    |
962 | /                 let mut init = cmd_entry_flag {
963 | |                     flag: 's' as i32 as libc::c_char,
964 | |                     type_0: CMD_FIND_SESSION,
965 | |                     flags: 0x40 as libc::c_int,
966 | |                 };
    | |__________________- unnecessary `let` binding
967 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
962 ~                 
963 ~                 cmd_entry_flag {
964 +                     flag: 's' as i32 as libc::c_char,
965 +                     type_0: CMD_FIND_SESSION,
966 +                     flags: 0x40 as libc::c_int,
967 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_detach_client.rs:1014:9
     |
986  | /         let mut init = cmd_entry {
987  | |             name: b"suspend-client\0" as *const u8 as *const libc::c_char,
988  | |             alias: b"suspendc\0" as *const u8 as *const libc::c_char,
989  | |             args: {
...    |
1012 | |             ),
1013 | |         };
     | |__________- unnecessary `let` binding
1014 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
986  ~         
987  ~         cmd_entry {
988  +             name: b"suspend-client\0" as *const u8 as *const libc::c_char,
989  +             alias: b"suspendc\0" as *const u8 as *const libc::c_char,
990  +             args: {
991  +                 let mut init = C2RustUnnamed_31 {
992  +                     template: b"t:\0" as *const u8 as *const libc::c_char,
993  +                     lower: 0 as libc::c_int,
994  +                     upper: 0 as libc::c_int,
995  +                 };
996  +                 init
997  +             },
998  +             usage: b"[-t target-client]\0" as *const u8 as *const libc::c_char,
999  +             source: cmd_entry_flag {
1000 +                 flag: 0,
1001 +                 type_0: CMD_FIND_PANE,
1002 +                 flags: 0,
1003 +             },
1004 +             target: cmd_entry_flag {
1005 +                 flag: 0,
1006 +                 type_0: CMD_FIND_PANE,
1007 +                 flags: 0,
1008 +             },
1009 +             flags: 0 as libc::c_int,
1010 +             exec: Some(
1011 +                 cmd_detach_client_exec
1012 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1013 +             ),
1014 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_detach_client.rs:995:17
    |
990 | /                 let mut init = C2RustUnnamed_31 {
991 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
992 | |                     lower: 0 as libc::c_int,
993 | |                     upper: 0 as libc::c_int,
994 | |                 };
    | |__________________- unnecessary `let` binding
995 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
990 ~                 
991 ~                 C2RustUnnamed_31 {
992 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
993 +                     lower: 0 as libc::c_int,
994 +                     upper: 0 as libc::c_int,
995 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_detach_client.rs:1077:5
     |
1077 |     return CMD_RETURN_STOP;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_STOP`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_detach_client.rs:1022:30
     |
1022 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_detach_client.rs:1023:34
     |
1023 |     let mut cloop: *mut client = 0 as *mut client;
     |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_detach_client.rs:1024:31
     |
1024 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_display_message.rs:966:9
    |
934 | /         let mut init = cmd_entry {
935 | |             name: b"display-message\0" as *const u8 as *const libc::c_char,
936 | |             alias: b"display\0" as *const u8 as *const libc::c_char,
937 | |             args: {
...   |
964 | |             ),
965 | |         };
    | |__________- unnecessary `let` binding
966 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~         
935 ~         cmd_entry {
936 +             name: b"display-message\0" as *const u8 as *const libc::c_char,
937 +             alias: b"display\0" as *const u8 as *const libc::c_char,
938 +             args: {
939 +                 let mut init = C2RustUnnamed_31 {
940 +                     template: b"c:pt:F:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 1 as libc::c_int,
943 +                 };
944 +                 init
945 +             },
946 +             usage: b"[-p] [-c target-client] [-F format] [-t target-pane] [message]\0"
947 +                 as *const u8 as *const libc::c_char,
948 +             source: cmd_entry_flag {
949 +                 flag: 0,
950 +                 type_0: CMD_FIND_PANE,
951 +                 flags: 0,
952 +             },
953 +             target: {
954 +                 let mut init = cmd_entry_flag {
955 +                     flag: 't' as i32 as libc::c_char,
956 +                     type_0: CMD_FIND_PANE,
957 +                     flags: 0 as libc::c_int,
958 +                 };
959 +                 init
960 +             },
961 +             flags: 0x4 as libc::c_int,
962 +             exec: Some(
963 +                 cmd_display_message_exec
964 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
965 +             ),
966 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_display_message.rs:943:17
    |
938 | /                 let mut init = C2RustUnnamed_31 {
939 | |                     template: b"c:pt:F:\0" as *const u8 as *const libc::c_char,
940 | |                     lower: 0 as libc::c_int,
941 | |                     upper: 1 as libc::c_int,
942 | |                 };
    | |__________________- unnecessary `let` binding
943 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
938 ~                 
939 ~                 C2RustUnnamed_31 {
940 +                     template: b"c:pt:F:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 1 as libc::c_int,
943 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_display_message.rs:958:17
    |
953 | /                 let mut init = cmd_entry_flag {
954 | |                     flag: 't' as i32 as libc::c_char,
955 | |                     type_0: CMD_FIND_PANE,
956 | |                     flags: 0 as libc::c_int,
957 | |                 };
    | |__________________- unnecessary `let` binding
958 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
953 ~                 
954 ~                 cmd_entry_flag {
955 +                     flag: 't' as i32 as libc::c_char,
956 +                     type_0: CMD_FIND_PANE,
957 +                     flags: 0 as libc::c_int,
958 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_display_message.rs:1014:5
     |
1014 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_display_message.rs:974:30
    |
974 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_display_message.rs:975:37
    |
975 |     let mut target_c: *mut client = 0 as *mut client;
    |                                     ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_display_message.rs:979:45
    |
979 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_display_message.rs:980:38
    |
980 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_display_message.rs:981:36
    |
981 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_message.rs:1006:49
     |
1006 |     msg = format_expand_time(ft, template, time(0 as *mut time_t));
     |                                                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_display_panes.rs:979:9
    |
950 | /         let mut init = cmd_entry {
951 | |             name: b"display-panes\0" as *const u8 as *const libc::c_char,
952 | |             alias: b"displayp\0" as *const u8 as *const libc::c_char,
953 | |             args: {
...   |
977 | |             ),
978 | |         };
    | |__________- unnecessary `let` binding
979 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
950 ~         
951 ~         cmd_entry {
952 +             name: b"display-panes\0" as *const u8 as *const libc::c_char,
953 +             alias: b"displayp\0" as *const u8 as *const libc::c_char,
954 +             args: {
955 +                 let mut init = C2RustUnnamed_31 {
956 +                     template: b"d:t:\0" as *const u8 as *const libc::c_char,
957 +                     lower: 0 as libc::c_int,
958 +                     upper: 1 as libc::c_int,
959 +                 };
960 +                 init
961 +             },
962 +             usage: b"[-d duration] [-t target-client]\0" as *const u8
963 +                 as *const libc::c_char,
964 +             source: cmd_entry_flag {
965 +                 flag: 0,
966 +                 type_0: CMD_FIND_PANE,
967 +                 flags: 0,
968 +             },
969 +             target: cmd_entry_flag {
970 +                 flag: 0,
971 +                 type_0: CMD_FIND_PANE,
972 +                 flags: 0,
973 +             },
974 +             flags: 0x4 as libc::c_int,
975 +             exec: Some(
976 +                 cmd_display_panes_exec
977 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
978 +             ),
979 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_display_panes.rs:959:17
    |
954 | /                 let mut init = C2RustUnnamed_31 {
955 | |                     template: b"d:t:\0" as *const u8 as *const libc::c_char,
956 | |                     lower: 0 as libc::c_int,
957 | |                     upper: 1 as libc::c_int,
958 | |                 };
    | |__________________- unnecessary `let` binding
959 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
954 ~                 
955 ~                 C2RustUnnamed_31 {
956 +                     template: b"d:t:\0" as *const u8 as *const libc::c_char,
957 +                     lower: 0 as libc::c_int,
958 +                     upper: 1 as libc::c_int,
959 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_display_panes.rs:1037:5
     |
1037 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_display_panes.rs:987:30
    |
987 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_display_panes.rs:988:31
    |
988 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_display_panes.rs:990:40
    |
990 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_display_panes.rs:1046:5
     |
1046 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1052:38
     |
1052 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1053:40
     |
1053 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1054:43
     |
1054 |     let mut template: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1055:38
     |
1055 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1056:43
     |
1056 |     let mut expanded: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1057:40
     |
1057 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_display_panes.rs:1068:13
     |
1068 |             0 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1086:28
     |
1086 |                 new_item = 0 as *mut cmdq_item;
     |                            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1091:17
     |
1091 |                 0 as *mut cmd_find_state,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1092:17
     |
1092 |                 0 as *mut mouse_event,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_display_panes.rs:1104:35
     |
1104 |     (*c).identify_callback_data = 0 as *mut libc::c_void;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1135:5
     |
1135 |     return session_find_by_id(session);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_find_by_id(session)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1108:42
     |
1108 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1114:16
     |
1114 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1124:16
     |
1124 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1127:16
     |
1127 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1149:5
     |
1149 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1138:36
     |
1138 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1140:16
     |
1140 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1158:5
     |
1158 | /     return if (*c).activity_time.tv_sec == (*than).activity_time.tv_sec {
1159 | |         ((*c).activity_time.tv_usec > (*than).activity_time.tv_usec) as libc::c_int
1160 | |     } else {
1161 | |         ((*c).activity_time.tv_sec > (*than).activity_time.tv_sec) as libc::c_int
1162 | |     };
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1158 ~     if (*c).activity_time.tv_sec == (*than).activity_time.tv_sec {
1159 +         ((*c).activity_time.tv_usec > (*than).activity_time.tv_usec) as libc::c_int
1160 +     } else {
1161 +         ((*c).activity_time.tv_sec > (*than).activity_time.tv_sec) as libc::c_int
1162 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1165:1
     |
1165 | / pub unsafe extern "C" fn cmd_find_best_client(mut s: *mut session) -> *mut client {
1166 | |     let mut c_loop: *mut client = 0 as *mut client;
1167 | |     let mut c: *mut client = 0 as *mut client;
1168 | |     if (*s).flags & 0x1 as libc::c_int != 0 {
...    |
1183 | |     return c;
1184 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:1175:16
     |
1175 |             if !(!s.is_null() && (*c_loop).session != s) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `s.is_null() || (*c_loop).session == s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_find.rs:1183:5
     |
1183 |     return c;
     |     ^^^^^^^^^ help: remove `return`: `c`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1166:35
     |
1166 |     let mut c_loop: *mut client = 0 as *mut client;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1167:30
     |
1167 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1169:13
     |
1169 |         s = 0 as *mut session;
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1171:9
     |
1171 |     c = 0 as *mut client;
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1202:5
     |
1202 | /     return if (*s).activity_time.tv_sec == (*than).activity_time.tv_sec {
1203 | |         ((*s).activity_time.tv_usec > (*than).activity_time.tv_usec) as libc::c_int
1204 | |     } else {
1205 | |         ((*s).activity_time.tv_sec > (*than).activity_time.tv_sec) as libc::c_int
1206 | |     };
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1202 ~     if (*s).activity_time.tv_sec == (*than).activity_time.tv_sec {
1203 +         ((*s).activity_time.tv_usec > (*than).activity_time.tv_usec) as libc::c_int
1204 +     } else {
1205 +         ((*s).activity_time.tv_sec > (*than).activity_time.tv_sec) as libc::c_int
1206 +     }
     |

warning: unneeded `return` statement
    --> src/cmd_find.rs:1235:5
     |
1235 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1213:36
     |
1213 |     let mut s_loop: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1214:31
     |
1214 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1216:9
     |
1216 |     s = 0 as *mut session;
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_find.rs:1224:13
     |
1224 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:1246:12
     |
1246 |         if !(session_has(s, (*fs).w) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `session_has(s, (*fs).w) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:1259:8
     |
1259 |     if !(ssize == 0 as libc::c_int as u_int) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ssize != 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_find.rs:1267:5
     |
1267 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1240:40
     |
1240 |     let mut slist: *mut *mut session = 0 as *mut *mut session;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1242:31
     |
1242 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd_find.rs:1254:17
     |
1254 |             let ref mut fresh1 = *slist.offset(fresh0 as isize);
     |             ----^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh1 = &mut (*slist.offset(fresh0 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unneeded `return` statement
    --> src/cmd_find.rs:1293:5
     |
1293 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1272:32
     |
1272 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1273:37
     |
1273 |     let mut wl_loop: *mut winlink = 0 as *mut winlink;
     |                                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1274:10
     |
1274 |     wl = 0 as *mut winlink;
     |          ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1310:5
     |
1310 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/cmd_find.rs:1308:9
     |
1308 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_find.rs:1377:5
     |
1377 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1316:31
     |
1316 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1317:36
     |
1317 |     let mut s_loop: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1318:30
     |
1318 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1339:25
     |
1339 |     c = cmd_find_client(0 as *mut cmdq_item, session, 1 as libc::c_int);
     |                         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1347:9
     |
1347 |     s = 0 as *mut session;
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1362:9
     |
1362 |     s = 0 as *mut session;
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1412:5
     |
1412 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_find.rs:1587:5
     |
1587 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1418:32
     |
1418 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:1419:43
     |
1419 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1423:31
     |
1423 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1452:17
     |
1452 |                 0 as *mut *const libc::c_char,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1536:16
     |
1536 |     (*fs).wl = 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1555:16
     |
1555 |     (*fs).wl = 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1571:16
     |
1571 |     (*fs).wl = 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:1622:5
     |
1622 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_find.rs:1648:5
     |
1648 |     return cmd_find_get_pane_with_window(fs, pane);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_find_get_pane_with_window(fs, pane)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_find.rs:1755:5
     |
1755 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_find.rs:1654:43
     |
1654 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1656:36
     |
1656 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1724:17
     |
1724 |                 0 as *mut *const libc::c_char,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1758:1
     |
1758 | / pub unsafe extern "C" fn cmd_find_clear_state(
1759 | |     mut fs: *mut cmd_find_state,
1760 | |     mut flags: libc::c_int,
1761 | | ) {
...    |
1768 | |     (*fs).idx = -(1 as libc::c_int);
1769 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1771:1
     |
1771 | / pub unsafe extern "C" fn cmd_find_empty_state(
1772 | |     mut fs: *mut cmd_find_state,
1773 | | ) -> libc::c_int {
1774 | |     if ((*fs).s).is_null() && ((*fs).wl).is_null() && ((*fs).w).is_null()
...    |
1779 | |     return 0 as libc::c_int;
1780 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:1779:5
     |
1779 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1782:1
     |
1782 | / pub unsafe extern "C" fn cmd_find_valid_state(
1783 | |     mut fs: *mut cmd_find_state,
1784 | | ) -> libc::c_int {
1785 | |     let mut wl: *mut winlink = 0 as *mut winlink;
...    |
1807 | |     return window_has_pane((*fs).w, (*fs).wp);
1808 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:1807:5
     |
1807 |     return window_has_pane((*fs).w, (*fs).wp);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_has_pane((*fs).w, (*fs).wp)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:1785:32
     |
1785 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1810:1
     |
1810 | / pub unsafe extern "C" fn cmd_find_copy_state(
1811 | |     mut dst: *mut cmd_find_state,
1812 | |     mut src: *mut cmd_find_state,
1813 | | ) {
...    |
1818 | |     (*dst).wp = (*src).wp;
1819 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1821:1
     |
1821 | / pub unsafe extern "C" fn cmd_find_log_state(
1822 | |     mut prefix: *const libc::c_char,
1823 | |     mut fs: *mut cmd_find_state,
1824 | | ) {
...    |
1863 | |     };
1864 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1866:1
     |
1866 | / pub unsafe extern "C" fn cmd_find_from_session(
1867 | |     mut fs: *mut cmd_find_state,
1868 | |     mut s: *mut session,
1869 | |     mut flags: libc::c_int,
...    |
1883 | |     );
1884 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1886:1
     |
1886 | / pub unsafe extern "C" fn cmd_find_from_winlink(
1887 | |     mut fs: *mut cmd_find_state,
1888 | |     mut wl: *mut winlink,
1889 | |     mut flags: libc::c_int,
...    |
1903 | |     );
1904 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1906:1
     |
1906 | / pub unsafe extern "C" fn cmd_find_from_session_window(
1907 | |     mut fs: *mut cmd_find_state,
1908 | |     mut s: *mut session,
1909 | |     mut w: *mut window,
...    |
1928 | |     return 0 as libc::c_int;
1929 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:1928:5
     |
1928 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1931:1
     |
1931 | / pub unsafe extern "C" fn cmd_find_from_window(
1932 | |     mut fs: *mut cmd_find_state,
1933 | |     mut w: *mut window,
1934 | |     mut flags: libc::c_int,
...    |
1955 | |     return 0 as libc::c_int;
1956 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:1955:5
     |
1955 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1958:1
     |
1958 | / pub unsafe extern "C" fn cmd_find_from_winlink_pane(
1959 | |     mut fs: *mut cmd_find_state,
1960 | |     mut wl: *mut winlink,
1961 | |     mut wp: *mut window_pane,
...    |
1977 | |     );
1978 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:1980:1
     |
1980 | / pub unsafe extern "C" fn cmd_find_from_pane(
1981 | |     mut fs: *mut cmd_find_state,
1982 | |     mut wp: *mut window_pane,
1983 | |     mut flags: libc::c_int,
...    |
1997 | |     return 0 as libc::c_int;
1998 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:1997:5
     |
1997 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:2000:1
     |
2000 | / pub unsafe extern "C" fn cmd_find_from_nothing(
2001 | |     mut fs: *mut cmd_find_state,
2002 | |     mut flags: libc::c_int,
2003 | | ) -> libc::c_int {
...    |
2027 | |     return 0 as libc::c_int;
2028 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:2027:5
     |
2027 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2007:9
     |
2007 |         0 as *mut *mut session,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:2030:1
     |
2030 | / pub unsafe extern "C" fn cmd_find_from_mouse(
2031 | |     mut fs: *mut cmd_find_state,
2032 | |     mut m: *mut mouse_event,
2033 | |     mut flags: libc::c_int,
...    |
2053 | |     return 0 as libc::c_int;
2054 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:2053:5
     |
2053 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:2056:1
     |
2056 | / pub unsafe extern "C" fn cmd_find_from_client(
2057 | |     mut fs: *mut cmd_find_state,
2058 | |     mut c: *mut client,
2059 | |     mut flags: libc::c_int,
...    |
2120 | |     return cmd_find_from_nothing(fs, flags);
2121 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:2100:12
     |
2100 |         if !(cmd_find_best_session_with_window(fs) != 0 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `cmd_find_best_session_with_window(fs) == 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_find.rs:2120:5
     |
2120 |     return cmd_find_from_nothing(fs, flags);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_find_from_nothing(fs, flags)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2061:31
     |
2061 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2062:32
     |
2062 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2063:36
     |
2063 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:2123:1
     |
2123 | / pub unsafe extern "C" fn cmd_find_target(
2124 | |     mut fs: *mut cmd_find_state,
2125 | |     mut item: *mut cmdq_item,
2126 | |     mut target: *const libc::c_char,
...    |
2561 | |     return -(1 as libc::c_int);
2562 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_find.rs:2561:5
     |
2561 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2131:35
     |
2131 |     let mut m: *mut mouse_event = 0 as *mut mouse_event;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2134:18
     |
2134 |         current: 0 as *const cmd_find_state as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2135:12
     |
2135 |         s: 0 as *const session as *mut session,
     |            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2136:13
     |
2136 |         wl: 0 as *const winlink as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2137:12
     |
2137 |         w: 0 as *const window as *mut window,
     |            ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2138:13
     |
2138 |         wp: 0 as *const window_pane as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2141:40
     |
2141 |     let mut colon: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2142:41
     |
2142 |     let mut period: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2143:39
     |
2143 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2144:44
     |
2144 |     let mut session: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2145:43
     |
2145 |     let mut window: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2146:41
     |
2146 |     let mut pane: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2147:38
     |
2147 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_find.rs:2233:5
     |
2233 | /     match current_block {
2234 | |         10043043949733653460 => {
2235 | |             if cmd_find_valid_state((*fs).current) == 0 {
2236 | |                 fatalx(
...    |
2549 | |         _ => {}
2550 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2233 ~     if current_block == 10043043949733653460 {
2234 +         if cmd_find_valid_state((*fs).current) == 0 {
2235 +             fatalx(
2236 +                 b"invalid current find state\0" as *const u8 as *const libc::c_char,
2237 +             );
2238 +         }
2239 +         if target.is_null() || *target as libc::c_int == '\0' as i32 {
2240 +             current_block = 6413872448950241433;
2241 +         } else if strcmp(target, b"=\0" as *const u8 as *const libc::c_char)
2242 +             == 0 as libc::c_int
2243 +             || strcmp(target, b"{mouse}\0" as *const u8 as *const libc::c_char)
2244 +                 == 0 as libc::c_int
2245 +         {
2246 +             m = &mut (*(*item).shared).mouse;
2247 +             match type_0 as libc::c_uint {
2248 +                 0 => {
2249 +                     (*fs).wp = cmd_mouse_pane(m, &mut (*fs).s, &mut (*fs).wl);
2250 +                     if !((*fs).wp).is_null() {
2251 +                         (*fs).w = (*(*fs).wl).window;
2252 +                     }
2253 +                 }
2254 +                 1 | 2 => {
2255 +                     (*fs).wl = cmd_mouse_window(m, &mut (*fs).s);
2256 +                     if !((*fs).wl).is_null() {
2257 +                         (*fs).w = (*(*fs).wl).window;
2258 +                         (*fs).wp = (*(*fs).w).active;
2259 +                     }
2260 +                 }
2261 +                 _ => {}
2262 +             }
2263 +             if ((*fs).wp).is_null() {
2264 +                 if !flags & 0x2 as libc::c_int != 0 {
2265 +                     cmdq_error(
2266 +                         item,
2267 +                         b"no mouse target\0" as *const u8 as *const libc::c_char,
2268 +                     );
2269 +                 }
2270 +                 current_block = 5541695263705503054;
2271 +             } else {
2272 +                 current_block = 2628197061846535215;
2273 +             }
2274 +         } else if strcmp(target, b"~\0" as *const u8 as *const libc::c_char)
2275 +             == 0 as libc::c_int
2276 +             || strcmp(target, b"{marked}\0" as *const u8 as *const libc::c_char)
2277 +                 == 0 as libc::c_int
2278 +         {
2279 +             if server_check_marked() == 0 {
2280 +                 if !flags & 0x2 as libc::c_int != 0 {
2281 +                     cmdq_error(
2282 +                         item,
2283 +                         b"no marked target\0" as *const u8 as *const libc::c_char,
2284 +                     );
2285 +                 }
2286 +                 current_block = 5541695263705503054;
2287 +             } else {
2288 +                 cmd_find_copy_state(fs, &mut marked_pane);
2289 +                 current_block = 2628197061846535215;
2290 +             }
2291 +         } else {
2292 +             copy = xstrdup(target);
2293 +             colon = strchr(copy, ':' as i32);
2294 +             if !colon.is_null() {
2295 +                 let fresh2 = colon;
2296 +                 colon = colon.offset(1);
2297 +                 *fresh2 = '\0' as i32 as libc::c_char;
2298 +             }
2299 +             if colon.is_null() {
2300 +                 period = strchr(copy, '.' as i32);
2301 +             } else {
2302 +                 period = strchr(colon, '.' as i32);
2303 +             }
2304 +             if !period.is_null() {
2305 +                 let fresh3 = period;
2306 +                 period = period.offset(1);
2307 +                 *fresh3 = '\0' as i32 as libc::c_char;
2308 +             }
2309 +             pane = 0 as *const libc::c_char;
2310 +             window = pane;
2311 +             session = window;
2312 +             if !colon.is_null() && !period.is_null() {
2313 +                 session = copy;
2314 +                 window = colon;
2315 +                 window_only = 1 as libc::c_int;
2316 +                 pane = period;
2317 +                 pane_only = 1 as libc::c_int;
2318 +             } else if !colon.is_null() && period.is_null() {
2319 +                 session = copy;
2320 +                 window = colon;
2321 +                 window_only = 1 as libc::c_int;
2322 +             } else if colon.is_null() && !period.is_null() {
2323 +                 window = copy;
2324 +                 pane = period;
2325 +                 pane_only = 1 as libc::c_int;
2326 +             } else if *copy as libc::c_int == '$' as i32 {
2327 +                 session = copy;
2328 +             } else if *copy as libc::c_int == '@' as i32 {
2329 +                 window = copy;
2330 +             } else if *copy as libc::c_int == '%' as i32 {
2331 +                 pane = copy;
2332 +             } else {
2333 +                 match type_0 as libc::c_uint {
2334 +                     2 => {
2335 +                         session = copy;
2336 +                     }
2337 +                     1 => {
2338 +                         window = copy;
2339 +                     }
2340 +                     0 => {
2341 +                         pane = copy;
2342 +                     }
2343 +                     _ => {}
2344 +                 }
2345 +             }
2346 +             if !session.is_null() && *session as libc::c_int == '=' as i32 {
2347 +                 session = session.offset(1);
2348 +                 session;
2349 +                 (*fs).flags |= 0x10 as libc::c_int;
2350 +             }
2351 +             if !window.is_null() && *window as libc::c_int == '=' as i32 {
2352 +                 window = window.offset(1);
2353 +                 window;
2354 +                 (*fs).flags |= 0x20 as libc::c_int;
2355 +             }
2356 +             if !session.is_null() && *session as libc::c_int == '\0' as i32 {
2357 +                 session = 0 as *const libc::c_char;
2358 +             }
2359 +             if !window.is_null() && *window as libc::c_int == '\0' as i32 {
2360 +                 window = 0 as *const libc::c_char;
2361 +             }
2362 +             if !pane.is_null() && *pane as libc::c_int == '\0' as i32 {
2363 +                 pane = 0 as *const libc::c_char;
2364 +             }
2365 +             if !session.is_null() {
2366 +                 session = cmd_find_map_table(
2367 +                     cmd_find_session_table.as_mut_ptr(),
2368 +                     session,
2369 +                 );
2370 +             }
2371 +             if !window.is_null() {
2372 +                 window = cmd_find_map_table(
2373 +                     cmd_find_window_table.as_mut_ptr(),
2374 +                     window,
2375 +                 );
2376 +             }
2377 +             if !pane.is_null() {
2378 +                 pane = cmd_find_map_table(cmd_find_pane_table.as_mut_ptr(), pane);
2379 +             }
2380 +             log_debug(
2381 +                 b"%s: target %s (flags %#x): session=%s, window=%s, pane=%s\0"
2382 +                     as *const u8 as *const libc::c_char,
2383 +                 (*::core::mem::transmute::<
2384 +                     &[u8; 16],
2385 +                     &[libc::c_char; 16],
2386 +                 >(b"cmd_find_target\0"))
2387 +                     .as_ptr(),
2388 +                 target,
2389 +                 flags,
2390 +                 if session.is_null() {
2391 +                     b"none\0" as *const u8 as *const libc::c_char
2392 +                 } else {
2393 +                     session
2394 +                 },
2395 +                 if window.is_null() {
2396 +                     b"none\0" as *const u8 as *const libc::c_char
2397 +                 } else {
2398 +                     window
2399 +                 },
2400 +                 if pane.is_null() {
2401 +                     b"none\0" as *const u8 as *const libc::c_char
2402 +                 } else {
2403 +                     pane
2404 +                 },
2405 +             );
2406 +             if !pane.is_null() && flags & 0x4 as libc::c_int != 0 {
2407 +                 if !flags & 0x2 as libc::c_int != 0 {
2408 +                     cmdq_error(
2409 +                         item,
2410 +                         b"can't specify pane here\0" as *const u8
2411 +                             as *const libc::c_char,
2412 +                     );
2413 +                 }
2414 +                 current_block = 5541695263705503054;
2415 +             } else {
2416 +                 if !session.is_null() {
2417 +                     if cmd_find_get_session(fs, session) != 0 as libc::c_int {
2418 +                         if !flags & 0x2 as libc::c_int != 0 {
2419 +                             cmdq_error(
2420 +                                 item,
2421 +                                 b"can't find session %s\0" as *const u8
2422 +                                     as *const libc::c_char,
2423 +                                 session,
2424 +                             );
2425 +                         }
2426 +                         current_block = 5541695263705503054;
2427 +                     } else if window.is_null() && pane.is_null() {
2428 +                         (*fs).wl = (*(*fs).s).curw;
2429 +                         (*fs).idx = -(1 as libc::c_int);
2430 +                         (*fs).w = (*(*fs).wl).window;
2431 +                         (*fs).wp = (*(*fs).w).active;
2432 +                         current_block = 2628197061846535215;
2433 +                     } else if !window.is_null() && pane.is_null() {
2434 +                         if cmd_find_get_window_with_session(fs, window)
2435 +                             != 0 as libc::c_int
2436 +                         {
2437 +                             current_block = 10126172881903668360;
2438 +                         } else {
2439 +                             (*fs).wp = (*(*(*fs).wl).window).active;
2440 +                             current_block = 2628197061846535215;
2441 +                         }
2442 +                     } else if window.is_null() && !pane.is_null() {
2443 +                         if cmd_find_get_pane_with_session(fs, pane)
2444 +                             != 0 as libc::c_int
2445 +                         {
2446 +                             current_block = 17861424788070315216;
2447 +                         } else {
2448 +                             current_block = 2628197061846535215;
2449 +                         }
2450 +                     } else if cmd_find_get_window_with_session(fs, window)
2451 +                         != 0 as libc::c_int
2452 +                     {
2453 +                         current_block = 10126172881903668360;
2454 +                     } else if cmd_find_get_pane_with_window(fs, pane)
2455 +                         != 0 as libc::c_int
2456 +                     {
2457 +                         current_block = 17861424788070315216;
2458 +                     } else {
2459 +                         current_block = 2628197061846535215;
2460 +                     }
2461 +                 } else if !window.is_null() && !pane.is_null() {
2462 +                     if cmd_find_get_window(fs, window, window_only)
2463 +                         != 0 as libc::c_int
2464 +                     {
2465 +                         current_block = 10126172881903668360;
2466 +                     } else if cmd_find_get_pane_with_window(fs, pane)
2467 +                         != 0 as libc::c_int
2468 +                     {
2469 +                         current_block = 17861424788070315216;
2470 +                     } else {
2471 +                         current_block = 2628197061846535215;
2472 +                     }
2473 +                 } else if !window.is_null() && pane.is_null() {
2474 +                     if cmd_find_get_window(fs, window, window_only)
2475 +                         != 0 as libc::c_int
2476 +                     {
2477 +                         current_block = 10126172881903668360;
2478 +                     } else {
2479 +                         (*fs).wp = (*(*(*fs).wl).window).active;
2480 +                         current_block = 2628197061846535215;
2481 +                     }
2482 +                 } else if window.is_null() && !pane.is_null() {
2483 +                     if cmd_find_get_pane(fs, pane, pane_only) != 0 as libc::c_int {
2484 +                         current_block = 17861424788070315216;
2485 +                     } else {
2486 +                         current_block = 2628197061846535215;
2487 +                     }
2488 +                 } else {
2489 +                     current_block = 6413872448950241433;
2490 +                 }
2491 +                 match current_block {
2492 +                     5541695263705503054 => {}
2493 +                     2628197061846535215 => {}
2494 +                     6413872448950241433 => {}
2495 +                     _ => {
2496 +                         match current_block {
2497 +                             10126172881903668360 => {
2498 +                                 if !flags & 0x2 as libc::c_int != 0 {
2499 +                                     cmdq_error(
2500 +                                         item,
2501 +                                         b"can't find window %s\0" as *const u8
2502 +                                             as *const libc::c_char,
2503 +                                         window,
2504 +                                     );
2505 +                                 }
2506 +                             }
2507 +                             _ => {
2508 +                                 if !flags & 0x2 as libc::c_int != 0 {
2509 +                                     cmdq_error(
2510 +                                         item,
2511 +                                         b"can't find pane %s\0" as *const u8 as *const libc::c_char,
2512 +                                         pane,
2513 +                                     );
2514 +                                 }
2515 +                             }
2516 +                         }
2517 +                         current_block = 5541695263705503054;
2518 +                     }
2519 +                 }
2520 +             }
2521 +         }
2522 +         match current_block {
2523 +             5541695263705503054 => {}
2524 +             _ => {
2525 +                 match current_block {
2526 +                     6413872448950241433 => {
2527 +                         cmd_find_copy_state(fs, (*fs).current);
2528 +                         if flags & 0x4 as libc::c_int != 0 {
2529 +                             (*fs).idx = -(1 as libc::c_int);
2530 +                         }
2531 +                     }
2532 +                     _ => {}
2533 +                 }
2534 +                 (*fs).current = 0 as *mut cmd_find_state;
2535 +                 cmd_find_log_state(
2536 +                     (*::core::mem::transmute::<
2537 +                         &[u8; 16],
2538 +                         &[libc::c_char; 16],
2539 +                     >(b"cmd_find_target\0"))
2540 +                         .as_ptr(),
2541 +                     fs,
2542 +                 );
2543 +                 free(copy as *mut libc::c_void);
2544 +                 return 0 as libc::c_int;
2545 +             }
2546 +         }
2547 +     }
     |

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2310:24
     |
2310 |                 pane = 0 as *const libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_find.rs:2349:21
     |
2349 |                     session;
     |                     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_find.rs:2354:21
     |
2354 |                     window;
     |                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2358:31
     |
2358 |                     session = 0 as *const libc::c_char;
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2361:30
     |
2361 |                     window = 0 as *const libc::c_char;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2364:28
     |
2364 |                     pane = 0 as *const libc::c_char;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_find.rs:2526:21
     |
2526 | /                     match current_block {
2527 | |                         6413872448950241433 => {
2528 | |                             cmd_find_copy_state(fs, (*fs).current);
2529 | |                             if flags & 0x4 as libc::c_int != 0 {
...    |
2533 | |                         _ => {}
2534 | |                     }
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2526 ~                     if current_block == 6413872448950241433 {
2527 +                         cmd_find_copy_state(fs, (*fs).current);
2528 +                         if flags & 0x4 as libc::c_int != 0 {
2529 +                             (*fs).idx = -(1 as libc::c_int);
2530 +                         }
2531 +                     }
     |

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2535:37
     |
2535 |                     (*fs).current = 0 as *mut cmd_find_state;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2551:21
     |
2551 |     (*fs).current = 0 as *mut cmd_find_state;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_find.rs:2612:5
     |
2612 |     return c;
     |     ^^^^^^^^^ help: remove `return`: `c`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2567:30
     |
2567 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2568:31
     |
2568 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2569:36
     |
2569 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2572:18
     |
2572 |         current: 0 as *const cmd_find_state as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2573:12
     |
2573 |         s: 0 as *const session as *mut session,
     |            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2574:13
     |
2574 |         wl: 0 as *const winlink as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2575:12
     |
2575 |         w: 0 as *const window as *mut window,
     |            ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_find.rs:2576:13
     |
2576 |         wp: 0 as *const window_pane as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2582:9
     |
2582 |     c = 0 as *mut client;
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2592:13
     |
2592 |             0 as *mut *mut session,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_find.rs:2615:1
     |
2615 | / pub unsafe extern "C" fn cmd_find_client(
2616 | |     mut item: *mut cmdq_item,
2617 | |     mut target: *const libc::c_char,
2618 | |     mut quiet: libc::c_int,
...    |
2686 | |     return c;
2687 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:2643:16
     |
2643 |             if !(*(*c).ttyname as libc::c_int == '\0' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*(*c).ttyname as libc::c_int != '\0' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_find.rs:2647:20
     |
2647 |                   if !(strncmp(
     |  ____________________^
2648 | |                     (*c).ttyname,
2649 | |                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 | |                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
2651 | |                         .wrapping_sub(1 as libc::c_int as libc::c_ulong),
2652 | |                 ) != 0 as libc::c_int)
     | |______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
2647 ~                 if strncmp(
2648 +                     (*c).ttyname,
2649 +                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 +                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
2651 +                         .wrapping_sub(1 as libc::c_int as libc::c_ulong),
2652 +                 ) == 0 as libc::c_int
     |

warning: unneeded `return` statement
    --> src/cmd_find.rs:2686:5
     |
2686 |     return c;
     |     ^^^^^^^^^ help: remove `return`: `c`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2620:30
     |
2620 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_find.rs:2621:39
     |
2621 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_find_window.rs:955:9
    |
923 | /         let mut init = cmd_entry {
924 | |             name: b"find-window\0" as *const u8 as *const libc::c_char,
925 | |             alias: b"findw\0" as *const u8 as *const libc::c_char,
926 | |             args: {
...   |
953 | |             ),
954 | |         };
    | |__________- unnecessary `let` binding
955 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
923 ~         
924 ~         cmd_entry {
925 +             name: b"find-window\0" as *const u8 as *const libc::c_char,
926 +             alias: b"findw\0" as *const u8 as *const libc::c_char,
927 +             args: {
928 +                 let mut init = C2RustUnnamed_31 {
929 +                     template: b"CNt:T\0" as *const u8 as *const libc::c_char,
930 +                     lower: 1 as libc::c_int,
931 +                     upper: 1 as libc::c_int,
932 +                 };
933 +                 init
934 +             },
935 +             usage: b"[-CNT] [-t target-pane] match-string\0" as *const u8
936 +                 as *const libc::c_char,
937 +             source: cmd_entry_flag {
938 +                 flag: 0,
939 +                 type_0: CMD_FIND_PANE,
940 +                 flags: 0,
941 +             },
942 +             target: {
943 +                 let mut init = cmd_entry_flag {
944 +                     flag: 't' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_PANE,
946 +                     flags: 0 as libc::c_int,
947 +                 };
948 +                 init
949 +             },
950 +             flags: 0 as libc::c_int,
951 +             exec: Some(
952 +                 cmd_find_window_exec
953 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
954 +             ),
955 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_find_window.rs:932:17
    |
927 | /                 let mut init = C2RustUnnamed_31 {
928 | |                     template: b"CNt:T\0" as *const u8 as *const libc::c_char,
929 | |                     lower: 1 as libc::c_int,
930 | |                     upper: 1 as libc::c_int,
931 | |                 };
    | |__________________- unnecessary `let` binding
932 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
927 ~                 
928 ~                 C2RustUnnamed_31 {
929 +                     template: b"CNt:T\0" as *const u8 as *const libc::c_char,
930 +                     lower: 1 as libc::c_int,
931 +                     upper: 1 as libc::c_int,
932 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_find_window.rs:947:17
    |
942 | /                 let mut init = cmd_entry_flag {
943 | |                     flag: 't' as i32 as libc::c_char,
944 | |                     type_0: CMD_FIND_PANE,
945 | |                     flags: 0 as libc::c_int,
946 | |                 };
    | |__________________- unnecessary `let` binding
947 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
942 ~                 
943 ~                 cmd_entry_flag {
944 +                     flag: 't' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_PANE,
946 +                     flags: 0 as libc::c_int,
947 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_find_window.rs:1040:5
     |
1040 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_find_window.rs:963:35
    |
963 |     let mut new_args: *mut args = 0 as *mut args;
    |                                   ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_find_window.rs:966:41
    |
966 |     let mut filter: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_find_window.rs:967:39
    |
967 |     let mut argv: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_if_shell.rs:1023:9
     |
991  | /         let mut init = cmd_entry {
992  | |             name: b"if-shell\0" as *const u8 as *const libc::c_char,
993  | |             alias: b"if\0" as *const u8 as *const libc::c_char,
994  | |             args: {
...    |
1021 | |             ),
1022 | |         };
     | |__________- unnecessary `let` binding
1023 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
991  ~         
992  ~         cmd_entry {
993  +             name: b"if-shell\0" as *const u8 as *const libc::c_char,
994  +             alias: b"if\0" as *const u8 as *const libc::c_char,
995  +             args: {
996  +                 let mut init = C2RustUnnamed_31 {
997  +                     template: b"bFt:\0" as *const u8 as *const libc::c_char,
998  +                     lower: 2 as libc::c_int,
999  +                     upper: 3 as libc::c_int,
1000 +                 };
1001 +                 init
1002 +             },
1003 +             usage: b"[-bF] [-t target-pane] shell-command command [command]\0"
1004 +                 as *const u8 as *const libc::c_char,
1005 +             source: cmd_entry_flag {
1006 +                 flag: 0,
1007 +                 type_0: CMD_FIND_PANE,
1008 +                 flags: 0,
1009 +             },
1010 +             target: {
1011 +                 let mut init = cmd_entry_flag {
1012 +                     flag: 't' as i32 as libc::c_char,
1013 +                     type_0: CMD_FIND_PANE,
1014 +                     flags: 0x40 as libc::c_int,
1015 +                 };
1016 +                 init
1017 +             },
1018 +             flags: 0 as libc::c_int,
1019 +             exec: Some(
1020 +                 cmd_if_shell_exec
1021 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1022 +             ),
1023 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_if_shell.rs:1000:17
     |
995  | /                 let mut init = C2RustUnnamed_31 {
996  | |                     template: b"bFt:\0" as *const u8 as *const libc::c_char,
997  | |                     lower: 2 as libc::c_int,
998  | |                     upper: 3 as libc::c_int,
999  | |                 };
     | |__________________- unnecessary `let` binding
1000 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
995  ~                 
996  ~                 C2RustUnnamed_31 {
997  +                     template: b"bFt:\0" as *const u8 as *const libc::c_char,
998  +                     lower: 2 as libc::c_int,
999  +                     upper: 3 as libc::c_int,
1000 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_if_shell.rs:1015:17
     |
1010 | /                 let mut init = cmd_entry_flag {
1011 | |                     flag: 't' as i32 as libc::c_char,
1012 | |                     type_0: CMD_FIND_PANE,
1013 | |                     flags: 0x40 as libc::c_int,
1014 | |                 };
     | |__________________- unnecessary `let` binding
1015 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1010 ~                 
1011 ~                 cmd_entry_flag {
1012 +                     flag: 't' as i32 as libc::c_char,
1013 +                     type_0: CMD_FIND_PANE,
1014 +                     flags: 0x40 as libc::c_int,
1015 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_if_shell.rs:1141:5
     |
1141 |     return CMD_RETURN_WAIT;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_WAIT`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1032:45
     |
1032 |     let mut cdata: *mut cmd_if_shell_data = 0 as *mut cmd_if_shell_data;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_if_shell_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1033:43
     |
1033 |     let mut shellcmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1034:38
     |
1034 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1035:40
     |
1035 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1036:38
     |
1036 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1037:40
     |
1037 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_if_shell.rs:1040:9
     |
1040 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_if_shell.rs:1046:40
     |
1046 |     let mut cwd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_if_shell.rs:1052:15
     |
1052 |         cwd = 0 as *const libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1063:15
     |
1063 |         cmd = 0 as *mut libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_if_shell.rs:1077:13
     |
1077 |             0 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1090:13
     |
1090 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1110:29
     |
1110 |         (*cdata).cmd_else = 0 as *mut libc::c_char;
     |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_if_shell.rs:1115:9
     |
1115 |         (*(*cdata).client).references;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1120:25
     |
1120 |         (*cdata).item = 0 as *mut cmdq_item;
     |                         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_if_shell.rs:1152:8
     |
1152 |     if !((*job).status & 0x7f as libc::c_int == 0 as libc::c_int)
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*job).status & 0x7f as libc::c_int != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1146:38
     |
1146 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1147:40
     |
1147 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1148:40
     |
1148 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1149:38
     |
1149 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1171:24
     |
1171 |             new_item = 0 as *mut cmdq_item;
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_if_shell.rs:1175:17
     |
1175 |                 0 as *mut cmd_find_state,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:968:9
    |
933 | /         let mut init = cmd_entry {
934 | |             name: b"join-pane\0" as *const u8 as *const libc::c_char,
935 | |             alias: b"joinp\0" as *const u8 as *const libc::c_char,
936 | |             args: {
...   |
966 | |             ),
967 | |         };
    | |__________- unnecessary `let` binding
968 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
933 ~         
934 ~         cmd_entry {
935 +             name: b"join-pane\0" as *const u8 as *const libc::c_char,
936 +             alias: b"joinp\0" as *const u8 as *const libc::c_char,
937 +             args: {
938 +                 let mut init = C2RustUnnamed_31 {
939 +                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
940 +                     lower: 0 as libc::c_int,
941 +                     upper: 0 as libc::c_int,
942 +                 };
943 +                 init
944 +             },
945 +             usage: b"[-bdhv] [-p percentage|-l size] [-s src-pane] [-t dst-pane]\0"
946 +                 as *const u8 as *const libc::c_char,
947 +             source: {
948 +                 let mut init = cmd_entry_flag {
949 +                     flag: 's' as i32 as libc::c_char,
950 +                     type_0: CMD_FIND_PANE,
951 +                     flags: 0x8 as libc::c_int,
952 +                 };
953 +                 init
954 +             },
955 +             target: {
956 +                 let mut init = cmd_entry_flag {
957 +                     flag: 't' as i32 as libc::c_char,
958 +                     type_0: CMD_FIND_PANE,
959 +                     flags: 0 as libc::c_int,
960 +                 };
961 +                 init
962 +             },
963 +             flags: 0 as libc::c_int,
964 +             exec: Some(
965 +                 cmd_join_pane_exec
966 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
967 +             ),
968 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:942:17
    |
937 | /                 let mut init = C2RustUnnamed_31 {
938 | |                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
939 | |                     lower: 0 as libc::c_int,
940 | |                     upper: 0 as libc::c_int,
941 | |                 };
    | |__________________- unnecessary `let` binding
942 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
937 ~                 
938 ~                 C2RustUnnamed_31 {
939 +                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
940 +                     lower: 0 as libc::c_int,
941 +                     upper: 0 as libc::c_int,
942 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:952:17
    |
947 | /                 let mut init = cmd_entry_flag {
948 | |                     flag: 's' as i32 as libc::c_char,
949 | |                     type_0: CMD_FIND_PANE,
950 | |                     flags: 0x8 as libc::c_int,
951 | |                 };
    | |__________________- unnecessary `let` binding
952 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
947 ~                 
948 ~                 cmd_entry_flag {
949 +                     flag: 's' as i32 as libc::c_char,
950 +                     type_0: CMD_FIND_PANE,
951 +                     flags: 0x8 as libc::c_int,
952 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:960:17
    |
955 | /                 let mut init = cmd_entry_flag {
956 | |                     flag: 't' as i32 as libc::c_char,
957 | |                     type_0: CMD_FIND_PANE,
958 | |                     flags: 0 as libc::c_int,
959 | |                 };
    | |__________________- unnecessary `let` binding
960 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
955 ~                 
956 ~                 cmd_entry_flag {
957 +                     flag: 't' as i32 as libc::c_char,
958 +                     type_0: CMD_FIND_PANE,
959 +                     flags: 0 as libc::c_int,
960 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_join_pane.rs:1009:9
     |
974  | /         let mut init = cmd_entry {
975  | |             name: b"move-pane\0" as *const u8 as *const libc::c_char,
976  | |             alias: b"movep\0" as *const u8 as *const libc::c_char,
977  | |             args: {
...    |
1007 | |             ),
1008 | |         };
     | |__________- unnecessary `let` binding
1009 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
974  ~         
975  ~         cmd_entry {
976  +             name: b"move-pane\0" as *const u8 as *const libc::c_char,
977  +             alias: b"movep\0" as *const u8 as *const libc::c_char,
978  +             args: {
979  +                 let mut init = C2RustUnnamed_31 {
980  +                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
981  +                     lower: 0 as libc::c_int,
982  +                     upper: 0 as libc::c_int,
983  +                 };
984  +                 init
985  +             },
986  +             usage: b"[-bdhv] [-p percentage|-l size] [-s src-pane] [-t dst-pane]\0"
987  +                 as *const u8 as *const libc::c_char,
988  +             source: {
989  +                 let mut init = cmd_entry_flag {
990  +                     flag: 's' as i32 as libc::c_char,
991  +                     type_0: CMD_FIND_PANE,
992  +                     flags: 0 as libc::c_int,
993  +                 };
994  +                 init
995  +             },
996  +             target: {
997  +                 let mut init = cmd_entry_flag {
998  +                     flag: 't' as i32 as libc::c_char,
999  +                     type_0: CMD_FIND_PANE,
1000 +                     flags: 0 as libc::c_int,
1001 +                 };
1002 +                 init
1003 +             },
1004 +             flags: 0 as libc::c_int,
1005 +             exec: Some(
1006 +                 cmd_join_pane_exec
1007 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1008 +             ),
1009 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:983:17
    |
978 | /                 let mut init = C2RustUnnamed_31 {
979 | |                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
980 | |                     lower: 0 as libc::c_int,
981 | |                     upper: 0 as libc::c_int,
982 | |                 };
    | |__________________- unnecessary `let` binding
983 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
978 ~                 
979 ~                 C2RustUnnamed_31 {
980 +                     template: b"bdhvp:l:s:t:\0" as *const u8 as *const libc::c_char,
981 +                     lower: 0 as libc::c_int,
982 +                     upper: 0 as libc::c_int,
983 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_join_pane.rs:993:17
    |
988 | /                 let mut init = cmd_entry_flag {
989 | |                     flag: 's' as i32 as libc::c_char,
990 | |                     type_0: CMD_FIND_PANE,
991 | |                     flags: 0 as libc::c_int,
992 | |                 };
    | |__________________- unnecessary `let` binding
993 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
988 ~                 
989 ~                 cmd_entry_flag {
990 +                     flag: 's' as i32 as libc::c_char,
991 +                     type_0: CMD_FIND_PANE,
992 +                     flags: 0 as libc::c_int,
993 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_join_pane.rs:1001:17
     |
996  | /                 let mut init = cmd_entry_flag {
997  | |                     flag: 't' as i32 as libc::c_char,
998  | |                     type_0: CMD_FIND_PANE,
999  | |                     flags: 0 as libc::c_int,
1000 | |                 };
     | |__________________- unnecessary `let` binding
1001 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
996  ~                 
997  ~                 cmd_entry_flag {
998  +                     flag: 't' as i32 as libc::c_char,
999  +                     type_0: CMD_FIND_PANE,
1000 +                     flags: 0 as libc::c_int,
1001 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_join_pane.rs:1157:5
     |
1157 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1018:35
     |
1018 |     let mut dst_s: *mut session = 0 as *mut session;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1019:36
     |
1019 |     let mut src_wl: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1020:36
     |
1020 |     let mut dst_wl: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1021:34
     |
1021 |     let mut src_w: *mut window = 0 as *mut window;
     |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1022:34
     |
1022 |     let mut dst_w: *mut window = 0 as *mut window;
     |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1023:40
     |
1023 |     let mut src_wp: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1024:40
     |
1024 |     let mut dst_wp: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1025:40
     |
1025 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_join_pane.rs:1030:36
     |
1030 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_pane.rs:939:9
    |
908 | /         let mut init = cmd_entry {
909 | |             name: b"kill-pane\0" as *const u8 as *const libc::c_char,
910 | |             alias: b"killp\0" as *const u8 as *const libc::c_char,
911 | |             args: {
...   |
937 | |             ),
938 | |         };
    | |__________- unnecessary `let` binding
939 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
908 ~         
909 ~         cmd_entry {
910 +             name: b"kill-pane\0" as *const u8 as *const libc::c_char,
911 +             alias: b"killp\0" as *const u8 as *const libc::c_char,
912 +             args: {
913 +                 let mut init = C2RustUnnamed_31 {
914 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
915 +                     lower: 0 as libc::c_int,
916 +                     upper: 0 as libc::c_int,
917 +                 };
918 +                 init
919 +             },
920 +             usage: b"[-a] [-t target-pane]\0" as *const u8 as *const libc::c_char,
921 +             source: cmd_entry_flag {
922 +                 flag: 0,
923 +                 type_0: CMD_FIND_PANE,
924 +                 flags: 0,
925 +             },
926 +             target: {
927 +                 let mut init = cmd_entry_flag {
928 +                     flag: 't' as i32 as libc::c_char,
929 +                     type_0: CMD_FIND_PANE,
930 +                     flags: 0 as libc::c_int,
931 +                 };
932 +                 init
933 +             },
934 +             flags: 0 as libc::c_int,
935 +             exec: Some(
936 +                 cmd_kill_pane_exec
937 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
938 +             ),
939 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_pane.rs:917:17
    |
912 | /                 let mut init = C2RustUnnamed_31 {
913 | |                     template: b"at:\0" as *const u8 as *const libc::c_char,
914 | |                     lower: 0 as libc::c_int,
915 | |                     upper: 0 as libc::c_int,
916 | |                 };
    | |__________________- unnecessary `let` binding
917 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
912 ~                 
913 ~                 C2RustUnnamed_31 {
914 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
915 +                     lower: 0 as libc::c_int,
916 +                     upper: 0 as libc::c_int,
917 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_pane.rs:931:17
    |
926 | /                 let mut init = cmd_entry_flag {
927 | |                     flag: 't' as i32 as libc::c_char,
928 | |                     type_0: CMD_FIND_PANE,
929 | |                     flags: 0 as libc::c_int,
930 | |                 };
    | |__________________- unnecessary `let` binding
931 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
926 ~                 
927 ~                 cmd_entry_flag {
928 +                     flag: 't' as i32 as libc::c_char,
929 +                     type_0: CMD_FIND_PANE,
930 +                     flags: 0 as libc::c_int,
931 +                 }
    |

warning: this boolean expression can be simplified
   --> src/cmd_kill_pane.rs:959:16
    |
959 |             if !(loopwp == wp) {
    |                ^^^^^^^^^^^^^^^ help: try: `loopwp != wp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/cmd_kill_pane.rs:969:5
    |
969 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_kill_pane.rs:947:40
    |
947 |     let mut loopwp: *mut window_pane = 0 as *mut window_pane;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_kill_pane.rs:948:39
    |
948 |     let mut tmpwp: *mut window_pane = 0 as *mut window_pane;
    |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_server.rs:932:9
    |
904 | /         let mut init = cmd_entry {
905 | |             name: b"kill-server\0" as *const u8 as *const libc::c_char,
906 | |             alias: 0 as *const libc::c_char,
907 | |             args: {
...   |
930 | |             ),
931 | |         };
    | |__________- unnecessary `let` binding
932 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
904 ~         
905 ~         cmd_entry {
906 +             name: b"kill-server\0" as *const u8 as *const libc::c_char,
907 +             alias: 0 as *const libc::c_char,
908 +             args: {
909 +                 let mut init = C2RustUnnamed_31 {
910 +                     template: b"\0" as *const u8 as *const libc::c_char,
911 +                     lower: 0 as libc::c_int,
912 +                     upper: 0 as libc::c_int,
913 +                 };
914 +                 init
915 +             },
916 +             usage: b"\0" as *const u8 as *const libc::c_char,
917 +             source: cmd_entry_flag {
918 +                 flag: 0,
919 +                 type_0: CMD_FIND_PANE,
920 +                 flags: 0,
921 +             },
922 +             target: cmd_entry_flag {
923 +                 flag: 0,
924 +                 type_0: CMD_FIND_PANE,
925 +                 flags: 0,
926 +             },
927 +             flags: 0 as libc::c_int,
928 +             exec: Some(
929 +                 cmd_kill_server_exec
930 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
931 +             ),
932 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_server.rs:913:17
    |
908 | /                 let mut init = C2RustUnnamed_31 {
909 | |                     template: b"\0" as *const u8 as *const libc::c_char,
910 | |                     lower: 0 as libc::c_int,
911 | |                     upper: 0 as libc::c_int,
912 | |                 };
    | |__________________- unnecessary `let` binding
913 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
908 ~                 
909 ~                 C2RustUnnamed_31 {
910 +                     template: b"\0" as *const u8 as *const libc::c_char,
911 +                     lower: 0 as libc::c_int,
912 +                     upper: 0 as libc::c_int,
913 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_server.rs:966:9
    |
938 | /         let mut init = cmd_entry {
939 | |             name: b"start-server\0" as *const u8 as *const libc::c_char,
940 | |             alias: b"start\0" as *const u8 as *const libc::c_char,
941 | |             args: {
...   |
964 | |             ),
965 | |         };
    | |__________- unnecessary `let` binding
966 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
938 ~         
939 ~         cmd_entry {
940 +             name: b"start-server\0" as *const u8 as *const libc::c_char,
941 +             alias: b"start\0" as *const u8 as *const libc::c_char,
942 +             args: {
943 +                 let mut init = C2RustUnnamed_31 {
944 +                     template: b"\0" as *const u8 as *const libc::c_char,
945 +                     lower: 0 as libc::c_int,
946 +                     upper: 0 as libc::c_int,
947 +                 };
948 +                 init
949 +             },
950 +             usage: b"\0" as *const u8 as *const libc::c_char,
951 +             source: cmd_entry_flag {
952 +                 flag: 0,
953 +                 type_0: CMD_FIND_PANE,
954 +                 flags: 0,
955 +             },
956 +             target: cmd_entry_flag {
957 +                 flag: 0,
958 +                 type_0: CMD_FIND_PANE,
959 +                 flags: 0,
960 +             },
961 +             flags: 0x1 as libc::c_int,
962 +             exec: Some(
963 +                 cmd_kill_server_exec
964 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
965 +             ),
966 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_server.rs:947:17
    |
942 | /                 let mut init = C2RustUnnamed_31 {
943 | |                     template: b"\0" as *const u8 as *const libc::c_char,
944 | |                     lower: 0 as libc::c_int,
945 | |                     upper: 0 as libc::c_int,
946 | |                 };
    | |__________________- unnecessary `let` binding
947 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
942 ~                 
943 ~                 C2RustUnnamed_31 {
944 +                     template: b"\0" as *const u8 as *const libc::c_char,
945 +                     lower: 0 as libc::c_int,
946 +                     upper: 0 as libc::c_int,
947 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_kill_server.rs:976:5
    |
976 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_session.rs:947:9
    |
916 | /         let mut init = cmd_entry {
917 | |             name: b"kill-session\0" as *const u8 as *const libc::c_char,
918 | |             alias: 0 as *const libc::c_char,
919 | |             args: {
...   |
945 | |             ),
946 | |         };
    | |__________- unnecessary `let` binding
947 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
916 ~         
917 ~         cmd_entry {
918 +             name: b"kill-session\0" as *const u8 as *const libc::c_char,
919 +             alias: 0 as *const libc::c_char,
920 +             args: {
921 +                 let mut init = C2RustUnnamed_31 {
922 +                     template: b"aCt:\0" as *const u8 as *const libc::c_char,
923 +                     lower: 0 as libc::c_int,
924 +                     upper: 0 as libc::c_int,
925 +                 };
926 +                 init
927 +             },
928 +             usage: b"[-aC] [-t target-session]\0" as *const u8 as *const libc::c_char,
929 +             source: cmd_entry_flag {
930 +                 flag: 0,
931 +                 type_0: CMD_FIND_PANE,
932 +                 flags: 0,
933 +             },
934 +             target: {
935 +                 let mut init = cmd_entry_flag {
936 +                     flag: 't' as i32 as libc::c_char,
937 +                     type_0: CMD_FIND_SESSION,
938 +                     flags: 0 as libc::c_int,
939 +                 };
940 +                 init
941 +             },
942 +             flags: 0 as libc::c_int,
943 +             exec: Some(
944 +                 cmd_kill_session_exec
945 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
946 +             ),
947 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_session.rs:925:17
    |
920 | /                 let mut init = C2RustUnnamed_31 {
921 | |                     template: b"aCt:\0" as *const u8 as *const libc::c_char,
922 | |                     lower: 0 as libc::c_int,
923 | |                     upper: 0 as libc::c_int,
924 | |                 };
    | |__________________- unnecessary `let` binding
925 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
920 ~                 
921 ~                 C2RustUnnamed_31 {
922 +                     template: b"aCt:\0" as *const u8 as *const libc::c_char,
923 +                     lower: 0 as libc::c_int,
924 +                     upper: 0 as libc::c_int,
925 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_session.rs:939:17
    |
934 | /                 let mut init = cmd_entry_flag {
935 | |                     flag: 't' as i32 as libc::c_char,
936 | |                     type_0: CMD_FIND_SESSION,
937 | |                     flags: 0 as libc::c_int,
938 | |                 };
    | |__________________- unnecessary `let` binding
939 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~                 
935 ~                 cmd_entry_flag {
936 +                     flag: 't' as i32 as libc::c_char,
937 +                     type_0: CMD_FIND_SESSION,
938 +                     flags: 0 as libc::c_int,
939 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_kill_session.rs:1002:5
     |
1002 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_kill_session.rs:955:31
    |
955 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_kill_session.rs:956:35
    |
956 |     let mut sloop: *mut session = 0 as *mut session;
    |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_kill_session.rs:957:34
    |
957 |     let mut stmp: *mut session = 0 as *mut session;
    |                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_kill_session.rs:958:32
    |
958 |     let mut wl: *mut winlink = 0 as *mut winlink;
    |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:941:9
    |
910 | /         let mut init = cmd_entry {
911 | |             name: b"kill-window\0" as *const u8 as *const libc::c_char,
912 | |             alias: b"killw\0" as *const u8 as *const libc::c_char,
913 | |             args: {
...   |
939 | |             ),
940 | |         };
    | |__________- unnecessary `let` binding
941 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
910 ~         
911 ~         cmd_entry {
912 +             name: b"kill-window\0" as *const u8 as *const libc::c_char,
913 +             alias: b"killw\0" as *const u8 as *const libc::c_char,
914 +             args: {
915 +                 let mut init = C2RustUnnamed_31 {
916 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
917 +                     lower: 0 as libc::c_int,
918 +                     upper: 0 as libc::c_int,
919 +                 };
920 +                 init
921 +             },
922 +             usage: b"[-a] [-t target-window]\0" as *const u8 as *const libc::c_char,
923 +             source: cmd_entry_flag {
924 +                 flag: 0,
925 +                 type_0: CMD_FIND_PANE,
926 +                 flags: 0,
927 +             },
928 +             target: {
929 +                 let mut init = cmd_entry_flag {
930 +                     flag: 't' as i32 as libc::c_char,
931 +                     type_0: CMD_FIND_WINDOW,
932 +                     flags: 0 as libc::c_int,
933 +                 };
934 +                 init
935 +             },
936 +             flags: 0 as libc::c_int,
937 +             exec: Some(
938 +                 cmd_kill_window_exec
939 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
940 +             ),
941 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:919:17
    |
914 | /                 let mut init = C2RustUnnamed_31 {
915 | |                     template: b"at:\0" as *const u8 as *const libc::c_char,
916 | |                     lower: 0 as libc::c_int,
917 | |                     upper: 0 as libc::c_int,
918 | |                 };
    | |__________________- unnecessary `let` binding
919 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
914 ~                 
915 ~                 C2RustUnnamed_31 {
916 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
917 +                     lower: 0 as libc::c_int,
918 +                     upper: 0 as libc::c_int,
919 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:933:17
    |
928 | /                 let mut init = cmd_entry_flag {
929 | |                     flag: 't' as i32 as libc::c_char,
930 | |                     type_0: CMD_FIND_WINDOW,
931 | |                     flags: 0 as libc::c_int,
932 | |                 };
    | |__________________- unnecessary `let` binding
933 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
928 ~                 
929 ~                 cmd_entry_flag {
930 +                     flag: 't' as i32 as libc::c_char,
931 +                     type_0: CMD_FIND_WINDOW,
932 +                     flags: 0 as libc::c_int,
933 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:978:9
    |
947 | /         let mut init = cmd_entry {
948 | |             name: b"unlink-window\0" as *const u8 as *const libc::c_char,
949 | |             alias: b"unlinkw\0" as *const u8 as *const libc::c_char,
950 | |             args: {
...   |
976 | |             ),
977 | |         };
    | |__________- unnecessary `let` binding
978 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
947 ~         
948 ~         cmd_entry {
949 +             name: b"unlink-window\0" as *const u8 as *const libc::c_char,
950 +             alias: b"unlinkw\0" as *const u8 as *const libc::c_char,
951 +             args: {
952 +                 let mut init = C2RustUnnamed_31 {
953 +                     template: b"kt:\0" as *const u8 as *const libc::c_char,
954 +                     lower: 0 as libc::c_int,
955 +                     upper: 0 as libc::c_int,
956 +                 };
957 +                 init
958 +             },
959 +             usage: b"[-k] [-t target-window]\0" as *const u8 as *const libc::c_char,
960 +             source: cmd_entry_flag {
961 +                 flag: 0,
962 +                 type_0: CMD_FIND_PANE,
963 +                 flags: 0,
964 +             },
965 +             target: {
966 +                 let mut init = cmd_entry_flag {
967 +                     flag: 't' as i32 as libc::c_char,
968 +                     type_0: CMD_FIND_WINDOW,
969 +                     flags: 0 as libc::c_int,
970 +                 };
971 +                 init
972 +             },
973 +             flags: 0 as libc::c_int,
974 +             exec: Some(
975 +                 cmd_kill_window_exec
976 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
977 +             ),
978 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:956:17
    |
951 | /                 let mut init = C2RustUnnamed_31 {
952 | |                     template: b"kt:\0" as *const u8 as *const libc::c_char,
953 | |                     lower: 0 as libc::c_int,
954 | |                     upper: 0 as libc::c_int,
955 | |                 };
    | |__________________- unnecessary `let` binding
956 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
951 ~                 
952 ~                 C2RustUnnamed_31 {
953 +                     template: b"kt:\0" as *const u8 as *const libc::c_char,
954 +                     lower: 0 as libc::c_int,
955 +                     upper: 0 as libc::c_int,
956 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_kill_window.rs:970:17
    |
965 | /                 let mut init = cmd_entry_flag {
966 | |                     flag: 't' as i32 as libc::c_char,
967 | |                     type_0: CMD_FIND_WINDOW,
968 | |                     flags: 0 as libc::c_int,
969 | |                 };
    | |__________________- unnecessary `let` binding
970 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
965 ~                 
966 ~                 cmd_entry_flag {
967 +                     flag: 't' as i32 as libc::c_char,
968 +                     type_0: CMD_FIND_WINDOW,
969 +                     flags: 0 as libc::c_int,
970 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_kill_window.rs:1020:5
     |
1020 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_kill_window.rs:987:33
    |
987 |     let mut wl2: *mut winlink = 0 as *mut winlink;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_kill_window.rs:988:33
    |
988 |     let mut wl3: *mut winlink = 0 as *mut winlink;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_list.rs:923:1
     |
923  | / pub unsafe extern "C" fn cmd_list_parse(
924  | |     mut argc: libc::c_int,
925  | |     mut argv: *mut *mut libc::c_char,
926  | |     mut file: *const libc::c_char,
...    |
1029 | |     return 0 as *mut cmd_list;
1030 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/cmd_list.rs:950:12
    |
950 |         if !(i < argc) {
    |            ^^^^^^^^^^^ help: try: `i >= argc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_list.rs:1029:5
     |
1029 |     return 0 as *mut cmd_list;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut cmd_list`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:931:38
    |
931 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:932:29
    |
932 |     let mut cmd: *mut cmd = 0 as *mut cmd;
    |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:937:49
    |
937 |     let mut copy_argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:938:48
    |
938 |     let mut new_argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:945:33
    |
945 |     (*cmdlist).list.tqh_first = 0 as *mut cmd;
    |                                 ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/cmd_list.rs:978:21
    |
978 |                     new_argc;
    |                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/cmd_list.rs:985:42
    |
985 |                 (*cmd).qentry.tqe_next = 0 as *mut cmd;
    |                                          ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/cmd_list.rs:993:9
    |
993 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_list.rs:995:5
     |
995  | /     match current_block {
996  | |         11298138898191919651 => {
997  | |             if lastsplit != argc {
998  | |                 cmd = cmd_parse(
...    |
1025 | |         _ => {}
1026 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
995  ~     if current_block == 11298138898191919651 {
996  +         if lastsplit != argc {
997  +             cmd = cmd_parse(
998  +                 argc - lastsplit,
999  +                 copy_argv.offset(lastsplit as isize),
1000 +                 file,
1001 +                 line,
1002 +                 cause,
1003 +             );
1004 +             if cmd.is_null() {
1005 +                 current_block = 18430944887111189161;
1006 +             } else {
1007 +                 (*cmd).qentry.tqe_next = 0 as *mut cmd;
1008 +                 (*cmd).qentry.tqe_prev = (*cmdlist).list.tqh_last;
1009 +                 *(*cmdlist).list.tqh_last = cmd;
1010 +                 (*cmdlist).list.tqh_last = &mut (*cmd).qentry.tqe_next;
1011 +                 current_block = 11636175345244025579;
1012 +             }
1013 +         } else {
1014 +             current_block = 11636175345244025579;
1015 +         }
1016 +         match current_block {
1017 +             18430944887111189161 => {}
1018 +             _ => {
1019 +                 cmd_free_argv(argc, copy_argv);
1020 +                 return cmdlist;
1021 +             }
1022 +         }
1023 +     }
     |

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1008:46
     |
1008 |                     (*cmd).qentry.tqe_next = 0 as *mut cmd;
     |                                              ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1029:12
     |
1029 |     return 0 as *mut cmd_list;
     |            ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_list.rs:1032:1
     |
1032 | / pub unsafe extern "C" fn cmd_list_free(mut cmdlist: *mut cmd_list) {
1033 | |     let mut cmd: *mut cmd = 0 as *mut cmd;
1034 | |     let mut cmd1: *mut cmd = 0 as *mut cmd;
1035 | |     (*cmdlist).references -= 1;
...    |
1057 | |     free(cmdlist as *mut libc::c_void);
1058 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1033:29
     |
1033 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1034:30
     |
1034 |     let mut cmd1: *mut cmd = 0 as *mut cmd;
     |                              ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_list.rs:1060:1
     |
1060 | / pub unsafe extern "C" fn cmd_list_print(
1061 | |     mut cmdlist: *mut cmd_list,
1062 | | ) -> *mut libc::c_char {
1063 | |     let mut cmd: *mut cmd = 0 as *mut cmd;
...    |
1083 | |     return buf;
1084 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_list.rs:1083:5
     |
1083 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1063:29
     |
1063 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1064:38
     |
1064 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list.rs:1065:39
     |
1065 |     let mut this: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_buffers.rs:944:9
    |
916 | /         let mut init = cmd_entry {
917 | |             name: b"list-buffers\0" as *const u8 as *const libc::c_char,
918 | |             alias: b"lsb\0" as *const u8 as *const libc::c_char,
919 | |             args: {
...   |
942 | |             ),
943 | |         };
    | |__________- unnecessary `let` binding
944 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
916 ~         
917 ~         cmd_entry {
918 +             name: b"list-buffers\0" as *const u8 as *const libc::c_char,
919 +             alias: b"lsb\0" as *const u8 as *const libc::c_char,
920 +             args: {
921 +                 let mut init = C2RustUnnamed_31 {
922 +                     template: b"F:\0" as *const u8 as *const libc::c_char,
923 +                     lower: 0 as libc::c_int,
924 +                     upper: 0 as libc::c_int,
925 +                 };
926 +                 init
927 +             },
928 +             usage: b"[-F format]\0" as *const u8 as *const libc::c_char,
929 +             source: cmd_entry_flag {
930 +                 flag: 0,
931 +                 type_0: CMD_FIND_PANE,
932 +                 flags: 0,
933 +             },
934 +             target: cmd_entry_flag {
935 +                 flag: 0,
936 +                 type_0: CMD_FIND_PANE,
937 +                 flags: 0,
938 +             },
939 +             flags: 0x4 as libc::c_int,
940 +             exec: Some(
941 +                 cmd_list_buffers_exec
942 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
943 +             ),
944 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_buffers.rs:925:17
    |
920 | /                 let mut init = C2RustUnnamed_31 {
921 | |                     template: b"F:\0" as *const u8 as *const libc::c_char,
922 | |                     lower: 0 as libc::c_int,
923 | |                     upper: 0 as libc::c_int,
924 | |                 };
    | |__________________- unnecessary `let` binding
925 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
920 ~                 
921 ~                 C2RustUnnamed_31 {
922 +                     template: b"F:\0" as *const u8 as *const libc::c_char,
923 +                     lower: 0 as libc::c_int,
924 +                     upper: 0 as libc::c_int,
925 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_list_buffers.rs:974:5
    |
974 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list_buffers.rs:952:37
    |
952 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_buffers.rs:953:36
    |
953 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_buffers.rs:954:39
    |
954 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_list_buffers.rs:955:45
    |
955 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_buffers.rs:961:10
    |
961 |     pb = 0 as *mut paste_buffer;
    |          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_clients.rs:966:9
    |
934 | /         let mut init = cmd_entry {
935 | |             name: b"list-clients\0" as *const u8 as *const libc::c_char,
936 | |             alias: b"lsc\0" as *const u8 as *const libc::c_char,
937 | |             args: {
...   |
964 | |             ),
965 | |         };
    | |__________- unnecessary `let` binding
966 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~         
935 ~         cmd_entry {
936 +             name: b"list-clients\0" as *const u8 as *const libc::c_char,
937 +             alias: b"lsc\0" as *const u8 as *const libc::c_char,
938 +             args: {
939 +                 let mut init = C2RustUnnamed_31 {
940 +                     template: b"F:t:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 0 as libc::c_int,
943 +                 };
944 +                 init
945 +             },
946 +             usage: b"[-F format] [-t target-session]\0" as *const u8
947 +                 as *const libc::c_char,
948 +             source: cmd_entry_flag {
949 +                 flag: 0,
950 +                 type_0: CMD_FIND_PANE,
951 +                 flags: 0,
952 +             },
953 +             target: {
954 +                 let mut init = cmd_entry_flag {
955 +                     flag: 't' as i32 as libc::c_char,
956 +                     type_0: CMD_FIND_SESSION,
957 +                     flags: 0 as libc::c_int,
958 +                 };
959 +                 init
960 +             },
961 +             flags: 0x2 as libc::c_int | 0x4 as libc::c_int,
962 +             exec: Some(
963 +                 cmd_list_clients_exec
964 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
965 +             ),
966 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_clients.rs:943:17
    |
938 | /                 let mut init = C2RustUnnamed_31 {
939 | |                     template: b"F:t:\0" as *const u8 as *const libc::c_char,
940 | |                     lower: 0 as libc::c_int,
941 | |                     upper: 0 as libc::c_int,
942 | |                 };
    | |__________________- unnecessary `let` binding
943 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
938 ~                 
939 ~                 C2RustUnnamed_31 {
940 +                     template: b"F:t:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 0 as libc::c_int,
943 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_clients.rs:958:17
    |
953 | /                 let mut init = cmd_entry_flag {
954 | |                     flag: 't' as i32 as libc::c_char,
955 | |                     type_0: CMD_FIND_SESSION,
956 | |                     flags: 0 as libc::c_int,
957 | |                 };
    | |__________________- unnecessary `let` binding
958 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
953 ~                 
954 ~                 cmd_entry_flag {
955 +                     flag: 't' as i32 as libc::c_char,
956 +                     type_0: CMD_FIND_SESSION,
957 +                     flags: 0 as libc::c_int,
958 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_list_clients.rs:1017:5
     |
1017 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list_clients.rs:974:30
    |
974 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_clients.rs:975:31
    |
975 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_clients.rs:976:36
    |
976 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_list_clients.rs:977:45
    |
977 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_clients.rs:979:39
    |
979 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_clients.rs:983:13
    |
983 |         s = 0 as *mut session;
    |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_clients.rs:1004:17
     |
1004 |                 0 as *mut session,
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_clients.rs:1005:17
     |
1005 |                 0 as *mut winlink,
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_clients.rs:1006:17
     |
1006 |                 0 as *mut window_pane,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_list_clients.rs:1013:13
     |
1013 |             idx;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_keys.rs:983:9
    |
955 | /         let mut init = cmd_entry {
956 | |             name: b"list-keys\0" as *const u8 as *const libc::c_char,
957 | |             alias: b"lsk\0" as *const u8 as *const libc::c_char,
958 | |             args: {
...   |
981 | |             ),
982 | |         };
    | |__________- unnecessary `let` binding
983 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
955 ~         
956 ~         cmd_entry {
957 +             name: b"list-keys\0" as *const u8 as *const libc::c_char,
958 +             alias: b"lsk\0" as *const u8 as *const libc::c_char,
959 +             args: {
960 +                 let mut init = C2RustUnnamed_31 {
961 +                     template: b"T:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 0 as libc::c_int,
963 +                     upper: 0 as libc::c_int,
964 +                 };
965 +                 init
966 +             },
967 +             usage: b"[-T key-table]\0" as *const u8 as *const libc::c_char,
968 +             source: cmd_entry_flag {
969 +                 flag: 0,
970 +                 type_0: CMD_FIND_PANE,
971 +                 flags: 0,
972 +             },
973 +             target: cmd_entry_flag {
974 +                 flag: 0,
975 +                 type_0: CMD_FIND_PANE,
976 +                 flags: 0,
977 +             },
978 +             flags: 0x1 as libc::c_int | 0x4 as libc::c_int,
979 +             exec: Some(
980 +                 cmd_list_keys_exec
981 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
982 +             ),
983 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_keys.rs:964:17
    |
959 | /                 let mut init = C2RustUnnamed_31 {
960 | |                     template: b"T:\0" as *const u8 as *const libc::c_char,
961 | |                     lower: 0 as libc::c_int,
962 | |                     upper: 0 as libc::c_int,
963 | |                 };
    | |__________________- unnecessary `let` binding
964 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
959 ~                 
960 ~                 C2RustUnnamed_31 {
961 +                     template: b"T:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 0 as libc::c_int,
963 +                     upper: 0 as libc::c_int,
964 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_list_keys.rs:1017:9
     |
989  | /         let mut init = cmd_entry {
990  | |             name: b"list-commands\0" as *const u8 as *const libc::c_char,
991  | |             alias: b"lscm\0" as *const u8 as *const libc::c_char,
992  | |             args: {
...    |
1015 | |             ),
1016 | |         };
     | |__________- unnecessary `let` binding
1017 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
989  ~         
990  ~         cmd_entry {
991  +             name: b"list-commands\0" as *const u8 as *const libc::c_char,
992  +             alias: b"lscm\0" as *const u8 as *const libc::c_char,
993  +             args: {
994  +                 let mut init = C2RustUnnamed_31 {
995  +                     template: b"F:\0" as *const u8 as *const libc::c_char,
996  +                     lower: 0 as libc::c_int,
997  +                     upper: 0 as libc::c_int,
998  +                 };
999  +                 init
1000 +             },
1001 +             usage: b"[-F format]\0" as *const u8 as *const libc::c_char,
1002 +             source: cmd_entry_flag {
1003 +                 flag: 0,
1004 +                 type_0: CMD_FIND_PANE,
1005 +                 flags: 0,
1006 +             },
1007 +             target: cmd_entry_flag {
1008 +                 flag: 0,
1009 +                 type_0: CMD_FIND_PANE,
1010 +                 flags: 0,
1011 +             },
1012 +             flags: 0x1 as libc::c_int | 0x4 as libc::c_int,
1013 +             exec: Some(
1014 +                 cmd_list_keys_exec
1015 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1016 +             ),
1017 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_keys.rs:998:17
    |
993 | /                 let mut init = C2RustUnnamed_31 {
994 | |                     template: b"F:\0" as *const u8 as *const libc::c_char,
995 | |                     lower: 0 as libc::c_int,
996 | |                     upper: 0 as libc::c_int,
997 | |                 };
    | |__________________- unnecessary `let` binding
998 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
993 ~                 
994 ~                 C2RustUnnamed_31 {
995 +                     template: b"F:\0" as *const u8 as *const libc::c_char,
996 +                     lower: 0 as libc::c_int,
997 +                     upper: 0 as libc::c_int,
998 +                 }
    |

warning: this boolean expression can be simplified
    --> src/cmd_list_keys.rs:1055:12
     |
1055 |           if !(!tablename.is_null()
     |  ____________^
1056 | |             && strcmp((*table).name, tablename) != 0 as libc::c_int)
     | |____________________________________________________________________^ help: try: `tablename.is_null() || strcmp((*table).name, tablename) == 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_list_keys.rs:1079:12
     |
1079 |           if !(!tablename.is_null()
     |  ____________^
1080 | |             && strcmp((*table).name, tablename) != 0 as libc::c_int)
     | |____________________________________________________________________^ help: try: `tablename.is_null() || strcmp((*table).name, tablename) == 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_list_keys.rs:1139:5
     |
1139 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1025:37
     |
1025 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1026:36
     |
1026 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1027:40
     |
1027 |     let mut key: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1028:46
     |
1028 |     let mut tablename: *const libc::c_char = 0 as *const libc::c_char;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1029:38
     |
1029 |     let mut r: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1030:37
     |
1030 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_list_keys.rs:1205:5
     |
1205 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1146:45
     |
1146 |     let mut entryp: *mut *const cmd_entry = 0 as *mut *const cmd_entry;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const cmd_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1147:39
     |
1147 |     let mut entry: *const cmd_entry = 0 as *const cmd_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<cmd_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1148:36
     |
1148 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1149:45
     |
1149 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_keys.rs:1150:38
     |
1150 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1151:39
     |
1151 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1160:9
     |
1160 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1161:9
     |
1161 |         0 as *mut session,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1162:9
     |
1162 |         0 as *mut winlink,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_keys.rs:1163:9
     |
1163 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_list_keys.rs:1202:9
     |
1202 |         entryp;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_panes.rs:969:9
    |
937 | /         let mut init = cmd_entry {
938 | |             name: b"list-panes\0" as *const u8 as *const libc::c_char,
939 | |             alias: b"lsp\0" as *const u8 as *const libc::c_char,
940 | |             args: {
...   |
967 | |             ),
968 | |         };
    | |__________- unnecessary `let` binding
969 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
937 ~         
938 ~         cmd_entry {
939 +             name: b"list-panes\0" as *const u8 as *const libc::c_char,
940 +             alias: b"lsp\0" as *const u8 as *const libc::c_char,
941 +             args: {
942 +                 let mut init = C2RustUnnamed_31 {
943 +                     template: b"asF:t:\0" as *const u8 as *const libc::c_char,
944 +                     lower: 0 as libc::c_int,
945 +                     upper: 0 as libc::c_int,
946 +                 };
947 +                 init
948 +             },
949 +             usage: b"[-as] [-F format] [-t target-window]\0" as *const u8
950 +                 as *const libc::c_char,
951 +             source: cmd_entry_flag {
952 +                 flag: 0,
953 +                 type_0: CMD_FIND_PANE,
954 +                 flags: 0,
955 +             },
956 +             target: {
957 +                 let mut init = cmd_entry_flag {
958 +                     flag: 't' as i32 as libc::c_char,
959 +                     type_0: CMD_FIND_WINDOW,
960 +                     flags: 0 as libc::c_int,
961 +                 };
962 +                 init
963 +             },
964 +             flags: 0x4 as libc::c_int,
965 +             exec: Some(
966 +                 cmd_list_panes_exec
967 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
968 +             ),
969 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_panes.rs:946:17
    |
941 | /                 let mut init = C2RustUnnamed_31 {
942 | |                     template: b"asF:t:\0" as *const u8 as *const libc::c_char,
943 | |                     lower: 0 as libc::c_int,
944 | |                     upper: 0 as libc::c_int,
945 | |                 };
    | |__________________- unnecessary `let` binding
946 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
941 ~                 
942 ~                 C2RustUnnamed_31 {
943 +                     template: b"asF:t:\0" as *const u8 as *const libc::c_char,
944 +                     lower: 0 as libc::c_int,
945 +                     upper: 0 as libc::c_int,
946 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_panes.rs:961:17
    |
956 | /                 let mut init = cmd_entry_flag {
957 | |                     flag: 't' as i32 as libc::c_char,
958 | |                     type_0: CMD_FIND_WINDOW,
959 | |                     flags: 0 as libc::c_int,
960 | |                 };
    | |__________________- unnecessary `let` binding
961 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
956 ~                 
957 ~                 cmd_entry_flag {
958 +                     flag: 't' as i32 as libc::c_char,
959 +                     type_0: CMD_FIND_WINDOW,
960 +                     flags: 0 as libc::c_int,
961 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_list_panes.rs:986:5
    |
986 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list_panes.rs:992:31
    |
992 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_panes.rs:1005:32
     |
1005 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_panes.rs:1020:36
     |
1020 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_panes.rs:1022:36
     |
1022 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_panes.rs:1023:45
     |
1023 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_panes.rs:1024:39
     |
1024 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_panes.rs:1053:29
     |
1053 |         format_defaults(ft, 0 as *mut client, s, wl, wp);
     |                             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_list_panes.rs:1059:9
     |
1059 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_sessions.rs:962:9
    |
934 | /         let mut init = cmd_entry {
935 | |             name: b"list-sessions\0" as *const u8 as *const libc::c_char,
936 | |             alias: b"ls\0" as *const u8 as *const libc::c_char,
937 | |             args: {
...   |
960 | |             ),
961 | |         };
    | |__________- unnecessary `let` binding
962 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~         
935 ~         cmd_entry {
936 +             name: b"list-sessions\0" as *const u8 as *const libc::c_char,
937 +             alias: b"ls\0" as *const u8 as *const libc::c_char,
938 +             args: {
939 +                 let mut init = C2RustUnnamed_31 {
940 +                     template: b"F:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 0 as libc::c_int,
943 +                 };
944 +                 init
945 +             },
946 +             usage: b"[-F format]\0" as *const u8 as *const libc::c_char,
947 +             source: cmd_entry_flag {
948 +                 flag: 0,
949 +                 type_0: CMD_FIND_PANE,
950 +                 flags: 0,
951 +             },
952 +             target: cmd_entry_flag {
953 +                 flag: 0,
954 +                 type_0: CMD_FIND_PANE,
955 +                 flags: 0,
956 +             },
957 +             flags: 0x4 as libc::c_int,
958 +             exec: Some(
959 +                 cmd_list_sessions_exec
960 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
961 +             ),
962 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_sessions.rs:943:17
    |
938 | /                 let mut init = C2RustUnnamed_31 {
939 | |                     template: b"F:\0" as *const u8 as *const libc::c_char,
940 | |                     lower: 0 as libc::c_int,
941 | |                     upper: 0 as libc::c_int,
942 | |                 };
    | |__________________- unnecessary `let` binding
943 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
938 ~                 
939 ~                 C2RustUnnamed_31 {
940 +                     template: b"F:\0" as *const u8 as *const libc::c_char,
941 +                     lower: 0 as libc::c_int,
942 +                     upper: 0 as libc::c_int,
943 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_list_sessions.rs:1005:5
     |
1005 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:970:31
    |
970 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:972:36
    |
972 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_list_sessions.rs:973:45
    |
973 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:974:39
    |
974 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:992:13
    |
992 |             0 as *mut client,
    |             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:994:13
    |
994 |             0 as *mut winlink,
    |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_list_sessions.rs:995:13
    |
995 |             0 as *mut window_pane,
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_list_sessions.rs:1002:9
     |
1002 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_windows.rs:969:9
    |
937 | /         let mut init = cmd_entry {
938 | |             name: b"list-windows\0" as *const u8 as *const libc::c_char,
939 | |             alias: b"lsw\0" as *const u8 as *const libc::c_char,
940 | |             args: {
...   |
967 | |             ),
968 | |         };
    | |__________- unnecessary `let` binding
969 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
937 ~         
938 ~         cmd_entry {
939 +             name: b"list-windows\0" as *const u8 as *const libc::c_char,
940 +             alias: b"lsw\0" as *const u8 as *const libc::c_char,
941 +             args: {
942 +                 let mut init = C2RustUnnamed_31 {
943 +                     template: b"F:at:\0" as *const u8 as *const libc::c_char,
944 +                     lower: 0 as libc::c_int,
945 +                     upper: 0 as libc::c_int,
946 +                 };
947 +                 init
948 +             },
949 +             usage: b"[-a] [-F format] [-t target-session]\0" as *const u8
950 +                 as *const libc::c_char,
951 +             source: cmd_entry_flag {
952 +                 flag: 0,
953 +                 type_0: CMD_FIND_PANE,
954 +                 flags: 0,
955 +             },
956 +             target: {
957 +                 let mut init = cmd_entry_flag {
958 +                     flag: 't' as i32 as libc::c_char,
959 +                     type_0: CMD_FIND_SESSION,
960 +                     flags: 0 as libc::c_int,
961 +                 };
962 +                 init
963 +             },
964 +             flags: 0x4 as libc::c_int,
965 +             exec: Some(
966 +                 cmd_list_windows_exec
967 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
968 +             ),
969 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_windows.rs:946:17
    |
941 | /                 let mut init = C2RustUnnamed_31 {
942 | |                     template: b"F:at:\0" as *const u8 as *const libc::c_char,
943 | |                     lower: 0 as libc::c_int,
944 | |                     upper: 0 as libc::c_int,
945 | |                 };
    | |__________________- unnecessary `let` binding
946 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
941 ~                 
942 ~                 C2RustUnnamed_31 {
943 +                     template: b"F:at:\0" as *const u8 as *const libc::c_char,
944 +                     lower: 0 as libc::c_int,
945 +                     upper: 0 as libc::c_int,
946 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_list_windows.rs:961:17
    |
956 | /                 let mut init = cmd_entry_flag {
957 | |                     flag: 't' as i32 as libc::c_char,
958 | |                     type_0: CMD_FIND_SESSION,
959 | |                     flags: 0 as libc::c_int,
960 | |                 };
    | |__________________- unnecessary `let` binding
961 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
956 ~                 
957 ~                 cmd_entry_flag {
958 +                     flag: 't' as i32 as libc::c_char,
959 +                     type_0: CMD_FIND_SESSION,
960 +                     flags: 0 as libc::c_int,
961 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_list_windows.rs:982:5
    |
982 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_list_windows.rs:988:31
    |
988 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_windows.rs:1002:32
     |
1002 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_windows.rs:1004:36
     |
1004 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_list_windows.rs:1005:45
     |
1005 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_windows.rs:1006:39
     |
1006 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_windows.rs:1031:29
     |
1031 |         format_defaults(ft, 0 as *mut client, s, wl, 0 as *mut window_pane);
     |                             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_list_windows.rs:1031:54
     |
1031 |         format_defaults(ft, 0 as *mut client, s, wl, 0 as *mut window_pane);
     |                                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_list_windows.rs:1037:9
     |
1037 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/cmd_load_buffer.rs:1027:9
     |
999  | /         let mut init = cmd_entry {
1000 | |             name: b"load-buffer\0" as *const u8 as *const libc::c_char,
1001 | |             alias: b"loadb\0" as *const u8 as *const libc::c_char,
1002 | |             args: {
...    |
1025 | |             ),
1026 | |         };
     | |__________- unnecessary `let` binding
1027 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
999  ~         
1000 ~         cmd_entry {
1001 +             name: b"load-buffer\0" as *const u8 as *const libc::c_char,
1002 +             alias: b"loadb\0" as *const u8 as *const libc::c_char,
1003 +             args: {
1004 +                 let mut init = C2RustUnnamed_31 {
1005 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
1006 +                     lower: 1 as libc::c_int,
1007 +                     upper: 1 as libc::c_int,
1008 +                 };
1009 +                 init
1010 +             },
1011 +             usage: b"[-b buffer-name] path\0" as *const u8 as *const libc::c_char,
1012 +             source: cmd_entry_flag {
1013 +                 flag: 0,
1014 +                 type_0: CMD_FIND_PANE,
1015 +                 flags: 0,
1016 +             },
1017 +             target: cmd_entry_flag {
1018 +                 flag: 0,
1019 +                 type_0: CMD_FIND_PANE,
1020 +                 flags: 0,
1021 +             },
1022 +             flags: 0x4 as libc::c_int,
1023 +             exec: Some(
1024 +                 cmd_load_buffer_exec
1025 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1026 +             ),
1027 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_load_buffer.rs:1008:17
     |
1003 | /                 let mut init = C2RustUnnamed_31 {
1004 | |                     template: b"b:\0" as *const u8 as *const libc::c_char,
1005 | |                     lower: 1 as libc::c_int,
1006 | |                     upper: 1 as libc::c_int,
1007 | |                 };
     | |__________________- unnecessary `let` binding
1008 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1003 ~                 
1004 ~                 C2RustUnnamed_31 {
1005 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
1006 +                     lower: 1 as libc::c_int,
1007 +                     upper: 1 as libc::c_int,
1008 +                 }
     |

warning: this boolean expression can be simplified
    --> src/cmd_load_buffer.rs:1101:16
     |
1101 |             if !(ch != -(1 as libc::c_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ch == -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_load_buffer.rs:1159:5
     |
1159 |     return CMD_RETURN_ERROR;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1036:48
     |
1036 |     let mut cdata: *mut cmd_load_buffer_data = 0 as *mut cmd_load_buffer_data;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_load_buffer_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1038:28
     |
1038 |     let mut f: *mut FILE = 0 as *mut FILE;
     |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_load_buffer.rs:1039:41
     |
1039 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_load_buffer.rs:1040:44
     |
1040 |     let mut bufname: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1041:40
     |
1041 |     let mut pdata: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1042:44
     |
1042 |     let mut new_pdata: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1043:40
     |
1043 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1044:39
     |
1044 |     let mut file: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_load_buffer.rs:1048:15
     |
1048 |     bufname = 0 as *const libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1097:17
     |
1097 |         pdata = 0 as *mut libc::c_char;
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_load_buffer.rs:1176:8
     |
1176 |     if !((*c).flags & 0x200 as libc::c_int != 0) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).flags & 0x200 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1167:40
     |
1167 |     let mut pdata: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1168:40
     |
1168 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_load_buffer.rs:1169:40
     |
1169 |     let mut saved: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:940:9
    |
912 | /         let mut init = cmd_entry {
913 | |             name: b"lock-server\0" as *const u8 as *const libc::c_char,
914 | |             alias: b"lock\0" as *const u8 as *const libc::c_char,
915 | |             args: {
...   |
938 | |             ),
939 | |         };
    | |__________- unnecessary `let` binding
940 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
912 ~         
913 ~         cmd_entry {
914 +             name: b"lock-server\0" as *const u8 as *const libc::c_char,
915 +             alias: b"lock\0" as *const u8 as *const libc::c_char,
916 +             args: {
917 +                 let mut init = C2RustUnnamed_31 {
918 +                     template: b"\0" as *const u8 as *const libc::c_char,
919 +                     lower: 0 as libc::c_int,
920 +                     upper: 0 as libc::c_int,
921 +                 };
922 +                 init
923 +             },
924 +             usage: b"\0" as *const u8 as *const libc::c_char,
925 +             source: cmd_entry_flag {
926 +                 flag: 0,
927 +                 type_0: CMD_FIND_PANE,
928 +                 flags: 0,
929 +             },
930 +             target: cmd_entry_flag {
931 +                 flag: 0,
932 +                 type_0: CMD_FIND_PANE,
933 +                 flags: 0,
934 +             },
935 +             flags: 0x4 as libc::c_int,
936 +             exec: Some(
937 +                 cmd_lock_server_exec
938 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
939 +             ),
940 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:921:17
    |
916 | /                 let mut init = C2RustUnnamed_31 {
917 | |                     template: b"\0" as *const u8 as *const libc::c_char,
918 | |                     lower: 0 as libc::c_int,
919 | |                     upper: 0 as libc::c_int,
920 | |                 };
    | |__________________- unnecessary `let` binding
921 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
916 ~                 
917 ~                 C2RustUnnamed_31 {
918 +                     template: b"\0" as *const u8 as *const libc::c_char,
919 +                     lower: 0 as libc::c_int,
920 +                     upper: 0 as libc::c_int,
921 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:977:9
    |
946 | /         let mut init = cmd_entry {
947 | |             name: b"lock-session\0" as *const u8 as *const libc::c_char,
948 | |             alias: b"locks\0" as *const u8 as *const libc::c_char,
949 | |             args: {
...   |
975 | |             ),
976 | |         };
    | |__________- unnecessary `let` binding
977 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
946 ~         
947 ~         cmd_entry {
948 +             name: b"lock-session\0" as *const u8 as *const libc::c_char,
949 +             alias: b"locks\0" as *const u8 as *const libc::c_char,
950 +             args: {
951 +                 let mut init = C2RustUnnamed_31 {
952 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
953 +                     lower: 0 as libc::c_int,
954 +                     upper: 0 as libc::c_int,
955 +                 };
956 +                 init
957 +             },
958 +             usage: b"[-t target-session]\0" as *const u8 as *const libc::c_char,
959 +             source: cmd_entry_flag {
960 +                 flag: 0,
961 +                 type_0: CMD_FIND_PANE,
962 +                 flags: 0,
963 +             },
964 +             target: {
965 +                 let mut init = cmd_entry_flag {
966 +                     flag: 't' as i32 as libc::c_char,
967 +                     type_0: CMD_FIND_SESSION,
968 +                     flags: 0 as libc::c_int,
969 +                 };
970 +                 init
971 +             },
972 +             flags: 0x4 as libc::c_int,
973 +             exec: Some(
974 +                 cmd_lock_server_exec
975 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
976 +             ),
977 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:955:17
    |
950 | /                 let mut init = C2RustUnnamed_31 {
951 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
952 | |                     lower: 0 as libc::c_int,
953 | |                     upper: 0 as libc::c_int,
954 | |                 };
    | |__________________- unnecessary `let` binding
955 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
950 ~                 
951 ~                 C2RustUnnamed_31 {
952 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
953 +                     lower: 0 as libc::c_int,
954 +                     upper: 0 as libc::c_int,
955 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:969:17
    |
964 | /                 let mut init = cmd_entry_flag {
965 | |                     flag: 't' as i32 as libc::c_char,
966 | |                     type_0: CMD_FIND_SESSION,
967 | |                     flags: 0 as libc::c_int,
968 | |                 };
    | |__________________- unnecessary `let` binding
969 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
964 ~                 
965 ~                 cmd_entry_flag {
966 +                     flag: 't' as i32 as libc::c_char,
967 +                     type_0: CMD_FIND_SESSION,
968 +                     flags: 0 as libc::c_int,
969 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_lock_server.rs:1011:9
     |
983  | /         let mut init = cmd_entry {
984  | |             name: b"lock-client\0" as *const u8 as *const libc::c_char,
985  | |             alias: b"lockc\0" as *const u8 as *const libc::c_char,
986  | |             args: {
...    |
1009 | |             ),
1010 | |         };
     | |__________- unnecessary `let` binding
1011 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
983  ~         
984  ~         cmd_entry {
985  +             name: b"lock-client\0" as *const u8 as *const libc::c_char,
986  +             alias: b"lockc\0" as *const u8 as *const libc::c_char,
987  +             args: {
988  +                 let mut init = C2RustUnnamed_31 {
989  +                     template: b"t:\0" as *const u8 as *const libc::c_char,
990  +                     lower: 0 as libc::c_int,
991  +                     upper: 0 as libc::c_int,
992  +                 };
993  +                 init
994  +             },
995  +             usage: b"[-t target-client]\0" as *const u8 as *const libc::c_char,
996  +             source: cmd_entry_flag {
997  +                 flag: 0,
998  +                 type_0: CMD_FIND_PANE,
999  +                 flags: 0,
1000 +             },
1001 +             target: cmd_entry_flag {
1002 +                 flag: 0,
1003 +                 type_0: CMD_FIND_PANE,
1004 +                 flags: 0,
1005 +             },
1006 +             flags: 0x4 as libc::c_int,
1007 +             exec: Some(
1008 +                 cmd_lock_server_exec
1009 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1010 +             ),
1011 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_lock_server.rs:992:17
    |
987 | /                 let mut init = C2RustUnnamed_31 {
988 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
989 | |                     lower: 0 as libc::c_int,
990 | |                     upper: 0 as libc::c_int,
991 | |                 };
    | |__________________- unnecessary `let` binding
992 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
987 ~                 
988 ~                 C2RustUnnamed_31 {
989 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
990 +                     lower: 0 as libc::c_int,
991 +                     upper: 0 as libc::c_int,
992 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_lock_server.rs:1036:5
     |
1036 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_lock_server.rs:1019:30
     |
1019 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:960:9
    |
928 | /         let mut init = cmd_entry {
929 | |             name: b"move-window\0" as *const u8 as *const libc::c_char,
930 | |             alias: b"movew\0" as *const u8 as *const libc::c_char,
931 | |             args: {
...   |
958 | |             ),
959 | |         };
    | |__________- unnecessary `let` binding
960 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
928 ~         
929 ~         cmd_entry {
930 +             name: b"move-window\0" as *const u8 as *const libc::c_char,
931 +             alias: b"movew\0" as *const u8 as *const libc::c_char,
932 +             args: {
933 +                 let mut init = C2RustUnnamed_31 {
934 +                     template: b"adkrs:t:\0" as *const u8 as *const libc::c_char,
935 +                     lower: 0 as libc::c_int,
936 +                     upper: 0 as libc::c_int,
937 +                 };
938 +                 init
939 +             },
940 +             usage: b"[-dkr] [-s src-window] [-t dst-window]\0" as *const u8
941 +                 as *const libc::c_char,
942 +             source: {
943 +                 let mut init = cmd_entry_flag {
944 +                     flag: 's' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_WINDOW,
946 +                     flags: 0 as libc::c_int,
947 +                 };
948 +                 init
949 +             },
950 +             target: cmd_entry_flag {
951 +                 flag: 0,
952 +                 type_0: CMD_FIND_PANE,
953 +                 flags: 0,
954 +             },
955 +             flags: 0 as libc::c_int,
956 +             exec: Some(
957 +                 cmd_move_window_exec
958 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
959 +             ),
960 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:937:17
    |
932 | /                 let mut init = C2RustUnnamed_31 {
933 | |                     template: b"adkrs:t:\0" as *const u8 as *const libc::c_char,
934 | |                     lower: 0 as libc::c_int,
935 | |                     upper: 0 as libc::c_int,
936 | |                 };
    | |__________________- unnecessary `let` binding
937 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
932 ~                 
933 ~                 C2RustUnnamed_31 {
934 +                     template: b"adkrs:t:\0" as *const u8 as *const libc::c_char,
935 +                     lower: 0 as libc::c_int,
936 +                     upper: 0 as libc::c_int,
937 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:947:17
    |
942 | /                 let mut init = cmd_entry_flag {
943 | |                     flag: 's' as i32 as libc::c_char,
944 | |                     type_0: CMD_FIND_WINDOW,
945 | |                     flags: 0 as libc::c_int,
946 | |                 };
    | |__________________- unnecessary `let` binding
947 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
942 ~                 
943 ~                 cmd_entry_flag {
944 +                     flag: 's' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_WINDOW,
946 +                     flags: 0 as libc::c_int,
947 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:998:9
    |
966 | /         let mut init = cmd_entry {
967 | |             name: b"link-window\0" as *const u8 as *const libc::c_char,
968 | |             alias: b"linkw\0" as *const u8 as *const libc::c_char,
969 | |             args: {
...   |
996 | |             ),
997 | |         };
    | |__________- unnecessary `let` binding
998 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
966 ~         
967 ~         cmd_entry {
968 +             name: b"link-window\0" as *const u8 as *const libc::c_char,
969 +             alias: b"linkw\0" as *const u8 as *const libc::c_char,
970 +             args: {
971 +                 let mut init = C2RustUnnamed_31 {
972 +                     template: b"adks:t:\0" as *const u8 as *const libc::c_char,
973 +                     lower: 0 as libc::c_int,
974 +                     upper: 0 as libc::c_int,
975 +                 };
976 +                 init
977 +             },
978 +             usage: b"[-dk] [-s src-window] [-t dst-window]\0" as *const u8
979 +                 as *const libc::c_char,
980 +             source: {
981 +                 let mut init = cmd_entry_flag {
982 +                     flag: 's' as i32 as libc::c_char,
983 +                     type_0: CMD_FIND_WINDOW,
984 +                     flags: 0 as libc::c_int,
985 +                 };
986 +                 init
987 +             },
988 +             target: cmd_entry_flag {
989 +                 flag: 0,
990 +                 type_0: CMD_FIND_PANE,
991 +                 flags: 0,
992 +             },
993 +             flags: 0 as libc::c_int,
994 +             exec: Some(
995 +                 cmd_move_window_exec
996 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
997 +             ),
998 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:975:17
    |
970 | /                 let mut init = C2RustUnnamed_31 {
971 | |                     template: b"adks:t:\0" as *const u8 as *const libc::c_char,
972 | |                     lower: 0 as libc::c_int,
973 | |                     upper: 0 as libc::c_int,
974 | |                 };
    | |__________________- unnecessary `let` binding
975 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
970 ~                 
971 ~                 C2RustUnnamed_31 {
972 +                     template: b"adks:t:\0" as *const u8 as *const libc::c_char,
973 +                     lower: 0 as libc::c_int,
974 +                     upper: 0 as libc::c_int,
975 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_move_window.rs:985:17
    |
980 | /                 let mut init = cmd_entry_flag {
981 | |                     flag: 's' as i32 as libc::c_char,
982 | |                     type_0: CMD_FIND_WINDOW,
983 | |                     flags: 0 as libc::c_int,
984 | |                 };
    | |__________________- unnecessary `let` binding
985 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
980 ~                 
981 ~                 cmd_entry_flag {
982 +                     flag: 's' as i32 as libc::c_char,
983 +                     type_0: CMD_FIND_WINDOW,
984 +                     flags: 0 as libc::c_int,
985 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_move_window.rs:1084:5
     |
1084 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_move_window.rs:1007:33
     |
1007 |     let mut src: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_move_window.rs:1008:33
     |
1008 |     let mut dst: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_move_window.rs:1009:32
     |
1009 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_move_window.rs:1010:40
     |
1010 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1099:9
     |
1066 | /         let mut init = cmd_entry {
1067 | |             name: b"new-session\0" as *const u8 as *const libc::c_char,
1068 | |             alias: b"new\0" as *const u8 as *const libc::c_char,
1069 | |             args: {
...    |
1097 | |             ),
1098 | |         };
     | |__________- unnecessary `let` binding
1099 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1066 ~         
1067 ~         cmd_entry {
1068 +             name: b"new-session\0" as *const u8 as *const libc::c_char,
1069 +             alias: b"new\0" as *const u8 as *const libc::c_char,
1070 +             args: {
1071 +                 let mut init = C2RustUnnamed_31 {
1072 +                     template: b"Ac:dDEF:n:Ps:t:x:y:\0" as *const u8
1073 +                         as *const libc::c_char,
1074 +                     lower: 0 as libc::c_int,
1075 +                     upper: -(1 as libc::c_int),
1076 +                 };
1077 +                 init
1078 +             },
1079 +             usage: b"[-AdDEP] [-c start-directory] [-F format] [-n window-name] [-s session-name] [-t target-session] [-x width] [-y height] [command]\0"
1080 +                 as *const u8 as *const libc::c_char,
1081 +             source: cmd_entry_flag {
1082 +                 flag: 0,
1083 +                 type_0: CMD_FIND_PANE,
1084 +                 flags: 0,
1085 +             },
1086 +             target: {
1087 +                 let mut init = cmd_entry_flag {
1088 +                     flag: 't' as i32 as libc::c_char,
1089 +                     type_0: CMD_FIND_SESSION,
1090 +                     flags: 0x40 as libc::c_int,
1091 +                 };
1092 +                 init
1093 +             },
1094 +             flags: 0x1 as libc::c_int,
1095 +             exec: Some(
1096 +                 cmd_new_session_exec
1097 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1098 +             ),
1099 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1076:17
     |
1070 | /                 let mut init = C2RustUnnamed_31 {
1071 | |                     template: b"Ac:dDEF:n:Ps:t:x:y:\0" as *const u8
1072 | |                         as *const libc::c_char,
1073 | |                     lower: 0 as libc::c_int,
1074 | |                     upper: -(1 as libc::c_int),
1075 | |                 };
     | |__________________- unnecessary `let` binding
1076 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1070 ~                 
1071 ~                 C2RustUnnamed_31 {
1072 +                     template: b"Ac:dDEF:n:Ps:t:x:y:\0" as *const u8
1073 +                         as *const libc::c_char,
1074 +                     lower: 0 as libc::c_int,
1075 +                     upper: -(1 as libc::c_int),
1076 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1091:17
     |
1086 | /                 let mut init = cmd_entry_flag {
1087 | |                     flag: 't' as i32 as libc::c_char,
1088 | |                     type_0: CMD_FIND_SESSION,
1089 | |                     flags: 0x40 as libc::c_int,
1090 | |                 };
     | |__________________- unnecessary `let` binding
1091 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1086 ~                 
1087 ~                 cmd_entry_flag {
1088 +                     flag: 't' as i32 as libc::c_char,
1089 +                     type_0: CMD_FIND_SESSION,
1090 +                     flags: 0x40 as libc::c_int,
1091 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1136:9
     |
1105 | /         let mut init = cmd_entry {
1106 | |             name: b"has-session\0" as *const u8 as *const libc::c_char,
1107 | |             alias: b"has\0" as *const u8 as *const libc::c_char,
1108 | |             args: {
...    |
1134 | |             ),
1135 | |         };
     | |__________- unnecessary `let` binding
1136 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1105 ~         
1106 ~         cmd_entry {
1107 +             name: b"has-session\0" as *const u8 as *const libc::c_char,
1108 +             alias: b"has\0" as *const u8 as *const libc::c_char,
1109 +             args: {
1110 +                 let mut init = C2RustUnnamed_31 {
1111 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1112 +                     lower: 0 as libc::c_int,
1113 +                     upper: 0 as libc::c_int,
1114 +                 };
1115 +                 init
1116 +             },
1117 +             usage: b"[-t target-session]\0" as *const u8 as *const libc::c_char,
1118 +             source: cmd_entry_flag {
1119 +                 flag: 0,
1120 +                 type_0: CMD_FIND_PANE,
1121 +                 flags: 0,
1122 +             },
1123 +             target: {
1124 +                 let mut init = cmd_entry_flag {
1125 +                     flag: 't' as i32 as libc::c_char,
1126 +                     type_0: CMD_FIND_SESSION,
1127 +                     flags: 0 as libc::c_int,
1128 +                 };
1129 +                 init
1130 +             },
1131 +             flags: 0 as libc::c_int,
1132 +             exec: Some(
1133 +                 cmd_new_session_exec
1134 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1135 +             ),
1136 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1114:17
     |
1109 | /                 let mut init = C2RustUnnamed_31 {
1110 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
1111 | |                     lower: 0 as libc::c_int,
1112 | |                     upper: 0 as libc::c_int,
1113 | |                 };
     | |__________________- unnecessary `let` binding
1114 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1109 ~                 
1110 ~                 C2RustUnnamed_31 {
1111 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1112 +                     lower: 0 as libc::c_int,
1113 +                     upper: 0 as libc::c_int,
1114 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_session.rs:1128:17
     |
1123 | /                 let mut init = cmd_entry_flag {
1124 | |                     flag: 't' as i32 as libc::c_char,
1125 | |                     type_0: CMD_FIND_SESSION,
1126 | |                     flags: 0 as libc::c_int,
1127 | |                 };
     | |__________________- unnecessary `let` binding
1128 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1123 ~                 
1124 ~                 cmd_entry_flag {
1125 +                     flag: 't' as i32 as libc::c_char,
1126 +                     type_0: CMD_FIND_SESSION,
1127 +                     flags: 0 as libc::c_int,
1128 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_new_session.rs:1641:5
     |
1641 |     return CMD_RETURN_ERROR;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1146:31
     |
1146 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1147:34
     |
1147 |     let mut as_0: *mut session = 0 as *mut session;
     |                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1148:39
     |
1148 |     let mut groupwith: *mut session = 0 as *mut session;
     |                                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1149:30
     |
1149 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1150:33
     |
1150 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1161:34
     |
1161 |     let mut tiop: *mut termios = 0 as *mut termios;
     |                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<termios>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1162:38
     |
1162 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1163:43
     |
1163 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1164:45
     |
1164 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1165:42
     |
1165 |     let mut group: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1166:43
     |
1166 |     let mut prefix: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1167:41
     |
1167 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1168:40
     |
1168 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1169:40
     |
1169 |     let mut tmp: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1170:44
     |
1170 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1171:40
     |
1171 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1172:37
     |
1172 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1173:42
     |
1173 |     let mut newname: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1174:38
     |
1174 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1182:42
     |
1182 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1185:18
     |
1185 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1186:12
     |
1186 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1187:13
     |
1187 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1188:12
     |
1188 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1189:13
     |
1189 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1207:15
     |
1207 |     newname = 0 as *mut libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1213:13
     |
1213 |             0 as *mut session,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1214:13
     |
1214 |             0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1215:13
     |
1215 |             0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1233:25
     |
1233 |                         0 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_new_session.rs:1252:5
     |
1252 | /     match current_block {
1253 | |         11584701595673473500 => {
1254 | |             group = args_get(args, 't' as i32 as u_char);
1255 | |             if !group.is_null() {
...    |
1637 | |         _ => {}
1638 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1252 ~     if current_block == 11584701595673473500 {
1253 +         group = args_get(args, 't' as i32 as u_char);
1254 +         if !group.is_null() {
1255 +             groupwith = (*item).target.s;
1256 +             if groupwith.is_null() {
1257 +                 if session_check_name(group) == 0 {
1258 +                     cmdq_error(
1259 +                         item,
1260 +                         b"bad group name: %s\0" as *const u8 as *const libc::c_char,
1261 +                         group,
1262 +                     );
1263 +                     current_block = 3504328375851313951;
1264 +                 } else {
1265 +                     sg = session_group_find(group);
1266 +                     current_block = 14763689060501151050;
1267 +                 }
1268 +             } else {
1269 +                 sg = session_group_contains(groupwith);
1270 +                 current_block = 14763689060501151050;
1271 +             }
1272 +             match current_block {
1273 +                 3504328375851313951 => {}
1274 +                 _ => {
1275 +                     if !sg.is_null() {
1276 +                         prefix = (*sg).name;
1277 +                     } else if !groupwith.is_null() {
1278 +                         prefix = (*groupwith).name;
1279 +                     } else {
1280 +                         prefix = group;
1281 +                     }
1282 +                     current_block = 7333393191927787629;
1283 +                 }
1284 +             }
1285 +         } else {
1286 +             groupwith = 0 as *mut session;
1287 +             sg = 0 as *mut session_group;
1288 +             prefix = 0 as *const libc::c_char;
1289 +             current_block = 7333393191927787629;
1290 +         }
1291 +         match current_block {
1292 +             3504328375851313951 => {}
1293 +             _ => {
1294 +                 detached = args_has(args, 'd' as i32 as u_char);
1295 +                 if c.is_null() {
1296 +                     detached = 1 as libc::c_int;
1297 +                 } else if (*c).flags & 0x2000 as libc::c_int != 0 {
1298 +                     is_control = 1 as libc::c_int;
1299 +                 }
1300 +                 already_attached = 0 as libc::c_int;
1301 +                 if !c.is_null() && !((*c).session).is_null() {
1302 +                     already_attached = 1 as libc::c_int;
1303 +                 }
1304 +                 tmp = args_get(args, 'c' as i32 as u_char);
1305 +                 if !tmp.is_null() {
1306 +                     cwd = format_single(
1307 +                         item,
1308 +                         tmp,
1309 +                         c,
1310 +                         0 as *mut session,
1311 +                         0 as *mut winlink,
1312 +                         0 as *mut window_pane,
1313 +                     );
1314 +                 } else if !c.is_null() && ((*c).session).is_null()
1315 +                     && !((*c).cwd).is_null()
1316 +                 {
1317 +                     cwd = xstrdup((*c).cwd);
1318 +                 } else {
1319 +                     cwd = xstrdup(b".\0" as *const u8 as *const libc::c_char);
1320 +                 }
1321 +                 if detached == 0 && already_attached == 0
1322 +                     && (*c).tty.fd != -(1 as libc::c_int)
1323 +                 {
1324 +                     if server_client_check_nested((*item).client) != 0 {
1325 +                         cmdq_error(
1326 +                             item,
1327 +                             b"sessions should be nested with care, unset $TMUX to force\0"
1328 +                                 as *const u8 as *const libc::c_char,
1329 +                         );
1330 +                         return CMD_RETURN_ERROR;
1331 +                     }
1332 +                     if tcgetattr((*c).tty.fd, &mut tio) != 0 as libc::c_int {
1333 +                         fatal(
1334 +                             b"tcgetattr failed\0" as *const u8 as *const libc::c_char,
1335 +                         );
1336 +                     }
1337 +                     tiop = &mut tio;
1338 +                 } else {
1339 +                     tiop = 0 as *mut termios;
1340 +                 }
1341 +                 if detached == 0 && already_attached == 0 {
1342 +                     if server_client_open(c, &mut cause) != 0 as libc::c_int {
1343 +                         cmdq_error(
1344 +                             item,
1345 +                             b"open terminal failed: %s\0" as *const u8
1346 +                                 as *const libc::c_char,
1347 +                             cause,
1348 +                         );
1349 +                         free(cause as *mut libc::c_void);
1350 +                         current_block = 3504328375851313951;
1351 +                     } else {
1352 +                         current_block = 8545136480011357681;
1353 +                     }
1354 +                 } else {
1355 +                     current_block = 8545136480011357681;
1356 +                 }
1357 +                 match current_block {
1358 +                     3504328375851313951 => {}
1359 +                     _ => {
1360 +                         if detached == 0 {
1361 +                             sx = (*c).tty.sx;
1362 +                             sy = (*c).tty.sy;
1363 +                             if is_control == 0 && sy > 0 as libc::c_int as u_int
1364 +                                 && options_get_number(
1365 +                                     global_s_options,
1366 +                                     b"status\0" as *const u8 as *const libc::c_char,
1367 +                                 ) != 0
1368 +                             {
1369 +                                 sy = sy.wrapping_sub(1);
1370 +                                 sy;
1371 +                             }
1372 +                         } else {
1373 +                             sx = 80 as libc::c_int as u_int;
1374 +                             sy = 24 as libc::c_int as u_int;
1375 +                         }
1376 +                         if (is_control != 0 || detached != 0)
1377 +                             && args_has(args, 'x' as i32 as u_char) != 0
1378 +                         {
1379 +                             sx = strtonum(
1380 +                                 args_get(args, 'x' as i32 as u_char),
1381 +                                 1 as libc::c_int as libc::c_longlong,
1382 +                                 (32767 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int)
1383 +                                     as libc::c_longlong,
1384 +                                 &mut errstr,
1385 +                             ) as u_int;
1386 +                             if !errstr.is_null() {
1387 +                                 cmdq_error(
1388 +                                     item,
1389 +                                     b"width %s\0" as *const u8 as *const libc::c_char,
1390 +                                     errstr,
1391 +                                 );
1392 +                                 current_block = 3504328375851313951;
1393 +                             } else {
1394 +                                 current_block = 2631791190359682872;
1395 +                             }
1396 +                         } else {
1397 +                             current_block = 2631791190359682872;
1398 +                         }
1399 +                         match current_block {
1400 +                             3504328375851313951 => {}
1401 +                             _ => {
1402 +                                 if (is_control != 0 || detached != 0)
1403 +                                     && args_has(args, 'y' as i32 as u_char) != 0
1404 +                                 {
1405 +                                     sy = strtonum(
1406 +                                         args_get(args, 'y' as i32 as u_char),
1407 +                                         1 as libc::c_int as libc::c_longlong,
1408 +                                         (32767 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int)
1409 +                                             as libc::c_longlong,
1410 +                                         &mut errstr,
1411 +                                     ) as u_int;
1412 +                                     if !errstr.is_null() {
1413 +                                         cmdq_error(
1414 +                                             item,
1415 +                                             b"height %s\0" as *const u8 as *const libc::c_char,
1416 +                                             errstr,
1417 +                                         );
1418 +                                         current_block = 3504328375851313951;
1419 +                                     } else {
1420 +                                         current_block = 5684854171168229155;
1421 +                                     }
1422 +                                 } else {
1423 +                                     current_block = 5684854171168229155;
1424 +                                 }
1425 +                                 match current_block {
1426 +                                     3504328375851313951 => {}
1427 +                                     _ => {
1428 +                                         if sx == 0 as libc::c_int as u_int {
1429 +                                             sx = 1 as libc::c_int as u_int;
1430 +                                         }
1431 +                                         if sy == 0 as libc::c_int as u_int {
1432 +                                             sy = 1 as libc::c_int as u_int;
1433 +                                         }
1434 +                                         argc = -(1 as libc::c_int);
1435 +                                         argv = 0 as *mut *mut libc::c_char;
1436 +                                         if args_has(args, 't' as i32 as u_char) == 0
1437 +                                             && (*args).argc != 0 as libc::c_int
1438 +                                         {
1439 +                                             argc = (*args).argc;
1440 +                                             argv = (*args).argv;
1441 +                                         } else if sg.is_null() && groupwith.is_null() {
1442 +                                             cmd = options_get_string(
1443 +                                                 global_s_options,
1444 +                                                 b"default-command\0" as *const u8 as *const libc::c_char,
1445 +                                             );
1446 +                                             if !cmd.is_null() && *cmd as libc::c_int != '\0' as i32 {
1447 +                                                 argc = 1 as libc::c_int;
1448 +                                                 argv = &mut cmd as *mut *const libc::c_char
1449 +                                                     as *mut *mut libc::c_char;
1450 +                                             } else {
1451 +                                                 argc = 0 as libc::c_int;
1452 +                                                 argv = 0 as *mut *mut libc::c_char;
1453 +                                             }
1454 +                                         }
1455 +                                         path = 0 as *const libc::c_char;
1456 +                                         if !c.is_null() && ((*c).session).is_null() {
1457 +                                             envent = environ_find(
1458 +                                                 (*c).environ,
1459 +                                                 b"PATH\0" as *const u8 as *const libc::c_char,
1460 +                                             );
1461 +                                         } else {
1462 +                                             envent = environ_find(
1463 +                                                 global_environ,
1464 +                                                 b"PATH\0" as *const u8 as *const libc::c_char,
1465 +                                             );
1466 +                                         }
1467 +                                         if !envent.is_null() {
1468 +                                             path = (*envent).value;
1469 +                                         }
1470 +                                         env = environ_create();
1471 +                                         if !c.is_null() && args_has(args, 'E' as i32 as u_char) == 0
1472 +                                         {
1473 +                                             environ_update(global_s_options, (*c).environ, env);
1474 +                                         }
1475 +                                         idx = (-(1 as libc::c_int) as libc::c_longlong
1476 +                                             - options_get_number(
1477 +                                                 global_s_options,
1478 +                                                 b"base-index\0" as *const u8 as *const libc::c_char,
1479 +                                             )) as libc::c_int;
1480 +                                         s = session_create(
1481 +                                             prefix,
1482 +                                             newname,
1483 +                                             argc,
1484 +                                             argv,
1485 +                                             path,
1486 +                                             cwd,
1487 +                                             env,
1488 +                                             tiop,
1489 +                                             idx,
1490 +                                             sx,
1491 +                                             sy,
1492 +                                             &mut cause,
1493 +                                         );
1494 +                                         environ_free(env);
1495 +                                         if s.is_null() {
1496 +                                             cmdq_error(
1497 +                                                 item,
1498 +                                                 b"create session failed: %s\0" as *const u8
1499 +                                                     as *const libc::c_char,
1500 +                                                 cause,
1501 +                                             );
1502 +                                             free(cause as *mut libc::c_void);
1503 +                                         } else {
1504 +                                             if argc >= 0 as libc::c_int
1505 +                                                 && {
1506 +                                                     tmp = args_get(args, 'n' as i32 as u_char);
1507 +                                                     !tmp.is_null()
1508 +                                                 }
1509 +                                             {
1510 +                                                 cp = format_single(
1511 +                                                     item,
1512 +                                                     tmp,
1513 +                                                     c,
1514 +                                                     s,
1515 +                                                     0 as *mut winlink,
1516 +                                                     0 as *mut window_pane,
1517 +                                                 );
1518 +                                                 w = (*(*s).curw).window;
1519 +                                                 window_set_name(w, cp);
1520 +                                                 options_set_number(
1521 +                                                     (*w).options,
1522 +                                                     b"automatic-rename\0" as *const u8 as *const libc::c_char,
1523 +                                                     0 as libc::c_int as libc::c_longlong,
1524 +                                                 );
1525 +                                                 free(cp as *mut libc::c_void);
1526 +                                             }
1527 +                                             if !group.is_null() {
1528 +                                                 if sg.is_null() {
1529 +                                                     if !groupwith.is_null() {
1530 +                                                         sg = session_group_new((*groupwith).name);
1531 +                                                         session_group_add(sg, groupwith);
1532 +                                                     } else {
1533 +                                                         sg = session_group_new(group);
1534 +                                                     }
1535 +                                                 }
1536 +                                                 session_group_add(sg, s);
1537 +                                                 session_group_synchronize_to(s);
1538 +                                                 session_select(
1539 +                                                     s,
1540 +                                                     (*winlinks_RB_MINMAX(
1541 +                                                         &mut (*s).windows,
1542 +                                                         -(1 as libc::c_int),
1543 +                                                     ))
1544 +                                                         .idx,
1545 +                                                 );
1546 +                                             }
1547 +                                             notify_session(
1548 +                                                 b"session-created\0" as *const u8 as *const libc::c_char,
1549 +                                                 s,
1550 +                                             );
1551 +                                             if detached == 0 {
1552 +                                                 if already_attached == 0 {
1553 +                                                     if !(*c).flags & 0x2000 as libc::c_int != 0 {
1554 +                                                         proc_send(
1555 +                                                             (*c).peer,
1556 +                                                             MSG_READY,
1557 +                                                             -(1 as libc::c_int),
1558 +                                                             0 as *const libc::c_void,
1559 +                                                             0 as libc::c_int as size_t,
1560 +                                                         );
1561 +                                                     }
1562 +                                                 } else if !((*c).session).is_null() {
1563 +                                                     (*c).last_session = (*c).session;
1564 +                                                 }
1565 +                                                 (*c).session = s;
1566 +                                                 if !(*(*item).shared).flags & 0x1 as libc::c_int != 0 {
1567 +                                                     server_client_set_key_table(c, 0 as *const libc::c_char);
1568 +                                                 }
1569 +                                                 status_timer_start(c);
1570 +                                                 notify_client(
1571 +                                                     b"client-session-changed\0" as *const u8
1572 +                                                         as *const libc::c_char,
1573 +                                                     c,
1574 +                                                 );
1575 +                                                 session_update_activity(s, 0 as *mut timeval);
1576 +                                                 gettimeofday(
1577 +                                                     &mut (*s).last_attached_time,
1578 +                                                     0 as *mut libc::c_void,
1579 +                                                 );
1580 +                                                 server_redraw_client(c);
1581 +                                             }
1582 +                                             recalculate_sizes();
1583 +                                             server_update_socket();
1584 +                                             if cfg_finished != 0 {
1585 +                                                 cfg_show_causes(s);
1586 +                                             }
1587 +                                             if args_has(args, 'P' as i32 as u_char) != 0 {
1588 +                                                 template = args_get(args, 'F' as i32 as u_char);
1589 +                                                 if template.is_null() {
1590 +                                                     template = b"#{session_name}:\0" as *const u8
1591 +                                                         as *const libc::c_char;
1592 +                                                 }
1593 +                                                 cp = format_single(
1594 +                                                     item,
1595 +                                                     template,
1596 +                                                     c,
1597 +                                                     s,
1598 +                                                     0 as *mut winlink,
1599 +                                                     0 as *mut window_pane,
1600 +                                                 );
1601 +                                                 cmdq_print(
1602 +                                                     item,
1603 +                                                     b"%s\0" as *const u8 as *const libc::c_char,
1604 +                                                     cp,
1605 +                                                 );
1606 +                                                 free(cp as *mut libc::c_void);
1607 +                                             }
1608 +                                             if detached == 0 {
1609 +                                                 (*c).flags |= 0x80 as libc::c_int;
1610 +                                                 cmd_find_from_session(
1611 +                                                     &mut (*(*item).shared).current,
1612 +                                                     s,
1613 +                                                     0 as libc::c_int,
1614 +                                                 );
1615 +                                             }
1616 +                                             cmd_find_from_session(&mut fs, s, 0 as libc::c_int);
1617 +                                             hooks_insert(
1618 +                                                 (*s).hooks,
1619 +                                                 item,
1620 +                                                 &mut fs as *mut cmd_find_state,
1621 +                                                 b"after-new-session\0" as *const u8 as *const libc::c_char,
1622 +                                             );
1623 +                                             free(cwd as *mut libc::c_void);
1624 +                                             free(newname as *mut libc::c_void);
1625 +                                             return CMD_RETURN_NORMAL;
1626 +                                         }
1627 +                                     }
1628 +                                 }
1629 +                             }
1630 +                         }
1631 +                     }
1632 +                 }
1633 +             }
1634 +         }
1635 +     }
     |

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1287:29
     |
1287 |                 groupwith = 0 as *mut session;
     |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1288:22
     |
1288 |                 sg = 0 as *mut session_group;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1289:26
     |
1289 |                 prefix = 0 as *const libc::c_char;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1311:29
     |
1311 | ...                   0 as *mut session,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1312:29
     |
1312 | ...                   0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1313:29
     |
1313 | ...                   0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1340:32
     |
1340 |                         tiop = 0 as *mut termios;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<termios>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_new_session.rs:1371:37
     |
1371 | ...                   sy;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1436:52
     |
1436 | ...                   argv = 0 as *mut *mut libc::c_char;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1453:60
     |
1453 | ...                   argv = 0 as *mut *mut libc::c_char;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1456:52
     |
1456 | ...                   path = 0 as *const libc::c_char;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1516:57
     |
1516 | ...                   0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1517:57
     |
1517 | ...                   0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1559:65
     |
1559 | ...                   0 as *const libc::c_void,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_session.rs:1568:88
     |
1568 | ...                   server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1576:80
     |
1576 | ...                   session_update_activity(s, 0 as *mut timeval);
     |                                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1579:57
     |
1579 | ...                   0 as *mut libc::c_void,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1599:57
     |
1599 | ...                   0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_session.rs:1600:57
     |
1600 | ...                   0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_new_window.rs:1000:9
     |
968  | /         let mut init = cmd_entry {
969  | |             name: b"new-window\0" as *const u8 as *const libc::c_char,
970  | |             alias: b"neww\0" as *const u8 as *const libc::c_char,
971  | |             args: {
...    |
998  | |             ),
999  | |         };
     | |__________- unnecessary `let` binding
1000 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
968  ~         
969  ~         cmd_entry {
970  +             name: b"new-window\0" as *const u8 as *const libc::c_char,
971  +             alias: b"neww\0" as *const u8 as *const libc::c_char,
972  +             args: {
973  +                 let mut init = C2RustUnnamed_31 {
974  +                     template: b"ac:dF:kn:Pt:\0" as *const u8 as *const libc::c_char,
975  +                     lower: 0 as libc::c_int,
976  +                     upper: -(1 as libc::c_int),
977  +                 };
978  +                 init
979  +             },
980  +             usage: b"[-adkP] [-c start-directory] [-F format] [-n window-name] [-t target-window] [command]\0"
981  +                 as *const u8 as *const libc::c_char,
982  +             source: cmd_entry_flag {
983  +                 flag: 0,
984  +                 type_0: CMD_FIND_PANE,
985  +                 flags: 0,
986  +             },
987  +             target: {
988  +                 let mut init = cmd_entry_flag {
989  +                     flag: 't' as i32 as libc::c_char,
990  +                     type_0: CMD_FIND_WINDOW,
991  +                     flags: 0x4 as libc::c_int,
992  +                 };
993  +                 init
994  +             },
995  +             flags: 0 as libc::c_int,
996  +             exec: Some(
997  +                 cmd_new_window_exec
998  +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
999  +             ),
1000 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_new_window.rs:977:17
    |
972 | /                 let mut init = C2RustUnnamed_31 {
973 | |                     template: b"ac:dF:kn:Pt:\0" as *const u8 as *const libc::c_char,
974 | |                     lower: 0 as libc::c_int,
975 | |                     upper: -(1 as libc::c_int),
976 | |                 };
    | |__________________- unnecessary `let` binding
977 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
972 ~                 
973 ~                 C2RustUnnamed_31 {
974 +                     template: b"ac:dF:kn:Pt:\0" as *const u8 as *const libc::c_char,
975 +                     lower: 0 as libc::c_int,
976 +                     upper: -(1 as libc::c_int),
977 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_new_window.rs:992:17
    |
987 | /                 let mut init = cmd_entry_flag {
988 | |                     flag: 't' as i32 as libc::c_char,
989 | |                     type_0: CMD_FIND_WINDOW,
990 | |                     flags: 0x4 as libc::c_int,
991 | |                 };
    | |__________________- unnecessary `let` binding
992 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
987 ~                 
988 ~                 cmd_entry_flag {
989 +                     flag: 't' as i32 as libc::c_char,
990 +                     type_0: CMD_FIND_WINDOW,
991 +                     flags: 0x4 as libc::c_int,
992 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_new_window.rs:1129:9
     |
1129 |         return CMD_RETURN_ERROR;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_new_window.rs:1157:9
     |
1157 |         return CMD_RETURN_NORMAL;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1013:9
     |
1013 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1017:40
     |
1017 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1018:41
     |
1018 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1019:45
     |
1019 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1020:40
     |
1020 |     let mut tmp: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1021:44
     |
1021 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1022:40
     |
1022 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1023:37
     |
1023 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1024:38
     |
1024 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1025:39
     |
1025 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1028:42
     |
1028 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1031:18
     |
1031 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1032:12
     |
1032 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1033:13
     |
1033 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1034:12
     |
1034 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1035:13
     |
1035 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1059:20
     |
1059 |             argv = 0 as *mut *mut libc::c_char;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_new_window.rs:1065:12
     |
1065 |     path = 0 as *const libc::c_char;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1082:46
     |
1082 |         cwd = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1082:65
     |
1082 |         cwd = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1090:47
     |
1090 |         name = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1090:66
     |
1090 |         name = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1092:16
     |
1092 |         name = 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1094:10
     |
1094 |     wl = 0 as *mut winlink;
     |          ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1109:25
     |
1109 |             (*s).curw = 0 as *mut winlink;
     |                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_new_window.rs:1144:58
     |
1144 |             cp = format_single(item, template, c, s, wl, 0 as *mut window_pane);
     |                                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_paste_buffer.rs:953:9
    |
921 | /         let mut init = cmd_entry {
922 | |             name: b"paste-buffer\0" as *const u8 as *const libc::c_char,
923 | |             alias: b"pasteb\0" as *const u8 as *const libc::c_char,
924 | |             args: {
...   |
951 | |             ),
952 | |         };
    | |__________- unnecessary `let` binding
953 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
921 ~         
922 ~         cmd_entry {
923 +             name: b"paste-buffer\0" as *const u8 as *const libc::c_char,
924 +             alias: b"pasteb\0" as *const u8 as *const libc::c_char,
925 +             args: {
926 +                 let mut init = C2RustUnnamed_31 {
927 +                     template: b"db:prs:t:\0" as *const u8 as *const libc::c_char,
928 +                     lower: 0 as libc::c_int,
929 +                     upper: 0 as libc::c_int,
930 +                 };
931 +                 init
932 +             },
933 +             usage: b"[-dpr] [-s separator] [-b buffer-name] [-t target-pane]\0"
934 +                 as *const u8 as *const libc::c_char,
935 +             source: cmd_entry_flag {
936 +                 flag: 0,
937 +                 type_0: CMD_FIND_PANE,
938 +                 flags: 0,
939 +             },
940 +             target: {
941 +                 let mut init = cmd_entry_flag {
942 +                     flag: 't' as i32 as libc::c_char,
943 +                     type_0: CMD_FIND_PANE,
944 +                     flags: 0 as libc::c_int,
945 +                 };
946 +                 init
947 +             },
948 +             flags: 0x4 as libc::c_int,
949 +             exec: Some(
950 +                 cmd_paste_buffer_exec
951 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
952 +             ),
953 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_paste_buffer.rs:930:17
    |
925 | /                 let mut init = C2RustUnnamed_31 {
926 | |                     template: b"db:prs:t:\0" as *const u8 as *const libc::c_char,
927 | |                     lower: 0 as libc::c_int,
928 | |                     upper: 0 as libc::c_int,
929 | |                 };
    | |__________________- unnecessary `let` binding
930 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
925 ~                 
926 ~                 C2RustUnnamed_31 {
927 +                     template: b"db:prs:t:\0" as *const u8 as *const libc::c_char,
928 +                     lower: 0 as libc::c_int,
929 +                     upper: 0 as libc::c_int,
930 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_paste_buffer.rs:945:17
    |
940 | /                 let mut init = cmd_entry_flag {
941 | |                     flag: 't' as i32 as libc::c_char,
942 | |                     type_0: CMD_FIND_PANE,
943 | |                     flags: 0 as libc::c_int,
944 | |                 };
    | |__________________- unnecessary `let` binding
945 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
940 ~                 
941 ~                 cmd_entry_flag {
942 +                     flag: 't' as i32 as libc::c_char,
943 +                     type_0: CMD_FIND_PANE,
944 +                     flags: 0 as libc::c_int,
945 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_paste_buffer.rs:1044:5
     |
1044 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_paste_buffer.rs:962:37
    |
962 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:963:43
    |
963 |     let mut sepstr: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:964:44
    |
964 |     let mut bufname: *const libc::c_char = 0 as *const libc::c_char;
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:965:44
    |
965 |     let mut bufdata: *const libc::c_char = 0 as *const libc::c_char;
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:966:43
    |
966 |     let mut bufend: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:967:41
    |
967 |     let mut line: *const libc::c_char = 0 as *const libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_paste_buffer.rs:971:15
    |
971 |     bufname = 0 as *const libc::c_char;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_paste_buffer.rs:976:28
    |
976 |         pb = paste_get_top(0 as *mut *const libc::c_char);
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_pipe_pane.rs:1029:9
     |
997  | /         let mut init = cmd_entry {
998  | |             name: b"pipe-pane\0" as *const u8 as *const libc::c_char,
999  | |             alias: b"pipep\0" as *const u8 as *const libc::c_char,
1000 | |             args: {
...    |
1027 | |             ),
1028 | |         };
     | |__________- unnecessary `let` binding
1029 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
997  ~         
998  ~         cmd_entry {
999  +             name: b"pipe-pane\0" as *const u8 as *const libc::c_char,
1000 +             alias: b"pipep\0" as *const u8 as *const libc::c_char,
1001 +             args: {
1002 +                 let mut init = C2RustUnnamed_31 {
1003 +                     template: b"IOot:\0" as *const u8 as *const libc::c_char,
1004 +                     lower: 0 as libc::c_int,
1005 +                     upper: 1 as libc::c_int,
1006 +                 };
1007 +                 init
1008 +             },
1009 +             usage: b"[-IOo] [-t target-pane] [command]\0" as *const u8
1010 +                 as *const libc::c_char,
1011 +             source: cmd_entry_flag {
1012 +                 flag: 0,
1013 +                 type_0: CMD_FIND_PANE,
1014 +                 flags: 0,
1015 +             },
1016 +             target: {
1017 +                 let mut init = cmd_entry_flag {
1018 +                     flag: 't' as i32 as libc::c_char,
1019 +                     type_0: CMD_FIND_PANE,
1020 +                     flags: 0 as libc::c_int,
1021 +                 };
1022 +                 init
1023 +             },
1024 +             flags: 0x4 as libc::c_int,
1025 +             exec: Some(
1026 +                 cmd_pipe_pane_exec
1027 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1028 +             ),
1029 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_pipe_pane.rs:1006:17
     |
1001 | /                 let mut init = C2RustUnnamed_31 {
1002 | |                     template: b"IOot:\0" as *const u8 as *const libc::c_char,
1003 | |                     lower: 0 as libc::c_int,
1004 | |                     upper: 1 as libc::c_int,
1005 | |                 };
     | |__________________- unnecessary `let` binding
1006 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1001 ~                 
1002 ~                 C2RustUnnamed_31 {
1003 +                     template: b"IOot:\0" as *const u8 as *const libc::c_char,
1004 +                     lower: 0 as libc::c_int,
1005 +                     upper: 1 as libc::c_int,
1006 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_pipe_pane.rs:1021:17
     |
1016 | /                 let mut init = cmd_entry_flag {
1017 | |                     flag: 't' as i32 as libc::c_char,
1018 | |                     type_0: CMD_FIND_PANE,
1019 | |                     flags: 0 as libc::c_int,
1020 | |                 };
     | |__________________- unnecessary `let` binding
1021 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1016 ~                 
1017 ~                 cmd_entry_flag {
1018 +                     flag: 't' as i32 as libc::c_char,
1019 +                     type_0: CMD_FIND_PANE,
1020 +                     flags: 0 as libc::c_int,
1021 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_pipe_pane.rs:1115:13
     |
1115 |             return CMD_RETURN_ERROR;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_pipe_pane.rs:1206:13
     |
1206 |             return CMD_RETURN_NORMAL;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_pipe_pane.rs:1039:9
     |
1039 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1045:38
     |
1045 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1051:36
     |
1051 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1101:14
     |
1101 |         time(0 as *mut time_t),
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/cmd_pipe_pane.rs:1105:35
     |
1105 |     sigprocmask(0 as libc::c_int, &mut set, &mut oldset);
     |                                   ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/cmd_pipe_pane.rs:1108:43
     |
1108 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1108:56
     |
1108 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/cmd_pipe_pane.rs:1119:43
     |
1119 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1119:56
     |
1119 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1156:17
     |
1156 |                 0 as *mut libc::c_void as *mut libc::c_char,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/cmd_pipe_pane.rs:1161:43
     |
1161 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/cmd_pipe_pane.rs:1161:56
     |
1161 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/cmd_queue.rs:971:5
    |
971 |     return s.as_mut_ptr();
    |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `s.as_mut_ptr()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/cmd_queue.rs:977:5
    |
977 |     return &mut (*c).queue;
    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `&mut (*c).queue`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:980:1
     |
980  | / pub unsafe extern "C" fn cmdq_append(mut c: *mut client, mut item: *mut cmdq_item) {
981  | |     let mut queue: *mut cmdq_list = cmdq_get(c);
982  | |     let mut next: *mut cmdq_item = 0 as *mut cmdq_item;
983  | |     loop {
...    |
1000 | |     };
1001 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/cmd_queue.rs:982:36
    |
982 |     let mut next: *mut cmdq_item = 0 as *mut cmdq_item;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_queue.rs:985:24
    |
985 |         (*item).next = 0 as *mut cmdq_item;
    |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/cmd_queue.rs:988:13
    |
988 |             (*c).references;
    |             ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/cmd_queue.rs:992:34
    |
992 |         (*item).entry.tqe_next = 0 as *mut cmdq_item;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:1003:1
     |
1003 | / pub unsafe extern "C" fn cmdq_insert_after(
1004 | |     mut after: *mut cmdq_item,
1005 | |     mut item: *mut cmdq_item,
1006 | | ) {
...    |
1043 | |     };
1044 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1009:36
     |
1009 |     let mut next: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1012:24
     |
1012 |         (*item).next = 0 as *mut cmdq_item;
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_queue.rs:1015:13
     |
1015 |             (*c).references;
     |             ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1075:5
     |
1075 |     return group;
     |     ^^^^^^^^^^^^^ help: remove `return`: `group`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1078:36
     |
1078 |     let mut this: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1079:36
     |
1079 |     let mut next: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:1090:1
     |
1090 | / pub unsafe extern "C" fn cmdq_get_command(
1091 | |     mut cmdlist: *mut cmd_list,
1092 | |     mut current: *mut cmd_find_state,
1093 | |     mut m: *mut mouse_event,
...    |
1150 | |     return first;
1151 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1150:5
     |
1150 |     return first;
     |     ^^^^^^^^^^^^^ help: remove `return`: `first`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1096:36
     |
1096 |     let mut item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1097:37
     |
1097 |     let mut first: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1098:36
     |
1098 |     let mut last: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1099:29
     |
1099 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1101:38
     |
1101 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1102:40
     |
1102 |     let mut shared: *mut cmdq_shared = 0 as *mut cmdq_shared;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_shared>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_queue.rs:1138:9
     |
1138 |         (*shared).references;
     |         ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_queue.rs:1140:9
     |
1140 |         (*cmdlist).references;
     |         ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1169:5
     |
1169 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_queue.rs:1157:42
     |
1157 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_queue.rs:1195:8
     |
1195 |     if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `retval as libc::c_int != CMD_RETURN_ERROR as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_queue.rs:1197:12
     |
1197 |         if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `retval as libc::c_int != CMD_RETURN_ERROR as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_queue.rs:1199:16
     |
1199 |             if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `retval as libc::c_int != CMD_RETURN_ERROR as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1240:5
     |
1240 |     return retval;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `retval`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1177:40
     |
1177 |     let mut fsp: *mut cmd_find_state = 0 as *mut cmd_find_state;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1180:18
     |
1180 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1181:12
     |
1181 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1182:13
     |
1182 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1183:12
     |
1183 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1184:13
     |
1184 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_queue.rs:1192:45
     |
1192 |             .client = cmd_find_client(item, 0 as *const libc::c_char, 1 as libc::c_int);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:1243:1
     |
1243 | / pub unsafe extern "C" fn cmdq_get_callback1(
1244 | |     mut name: *const libc::c_char,
1245 | |     mut cb: cmdq_cb,
1246 | |     mut data: *mut libc::c_void,
...    |
1265 | |     return item;
1266 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1265:5
     |
1265 |     return item;
     |     ^^^^^^^^^^^^ help: remove `return`: `item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1248:36
     |
1248 |     let mut item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1249:38
     |
1249 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1268:5
     |
1268 |     return ((*item).cb).expect("non-null function pointer")(item, (*item).data);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*item).cb).expect("non-null function pointer")(item, (*item).data)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:1271:1
     |
1271 | / pub unsafe extern "C" fn cmdq_next(mut c: *mut client) -> u_int {
1272 | |     let mut current_block: u64;
1273 | |     let mut queue: *mut cmdq_list = cmdq_get(c);
1274 | |     let mut name: *const libc::c_char = cmdq_name(c);
...    |
1377 | |     };
1378 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1363:13
     |
1363 |             return items;
     |             ^^^^^^^^^^^^^ help: remove `return`: `items`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_queue.rs:1375:13
     |
1375 |             return items;
     |             ^^^^^^^^^^^^^ help: remove `return`: `items`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1275:36
     |
1275 |     let mut item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1323:33
     |
1323 |             (*item).time = time(0 as *mut time_t);
     |                                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_queue.rs:1347:17
     |
1347 |                 items;
     |                 ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_queue.rs:1380:1
     |
1380 | / pub unsafe extern "C" fn cmdq_guard(
1381 | |     mut item: *mut cmdq_item,
1382 | |     mut guard: *const libc::c_char,
1383 | |     mut flags: libc::c_int,
...    |
1397 | |     server_client_push_stdout(c);
1398 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: returning the result of a `let` binding from a block
    --> src/cmd_queue.rs:1405:9
     |
1401 | /         let mut init = cmdq_list {
1402 | |             tqh_first: 0 as *mut cmdq_item,
1403 | |             tqh_last: &mut global_queue.tqh_first,
1404 | |         };
     | |__________- unnecessary `let` binding
1405 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1401 ~         
1402 ~         cmdq_list {
1403 +             tqh_first: 0 as *mut cmdq_item,
1404 +             tqh_last: &mut global_queue.tqh_first,
1405 +         }
     |

warning: `0 as *mut _` detected
    --> src/cmd_queue.rs:1402:24
     |
1402 |             tqh_first: 0 as *mut cmdq_item,
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_refresh_client.rs:944:9
    |
915 | /         let mut init = cmd_entry {
916 | |             name: b"refresh-client\0" as *const u8 as *const libc::c_char,
917 | |             alias: b"refresh\0" as *const u8 as *const libc::c_char,
918 | |             args: {
...   |
942 | |             ),
943 | |         };
    | |__________- unnecessary `let` binding
944 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
915 ~         
916 ~         cmd_entry {
917 +             name: b"refresh-client\0" as *const u8 as *const libc::c_char,
918 +             alias: b"refresh\0" as *const u8 as *const libc::c_char,
919 +             args: {
920 +                 let mut init = C2RustUnnamed_31 {
921 +                     template: b"C:St:\0" as *const u8 as *const libc::c_char,
922 +                     lower: 0 as libc::c_int,
923 +                     upper: 0 as libc::c_int,
924 +                 };
925 +                 init
926 +             },
927 +             usage: b"[-S] [-C size] [-t target-client]\0" as *const u8
928 +                 as *const libc::c_char,
929 +             source: cmd_entry_flag {
930 +                 flag: 0,
931 +                 type_0: CMD_FIND_PANE,
932 +                 flags: 0,
933 +             },
934 +             target: cmd_entry_flag {
935 +                 flag: 0,
936 +                 type_0: CMD_FIND_PANE,
937 +                 flags: 0,
938 +             },
939 +             flags: 0x4 as libc::c_int,
940 +             exec: Some(
941 +                 cmd_refresh_client_exec
942 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
943 +             ),
944 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_refresh_client.rs:924:17
    |
919 | /                 let mut init = C2RustUnnamed_31 {
920 | |                     template: b"C:St:\0" as *const u8 as *const libc::c_char,
921 | |                     lower: 0 as libc::c_int,
922 | |                     upper: 0 as libc::c_int,
923 | |                 };
    | |__________________- unnecessary `let` binding
924 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
919 ~                 
920 ~                 C2RustUnnamed_31 {
921 +                     template: b"C:St:\0" as *const u8 as *const libc::c_char,
922 +                     lower: 0 as libc::c_int,
923 +                     upper: 0 as libc::c_int,
924 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_refresh_client.rs:1002:5
     |
1002 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_refresh_client.rs:952:30
    |
952 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_refresh_client.rs:953:41
    |
953 |     let mut size: *const libc::c_char = 0 as *const libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_session.rs:961:9
    |
930 | /         let mut init = cmd_entry {
931 | |             name: b"rename-session\0" as *const u8 as *const libc::c_char,
932 | |             alias: b"rename\0" as *const u8 as *const libc::c_char,
933 | |             args: {
...   |
959 | |             ),
960 | |         };
    | |__________- unnecessary `let` binding
961 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
930 ~         
931 ~         cmd_entry {
932 +             name: b"rename-session\0" as *const u8 as *const libc::c_char,
933 +             alias: b"rename\0" as *const u8 as *const libc::c_char,
934 +             args: {
935 +                 let mut init = C2RustUnnamed_31 {
936 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 1 as libc::c_int,
938 +                     upper: 1 as libc::c_int,
939 +                 };
940 +                 init
941 +             },
942 +             usage: b"[-t target-session] new-name\0" as *const u8 as *const libc::c_char,
943 +             source: cmd_entry_flag {
944 +                 flag: 0,
945 +                 type_0: CMD_FIND_PANE,
946 +                 flags: 0,
947 +             },
948 +             target: {
949 +                 let mut init = cmd_entry_flag {
950 +                     flag: 't' as i32 as libc::c_char,
951 +                     type_0: CMD_FIND_SESSION,
952 +                     flags: 0 as libc::c_int,
953 +                 };
954 +                 init
955 +             },
956 +             flags: 0x4 as libc::c_int,
957 +             exec: Some(
958 +                 cmd_rename_session_exec
959 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
960 +             ),
961 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_session.rs:939:17
    |
934 | /                 let mut init = C2RustUnnamed_31 {
935 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
936 | |                     lower: 1 as libc::c_int,
937 | |                     upper: 1 as libc::c_int,
938 | |                 };
    | |__________________- unnecessary `let` binding
939 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~                 
935 ~                 C2RustUnnamed_31 {
936 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 1 as libc::c_int,
938 +                     upper: 1 as libc::c_int,
939 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_session.rs:953:17
    |
948 | /                 let mut init = cmd_entry_flag {
949 | |                     flag: 't' as i32 as libc::c_char,
950 | |                     type_0: CMD_FIND_SESSION,
951 | |                     flags: 0 as libc::c_int,
952 | |                 };
    | |__________________- unnecessary `let` binding
953 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
948 ~                 
949 ~                 cmd_entry_flag {
950 +                     flag: 't' as i32 as libc::c_char,
951 +                     type_0: CMD_FIND_SESSION,
952 +                     flags: 0 as libc::c_int,
953 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_rename_session.rs:1012:5
     |
1012 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_rename_session.rs:971:9
    |
971 |         0 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rename_session.rs:975:42
    |
975 |     let mut newname: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rename_session.rs:981:9
    |
981 |         0 as *mut winlink,
    |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rename_session.rs:982:9
    |
982 |         0 as *mut window_pane,
    |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_window.rs:955:9
    |
924 | /         let mut init = cmd_entry {
925 | |             name: b"rename-window\0" as *const u8 as *const libc::c_char,
926 | |             alias: b"renamew\0" as *const u8 as *const libc::c_char,
927 | |             args: {
...   |
953 | |             ),
954 | |         };
    | |__________- unnecessary `let` binding
955 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
924 ~         
925 ~         cmd_entry {
926 +             name: b"rename-window\0" as *const u8 as *const libc::c_char,
927 +             alias: b"renamew\0" as *const u8 as *const libc::c_char,
928 +             args: {
929 +                 let mut init = C2RustUnnamed_31 {
930 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
931 +                     lower: 1 as libc::c_int,
932 +                     upper: 1 as libc::c_int,
933 +                 };
934 +                 init
935 +             },
936 +             usage: b"[-t target-window] new-name\0" as *const u8 as *const libc::c_char,
937 +             source: cmd_entry_flag {
938 +                 flag: 0,
939 +                 type_0: CMD_FIND_PANE,
940 +                 flags: 0,
941 +             },
942 +             target: {
943 +                 let mut init = cmd_entry_flag {
944 +                     flag: 't' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_WINDOW,
946 +                     flags: 0 as libc::c_int,
947 +                 };
948 +                 init
949 +             },
950 +             flags: 0x4 as libc::c_int,
951 +             exec: Some(
952 +                 cmd_rename_window_exec
953 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
954 +             ),
955 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_window.rs:933:17
    |
928 | /                 let mut init = C2RustUnnamed_31 {
929 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
930 | |                     lower: 1 as libc::c_int,
931 | |                     upper: 1 as libc::c_int,
932 | |                 };
    | |__________________- unnecessary `let` binding
933 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
928 ~                 
929 ~                 C2RustUnnamed_31 {
930 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
931 +                     lower: 1 as libc::c_int,
932 +                     upper: 1 as libc::c_int,
933 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rename_window.rs:947:17
    |
942 | /                 let mut init = cmd_entry_flag {
943 | |                     flag: 't' as i32 as libc::c_char,
944 | |                     type_0: CMD_FIND_WINDOW,
945 | |                     flags: 0 as libc::c_int,
946 | |                 };
    | |__________________- unnecessary `let` binding
947 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
942 ~                 
943 ~                 cmd_entry_flag {
944 +                     flag: 't' as i32 as libc::c_char,
945 +                     type_0: CMD_FIND_WINDOW,
946 +                     flags: 0 as libc::c_int,
947 +                 }
    |

warning: unneeded `return` statement
   --> src/cmd_rename_window.rs:987:5
    |
987 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_rename_window.rs:965:9
    |
965 |         0 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rename_window.rs:970:42
    |
970 |     let mut newname: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rename_window.rs:977:9
    |
977 |         0 as *mut window_pane,
    |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_resize_pane.rs:964:9
    |
932 | /         let mut init = cmd_entry {
933 | |             name: b"resize-pane\0" as *const u8 as *const libc::c_char,
934 | |             alias: b"resizep\0" as *const u8 as *const libc::c_char,
935 | |             args: {
...   |
962 | |             ),
963 | |         };
    | |__________- unnecessary `let` binding
964 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
932 ~         
933 ~         cmd_entry {
934 +             name: b"resize-pane\0" as *const u8 as *const libc::c_char,
935 +             alias: b"resizep\0" as *const u8 as *const libc::c_char,
936 +             args: {
937 +                 let mut init = C2RustUnnamed_31 {
938 +                     template: b"DLMRt:Ux:y:Z\0" as *const u8 as *const libc::c_char,
939 +                     lower: 0 as libc::c_int,
940 +                     upper: 1 as libc::c_int,
941 +                 };
942 +                 init
943 +             },
944 +             usage: b"[-DLMRUZ] [-x width] [-y height] [-t target-pane] [adjustment]\0"
945 +                 as *const u8 as *const libc::c_char,
946 +             source: cmd_entry_flag {
947 +                 flag: 0,
948 +                 type_0: CMD_FIND_PANE,
949 +                 flags: 0,
950 +             },
951 +             target: {
952 +                 let mut init = cmd_entry_flag {
953 +                     flag: 't' as i32 as libc::c_char,
954 +                     type_0: CMD_FIND_PANE,
955 +                     flags: 0 as libc::c_int,
956 +                 };
957 +                 init
958 +             },
959 +             flags: 0x4 as libc::c_int,
960 +             exec: Some(
961 +                 cmd_resize_pane_exec
962 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
963 +             ),
964 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_resize_pane.rs:941:17
    |
936 | /                 let mut init = C2RustUnnamed_31 {
937 | |                     template: b"DLMRt:Ux:y:Z\0" as *const u8 as *const libc::c_char,
938 | |                     lower: 0 as libc::c_int,
939 | |                     upper: 1 as libc::c_int,
940 | |                 };
    | |__________________- unnecessary `let` binding
941 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
936 ~                 
937 ~                 C2RustUnnamed_31 {
938 +                     template: b"DLMRt:Ux:y:Z\0" as *const u8 as *const libc::c_char,
939 +                     lower: 0 as libc::c_int,
940 +                     upper: 1 as libc::c_int,
941 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_resize_pane.rs:956:17
    |
951 | /                 let mut init = cmd_entry_flag {
952 | |                     flag: 't' as i32 as libc::c_char,
953 | |                     type_0: CMD_FIND_PANE,
954 | |                     flags: 0 as libc::c_int,
955 | |                 };
    | |__________________- unnecessary `let` binding
956 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
951 ~                 
952 ~                 cmd_entry_flag {
953 +                     flag: 't' as i32 as libc::c_char,
954 +                     type_0: CMD_FIND_PANE,
955 +                     flags: 0 as libc::c_int,
956 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_resize_pane.rs:1088:5
     |
1088 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_resize_pane.rs:978:43
    |
978 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_resize_pane.rs:979:40
    |
979 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_resize_pane.rs:1131:12
     |
1131 |         if !(window_pane_visible(loop_0) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(loop_0) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1094:32
     |
1094 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1095:40
     |
1095 |     let mut loop_0: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1096:38
     |
1096 |     let mut wp_x: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1097:38
     |
1097 |     let mut wp_y: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1106:30
     |
1106 |     wl = cmd_mouse_window(m, 0 as *mut *mut session);
     |                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_resize_pane.rs:1115:9
     |
1115 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_resize_pane.rs:1123:9
     |
1123 |         ly;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_resize_pane.rs:1127:12
     |
1127 |     wp_y = 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_resize_pane.rs:1135:17
     |
1135 |                 sx;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_resize_pane.rs:1141:17
     |
1141 |                 sy;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_pane.rs:986:9
    |
954 | /         let mut init = cmd_entry {
955 | |             name: b"respawn-pane\0" as *const u8 as *const libc::c_char,
956 | |             alias: b"respawnp\0" as *const u8 as *const libc::c_char,
957 | |             args: {
...   |
984 | |             ),
985 | |         };
    | |__________- unnecessary `let` binding
986 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
954 ~         
955 ~         cmd_entry {
956 +             name: b"respawn-pane\0" as *const u8 as *const libc::c_char,
957 +             alias: b"respawnp\0" as *const u8 as *const libc::c_char,
958 +             args: {
959 +                 let mut init = C2RustUnnamed_31 {
960 +                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
961 +                     lower: 0 as libc::c_int,
962 +                     upper: -(1 as libc::c_int),
963 +                 };
964 +                 init
965 +             },
966 +             usage: b"[-c start-directory] [-k] [-t target-pane] [command]\0" as *const u8
967 +                 as *const libc::c_char,
968 +             source: cmd_entry_flag {
969 +                 flag: 0,
970 +                 type_0: CMD_FIND_PANE,
971 +                 flags: 0,
972 +             },
973 +             target: {
974 +                 let mut init = cmd_entry_flag {
975 +                     flag: 't' as i32 as libc::c_char,
976 +                     type_0: CMD_FIND_PANE,
977 +                     flags: 0 as libc::c_int,
978 +                 };
979 +                 init
980 +             },
981 +             flags: 0 as libc::c_int,
982 +             exec: Some(
983 +                 cmd_respawn_pane_exec
984 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
985 +             ),
986 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_pane.rs:963:17
    |
958 | /                 let mut init = C2RustUnnamed_31 {
959 | |                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
960 | |                     lower: 0 as libc::c_int,
961 | |                     upper: -(1 as libc::c_int),
962 | |                 };
    | |__________________- unnecessary `let` binding
963 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
958 ~                 
959 ~                 C2RustUnnamed_31 {
960 +                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
961 +                     lower: 0 as libc::c_int,
962 +                     upper: -(1 as libc::c_int),
963 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_pane.rs:978:17
    |
973 | /                 let mut init = cmd_entry_flag {
974 | |                     flag: 't' as i32 as libc::c_char,
975 | |                     type_0: CMD_FIND_PANE,
976 | |                     flags: 0 as libc::c_int,
977 | |                 };
    | |__________________- unnecessary `let` binding
978 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
973 ~                 
974 ~                 cmd_entry_flag {
975 +                     flag: 't' as i32 as libc::c_char,
976 +                     type_0: CMD_FIND_PANE,
977 +                     flags: 0 as libc::c_int,
978 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_respawn_pane.rs:1073:5
     |
1073 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_respawn_pane.rs:999:9
    |
999 |         0 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1003:33
     |
1003 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_pane.rs:1004:41
     |
1004 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_pane.rs:1005:39
     |
1005 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1006:40
     |
1006 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1007:38
     |
1007 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1009:42
     |
1009 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1044:45
     |
1044 |         cwd = format_single(item, cp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_pane.rs:1044:64
     |
1044 |         cwd = format_single(item, cp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_pane.rs:1052:9
     |
1052 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_window.rs:991:9
    |
959 | /         let mut init = cmd_entry {
960 | |             name: b"respawn-window\0" as *const u8 as *const libc::c_char,
961 | |             alias: b"respawnw\0" as *const u8 as *const libc::c_char,
962 | |             args: {
...   |
989 | |             ),
990 | |         };
    | |__________- unnecessary `let` binding
991 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
959 ~         
960 ~         cmd_entry {
961 +             name: b"respawn-window\0" as *const u8 as *const libc::c_char,
962 +             alias: b"respawnw\0" as *const u8 as *const libc::c_char,
963 +             args: {
964 +                 let mut init = C2RustUnnamed_31 {
965 +                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
966 +                     lower: 0 as libc::c_int,
967 +                     upper: -(1 as libc::c_int),
968 +                 };
969 +                 init
970 +             },
971 +             usage: b"[-c start-directory] [-k] [-t target-window] [command]\0"
972 +                 as *const u8 as *const libc::c_char,
973 +             source: cmd_entry_flag {
974 +                 flag: 0,
975 +                 type_0: CMD_FIND_PANE,
976 +                 flags: 0,
977 +             },
978 +             target: {
979 +                 let mut init = cmd_entry_flag {
980 +                     flag: 't' as i32 as libc::c_char,
981 +                     type_0: CMD_FIND_WINDOW,
982 +                     flags: 0 as libc::c_int,
983 +                 };
984 +                 init
985 +             },
986 +             flags: 0 as libc::c_int,
987 +             exec: Some(
988 +                 cmd_respawn_window_exec
989 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
990 +             ),
991 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_window.rs:968:17
    |
963 | /                 let mut init = C2RustUnnamed_31 {
964 | |                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
965 | |                     lower: 0 as libc::c_int,
966 | |                     upper: -(1 as libc::c_int),
967 | |                 };
    | |__________________- unnecessary `let` binding
968 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
963 ~                 
964 ~                 C2RustUnnamed_31 {
965 +                     template: b"c:kt:\0" as *const u8 as *const libc::c_char,
966 +                     lower: 0 as libc::c_int,
967 +                     upper: -(1 as libc::c_int),
968 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_respawn_window.rs:983:17
    |
978 | /                 let mut init = cmd_entry_flag {
979 | |                     flag: 't' as i32 as libc::c_char,
980 | |                     type_0: CMD_FIND_WINDOW,
981 | |                     flags: 0 as libc::c_int,
982 | |                 };
    | |__________________- unnecessary `let` binding
983 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
978 ~                 
979 ~                 cmd_entry_flag {
980 +                     flag: 't' as i32 as libc::c_char,
981 +                     type_0: CMD_FIND_WINDOW,
982 +                     flags: 0 as libc::c_int,
983 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_respawn_window.rs:1099:5
     |
1099 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1002:36
     |
1002 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_window.rs:1005:9
     |
1005 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1008:33
     |
1008 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_window.rs:1009:41
     |
1009 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_window.rs:1010:39
     |
1010 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1011:40
     |
1011 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1012:38
     |
1012 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1013:42
     |
1013 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1064:45
     |
1064 |         cwd = format_single(item, cp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_respawn_window.rs:1064:64
     |
1064 |         cwd = format_single(item, cp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_respawn_window.rs:1072:9
     |
1072 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_rotate_window.rs:944:9
    |
913 | /         let mut init = cmd_entry {
914 | |             name: b"rotate-window\0" as *const u8 as *const libc::c_char,
915 | |             alias: b"rotatew\0" as *const u8 as *const libc::c_char,
916 | |             args: {
...   |
942 | |             ),
943 | |         };
    | |__________- unnecessary `let` binding
944 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
913 ~         
914 ~         cmd_entry {
915 +             name: b"rotate-window\0" as *const u8 as *const libc::c_char,
916 +             alias: b"rotatew\0" as *const u8 as *const libc::c_char,
917 +             args: {
918 +                 let mut init = C2RustUnnamed_31 {
919 +                     template: b"Dt:U\0" as *const u8 as *const libc::c_char,
920 +                     lower: 0 as libc::c_int,
921 +                     upper: 0 as libc::c_int,
922 +                 };
923 +                 init
924 +             },
925 +             usage: b"[-DU] [-t target-window]\0" as *const u8 as *const libc::c_char,
926 +             source: cmd_entry_flag {
927 +                 flag: 0,
928 +                 type_0: CMD_FIND_PANE,
929 +                 flags: 0,
930 +             },
931 +             target: {
932 +                 let mut init = cmd_entry_flag {
933 +                     flag: 't' as i32 as libc::c_char,
934 +                     type_0: CMD_FIND_WINDOW,
935 +                     flags: 0 as libc::c_int,
936 +                 };
937 +                 init
938 +             },
939 +             flags: 0 as libc::c_int,
940 +             exec: Some(
941 +                 cmd_rotate_window_exec
942 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
943 +             ),
944 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rotate_window.rs:922:17
    |
917 | /                 let mut init = C2RustUnnamed_31 {
918 | |                     template: b"Dt:U\0" as *const u8 as *const libc::c_char,
919 | |                     lower: 0 as libc::c_int,
920 | |                     upper: 0 as libc::c_int,
921 | |                 };
    | |__________________- unnecessary `let` binding
922 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
917 ~                 
918 ~                 C2RustUnnamed_31 {
919 +                     template: b"Dt:U\0" as *const u8 as *const libc::c_char,
920 +                     lower: 0 as libc::c_int,
921 +                     upper: 0 as libc::c_int,
922 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_rotate_window.rs:936:17
    |
931 | /                 let mut init = cmd_entry_flag {
932 | |                     flag: 't' as i32 as libc::c_char,
933 | |                     type_0: CMD_FIND_WINDOW,
934 | |                     flags: 0 as libc::c_int,
935 | |                 };
    | |__________________- unnecessary `let` binding
936 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
931 ~                 
932 ~                 cmd_entry_flag {
933 +                     flag: 't' as i32 as libc::c_char,
934 +                     type_0: CMD_FIND_WINDOW,
935 +                     flags: 0 as libc::c_int,
936 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_rotate_window.rs:1059:5
     |
1059 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_rotate_window.rs:954:36
    |
954 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rotate_window.rs:955:37
    |
955 |     let mut wp2: *mut window_pane = 0 as *mut window_pane;
    |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_rotate_window.rs:956:36
    |
956 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_rotate_window.rs:1020:32
     |
1020 |         (*wp).entry.tqe_next = 0 as *mut window_pane;
     |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_run_shell.rs:1024:9
     |
992  | /         let mut init = cmd_entry {
993  | |             name: b"run-shell\0" as *const u8 as *const libc::c_char,
994  | |             alias: b"run\0" as *const u8 as *const libc::c_char,
995  | |             args: {
...    |
1022 | |             ),
1023 | |         };
     | |__________- unnecessary `let` binding
1024 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
992  ~         
993  ~         cmd_entry {
994  +             name: b"run-shell\0" as *const u8 as *const libc::c_char,
995  +             alias: b"run\0" as *const u8 as *const libc::c_char,
996  +             args: {
997  +                 let mut init = C2RustUnnamed_31 {
998  +                     template: b"bt:\0" as *const u8 as *const libc::c_char,
999  +                     lower: 1 as libc::c_int,
1000 +                     upper: 1 as libc::c_int,
1001 +                 };
1002 +                 init
1003 +             },
1004 +             usage: b"[-b] [-t target-pane] shell-command\0" as *const u8
1005 +                 as *const libc::c_char,
1006 +             source: cmd_entry_flag {
1007 +                 flag: 0,
1008 +                 type_0: CMD_FIND_PANE,
1009 +                 flags: 0,
1010 +             },
1011 +             target: {
1012 +                 let mut init = cmd_entry_flag {
1013 +                     flag: 't' as i32 as libc::c_char,
1014 +                     type_0: CMD_FIND_PANE,
1015 +                     flags: 0x40 as libc::c_int,
1016 +                 };
1017 +                 init
1018 +             },
1019 +             flags: 0 as libc::c_int,
1020 +             exec: Some(
1021 +                 cmd_run_shell_exec
1022 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1023 +             ),
1024 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_run_shell.rs:1001:17
     |
996  | /                 let mut init = C2RustUnnamed_31 {
997  | |                     template: b"bt:\0" as *const u8 as *const libc::c_char,
998  | |                     lower: 1 as libc::c_int,
999  | |                     upper: 1 as libc::c_int,
1000 | |                 };
     | |__________________- unnecessary `let` binding
1001 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
996  ~                 
997  ~                 C2RustUnnamed_31 {
998  +                     template: b"bt:\0" as *const u8 as *const libc::c_char,
999  +                     lower: 1 as libc::c_int,
1000 +                     upper: 1 as libc::c_int,
1001 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_run_shell.rs:1016:17
     |
1011 | /                 let mut init = cmd_entry_flag {
1012 | |                     flag: 't' as i32 as libc::c_char,
1013 | |                     type_0: CMD_FIND_PANE,
1014 | |                     flags: 0x40 as libc::c_int,
1015 | |                 };
     | |__________________- unnecessary `let` binding
1016 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1011 ~                 
1012 ~                 cmd_entry_flag {
1013 +                     flag: 't' as i32 as libc::c_char,
1014 +                     type_0: CMD_FIND_PANE,
1015 +                     flags: 0x40 as libc::c_int,
1016 +                 }
     |

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1032:36
     |
1032 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1035:18
     |
1035 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1036:12
     |
1036 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1037:13
     |
1037 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1038:12
     |
1038 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1039:13
     |
1039 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1061:9
     |
1061 |         0 as *mut cmd_find_state,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1062:9
     |
1062 |         0 as *mut args,
     |         ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_run_shell.rs:1127:5
     |
1127 |     return CMD_RETURN_WAIT;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_WAIT`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1076:46
     |
1076 |     let mut cdata: *mut cmd_run_shell_data = 0 as *mut cmd_run_shell_data;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_run_shell_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_run_shell.rs:1079:9
     |
1079 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_run_shell.rs:1085:40
     |
1085 |     let mut cwd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_run_shell.rs:1091:15
     |
1091 |         cwd = 0 as *const libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1132:38
     |
1132 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1133:39
     |
1133 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_run_shell.rs:1160:11
     |
1160 |     msg = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_save_buffer.rs:1012:9
     |
984  | /         let mut init = cmd_entry {
985  | |             name: b"save-buffer\0" as *const u8 as *const libc::c_char,
986  | |             alias: b"saveb\0" as *const u8 as *const libc::c_char,
987  | |             args: {
...    |
1010 | |             ),
1011 | |         };
     | |__________- unnecessary `let` binding
1012 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
984  ~         
985  ~         cmd_entry {
986  +             name: b"save-buffer\0" as *const u8 as *const libc::c_char,
987  +             alias: b"saveb\0" as *const u8 as *const libc::c_char,
988  +             args: {
989  +                 let mut init = C2RustUnnamed_31 {
990  +                     template: b"ab:\0" as *const u8 as *const libc::c_char,
991  +                     lower: 1 as libc::c_int,
992  +                     upper: 1 as libc::c_int,
993  +                 };
994  +                 init
995  +             },
996  +             usage: b"[-a] [-b buffer-name] path\0" as *const u8 as *const libc::c_char,
997  +             source: cmd_entry_flag {
998  +                 flag: 0,
999  +                 type_0: CMD_FIND_PANE,
1000 +                 flags: 0,
1001 +             },
1002 +             target: cmd_entry_flag {
1003 +                 flag: 0,
1004 +                 type_0: CMD_FIND_PANE,
1005 +                 flags: 0,
1006 +             },
1007 +             flags: 0x4 as libc::c_int,
1008 +             exec: Some(
1009 +                 cmd_save_buffer_exec
1010 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1011 +             ),
1012 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_save_buffer.rs:993:17
    |
988 | /                 let mut init = C2RustUnnamed_31 {
989 | |                     template: b"ab:\0" as *const u8 as *const libc::c_char,
990 | |                     lower: 1 as libc::c_int,
991 | |                     upper: 1 as libc::c_int,
992 | |                 };
    | |__________________- unnecessary `let` binding
993 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
988 ~                 
989 ~                 C2RustUnnamed_31 {
990 +                     template: b"ab:\0" as *const u8 as *const libc::c_char,
991 +                     lower: 1 as libc::c_int,
992 +                     upper: 1 as libc::c_int,
993 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_save_buffer.rs:1046:9
     |
1018 | /         let mut init = cmd_entry {
1019 | |             name: b"show-buffer\0" as *const u8 as *const libc::c_char,
1020 | |             alias: b"showb\0" as *const u8 as *const libc::c_char,
1021 | |             args: {
...    |
1044 | |             ),
1045 | |         };
     | |__________- unnecessary `let` binding
1046 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1018 ~         
1019 ~         cmd_entry {
1020 +             name: b"show-buffer\0" as *const u8 as *const libc::c_char,
1021 +             alias: b"showb\0" as *const u8 as *const libc::c_char,
1022 +             args: {
1023 +                 let mut init = C2RustUnnamed_31 {
1024 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
1025 +                     lower: 0 as libc::c_int,
1026 +                     upper: 0 as libc::c_int,
1027 +                 };
1028 +                 init
1029 +             },
1030 +             usage: b"[-b buffer-name]\0" as *const u8 as *const libc::c_char,
1031 +             source: cmd_entry_flag {
1032 +                 flag: 0,
1033 +                 type_0: CMD_FIND_PANE,
1034 +                 flags: 0,
1035 +             },
1036 +             target: cmd_entry_flag {
1037 +                 flag: 0,
1038 +                 type_0: CMD_FIND_PANE,
1039 +                 flags: 0,
1040 +             },
1041 +             flags: 0x4 as libc::c_int,
1042 +             exec: Some(
1043 +                 cmd_save_buffer_exec
1044 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1045 +             ),
1046 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_save_buffer.rs:1027:17
     |
1022 | /                 let mut init = C2RustUnnamed_31 {
1023 | |                     template: b"b:\0" as *const u8 as *const libc::c_char,
1024 | |                     lower: 0 as libc::c_int,
1025 | |                     upper: 0 as libc::c_int,
1026 | |                 };
     | |__________________- unnecessary `let` binding
1027 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1022 ~                 
1023 ~                 C2RustUnnamed_31 {
1024 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
1025 +                     lower: 0 as libc::c_int,
1026 +                     upper: 0 as libc::c_int,
1027 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_save_buffer.rs:1104:13
     |
1104 |             return CMD_RETURN_NORMAL;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_save_buffer.rs:1145:13
     |
1145 |             return CMD_RETURN_NORMAL;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_save_buffer.rs:1182:9
     |
1182 |         return CMD_RETURN_NORMAL;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1055:37
     |
1055 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1056:41
     |
1056 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1057:44
     |
1057 |     let mut bufname: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1058:44
     |
1058 |     let mut bufdata: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1059:42
     |
1059 |     let mut start: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1060:40
     |
1060 |     let mut end: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_save_buffer.rs:1061:42
     |
1061 |     let mut flags: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1062:38
     |
1062 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1063:39
     |
1063 |     let mut file: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1068:28
     |
1068 |     let mut f: *mut FILE = 0 as *mut FILE;
     |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1070:28
     |
1070 |         pb = paste_get_top(0 as *mut *const libc::c_char);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1116:19
     |
1116 |             msg = 0 as *mut libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_save_buffer.rs:1139:41
     |
1139 | ...                   (end != 0 as *mut libc::c_void as *const libc::c_char)
     |                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:946:9
    |
914 | /         let mut init = cmd_entry {
915 | |             name: b"select-layout\0" as *const u8 as *const libc::c_char,
916 | |             alias: b"selectl\0" as *const u8 as *const libc::c_char,
917 | |             args: {
...   |
944 | |             ),
945 | |         };
    | |__________- unnecessary `let` binding
946 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
914 ~         
915 ~         cmd_entry {
916 +             name: b"select-layout\0" as *const u8 as *const libc::c_char,
917 +             alias: b"selectl\0" as *const u8 as *const libc::c_char,
918 +             args: {
919 +                 let mut init = C2RustUnnamed_31 {
920 +                     template: b"Enopt:\0" as *const u8 as *const libc::c_char,
921 +                     lower: 0 as libc::c_int,
922 +                     upper: 1 as libc::c_int,
923 +                 };
924 +                 init
925 +             },
926 +             usage: b"[-Enop] [-t target-pane] [layout-name]\0" as *const u8
927 +                 as *const libc::c_char,
928 +             source: cmd_entry_flag {
929 +                 flag: 0,
930 +                 type_0: CMD_FIND_PANE,
931 +                 flags: 0,
932 +             },
933 +             target: {
934 +                 let mut init = cmd_entry_flag {
935 +                     flag: 't' as i32 as libc::c_char,
936 +                     type_0: CMD_FIND_PANE,
937 +                     flags: 0 as libc::c_int,
938 +                 };
939 +                 init
940 +             },
941 +             flags: 0x4 as libc::c_int,
942 +             exec: Some(
943 +                 cmd_select_layout_exec
944 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
945 +             ),
946 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:923:17
    |
918 | /                 let mut init = C2RustUnnamed_31 {
919 | |                     template: b"Enopt:\0" as *const u8 as *const libc::c_char,
920 | |                     lower: 0 as libc::c_int,
921 | |                     upper: 1 as libc::c_int,
922 | |                 };
    | |__________________- unnecessary `let` binding
923 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
918 ~                 
919 ~                 C2RustUnnamed_31 {
920 +                     template: b"Enopt:\0" as *const u8 as *const libc::c_char,
921 +                     lower: 0 as libc::c_int,
922 +                     upper: 1 as libc::c_int,
923 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:938:17
    |
933 | /                 let mut init = cmd_entry_flag {
934 | |                     flag: 't' as i32 as libc::c_char,
935 | |                     type_0: CMD_FIND_PANE,
936 | |                     flags: 0 as libc::c_int,
937 | |                 };
    | |__________________- unnecessary `let` binding
938 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
933 ~                 
934 ~                 cmd_entry_flag {
935 +                     flag: 't' as i32 as libc::c_char,
936 +                     type_0: CMD_FIND_PANE,
937 +                     flags: 0 as libc::c_int,
938 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:983:9
    |
952 | /         let mut init = cmd_entry {
953 | |             name: b"next-layout\0" as *const u8 as *const libc::c_char,
954 | |             alias: b"nextl\0" as *const u8 as *const libc::c_char,
955 | |             args: {
...   |
981 | |             ),
982 | |         };
    | |__________- unnecessary `let` binding
983 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
952 ~         
953 ~         cmd_entry {
954 +             name: b"next-layout\0" as *const u8 as *const libc::c_char,
955 +             alias: b"nextl\0" as *const u8 as *const libc::c_char,
956 +             args: {
957 +                 let mut init = C2RustUnnamed_31 {
958 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
959 +                     lower: 0 as libc::c_int,
960 +                     upper: 0 as libc::c_int,
961 +                 };
962 +                 init
963 +             },
964 +             usage: b"[-t target-window]\0" as *const u8 as *const libc::c_char,
965 +             source: cmd_entry_flag {
966 +                 flag: 0,
967 +                 type_0: CMD_FIND_PANE,
968 +                 flags: 0,
969 +             },
970 +             target: {
971 +                 let mut init = cmd_entry_flag {
972 +                     flag: 't' as i32 as libc::c_char,
973 +                     type_0: CMD_FIND_WINDOW,
974 +                     flags: 0 as libc::c_int,
975 +                 };
976 +                 init
977 +             },
978 +             flags: 0x4 as libc::c_int,
979 +             exec: Some(
980 +                 cmd_select_layout_exec
981 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
982 +             ),
983 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:961:17
    |
956 | /                 let mut init = C2RustUnnamed_31 {
957 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
958 | |                     lower: 0 as libc::c_int,
959 | |                     upper: 0 as libc::c_int,
960 | |                 };
    | |__________________- unnecessary `let` binding
961 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
956 ~                 
957 ~                 C2RustUnnamed_31 {
958 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
959 +                     lower: 0 as libc::c_int,
960 +                     upper: 0 as libc::c_int,
961 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:975:17
    |
970 | /                 let mut init = cmd_entry_flag {
971 | |                     flag: 't' as i32 as libc::c_char,
972 | |                     type_0: CMD_FIND_WINDOW,
973 | |                     flags: 0 as libc::c_int,
974 | |                 };
    | |__________________- unnecessary `let` binding
975 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
970 ~                 
971 ~                 cmd_entry_flag {
972 +                     flag: 't' as i32 as libc::c_char,
973 +                     type_0: CMD_FIND_WINDOW,
974 +                     flags: 0 as libc::c_int,
975 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_layout.rs:1020:9
     |
989  | /         let mut init = cmd_entry {
990  | |             name: b"previous-layout\0" as *const u8 as *const libc::c_char,
991  | |             alias: b"prevl\0" as *const u8 as *const libc::c_char,
992  | |             args: {
...    |
1018 | |             ),
1019 | |         };
     | |__________- unnecessary `let` binding
1020 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
989  ~         
990  ~         cmd_entry {
991  +             name: b"previous-layout\0" as *const u8 as *const libc::c_char,
992  +             alias: b"prevl\0" as *const u8 as *const libc::c_char,
993  +             args: {
994  +                 let mut init = C2RustUnnamed_31 {
995  +                     template: b"t:\0" as *const u8 as *const libc::c_char,
996  +                     lower: 0 as libc::c_int,
997  +                     upper: 0 as libc::c_int,
998  +                 };
999  +                 init
1000 +             },
1001 +             usage: b"[-t target-window]\0" as *const u8 as *const libc::c_char,
1002 +             source: cmd_entry_flag {
1003 +                 flag: 0,
1004 +                 type_0: CMD_FIND_PANE,
1005 +                 flags: 0,
1006 +             },
1007 +             target: {
1008 +                 let mut init = cmd_entry_flag {
1009 +                     flag: 't' as i32 as libc::c_char,
1010 +                     type_0: CMD_FIND_WINDOW,
1011 +                     flags: 0 as libc::c_int,
1012 +                 };
1013 +                 init
1014 +             },
1015 +             flags: 0x4 as libc::c_int,
1016 +             exec: Some(
1017 +                 cmd_select_layout_exec
1018 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1019 +             ),
1020 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_layout.rs:998:17
    |
993 | /                 let mut init = C2RustUnnamed_31 {
994 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
995 | |                     lower: 0 as libc::c_int,
996 | |                     upper: 0 as libc::c_int,
997 | |                 };
    | |__________________- unnecessary `let` binding
998 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
993 ~                 
994 ~                 C2RustUnnamed_31 {
995 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
996 +                     lower: 0 as libc::c_int,
997 +                     upper: 0 as libc::c_int,
998 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_layout.rs:1012:17
     |
1007 | /                 let mut init = cmd_entry_flag {
1008 | |                     flag: 't' as i32 as libc::c_char,
1009 | |                     type_0: CMD_FIND_WINDOW,
1010 | |                     flags: 0 as libc::c_int,
1011 | |                 };
     | |__________________- unnecessary `let` binding
1012 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1007 ~                 
1008 ~                 cmd_entry_flag {
1009 +                     flag: 't' as i32 as libc::c_char,
1010 +                     type_0: CMD_FIND_WINDOW,
1011 +                     flags: 0 as libc::c_int,
1012 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_select_layout.rs:1107:5
     |
1107 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_select_layout.rs:1032:47
     |
1032 |     let mut layoutname: *const libc::c_char = 0 as *const libc::c_char;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_select_layout.rs:1033:44
     |
1033 |     let mut oldlayout: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_select_layout.rs:1084:34
     |
1084 |                     layoutname = 0 as *const libc::c_char;
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_pane.rs:992:9
    |
960 | /         let mut init = cmd_entry {
961 | |             name: b"select-pane\0" as *const u8 as *const libc::c_char,
962 | |             alias: b"selectp\0" as *const u8 as *const libc::c_char,
963 | |             args: {
...   |
990 | |             ),
991 | |         };
    | |__________- unnecessary `let` binding
992 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
960 ~         
961 ~         cmd_entry {
962 +             name: b"select-pane\0" as *const u8 as *const libc::c_char,
963 +             alias: b"selectp\0" as *const u8 as *const libc::c_char,
964 +             args: {
965 +                 let mut init = C2RustUnnamed_31 {
966 +                     template: b"DdegLlMmP:RT:t:U\0" as *const u8 as *const libc::c_char,
967 +                     lower: 0 as libc::c_int,
968 +                     upper: 0 as libc::c_int,
969 +                 };
970 +                 init
971 +             },
972 +             usage: b"[-DdegLlMmRU] [-P style] [-T title] [-t target-pane]\0" as *const u8
973 +                 as *const libc::c_char,
974 +             source: cmd_entry_flag {
975 +                 flag: 0,
976 +                 type_0: CMD_FIND_PANE,
977 +                 flags: 0,
978 +             },
979 +             target: {
980 +                 let mut init = cmd_entry_flag {
981 +                     flag: 't' as i32 as libc::c_char,
982 +                     type_0: CMD_FIND_PANE,
983 +                     flags: 0 as libc::c_int,
984 +                 };
985 +                 init
986 +             },
987 +             flags: 0 as libc::c_int,
988 +             exec: Some(
989 +                 cmd_select_pane_exec
990 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
991 +             ),
992 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_pane.rs:969:17
    |
964 | /                 let mut init = C2RustUnnamed_31 {
965 | |                     template: b"DdegLlMmP:RT:t:U\0" as *const u8 as *const libc::c_char,
966 | |                     lower: 0 as libc::c_int,
967 | |                     upper: 0 as libc::c_int,
968 | |                 };
    | |__________________- unnecessary `let` binding
969 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
964 ~                 
965 ~                 C2RustUnnamed_31 {
966 +                     template: b"DdegLlMmP:RT:t:U\0" as *const u8 as *const libc::c_char,
967 +                     lower: 0 as libc::c_int,
968 +                     upper: 0 as libc::c_int,
969 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_pane.rs:984:17
    |
979 | /                 let mut init = cmd_entry_flag {
980 | |                     flag: 't' as i32 as libc::c_char,
981 | |                     type_0: CMD_FIND_PANE,
982 | |                     flags: 0 as libc::c_int,
983 | |                 };
    | |__________________- unnecessary `let` binding
984 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
979 ~                 
980 ~                 cmd_entry_flag {
981 +                     flag: 't' as i32 as libc::c_char,
982 +                     type_0: CMD_FIND_PANE,
983 +                     flags: 0 as libc::c_int,
984 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_pane.rs:1029:9
     |
998  | /         let mut init = cmd_entry {
999  | |             name: b"last-pane\0" as *const u8 as *const libc::c_char,
1000 | |             alias: b"lastp\0" as *const u8 as *const libc::c_char,
1001 | |             args: {
...    |
1027 | |             ),
1028 | |         };
     | |__________- unnecessary `let` binding
1029 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
998  ~         
999  ~         cmd_entry {
1000 +             name: b"last-pane\0" as *const u8 as *const libc::c_char,
1001 +             alias: b"lastp\0" as *const u8 as *const libc::c_char,
1002 +             args: {
1003 +                 let mut init = C2RustUnnamed_31 {
1004 +                     template: b"det:\0" as *const u8 as *const libc::c_char,
1005 +                     lower: 0 as libc::c_int,
1006 +                     upper: 0 as libc::c_int,
1007 +                 };
1008 +                 init
1009 +             },
1010 +             usage: b"[-de] [-t target-window]\0" as *const u8 as *const libc::c_char,
1011 +             source: cmd_entry_flag {
1012 +                 flag: 0,
1013 +                 type_0: CMD_FIND_PANE,
1014 +                 flags: 0,
1015 +             },
1016 +             target: {
1017 +                 let mut init = cmd_entry_flag {
1018 +                     flag: 't' as i32 as libc::c_char,
1019 +                     type_0: CMD_FIND_WINDOW,
1020 +                     flags: 0 as libc::c_int,
1021 +                 };
1022 +                 init
1023 +             },
1024 +             flags: 0 as libc::c_int,
1025 +             exec: Some(
1026 +                 cmd_select_pane_exec
1027 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1028 +             ),
1029 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_pane.rs:1007:17
     |
1002 | /                 let mut init = C2RustUnnamed_31 {
1003 | |                     template: b"det:\0" as *const u8 as *const libc::c_char,
1004 | |                     lower: 0 as libc::c_int,
1005 | |                     upper: 0 as libc::c_int,
1006 | |                 };
     | |__________________- unnecessary `let` binding
1007 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1002 ~                 
1003 ~                 C2RustUnnamed_31 {
1004 +                     template: b"det:\0" as *const u8 as *const libc::c_char,
1005 +                     lower: 0 as libc::c_int,
1006 +                     upper: 0 as libc::c_int,
1007 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_pane.rs:1021:17
     |
1016 | /                 let mut init = cmd_entry_flag {
1017 | |                     flag: 't' as i32 as libc::c_char,
1018 | |                     type_0: CMD_FIND_WINDOW,
1019 | |                     flags: 0 as libc::c_int,
1020 | |                 };
     | |__________________- unnecessary `let` binding
1021 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1016 ~                 
1017 ~                 cmd_entry_flag {
1018 +                     flag: 't' as i32 as libc::c_char,
1019 +                     type_0: CMD_FIND_WINDOW,
1020 +                     flags: 0 as libc::c_int,
1021 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_select_pane.rs:1181:5
     |
1181 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_select_pane.rs:1040:9
     |
1040 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_select_pane.rs:1047:40
     |
1047 |     let mut lastwp: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_select_pane.rs:1048:42
     |
1048 |     let mut markedwp: *mut window_pane = 0 as *mut window_pane;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_select_pane.rs:1049:45
     |
1049 |     let mut pane_title: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_select_pane.rs:1050:42
     |
1050 |     let mut style: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:949:9
    |
918 | /         let mut init = cmd_entry {
919 | |             name: b"select-window\0" as *const u8 as *const libc::c_char,
920 | |             alias: b"selectw\0" as *const u8 as *const libc::c_char,
921 | |             args: {
...   |
947 | |             ),
948 | |         };
    | |__________- unnecessary `let` binding
949 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
918 ~         
919 ~         cmd_entry {
920 +             name: b"select-window\0" as *const u8 as *const libc::c_char,
921 +             alias: b"selectw\0" as *const u8 as *const libc::c_char,
922 +             args: {
923 +                 let mut init = C2RustUnnamed_31 {
924 +                     template: b"lnpTt:\0" as *const u8 as *const libc::c_char,
925 +                     lower: 0 as libc::c_int,
926 +                     upper: 0 as libc::c_int,
927 +                 };
928 +                 init
929 +             },
930 +             usage: b"[-lnpT] [-t target-window]\0" as *const u8 as *const libc::c_char,
931 +             source: cmd_entry_flag {
932 +                 flag: 0,
933 +                 type_0: CMD_FIND_PANE,
934 +                 flags: 0,
935 +             },
936 +             target: {
937 +                 let mut init = cmd_entry_flag {
938 +                     flag: 't' as i32 as libc::c_char,
939 +                     type_0: CMD_FIND_WINDOW,
940 +                     flags: 0 as libc::c_int,
941 +                 };
942 +                 init
943 +             },
944 +             flags: 0 as libc::c_int,
945 +             exec: Some(
946 +                 cmd_select_window_exec
947 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
948 +             ),
949 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:927:17
    |
922 | /                 let mut init = C2RustUnnamed_31 {
923 | |                     template: b"lnpTt:\0" as *const u8 as *const libc::c_char,
924 | |                     lower: 0 as libc::c_int,
925 | |                     upper: 0 as libc::c_int,
926 | |                 };
    | |__________________- unnecessary `let` binding
927 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
922 ~                 
923 ~                 C2RustUnnamed_31 {
924 +                     template: b"lnpTt:\0" as *const u8 as *const libc::c_char,
925 +                     lower: 0 as libc::c_int,
926 +                     upper: 0 as libc::c_int,
927 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:941:17
    |
936 | /                 let mut init = cmd_entry_flag {
937 | |                     flag: 't' as i32 as libc::c_char,
938 | |                     type_0: CMD_FIND_WINDOW,
939 | |                     flags: 0 as libc::c_int,
940 | |                 };
    | |__________________- unnecessary `let` binding
941 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
936 ~                 
937 ~                 cmd_entry_flag {
938 +                     flag: 't' as i32 as libc::c_char,
939 +                     type_0: CMD_FIND_WINDOW,
940 +                     flags: 0 as libc::c_int,
941 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:986:9
    |
955 | /         let mut init = cmd_entry {
956 | |             name: b"next-window\0" as *const u8 as *const libc::c_char,
957 | |             alias: b"next\0" as *const u8 as *const libc::c_char,
958 | |             args: {
...   |
984 | |             ),
985 | |         };
    | |__________- unnecessary `let` binding
986 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
955 ~         
956 ~         cmd_entry {
957 +             name: b"next-window\0" as *const u8 as *const libc::c_char,
958 +             alias: b"next\0" as *const u8 as *const libc::c_char,
959 +             args: {
960 +                 let mut init = C2RustUnnamed_31 {
961 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 0 as libc::c_int,
963 +                     upper: 0 as libc::c_int,
964 +                 };
965 +                 init
966 +             },
967 +             usage: b"[-a] [-t target-session]\0" as *const u8 as *const libc::c_char,
968 +             source: cmd_entry_flag {
969 +                 flag: 0,
970 +                 type_0: CMD_FIND_PANE,
971 +                 flags: 0,
972 +             },
973 +             target: {
974 +                 let mut init = cmd_entry_flag {
975 +                     flag: 't' as i32 as libc::c_char,
976 +                     type_0: CMD_FIND_SESSION,
977 +                     flags: 0 as libc::c_int,
978 +                 };
979 +                 init
980 +             },
981 +             flags: 0 as libc::c_int,
982 +             exec: Some(
983 +                 cmd_select_window_exec
984 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
985 +             ),
986 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:964:17
    |
959 | /                 let mut init = C2RustUnnamed_31 {
960 | |                     template: b"at:\0" as *const u8 as *const libc::c_char,
961 | |                     lower: 0 as libc::c_int,
962 | |                     upper: 0 as libc::c_int,
963 | |                 };
    | |__________________- unnecessary `let` binding
964 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
959 ~                 
960 ~                 C2RustUnnamed_31 {
961 +                     template: b"at:\0" as *const u8 as *const libc::c_char,
962 +                     lower: 0 as libc::c_int,
963 +                     upper: 0 as libc::c_int,
964 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_select_window.rs:978:17
    |
973 | /                 let mut init = cmd_entry_flag {
974 | |                     flag: 't' as i32 as libc::c_char,
975 | |                     type_0: CMD_FIND_SESSION,
976 | |                     flags: 0 as libc::c_int,
977 | |                 };
    | |__________________- unnecessary `let` binding
978 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
973 ~                 
974 ~                 cmd_entry_flag {
975 +                     flag: 't' as i32 as libc::c_char,
976 +                     type_0: CMD_FIND_SESSION,
977 +                     flags: 0 as libc::c_int,
978 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1023:9
     |
992  | /         let mut init = cmd_entry {
993  | |             name: b"previous-window\0" as *const u8 as *const libc::c_char,
994  | |             alias: b"prev\0" as *const u8 as *const libc::c_char,
995  | |             args: {
...    |
1021 | |             ),
1022 | |         };
     | |__________- unnecessary `let` binding
1023 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
992  ~         
993  ~         cmd_entry {
994  +             name: b"previous-window\0" as *const u8 as *const libc::c_char,
995  +             alias: b"prev\0" as *const u8 as *const libc::c_char,
996  +             args: {
997  +                 let mut init = C2RustUnnamed_31 {
998  +                     template: b"at:\0" as *const u8 as *const libc::c_char,
999  +                     lower: 0 as libc::c_int,
1000 +                     upper: 0 as libc::c_int,
1001 +                 };
1002 +                 init
1003 +             },
1004 +             usage: b"[-a] [-t target-session]\0" as *const u8 as *const libc::c_char,
1005 +             source: cmd_entry_flag {
1006 +                 flag: 0,
1007 +                 type_0: CMD_FIND_PANE,
1008 +                 flags: 0,
1009 +             },
1010 +             target: {
1011 +                 let mut init = cmd_entry_flag {
1012 +                     flag: 't' as i32 as libc::c_char,
1013 +                     type_0: CMD_FIND_SESSION,
1014 +                     flags: 0 as libc::c_int,
1015 +                 };
1016 +                 init
1017 +             },
1018 +             flags: 0 as libc::c_int,
1019 +             exec: Some(
1020 +                 cmd_select_window_exec
1021 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1022 +             ),
1023 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1001:17
     |
996  | /                 let mut init = C2RustUnnamed_31 {
997  | |                     template: b"at:\0" as *const u8 as *const libc::c_char,
998  | |                     lower: 0 as libc::c_int,
999  | |                     upper: 0 as libc::c_int,
1000 | |                 };
     | |__________________- unnecessary `let` binding
1001 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
996  ~                 
997  ~                 C2RustUnnamed_31 {
998  +                     template: b"at:\0" as *const u8 as *const libc::c_char,
999  +                     lower: 0 as libc::c_int,
1000 +                     upper: 0 as libc::c_int,
1001 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1015:17
     |
1010 | /                 let mut init = cmd_entry_flag {
1011 | |                     flag: 't' as i32 as libc::c_char,
1012 | |                     type_0: CMD_FIND_SESSION,
1013 | |                     flags: 0 as libc::c_int,
1014 | |                 };
     | |__________________- unnecessary `let` binding
1015 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1010 ~                 
1011 ~                 cmd_entry_flag {
1012 +                     flag: 't' as i32 as libc::c_char,
1013 +                     type_0: CMD_FIND_SESSION,
1014 +                     flags: 0 as libc::c_int,
1015 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1060:9
     |
1029 | /         let mut init = cmd_entry {
1030 | |             name: b"last-window\0" as *const u8 as *const libc::c_char,
1031 | |             alias: b"last\0" as *const u8 as *const libc::c_char,
1032 | |             args: {
...    |
1058 | |             ),
1059 | |         };
     | |__________- unnecessary `let` binding
1060 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1029 ~         
1030 ~         cmd_entry {
1031 +             name: b"last-window\0" as *const u8 as *const libc::c_char,
1032 +             alias: b"last\0" as *const u8 as *const libc::c_char,
1033 +             args: {
1034 +                 let mut init = C2RustUnnamed_31 {
1035 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1036 +                     lower: 0 as libc::c_int,
1037 +                     upper: 0 as libc::c_int,
1038 +                 };
1039 +                 init
1040 +             },
1041 +             usage: b"[-t target-session]\0" as *const u8 as *const libc::c_char,
1042 +             source: cmd_entry_flag {
1043 +                 flag: 0,
1044 +                 type_0: CMD_FIND_PANE,
1045 +                 flags: 0,
1046 +             },
1047 +             target: {
1048 +                 let mut init = cmd_entry_flag {
1049 +                     flag: 't' as i32 as libc::c_char,
1050 +                     type_0: CMD_FIND_SESSION,
1051 +                     flags: 0 as libc::c_int,
1052 +                 };
1053 +                 init
1054 +             },
1055 +             flags: 0 as libc::c_int,
1056 +             exec: Some(
1057 +                 cmd_select_window_exec
1058 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1059 +             ),
1060 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1038:17
     |
1033 | /                 let mut init = C2RustUnnamed_31 {
1034 | |                     template: b"t:\0" as *const u8 as *const libc::c_char,
1035 | |                     lower: 0 as libc::c_int,
1036 | |                     upper: 0 as libc::c_int,
1037 | |                 };
     | |__________________- unnecessary `let` binding
1038 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1033 ~                 
1034 ~                 C2RustUnnamed_31 {
1035 +                     template: b"t:\0" as *const u8 as *const libc::c_char,
1036 +                     lower: 0 as libc::c_int,
1037 +                     upper: 0 as libc::c_int,
1038 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_select_window.rs:1052:17
     |
1047 | /                 let mut init = cmd_entry_flag {
1048 | |                     flag: 't' as i32 as libc::c_char,
1049 | |                     type_0: CMD_FIND_SESSION,
1050 | |                     flags: 0 as libc::c_int,
1051 | |                 };
     | |__________________- unnecessary `let` binding
1052 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1047 ~                 
1048 ~                 cmd_entry_flag {
1049 +                     flag: 't' as i32 as libc::c_char,
1050 +                     type_0: CMD_FIND_SESSION,
1051 +                     flags: 0 as libc::c_int,
1052 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_select_window.rs:1144:5
     |
1144 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
   --> src/cmd_send_keys.rs:985:9
    |
953 | /         let mut init = cmd_entry {
954 | |             name: b"send-keys\0" as *const u8 as *const libc::c_char,
955 | |             alias: b"send\0" as *const u8 as *const libc::c_char,
956 | |             args: {
...   |
983 | |             ),
984 | |         };
    | |__________- unnecessary `let` binding
985 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
953 ~         
954 ~         cmd_entry {
955 +             name: b"send-keys\0" as *const u8 as *const libc::c_char,
956 +             alias: b"send\0" as *const u8 as *const libc::c_char,
957 +             args: {
958 +                 let mut init = C2RustUnnamed_31 {
959 +                     template: b"lXRMN:t:\0" as *const u8 as *const libc::c_char,
960 +                     lower: 0 as libc::c_int,
961 +                     upper: -(1 as libc::c_int),
962 +                 };
963 +                 init
964 +             },
965 +             usage: b"[-lXRM] [-N repeat-count] [-t target-pane] key ...\0" as *const u8
966 +                 as *const libc::c_char,
967 +             source: cmd_entry_flag {
968 +                 flag: 0,
969 +                 type_0: CMD_FIND_PANE,
970 +                 flags: 0,
971 +             },
972 +             target: {
973 +                 let mut init = cmd_entry_flag {
974 +                     flag: 't' as i32 as libc::c_char,
975 +                     type_0: CMD_FIND_PANE,
976 +                     flags: 0 as libc::c_int,
977 +                 };
978 +                 init
979 +             },
980 +             flags: 0x4 as libc::c_int,
981 +             exec: Some(
982 +                 cmd_send_keys_exec
983 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
984 +             ),
985 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_send_keys.rs:962:17
    |
957 | /                 let mut init = C2RustUnnamed_31 {
958 | |                     template: b"lXRMN:t:\0" as *const u8 as *const libc::c_char,
959 | |                     lower: 0 as libc::c_int,
960 | |                     upper: -(1 as libc::c_int),
961 | |                 };
    | |__________________- unnecessary `let` binding
962 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
957 ~                 
958 ~                 C2RustUnnamed_31 {
959 +                     template: b"lXRMN:t:\0" as *const u8 as *const libc::c_char,
960 +                     lower: 0 as libc::c_int,
961 +                     upper: -(1 as libc::c_int),
962 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_send_keys.rs:977:17
    |
972 | /                 let mut init = cmd_entry_flag {
973 | |                     flag: 't' as i32 as libc::c_char,
974 | |                     type_0: CMD_FIND_PANE,
975 | |                     flags: 0 as libc::c_int,
976 | |                 };
    | |__________________- unnecessary `let` binding
977 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
972 ~                 
973 ~                 cmd_entry_flag {
974 +                     flag: 't' as i32 as libc::c_char,
975 +                     type_0: CMD_FIND_PANE,
976 +                     flags: 0 as libc::c_int,
977 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_send_keys.rs:1022:9
     |
991  | /         let mut init = cmd_entry {
992  | |             name: b"send-prefix\0" as *const u8 as *const libc::c_char,
993  | |             alias: 0 as *const libc::c_char,
994  | |             args: {
...    |
1020 | |             ),
1021 | |         };
     | |__________- unnecessary `let` binding
1022 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
991  ~         
992  ~         cmd_entry {
993  +             name: b"send-prefix\0" as *const u8 as *const libc::c_char,
994  +             alias: 0 as *const libc::c_char,
995  +             args: {
996  +                 let mut init = C2RustUnnamed_31 {
997  +                     template: b"2t:\0" as *const u8 as *const libc::c_char,
998  +                     lower: 0 as libc::c_int,
999  +                     upper: 0 as libc::c_int,
1000 +                 };
1001 +                 init
1002 +             },
1003 +             usage: b"[-2] [-t target-pane]\0" as *const u8 as *const libc::c_char,
1004 +             source: cmd_entry_flag {
1005 +                 flag: 0,
1006 +                 type_0: CMD_FIND_PANE,
1007 +                 flags: 0,
1008 +             },
1009 +             target: {
1010 +                 let mut init = cmd_entry_flag {
1011 +                     flag: 't' as i32 as libc::c_char,
1012 +                     type_0: CMD_FIND_PANE,
1013 +                     flags: 0 as libc::c_int,
1014 +                 };
1015 +                 init
1016 +             },
1017 +             flags: 0x4 as libc::c_int,
1018 +             exec: Some(
1019 +                 cmd_send_keys_exec
1020 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1021 +             ),
1022 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_send_keys.rs:1000:17
     |
995  | /                 let mut init = C2RustUnnamed_31 {
996  | |                     template: b"2t:\0" as *const u8 as *const libc::c_char,
997  | |                     lower: 0 as libc::c_int,
998  | |                     upper: 0 as libc::c_int,
999  | |                 };
     | |__________________- unnecessary `let` binding
1000 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
995  ~                 
996  ~                 C2RustUnnamed_31 {
997  +                     template: b"2t:\0" as *const u8 as *const libc::c_char,
998  +                     lower: 0 as libc::c_int,
999  +                     upper: 0 as libc::c_int,
1000 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_send_keys.rs:1014:17
     |
1009 | /                 let mut init = cmd_entry_flag {
1010 | |                     flag: 't' as i32 as libc::c_char,
1011 | |                     type_0: CMD_FIND_PANE,
1012 | |                     flags: 0 as libc::c_int,
1013 | |                 };
     | |__________________- unnecessary `let` binding
1014 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1009 ~                 
1010 ~                 cmd_entry_flag {
1011 +                     flag: 't' as i32 as libc::c_char,
1012 +                     type_0: CMD_FIND_PANE,
1013 +                     flags: 0 as libc::c_int,
1014 +                 }
     |

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1032:37
     |
1032 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1033:36
     |
1033 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1036:18
     |
1036 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1039:23
     |
1039 |             rbe_left: 0 as *mut key_binding,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1040:24
     |
1040 |             rbe_right: 0 as *mut key_binding,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1041:25
     |
1041 |             rbe_parent: 0 as *mut key_binding,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1053:29
     |
1053 |         window_pane_key(wp, 0 as *mut client, s, key, 0 as *mut mouse_event);
     |                             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1053:55
     |
1053 |         window_pane_key(wp, 0 as *mut client, s, key, 0 as *mut mouse_event);
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_send_keys.rs:1064:9
     |
1064 |         (*table).references;
     |         ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1065:44
     |
1065 |         key_bindings_dispatch(bd, item, c, 0 as *mut mouse_event, &mut (*item).target);
     |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_send_keys.rs:1176:24
     |
1176 |                       if !(utf8_combine(uc, &mut wc) as libc::c_uint
     |  ________________________^
1177 | |                         != UTF8_DONE as libc::c_int as libc::c_uint)
     | |____________________________________________________________________^ help: try: `utf8_combine(uc, &mut wc) as libc::c_uint == UTF8_DONE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_send_keys.rs:1192:5
     |
1192 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_send_keys.rs:1076:9
     |
1076 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1082:34
     |
1082 |     let mut ud: *mut utf8_data = 0 as *mut utf8_data;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1083:34
     |
1083 |     let mut uc: *mut utf8_data = 0 as *mut utf8_data;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1089:40
     |
1089 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1123:35
     |
1123 |                 )(wp, c, s, args, 0 as *mut mouse_event);
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1131:40
     |
1131 |         wp = cmd_mouse_pane(m, &mut s, 0 as *mut *mut winlink);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_send_keys.rs:1136:29
     |
1136 |         window_pane_key(wp, 0 as *mut client, s, (*m).key, m);
     |                             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_send_keys.rs:1182:21
     |
1182 |                     uc;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_send_keys.rs:1187:13
     |
1187 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_send_keys.rs:1190:9
     |
1190 |         np;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_buffer.rs:959:9
    |
930 | /         let mut init = cmd_entry {
931 | |             name: b"set-buffer\0" as *const u8 as *const libc::c_char,
932 | |             alias: b"setb\0" as *const u8 as *const libc::c_char,
933 | |             args: {
...   |
957 | |             ),
958 | |         };
    | |__________- unnecessary `let` binding
959 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
930 ~         
931 ~         cmd_entry {
932 +             name: b"set-buffer\0" as *const u8 as *const libc::c_char,
933 +             alias: b"setb\0" as *const u8 as *const libc::c_char,
934 +             args: {
935 +                 let mut init = C2RustUnnamed_31 {
936 +                     template: b"ab:n:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 0 as libc::c_int,
938 +                     upper: 1 as libc::c_int,
939 +                 };
940 +                 init
941 +             },
942 +             usage: b"[-a] [-b buffer-name] [-n new-buffer-name] data\0" as *const u8
943 +                 as *const libc::c_char,
944 +             source: cmd_entry_flag {
945 +                 flag: 0,
946 +                 type_0: CMD_FIND_PANE,
947 +                 flags: 0,
948 +             },
949 +             target: cmd_entry_flag {
950 +                 flag: 0,
951 +                 type_0: CMD_FIND_PANE,
952 +                 flags: 0,
953 +             },
954 +             flags: 0x4 as libc::c_int,
955 +             exec: Some(
956 +                 cmd_set_buffer_exec
957 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
958 +             ),
959 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_buffer.rs:939:17
    |
934 | /                 let mut init = C2RustUnnamed_31 {
935 | |                     template: b"ab:n:\0" as *const u8 as *const libc::c_char,
936 | |                     lower: 0 as libc::c_int,
937 | |                     upper: 1 as libc::c_int,
938 | |                 };
    | |__________________- unnecessary `let` binding
939 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~                 
935 ~                 C2RustUnnamed_31 {
936 +                     template: b"ab:n:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 0 as libc::c_int,
938 +                     upper: 1 as libc::c_int,
939 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_buffer.rs:993:9
    |
965 | /         let mut init = cmd_entry {
966 | |             name: b"delete-buffer\0" as *const u8 as *const libc::c_char,
967 | |             alias: b"deleteb\0" as *const u8 as *const libc::c_char,
968 | |             args: {
...   |
991 | |             ),
992 | |         };
    | |__________- unnecessary `let` binding
993 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
965 ~         
966 ~         cmd_entry {
967 +             name: b"delete-buffer\0" as *const u8 as *const libc::c_char,
968 +             alias: b"deleteb\0" as *const u8 as *const libc::c_char,
969 +             args: {
970 +                 let mut init = C2RustUnnamed_31 {
971 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
972 +                     lower: 0 as libc::c_int,
973 +                     upper: 0 as libc::c_int,
974 +                 };
975 +                 init
976 +             },
977 +             usage: b"[-b buffer-name]\0" as *const u8 as *const libc::c_char,
978 +             source: cmd_entry_flag {
979 +                 flag: 0,
980 +                 type_0: CMD_FIND_PANE,
981 +                 flags: 0,
982 +             },
983 +             target: cmd_entry_flag {
984 +                 flag: 0,
985 +                 type_0: CMD_FIND_PANE,
986 +                 flags: 0,
987 +             },
988 +             flags: 0x4 as libc::c_int,
989 +             exec: Some(
990 +                 cmd_set_buffer_exec
991 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
992 +             ),
993 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_buffer.rs:974:17
    |
969 | /                 let mut init = C2RustUnnamed_31 {
970 | |                     template: b"b:\0" as *const u8 as *const libc::c_char,
971 | |                     lower: 0 as libc::c_int,
972 | |                     upper: 0 as libc::c_int,
973 | |                 };
    | |__________________- unnecessary `let` binding
974 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
969 ~                 
970 ~                 C2RustUnnamed_31 {
971 +                     template: b"b:\0" as *const u8 as *const libc::c_char,
972 +                     lower: 0 as libc::c_int,
973 +                     upper: 0 as libc::c_int,
974 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_set_buffer.rs:1071:5
     |
1071 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_set_buffer.rs:1001:37
     |
1001 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_buffer.rs:1002:42
     |
1002 |     let mut bufdata: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_buffer.rs:1003:40
     |
1003 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_buffer.rs:1004:44
     |
1004 |     let mut bufname: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_buffer.rs:1005:44
     |
1005 |     let mut olddata: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_buffer.rs:1010:14
     |
1010 |         pb = 0 as *mut paste_buffer;
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_buffer.rs:1051:15
     |
1051 |     bufdata = 0 as *mut libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_environment.rs:947:9
    |
915 | /         let mut init = cmd_entry {
916 | |             name: b"set-environment\0" as *const u8 as *const libc::c_char,
917 | |             alias: b"setenv\0" as *const u8 as *const libc::c_char,
918 | |             args: {
...   |
945 | |             ),
946 | |         };
    | |__________- unnecessary `let` binding
947 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
915 ~         
916 ~         cmd_entry {
917 +             name: b"set-environment\0" as *const u8 as *const libc::c_char,
918 +             alias: b"setenv\0" as *const u8 as *const libc::c_char,
919 +             args: {
920 +                 let mut init = C2RustUnnamed_31 {
921 +                     template: b"grt:u\0" as *const u8 as *const libc::c_char,
922 +                     lower: 1 as libc::c_int,
923 +                     upper: 2 as libc::c_int,
924 +                 };
925 +                 init
926 +             },
927 +             usage: b"[-gru] [-t target-session] name [value]\0" as *const u8
928 +                 as *const libc::c_char,
929 +             source: cmd_entry_flag {
930 +                 flag: 0,
931 +                 type_0: CMD_FIND_PANE,
932 +                 flags: 0,
933 +             },
934 +             target: {
935 +                 let mut init = cmd_entry_flag {
936 +                     flag: 't' as i32 as libc::c_char,
937 +                     type_0: CMD_FIND_SESSION,
938 +                     flags: 0x40 as libc::c_int,
939 +                 };
940 +                 init
941 +             },
942 +             flags: 0x4 as libc::c_int,
943 +             exec: Some(
944 +                 cmd_set_environment_exec
945 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
946 +             ),
947 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_environment.rs:924:17
    |
919 | /                 let mut init = C2RustUnnamed_31 {
920 | |                     template: b"grt:u\0" as *const u8 as *const libc::c_char,
921 | |                     lower: 1 as libc::c_int,
922 | |                     upper: 2 as libc::c_int,
923 | |                 };
    | |__________________- unnecessary `let` binding
924 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
919 ~                 
920 ~                 C2RustUnnamed_31 {
921 +                     template: b"grt:u\0" as *const u8 as *const libc::c_char,
922 +                     lower: 1 as libc::c_int,
923 +                     upper: 2 as libc::c_int,
924 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_environment.rs:939:17
    |
934 | /                 let mut init = cmd_entry_flag {
935 | |                     flag: 't' as i32 as libc::c_char,
936 | |                     type_0: CMD_FIND_SESSION,
937 | |                     flags: 0x40 as libc::c_int,
938 | |                 };
    | |__________________- unnecessary `let` binding
939 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~                 
935 ~                 cmd_entry_flag {
936 +                     flag: 't' as i32 as libc::c_char,
937 +                     type_0: CMD_FIND_SESSION,
938 +                     flags: 0x40 as libc::c_int,
939 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_set_environment.rs:1025:5
     |
1025 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_set_environment.rs:955:33
    |
955 |     let mut env: *mut environ = 0 as *mut environ;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_set_environment.rs:956:41
    |
956 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_set_environment.rs:957:42
    |
957 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_set_environment.rs:958:43
    |
958 |     let mut target: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_set_environment.rs:972:17
    |
972 |         value = 0 as *const libc::c_char;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_hook.rs:967:9
    |
935 | /         let mut init = cmd_entry {
936 | |             name: b"set-hook\0" as *const u8 as *const libc::c_char,
937 | |             alias: 0 as *const libc::c_char,
938 | |             args: {
...   |
965 | |             ),
966 | |         };
    | |__________- unnecessary `let` binding
967 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
935 ~         
936 ~         cmd_entry {
937 +             name: b"set-hook\0" as *const u8 as *const libc::c_char,
938 +             alias: 0 as *const libc::c_char,
939 +             args: {
940 +                 let mut init = C2RustUnnamed_31 {
941 +                     template: b"gt:u\0" as *const u8 as *const libc::c_char,
942 +                     lower: 1 as libc::c_int,
943 +                     upper: 2 as libc::c_int,
944 +                 };
945 +                 init
946 +             },
947 +             usage: b"[-gu] [-t target-session] hook-name [command]\0" as *const u8
948 +                 as *const libc::c_char,
949 +             source: cmd_entry_flag {
950 +                 flag: 0,
951 +                 type_0: CMD_FIND_PANE,
952 +                 flags: 0,
953 +             },
954 +             target: {
955 +                 let mut init = cmd_entry_flag {
956 +                     flag: 't' as i32 as libc::c_char,
957 +                     type_0: CMD_FIND_SESSION,
958 +                     flags: 0x40 as libc::c_int,
959 +                 };
960 +                 init
961 +             },
962 +             flags: 0x4 as libc::c_int,
963 +             exec: Some(
964 +                 cmd_set_hook_exec
965 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
966 +             ),
967 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_hook.rs:944:17
    |
939 | /                 let mut init = C2RustUnnamed_31 {
940 | |                     template: b"gt:u\0" as *const u8 as *const libc::c_char,
941 | |                     lower: 1 as libc::c_int,
942 | |                     upper: 2 as libc::c_int,
943 | |                 };
    | |__________________- unnecessary `let` binding
944 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
939 ~                 
940 ~                 C2RustUnnamed_31 {
941 +                     template: b"gt:u\0" as *const u8 as *const libc::c_char,
942 +                     lower: 1 as libc::c_int,
943 +                     upper: 2 as libc::c_int,
944 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_hook.rs:959:17
    |
954 | /                 let mut init = cmd_entry_flag {
955 | |                     flag: 't' as i32 as libc::c_char,
956 | |                     type_0: CMD_FIND_SESSION,
957 | |                     flags: 0x40 as libc::c_int,
958 | |                 };
    | |__________________- unnecessary `let` binding
959 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
954 ~                 
955 ~                 cmd_entry_flag {
956 +                     flag: 't' as i32 as libc::c_char,
957 +                     type_0: CMD_FIND_SESSION,
958 +                     flags: 0x40 as libc::c_int,
959 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_hook.rs:1004:9
     |
973  | /         let mut init = cmd_entry {
974  | |             name: b"show-hooks\0" as *const u8 as *const libc::c_char,
975  | |             alias: 0 as *const libc::c_char,
976  | |             args: {
...    |
1002 | |             ),
1003 | |         };
     | |__________- unnecessary `let` binding
1004 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
973  ~         
974  ~         cmd_entry {
975  +             name: b"show-hooks\0" as *const u8 as *const libc::c_char,
976  +             alias: 0 as *const libc::c_char,
977  +             args: {
978  +                 let mut init = C2RustUnnamed_31 {
979  +                     template: b"gt:\0" as *const u8 as *const libc::c_char,
980  +                     lower: 0 as libc::c_int,
981  +                     upper: 1 as libc::c_int,
982  +                 };
983  +                 init
984  +             },
985  +             usage: b"[-g] [-t target-session]\0" as *const u8 as *const libc::c_char,
986  +             source: cmd_entry_flag {
987  +                 flag: 0,
988  +                 type_0: CMD_FIND_PANE,
989  +                 flags: 0,
990  +             },
991  +             target: {
992  +                 let mut init = cmd_entry_flag {
993  +                     flag: 't' as i32 as libc::c_char,
994  +                     type_0: CMD_FIND_SESSION,
995  +                     flags: 0 as libc::c_int,
996  +                 };
997  +                 init
998  +             },
999  +             flags: 0x4 as libc::c_int,
1000 +             exec: Some(
1001 +                 cmd_set_hook_exec
1002 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1003 +             ),
1004 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_hook.rs:982:17
    |
977 | /                 let mut init = C2RustUnnamed_31 {
978 | |                     template: b"gt:\0" as *const u8 as *const libc::c_char,
979 | |                     lower: 0 as libc::c_int,
980 | |                     upper: 1 as libc::c_int,
981 | |                 };
    | |__________________- unnecessary `let` binding
982 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
977 ~                 
978 ~                 C2RustUnnamed_31 {
979 +                     template: b"gt:\0" as *const u8 as *const libc::c_char,
980 +                     lower: 0 as libc::c_int,
981 +                     upper: 1 as libc::c_int,
982 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_set_hook.rs:996:17
    |
991 | /                 let mut init = cmd_entry_flag {
992 | |                     flag: 't' as i32 as libc::c_char,
993 | |                     type_0: CMD_FIND_SESSION,
994 | |                     flags: 0 as libc::c_int,
995 | |                 };
    | |__________________- unnecessary `let` binding
996 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
991 ~                 
992 ~                 cmd_entry_flag {
993 +                     flag: 't' as i32 as libc::c_char,
994 +                     type_0: CMD_FIND_SESSION,
995 +                     flags: 0 as libc::c_int,
996 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_set_hook.rs:1102:5
     |
1102 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_set_hook.rs:1012:38
     |
1012 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_hook.rs:1013:33
     |
1013 |     let mut hooks: *mut hooks = 0 as *mut hooks;
     |                                 ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hooks>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_hook.rs:1014:31
     |
1014 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_hook.rs:1015:40
     |
1015 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_hook.rs:1016:38
     |
1016 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_hook.rs:1017:41
     |
1017 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_hook.rs:1018:40
     |
1018 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_hook.rs:1019:43
     |
1019 |     let mut target: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_hook.rs:1062:15
     |
1062 |         cmd = 0 as *const libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_hook.rs:1089:9
     |
1089 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1087:9
     |
1055 | /         let mut init = cmd_entry {
1056 | |             name: b"set-option\0" as *const u8 as *const libc::c_char,
1057 | |             alias: b"set\0" as *const u8 as *const libc::c_char,
1058 | |             args: {
...    |
1085 | |             ),
1086 | |         };
     | |__________- unnecessary `let` binding
1087 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1055 ~         
1056 ~         cmd_entry {
1057 +             name: b"set-option\0" as *const u8 as *const libc::c_char,
1058 +             alias: b"set\0" as *const u8 as *const libc::c_char,
1059 +             args: {
1060 +                 let mut init = C2RustUnnamed_31 {
1061 +                     template: b"aFgoqst:uw\0" as *const u8 as *const libc::c_char,
1062 +                     lower: 1 as libc::c_int,
1063 +                     upper: 2 as libc::c_int,
1064 +                 };
1065 +                 init
1066 +             },
1067 +             usage: b"[-aFgosquw] [-t target-window] option [value]\0" as *const u8
1068 +                 as *const libc::c_char,
1069 +             source: cmd_entry_flag {
1070 +                 flag: 0,
1071 +                 type_0: CMD_FIND_PANE,
1072 +                 flags: 0,
1073 +             },
1074 +             target: {
1075 +                 let mut init = cmd_entry_flag {
1076 +                     flag: 't' as i32 as libc::c_char,
1077 +                     type_0: CMD_FIND_WINDOW,
1078 +                     flags: 0x40 as libc::c_int,
1079 +                 };
1080 +                 init
1081 +             },
1082 +             flags: 0x4 as libc::c_int,
1083 +             exec: Some(
1084 +                 cmd_set_option_exec
1085 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1086 +             ),
1087 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1064:17
     |
1059 | /                 let mut init = C2RustUnnamed_31 {
1060 | |                     template: b"aFgoqst:uw\0" as *const u8 as *const libc::c_char,
1061 | |                     lower: 1 as libc::c_int,
1062 | |                     upper: 2 as libc::c_int,
1063 | |                 };
     | |__________________- unnecessary `let` binding
1064 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1059 ~                 
1060 ~                 C2RustUnnamed_31 {
1061 +                     template: b"aFgoqst:uw\0" as *const u8 as *const libc::c_char,
1062 +                     lower: 1 as libc::c_int,
1063 +                     upper: 2 as libc::c_int,
1064 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1079:17
     |
1074 | /                 let mut init = cmd_entry_flag {
1075 | |                     flag: 't' as i32 as libc::c_char,
1076 | |                     type_0: CMD_FIND_WINDOW,
1077 | |                     flags: 0x40 as libc::c_int,
1078 | |                 };
     | |__________________- unnecessary `let` binding
1079 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1074 ~                 
1075 ~                 cmd_entry_flag {
1076 +                     flag: 't' as i32 as libc::c_char,
1077 +                     type_0: CMD_FIND_WINDOW,
1078 +                     flags: 0x40 as libc::c_int,
1079 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1125:9
     |
1093 | /         let mut init = cmd_entry {
1094 | |             name: b"set-window-option\0" as *const u8 as *const libc::c_char,
1095 | |             alias: b"setw\0" as *const u8 as *const libc::c_char,
1096 | |             args: {
...    |
1123 | |             ),
1124 | |         };
     | |__________- unnecessary `let` binding
1125 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1093 ~         
1094 ~         cmd_entry {
1095 +             name: b"set-window-option\0" as *const u8 as *const libc::c_char,
1096 +             alias: b"setw\0" as *const u8 as *const libc::c_char,
1097 +             args: {
1098 +                 let mut init = C2RustUnnamed_31 {
1099 +                     template: b"aFgoqt:u\0" as *const u8 as *const libc::c_char,
1100 +                     lower: 1 as libc::c_int,
1101 +                     upper: 2 as libc::c_int,
1102 +                 };
1103 +                 init
1104 +             },
1105 +             usage: b"[-aFgoqu] [-t target-window] option [value]\0" as *const u8
1106 +                 as *const libc::c_char,
1107 +             source: cmd_entry_flag {
1108 +                 flag: 0,
1109 +                 type_0: CMD_FIND_PANE,
1110 +                 flags: 0,
1111 +             },
1112 +             target: {
1113 +                 let mut init = cmd_entry_flag {
1114 +                     flag: 't' as i32 as libc::c_char,
1115 +                     type_0: CMD_FIND_WINDOW,
1116 +                     flags: 0x40 as libc::c_int,
1117 +                 };
1118 +                 init
1119 +             },
1120 +             flags: 0x4 as libc::c_int,
1121 +             exec: Some(
1122 +                 cmd_set_option_exec
1123 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1124 +             ),
1125 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1102:17
     |
1097 | /                 let mut init = C2RustUnnamed_31 {
1098 | |                     template: b"aFgoqt:u\0" as *const u8 as *const libc::c_char,
1099 | |                     lower: 1 as libc::c_int,
1100 | |                     upper: 2 as libc::c_int,
1101 | |                 };
     | |__________________- unnecessary `let` binding
1102 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1097 ~                 
1098 ~                 C2RustUnnamed_31 {
1099 +                     template: b"aFgoqt:u\0" as *const u8 as *const libc::c_char,
1100 +                     lower: 1 as libc::c_int,
1101 +                     upper: 2 as libc::c_int,
1102 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_set_option.rs:1117:17
     |
1112 | /                 let mut init = cmd_entry_flag {
1113 | |                     flag: 't' as i32 as libc::c_char,
1114 | |                     type_0: CMD_FIND_WINDOW,
1115 | |                     flags: 0x40 as libc::c_int,
1116 | |                 };
     | |__________________- unnecessary `let` binding
1117 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1112 ~                 
1113 ~                 cmd_entry_flag {
1114 +                     flag: 't' as i32 as libc::c_char,
1115 +                     type_0: CMD_FIND_WINDOW,
1116 +                     flags: 0x40 as libc::c_int,
1117 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_set_option.rs:1547:13
     |
1547 |             return CMD_RETURN_ERROR;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_set_option.rs:1553:13
     |
1553 |             return CMD_RETURN_NORMAL;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1136:30
     |
1136 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1137:35
     |
1137 |     let mut loop_0: *mut client = 0 as *mut client;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1140:30
     |
1140 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1142:32
     |
1142 |     let mut oo: *mut options = 0 as *mut options;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1143:42
     |
1143 |     let mut parent: *mut options_entry = 0 as *mut options_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1144:37
     |
1144 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1145:39
     |
1145 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1146:43
     |
1146 |     let mut argument: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1147:40
     |
1147 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1148:40
     |
1148 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1149:43
     |
1149 |     let mut target: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1155:31
     |
1155 |     c = cmd_find_client(item, 0 as *const libc::c_char, 1 as libc::c_int);
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1162:9
     |
1162 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1186:21
     |
1186 |             value = 0 as *mut libc::c_char;
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1194:17
     |
1194 |                 0 as *mut window_pane,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1291:59
     |
1291 | ...                   || options_array_size(parent, 0 as *mut u_int)
     |                                                     ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1314:44
     |
1314 | ...                   != 0 as *mut libc::c_void as *mut options_entry)
     |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1320:44
     |
1320 | ...                   != 0 as *mut libc::c_void as *const libc::c_char)
     |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1362:53
     |
1362 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1386:71
     |
1386 | ...                   && options_array_size(parent, 0 as *mut u_int)
     |                                                     ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1456:57
     |
1456 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_set_option.rs:1669:5
     |
1669 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1564:46
     |
1564 |     let mut oe: *const options_table_entry = 0 as *const options_table_entry;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1567:37
     |
1567 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_set_option.rs:1569:43
     |
1569 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/cmd_set_option.rs:1667:9
     |
1667 |         8 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unneeded `return` statement
    --> src/cmd_set_option.rs:1701:5
     |
1701 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_set_option.rs:1739:5
     |
1739 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_set_option.rs:1709:44
     |
1709 |     let mut cp: *mut *const libc::c_char = 0 as *mut *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_set_option.rs:1725:13
     |
1725 |             n;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_set_option.rs:1727:13
     |
1727 |             cp;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_show_environment.rs:960:9
    |
928 | /         let mut init = cmd_entry {
929 | |             name: b"show-environment\0" as *const u8 as *const libc::c_char,
930 | |             alias: b"showenv\0" as *const u8 as *const libc::c_char,
931 | |             args: {
...   |
958 | |             ),
959 | |         };
    | |__________- unnecessary `let` binding
960 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
928 ~         
929 ~         cmd_entry {
930 +             name: b"show-environment\0" as *const u8 as *const libc::c_char,
931 +             alias: b"showenv\0" as *const u8 as *const libc::c_char,
932 +             args: {
933 +                 let mut init = C2RustUnnamed_31 {
934 +                     template: b"gst:\0" as *const u8 as *const libc::c_char,
935 +                     lower: 0 as libc::c_int,
936 +                     upper: 1 as libc::c_int,
937 +                 };
938 +                 init
939 +             },
940 +             usage: b"[-gs] [-t target-session] [name]\0" as *const u8
941 +                 as *const libc::c_char,
942 +             source: cmd_entry_flag {
943 +                 flag: 0,
944 +                 type_0: CMD_FIND_PANE,
945 +                 flags: 0,
946 +             },
947 +             target: {
948 +                 let mut init = cmd_entry_flag {
949 +                     flag: 't' as i32 as libc::c_char,
950 +                     type_0: CMD_FIND_SESSION,
951 +                     flags: 0x40 as libc::c_int,
952 +                 };
953 +                 init
954 +             },
955 +             flags: 0x4 as libc::c_int,
956 +             exec: Some(
957 +                 cmd_show_environment_exec
958 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
959 +             ),
960 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_show_environment.rs:937:17
    |
932 | /                 let mut init = C2RustUnnamed_31 {
933 | |                     template: b"gst:\0" as *const u8 as *const libc::c_char,
934 | |                     lower: 0 as libc::c_int,
935 | |                     upper: 1 as libc::c_int,
936 | |                 };
    | |__________________- unnecessary `let` binding
937 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
932 ~                 
933 ~                 C2RustUnnamed_31 {
934 +                     template: b"gst:\0" as *const u8 as *const libc::c_char,
935 +                     lower: 0 as libc::c_int,
936 +                     upper: 1 as libc::c_int,
937 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_show_environment.rs:952:17
    |
947 | /                 let mut init = cmd_entry_flag {
948 | |                     flag: 't' as i32 as libc::c_char,
949 | |                     type_0: CMD_FIND_SESSION,
950 | |                     flags: 0x40 as libc::c_int,
951 | |                 };
    | |__________________- unnecessary `let` binding
952 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
947 ~                 
948 ~                 cmd_entry_flag {
949 +                     flag: 't' as i32 as libc::c_char,
950 +                     type_0: CMD_FIND_SESSION,
951 +                     flags: 0x40 as libc::c_int,
952 +                 }
    |

warning: this boolean expression can be simplified
   --> src/cmd_show_environment.rs:980:12
    |
980 |         if !(c as libc::c_int != '\0' as i32) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c as libc::c_int == '\0' as i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/cmd_show_environment.rs:995:5
    |
995 |     return ret;
    |     ^^^^^^^^^^^ help: remove `return`: `ret`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_show_environment.rs:968:38
    |
968 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_show_environment.rs:969:38
    |
969 |     let mut ret: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_environment.rs:1002:42
     |
1002 |     let mut escaped: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_show_environment.rs:1096:5
     |
1096 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_environment.rs:1043:33
     |
1043 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_environment.rs:1044:42
     |
1044 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_show_environment.rs:1045:43
     |
1045 |     let mut target: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_messages.rs:1192:9
     |
1164 | /         let mut init = cmd_entry {
1165 | |             name: b"show-messages\0" as *const u8 as *const libc::c_char,
1166 | |             alias: b"showmsgs\0" as *const u8 as *const libc::c_char,
1167 | |             args: {
...    |
1190 | |             ),
1191 | |         };
     | |__________- unnecessary `let` binding
1192 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1164 ~         
1165 ~         cmd_entry {
1166 +             name: b"show-messages\0" as *const u8 as *const libc::c_char,
1167 +             alias: b"showmsgs\0" as *const u8 as *const libc::c_char,
1168 +             args: {
1169 +                 let mut init = C2RustUnnamed_31 {
1170 +                     template: b"JTt:\0" as *const u8 as *const libc::c_char,
1171 +                     lower: 0 as libc::c_int,
1172 +                     upper: 0 as libc::c_int,
1173 +                 };
1174 +                 init
1175 +             },
1176 +             usage: b"[-JT] [-t target-client]\0" as *const u8 as *const libc::c_char,
1177 +             source: cmd_entry_flag {
1178 +                 flag: 0,
1179 +                 type_0: CMD_FIND_PANE,
1180 +                 flags: 0,
1181 +             },
1182 +             target: cmd_entry_flag {
1183 +                 flag: 0,
1184 +                 type_0: CMD_FIND_PANE,
1185 +                 flags: 0,
1186 +             },
1187 +             flags: 0x4 as libc::c_int,
1188 +             exec: Some(
1189 +                 cmd_show_messages_exec
1190 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1191 +             ),
1192 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_messages.rs:1173:17
     |
1168 | /                 let mut init = C2RustUnnamed_31 {
1169 | |                     template: b"JTt:\0" as *const u8 as *const libc::c_char,
1170 | |                     lower: 0 as libc::c_int,
1171 | |                     upper: 0 as libc::c_int,
1172 | |                 };
     | |__________________- unnecessary `let` binding
1173 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1168 ~                 
1169 ~                 C2RustUnnamed_31 {
1170 +                     template: b"JTt:\0" as *const u8 as *const libc::c_char,
1171 +                     lower: 0 as libc::c_int,
1172 +                     upper: 0 as libc::c_int,
1173 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_show_messages.rs:1236:5
     |
1236 |     return (n != 0 as libc::c_int as u_int) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(n != 0 as libc::c_int as u_int) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_messages.rs:1199:35
     |
1199 |     let mut term: *mut tty_term = 0 as *mut tty_term;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_term>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_show_messages.rs:1223:9
     |
1223 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/cmd_show_messages.rs:1232:13
     |
1232 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_show_messages.rs:1269:5
     |
1269 |     return (n != 0 as libc::c_int as u_int) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(n != 0 as libc::c_int as u_int) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_messages.rs:1242:29
     |
1242 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_show_messages.rs:1266:9
     |
1266 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/cmd_show_messages.rs:1310:5
     |
1310 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_messages.rs:1276:30
     |
1276 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_messages.rs:1277:39
     |
1277 |     let mut msg: *mut message_entry = 0 as *mut message_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_messages.rs:1278:38
     |
1278 |     let mut tim: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `ctime` doesn't need a mutable reference
    --> src/cmd_show_messages.rs:1300:21
     |
1300 |         tim = ctime(&mut (*msg).msg_time);
     |                     ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_options.rs:1017:9
     |
985  | /         let mut init = cmd_entry {
986  | |             name: b"show-options\0" as *const u8 as *const libc::c_char,
987  | |             alias: b"show\0" as *const u8 as *const libc::c_char,
988  | |             args: {
...    |
1015 | |             ),
1016 | |         };
     | |__________- unnecessary `let` binding
1017 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
985  ~         
986  ~         cmd_entry {
987  +             name: b"show-options\0" as *const u8 as *const libc::c_char,
988  +             alias: b"show\0" as *const u8 as *const libc::c_char,
989  +             args: {
990  +                 let mut init = C2RustUnnamed_31 {
991  +                     template: b"gqst:vw\0" as *const u8 as *const libc::c_char,
992  +                     lower: 0 as libc::c_int,
993  +                     upper: 1 as libc::c_int,
994  +                 };
995  +                 init
996  +             },
997  +             usage: b"[-gqsvw] [-t target-session|target-window] [option]\0" as *const u8
998  +                 as *const libc::c_char,
999  +             source: cmd_entry_flag {
1000 +                 flag: 0,
1001 +                 type_0: CMD_FIND_PANE,
1002 +                 flags: 0,
1003 +             },
1004 +             target: {
1005 +                 let mut init = cmd_entry_flag {
1006 +                     flag: 't' as i32 as libc::c_char,
1007 +                     type_0: CMD_FIND_WINDOW,
1008 +                     flags: 0x40 as libc::c_int,
1009 +                 };
1010 +                 init
1011 +             },
1012 +             flags: 0x4 as libc::c_int,
1013 +             exec: Some(
1014 +                 cmd_show_options_exec
1015 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1016 +             ),
1017 +         }
     |

warning: returning the result of a `let` binding from a block
   --> src/cmd_show_options.rs:994:17
    |
989 | /                 let mut init = C2RustUnnamed_31 {
990 | |                     template: b"gqst:vw\0" as *const u8 as *const libc::c_char,
991 | |                     lower: 0 as libc::c_int,
992 | |                     upper: 1 as libc::c_int,
993 | |                 };
    | |__________________- unnecessary `let` binding
994 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
989 ~                 
990 ~                 C2RustUnnamed_31 {
991 +                     template: b"gqst:vw\0" as *const u8 as *const libc::c_char,
992 +                     lower: 0 as libc::c_int,
993 +                     upper: 1 as libc::c_int,
994 +                 }
    |

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_options.rs:1009:17
     |
1004 | /                 let mut init = cmd_entry_flag {
1005 | |                     flag: 't' as i32 as libc::c_char,
1006 | |                     type_0: CMD_FIND_WINDOW,
1007 | |                     flags: 0x40 as libc::c_int,
1008 | |                 };
     | |__________________- unnecessary `let` binding
1009 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1004 ~                 
1005 ~                 cmd_entry_flag {
1006 +                     flag: 't' as i32 as libc::c_char,
1007 +                     type_0: CMD_FIND_WINDOW,
1008 +                     flags: 0x40 as libc::c_int,
1009 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_options.rs:1055:9
     |
1023 | /         let mut init = cmd_entry {
1024 | |             name: b"show-window-options\0" as *const u8 as *const libc::c_char,
1025 | |             alias: b"showw\0" as *const u8 as *const libc::c_char,
1026 | |             args: {
...    |
1053 | |             ),
1054 | |         };
     | |__________- unnecessary `let` binding
1055 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1023 ~         
1024 ~         cmd_entry {
1025 +             name: b"show-window-options\0" as *const u8 as *const libc::c_char,
1026 +             alias: b"showw\0" as *const u8 as *const libc::c_char,
1027 +             args: {
1028 +                 let mut init = C2RustUnnamed_31 {
1029 +                     template: b"gvt:\0" as *const u8 as *const libc::c_char,
1030 +                     lower: 0 as libc::c_int,
1031 +                     upper: 1 as libc::c_int,
1032 +                 };
1033 +                 init
1034 +             },
1035 +             usage: b"[-gv] [-t target-window] [option]\0" as *const u8
1036 +                 as *const libc::c_char,
1037 +             source: cmd_entry_flag {
1038 +                 flag: 0,
1039 +                 type_0: CMD_FIND_PANE,
1040 +                 flags: 0,
1041 +             },
1042 +             target: {
1043 +                 let mut init = cmd_entry_flag {
1044 +                     flag: 't' as i32 as libc::c_char,
1045 +                     type_0: CMD_FIND_WINDOW,
1046 +                     flags: 0x40 as libc::c_int,
1047 +                 };
1048 +                 init
1049 +             },
1050 +             flags: 0x4 as libc::c_int,
1051 +             exec: Some(
1052 +                 cmd_show_options_exec
1053 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1054 +             ),
1055 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_options.rs:1032:17
     |
1027 | /                 let mut init = C2RustUnnamed_31 {
1028 | |                     template: b"gvt:\0" as *const u8 as *const libc::c_char,
1029 | |                     lower: 0 as libc::c_int,
1030 | |                     upper: 1 as libc::c_int,
1031 | |                 };
     | |__________________- unnecessary `let` binding
1032 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1027 ~                 
1028 ~                 C2RustUnnamed_31 {
1029 +                     template: b"gvt:\0" as *const u8 as *const libc::c_char,
1030 +                     lower: 0 as libc::c_int,
1031 +                     upper: 1 as libc::c_int,
1032 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_show_options.rs:1047:17
     |
1042 | /                 let mut init = cmd_entry_flag {
1043 | |                     flag: 't' as i32 as libc::c_char,
1044 | |                     type_0: CMD_FIND_WINDOW,
1045 | |                     flags: 0x40 as libc::c_int,
1046 | |                 };
     | |__________________- unnecessary `let` binding
1047 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1042 ~                 
1043 ~                 cmd_entry_flag {
1044 +                     flag: 't' as i32 as libc::c_char,
1045 +                     type_0: CMD_FIND_WINDOW,
1046 +                     flags: 0x40 as libc::c_int,
1047 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_show_options.rs:1077:9
     |
1077 |         return cmd_show_options_all(self_0, item, oo)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_show_options_all(self_0, item, oo)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_show_options.rs:1079:9
     |
1079 |         return cmd_show_options_one(self_0, item, oo)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_show_options_one(self_0, item, oo)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1064:32
     |
1064 |     let mut oo: *mut options = 0 as *mut options;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1066:40
     |
1066 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_show_options.rs:1088:41
     |
1088 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_show_options.rs:1089:42
     |
1089 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1090:38
     |
1090 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1091:42
     |
1091 |     let mut escaped: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_show_options.rs:1110:17
     |
1110 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1114:15
     |
1114 |         tmp = 0 as *mut libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_show_options.rs:1196:5
     |
1196 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_show_options.rs:1147:9
     |
1147 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1152:37
     |
1152 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1155:39
     |
1155 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1162:9
     |
1162 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_show_options.rs:1228:5
     |
1228 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_show_options.rs:1203:37
     |
1203 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_show_options.rs:1204:46
     |
1204 |     let mut oe: *const options_table_entry = 0 as *const options_table_entry;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_show_options.rs:1222:21
     |
1222 |                     idx;
     |                     ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/cmd_source_file.rs:993:9
    |
965 | /         let mut init = cmd_entry {
966 | |             name: b"source-file\0" as *const u8 as *const libc::c_char,
967 | |             alias: b"source\0" as *const u8 as *const libc::c_char,
968 | |             args: {
...   |
991 | |             ),
992 | |         };
    | |__________- unnecessary `let` binding
993 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
965 ~         
966 ~         cmd_entry {
967 +             name: b"source-file\0" as *const u8 as *const libc::c_char,
968 +             alias: b"source\0" as *const u8 as *const libc::c_char,
969 +             args: {
970 +                 let mut init = C2RustUnnamed_31 {
971 +                     template: b"q\0" as *const u8 as *const libc::c_char,
972 +                     lower: 1 as libc::c_int,
973 +                     upper: 1 as libc::c_int,
974 +                 };
975 +                 init
976 +             },
977 +             usage: b"[-q] path\0" as *const u8 as *const libc::c_char,
978 +             source: cmd_entry_flag {
979 +                 flag: 0,
980 +                 type_0: CMD_FIND_PANE,
981 +                 flags: 0,
982 +             },
983 +             target: cmd_entry_flag {
984 +                 flag: 0,
985 +                 type_0: CMD_FIND_PANE,
986 +                 flags: 0,
987 +             },
988 +             flags: 0 as libc::c_int,
989 +             exec: Some(
990 +                 cmd_source_file_exec
991 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
992 +             ),
993 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_source_file.rs:974:17
    |
969 | /                 let mut init = C2RustUnnamed_31 {
970 | |                     template: b"q\0" as *const u8 as *const libc::c_char,
971 | |                     lower: 1 as libc::c_int,
972 | |                     upper: 1 as libc::c_int,
973 | |                 };
    | |__________________- unnecessary `let` binding
974 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
969 ~                 
970 ~                 C2RustUnnamed_31 {
971 +                     template: b"q\0" as *const u8 as *const libc::c_char,
972 +                     lower: 1 as libc::c_int,
973 +                     upper: 1 as libc::c_int,
974 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_source_file.rs:1081:5
     |
1081 |     return retval;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `retval`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_source_file.rs:1003:40
     |
1003 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_source_file.rs:1005:42
     |
1005 |     let mut pattern: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_source_file.rs:1006:38
     |
1006 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_source_file.rs:1011:19
     |
1011 |         gl_pathv: 0 as *mut *mut libc::c_char,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_source_file.rs:1064:9
     |
1064 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_source_file.rs:1076:13
     |
1076 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_source_file.rs:1088:5
     |
1088 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/cmd_split_window.rs:1039:9
     |
1007 | /         let mut init = cmd_entry {
1008 | |             name: b"split-window\0" as *const u8 as *const libc::c_char,
1009 | |             alias: b"splitw\0" as *const u8 as *const libc::c_char,
1010 | |             args: {
...    |
1037 | |             ),
1038 | |         };
     | |__________- unnecessary `let` binding
1039 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1007 ~         
1008 ~         cmd_entry {
1009 +             name: b"split-window\0" as *const u8 as *const libc::c_char,
1010 +             alias: b"splitw\0" as *const u8 as *const libc::c_char,
1011 +             args: {
1012 +                 let mut init = C2RustUnnamed_31 {
1013 +                     template: b"bc:dfF:l:hp:Pt:v\0" as *const u8 as *const libc::c_char,
1014 +                     lower: 0 as libc::c_int,
1015 +                     upper: -(1 as libc::c_int),
1016 +                 };
1017 +                 init
1018 +             },
1019 +             usage: b"[-bdfhvP] [-c start-directory] [-F format] [-p percentage|-l size] [-t target-pane] [command]\0"
1020 +                 as *const u8 as *const libc::c_char,
1021 +             source: cmd_entry_flag {
1022 +                 flag: 0,
1023 +                 type_0: CMD_FIND_PANE,
1024 +                 flags: 0,
1025 +             },
1026 +             target: {
1027 +                 let mut init = cmd_entry_flag {
1028 +                     flag: 't' as i32 as libc::c_char,
1029 +                     type_0: CMD_FIND_PANE,
1030 +                     flags: 0 as libc::c_int,
1031 +                 };
1032 +                 init
1033 +             },
1034 +             flags: 0 as libc::c_int,
1035 +             exec: Some(
1036 +                 cmd_split_window_exec
1037 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
1038 +             ),
1039 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_split_window.rs:1016:17
     |
1011 | /                 let mut init = C2RustUnnamed_31 {
1012 | |                     template: b"bc:dfF:l:hp:Pt:v\0" as *const u8 as *const libc::c_char,
1013 | |                     lower: 0 as libc::c_int,
1014 | |                     upper: -(1 as libc::c_int),
1015 | |                 };
     | |__________________- unnecessary `let` binding
1016 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1011 ~                 
1012 ~                 C2RustUnnamed_31 {
1013 +                     template: b"bc:dfF:l:hp:Pt:v\0" as *const u8 as *const libc::c_char,
1014 +                     lower: 0 as libc::c_int,
1015 +                     upper: -(1 as libc::c_int),
1016 +                 }
     |

warning: returning the result of a `let` binding from a block
    --> src/cmd_split_window.rs:1031:17
     |
1026 | /                 let mut init = cmd_entry_flag {
1027 | |                     flag: 't' as i32 as libc::c_char,
1028 | |                     type_0: CMD_FIND_PANE,
1029 | |                     flags: 0 as libc::c_int,
1030 | |                 };
     | |__________________- unnecessary `let` binding
1031 |                   init
     |                   ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1026 ~                 
1027 ~                 cmd_entry_flag {
1028 +                     flag: 't' as i32 as libc::c_char,
1029 +                     type_0: CMD_FIND_PANE,
1030 +                     flags: 0 as libc::c_int,
1031 +                 }
     |

warning: unneeded `return` statement
    --> src/cmd_split_window.rs:1284:5
     |
1284 |     return CMD_RETURN_ERROR;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1051:9
     |
1051 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1058:40
     |
1058 |     let mut new_wp: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1059:33
     |
1059 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1060:40
     |
1060 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1061:41
     |
1061 |     let mut path: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1062:42
     |
1062 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1063:45
     |
1063 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1064:40
     |
1064 |     let mut tmp: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1065:44
     |
1065 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1066:40
     |
1066 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1067:44
     |
1067 |     let mut new_cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1068:37
     |
1068 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1069:38
     |
1069 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1076:36
     |
1076 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1077:42
     |
1077 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1080:18
     |
1080 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1081:12
     |
1081 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1082:13
     |
1082 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1083:12
     |
1083 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1084:13
     |
1084 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1098:20
     |
1098 |             argv = 0 as *mut *mut libc::c_char;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1106:46
     |
1106 |         cwd = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_split_window.rs:1106:65
     |
1106 |         cwd = format_single(item, tmp, c, s, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_split_window.rs:1169:5
     |
1169 | /     match current_block {
1170 | |         6417057564578538666 => {
1171 | |             hlimit = options_get_number(
1172 | |                 (*s).options,
...    |
1271 | |         _ => {}
1272 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1169 ~     if current_block == 6417057564578538666 {
1170 +         hlimit = options_get_number(
1171 +             (*s).options,
1172 +             b"history-limit\0" as *const u8 as *const libc::c_char,
1173 +         ) as u_int;
1174 +         shell = options_get_string(
1175 +             (*s).options,
1176 +             b"default-shell\0" as *const u8 as *const libc::c_char,
1177 +         );
1178 +         if *shell as libc::c_int == '\0' as i32 || areshell(shell) != 0 {
1179 +             shell = b"/bin/sh\0" as *const u8 as *const libc::c_char;
1180 +         }
1181 +         lc = layout_split_pane(
1182 +             wp,
1183 +             type_0,
1184 +             size,
1185 +             before,
1186 +             args_has(args, 'f' as i32 as u_char),
1187 +         );
1188 +         if lc.is_null() {
1189 +             cause = xstrdup(b"pane too small\0" as *const u8 as *const libc::c_char);
1190 +         } else {
1191 +             new_wp = window_add_pane(
1192 +                 w,
1193 +                 wp,
1194 +                 before,
1195 +                 args_has(args, 'f' as i32 as u_char),
1196 +                 hlimit,
1197 +             );
1198 +             layout_make_leaf(lc, new_wp);
1199 +             path = 0 as *const libc::c_char;
1200 +             if !((*item).client).is_null() && ((*(*item).client).session).is_null() {
1201 +                 envent = environ_find(
1202 +                     (*(*item).client).environ,
1203 +                     b"PATH\0" as *const u8 as *const libc::c_char,
1204 +                 );
1205 +             } else {
1206 +                 envent = environ_find(
1207 +                     (*s).environ,
1208 +                     b"PATH\0" as *const u8 as *const libc::c_char,
1209 +                 );
1210 +             }
1211 +             if !envent.is_null() {
1212 +                 path = (*envent).value;
1213 +             }
1214 +             env = environ_for_session(s, 0 as libc::c_int);
1215 +             if window_pane_spawn(
1216 +                 new_wp,
1217 +                 argc,
1218 +                 argv,
1219 +                 path,
1220 +                 shell,
1221 +                 cwd,
1222 +                 env,
1223 +                 (*s).tio,
1224 +                 &mut cause,
1225 +             ) != 0 as libc::c_int
1226 +             {
1227 +                 environ_free(env);
1228 +             } else {
1229 +                 environ_free(env);
1230 +                 layout_fix_panes(w, (*w).sx, (*w).sy);
1231 +                 server_redraw_window(w);
1232 +                 if args_has(args, 'd' as i32 as u_char) == 0 {
1233 +                     window_set_active_pane(w, new_wp);
1234 +                     session_select(s, (*wl).idx);
1235 +                     cmd_find_from_session(current, s, 0 as libc::c_int);
1236 +                     server_redraw_session(s);
1237 +                 } else {
1238 +                     server_status_session(s);
1239 +                 }
1240 +                 if args_has(args, 'P' as i32 as u_char) != 0 {
1241 +                     template = args_get(args, 'F' as i32 as u_char);
1242 +                     if template.is_null() {
1243 +                         template = b"#{session_name}:#{window_index}.#{pane_index}\0"
1244 +                             as *const u8 as *const libc::c_char;
1245 +                     }
1246 +                     cp = format_single(item, template, c, s, wl, new_wp);
1247 +                     cmdq_print(
1248 +                         item,
1249 +                         b"%s\0" as *const u8 as *const libc::c_char,
1250 +                         cp,
1251 +                     );
1252 +                     free(cp as *mut libc::c_void);
1253 +                 }
1254 +                 notify_window(
1255 +                     b"window-layout-changed\0" as *const u8 as *const libc::c_char,
1256 +                     w,
1257 +                 );
1258 +                 cmd_find_from_winlink_pane(&mut fs, wl, new_wp, 0 as libc::c_int);
1259 +                 hooks_insert(
1260 +                     (*s).hooks,
1261 +                     item,
1262 +                     &mut fs as *mut cmd_find_state,
1263 +                     b"after-split-window\0" as *const u8 as *const libc::c_char,
1264 +                 );
1265 +                 free(cwd as *mut libc::c_void);
1266 +                 return CMD_RETURN_NORMAL;
1267 +             }
1268 +         }
1269 +     }
     |

warning: `0 as *const _` detected
    --> src/cmd_split_window.rs:1200:24
     |
1200 |                 path = 0 as *const libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/cmd_string.rs:974:5
    |
974 |     return *ucs.offset(fresh0 as isize) as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `*ucs.offset(fresh0 as isize) as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/cmd_string.rs:978:5
    |
978 |     *p;
    |     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_string.rs:981:1
     |
981  | / pub unsafe extern "C" fn cmd_string_split(
982  | |     mut s: *const libc::c_char,
983  | |     mut rargc: *mut libc::c_int,
984  | |     mut rargv: *mut *mut *mut libc::c_char,
...    |
1157 | |     };
1158 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/cmd_string.rs:1040:24
     |
1040 |                     if !(ch != -(1 as libc::c_int)) {
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ch == -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_string.rs:1087:20
     |
1087 |                 if !(ch != -(1 as libc::c_int)) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ch == -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_string.rs:1149:13
     |
1149 |             return -(1 as libc::c_int);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_string.rs:1155:13
     |
1155 |             return 0 as libc::c_int;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_string.rs:991:44
    |
991 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_string.rs:992:38
    |
992 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_string.rs:993:36
    |
993 |     let mut t: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_string.rs:994:47
    |
994 |     let mut whitespace: *const libc::c_char = 0 as *const libc::c_char;
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_string.rs:995:43
    |
995 |     let mut equals: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_string.rs:1067:9
     |
1067 | /         match current_block {
1068 | |             17399044847211354252 => {
1069 | |                 if !buf.is_null() {
1070 | |                     buf = xrealloc(
...    |
1123 | |             _ => {}
1124 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1067 ~         if current_block == 17399044847211354252 {
1068 +             if !buf.is_null() {
1069 +                 buf = xrealloc(
1070 +                     buf as *mut libc::c_void,
1071 +                     len.wrapping_add(1 as libc::c_int as size_t),
1072 +                 ) as *mut libc::c_char;
1073 +                 *buf.offset(len as isize) = '\0' as i32 as libc::c_char;
1074 +                 argv = xreallocarray(
1075 +                     argv as *mut libc::c_void,
1076 +                     (argc + 1 as libc::c_int) as size_t,
1077 +                     ::core::mem::size_of::<*mut libc::c_char>() as libc::c_ulong,
1078 +                 ) as *mut *mut libc::c_char;
1079 +                 let fresh1 = argc;
1080 +                 argc = argc + 1;
1081 +                 let ref mut fresh2 = *argv.offset(fresh1 as isize);
1082 +                 *fresh2 = buf;
1083 +                 buf = 0 as *mut libc::c_char;
1084 +                 len = 0 as libc::c_int as size_t;
1085 +             }
1086 +             if !(ch != -(1 as libc::c_int)) {
1087 +                 while argc != 0 as libc::c_int {
1088 +                     equals = strchr(
1089 +                         *argv.offset(0 as libc::c_int as isize),
1090 +                         '=' as i32,
1091 +                     );
1092 +                     whitespace = (*argv.offset(0 as libc::c_int as isize))
1093 +                         .offset(
1094 +                             strcspn(
1095 +                                 *argv.offset(0 as libc::c_int as isize),
1096 +                                 b" \t\0" as *const u8 as *const libc::c_char,
1097 +                             ) as isize,
1098 +                         );
1099 +                     if equals.is_null() || equals > whitespace {
1100 +                         break;
1101 +                     }
1102 +                     environ_put(
1103 +                         global_environ,
1104 +                         *argv.offset(0 as libc::c_int as isize),
1105 +                     );
1106 +                     argc -= 1;
1107 +                     argc;
1108 +                     memmove(
1109 +                         argv as *mut libc::c_void,
1110 +                         argv.offset(1 as libc::c_int as isize)
1111 +                             as *const libc::c_void,
1112 +                         (argc as libc::c_ulong)
1113 +                             .wrapping_mul(
1114 +                                 ::core::mem::size_of::<*mut libc::c_char>() as libc::c_ulong,
1115 +                             ),
1116 +                     );
1117 +                 }
1118 +                 current_block = 10871435903431652734;
1119 +                 break;
1120 +             }
1121 +         }
     |

warning: manual implementation of an assign operation
    --> src/cmd_string.rs:1081:21
     |
1081 |                     argc = argc + 1;
     |                     ^^^^^^^^^^^^^^^ help: replace it with: `argc += 1`
     |
     = note: `#[warn(clippy::assign_op_pattern)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/cmd_string.rs:1082:25
     |
1082 |                     let ref mut fresh2 = *argv.offset(fresh1 as isize);
     |                     ----^^^^^^^^^^^^^^--------------------------------- help: try: `let fresh2 = &mut (*argv.offset(fresh1 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1084:27
     |
1084 |                     buf = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_string.rs:1108:25
     |
1108 |                         argc;
     |                         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_string.rs:1160:1
     |
1160 | / pub unsafe extern "C" fn cmd_string_parse(
1161 | |     mut s: *const libc::c_char,
1162 | |     mut file: *const libc::c_char,
1163 | |     mut line: u_int,
...    |
1186 | |     return cmdlist;
1187 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/cmd_string.rs:1186:5
     |
1186 |     return cmdlist;
     |     ^^^^^^^^^^^^^^^ help: remove `return`: `cmdlist`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1166:38
     |
1166 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1168:44
     |
1168 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1169:14
     |
1169 |     *cause = 0 as *mut libc::c_char;
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1176:16
     |
1176 |         return 0 as *mut cmd_list;
     |                ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1182:20
     |
1182 |             return 0 as *mut cmd_list;
     |                    ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_string.rs:1222:12
     |
1222 |         if !(ch != endch as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ch == endch as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_string.rs:1232:20
     |
1232 |                 if !(esc == 0) {
     |                    ^^^^^^^^^^^ help: try: `esc != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/cmd_string.rs:1312:20
     |
1312 |                 if !(esc == 0) {
     |                    ^^^^^^^^^^^ help: try: `esc != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/cmd_string.rs:1342:13
     |
1342 |             return 0 as *mut libc::c_char;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_string.rs:1350:13
     |
1350 |             return buf;
     |             ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1215:38
     |
1215 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1216:36
     |
1216 |     let mut t: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1218:11
     |
1218 |     buf = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1342:20
     |
1342 |             return 0 as *mut libc::c_char;
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_string.rs:1457:5
     |
1457 |     return 0 as *mut libc::c_char;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1361:38
     |
1361 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1362:36
     |
1362 |     let mut t: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1364:42
     |
1364 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1365:11
     |
1365 |     buf = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_string.rs:1388:5
     |
1388 | /     match current_block {
1389 | |         7123524975239680475 => {
1390 | |             if !(ch == '_' as i32 || ch >= 'a' as i32 && ch <= 'z' as i32
1391 | |                 || ch >= 'A' as i32 && ch <= 'Z' as i32)
...    |
1454 | |         _ => {}
1455 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1388 ~     if current_block == 7123524975239680475 {
1389 +         if !(ch == '_' as i32 || ch >= 'a' as i32 && ch <= 'z' as i32
1390 +             || ch >= 'A' as i32 && ch <= 'Z' as i32)
1391 +         {
1392 +             xasprintf(
1393 +                 &mut t as *mut *mut libc::c_char,
1394 +                 b"$%c\0" as *const u8 as *const libc::c_char,
1395 +                 ch,
1396 +             );
1397 +             return t;
1398 +         }
1399 +         buf = xrealloc(
1400 +             buf as *mut libc::c_void,
1401 +             len.wrapping_add(1 as libc::c_int as size_t),
1402 +         ) as *mut libc::c_char;
1403 +         let fresh5 = len;
1404 +         len = len.wrapping_add(1);
1405 +         *buf.offset(fresh5 as isize) = ch as libc::c_char;
1406 +         loop {
1407 +             ch = cmd_string_getc(s, p);
1408 +             if ch == -(1 as libc::c_int)
1409 +                 || !(ch == '_' as i32 || ch >= 'a' as i32 && ch <= 'z' as i32
1410 +                     || ch >= 'A' as i32 && ch <= 'Z' as i32
1411 +                     || ch >= '0' as i32 && ch <= '9' as i32)
1412 +             {
1413 +                 current_block = 15904375183555213903;
1414 +                 break;
1415 +             }
1416 +             if len
1417 +                 >= (18446744073709551615 as libc::c_ulong)
1418 +                     .wrapping_sub(3 as libc::c_int as libc::c_ulong)
1419 +             {
1420 +                 current_block = 18156639247413854209;
1421 +                 break;
1422 +             }
1423 +             buf = xrealloc(
1424 +                 buf as *mut libc::c_void,
1425 +                 len.wrapping_add(1 as libc::c_int as size_t),
1426 +             ) as *mut libc::c_char;
1427 +             let fresh6 = len;
1428 +             len = len.wrapping_add(1);
1429 +             *buf.offset(fresh6 as isize) = ch as libc::c_char;
1430 +         }
1431 +         match current_block {
1432 +             18156639247413854209 => {}
1433 +             _ => {
1434 +                 if !(fch == '{' as i32 && ch != '}' as i32) {
1435 +                     if ch != -(1 as libc::c_int) && fch != '{' as i32 {
1436 +                         cmd_string_ungetc(p);
1437 +                     }
1438 +                     buf = xrealloc(
1439 +                         buf as *mut libc::c_void,
1440 +                         len.wrapping_add(1 as libc::c_int as size_t),
1441 +                     ) as *mut libc::c_char;
1442 +                     *buf.offset(len as isize) = '\0' as i32 as libc::c_char;
1443 +                     envent = environ_find(global_environ, buf);
1444 +                     free(buf as *mut libc::c_void);
1445 +                     if envent.is_null() {
1446 +                         return xstrdup(b"\0" as *const u8 as *const libc::c_char);
1447 +                     }
1448 +                     return xstrdup((*envent).value);
1449 +                 }
1450 +             }
1451 +         }
1452 +     }
     |

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1457:12
     |
1457 |     return 0 as *mut libc::c_char;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_string.rs:1526:5
     |
1526 |     return path;
     |     ^^^^^^^^^^^^ help: remove `return`: `path`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1463:31
     |
1463 |     let mut pw: *mut passwd = 0 as *mut passwd;
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<passwd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1464:42
     |
1464 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1465:39
     |
1465 |     let mut home: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1466:39
     |
1466 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1467:39
     |
1467 |     let mut user: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1468:37
     |
1468 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1470:12
     |
1470 |     home = 0 as *mut libc::c_char;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_string.rs:1510:16
     |
1510 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_pane.rs:943:9
    |
908 | /         let mut init = cmd_entry {
909 | |             name: b"swap-pane\0" as *const u8 as *const libc::c_char,
910 | |             alias: b"swapp\0" as *const u8 as *const libc::c_char,
911 | |             args: {
...   |
941 | |             ),
942 | |         };
    | |__________- unnecessary `let` binding
943 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
908 ~         
909 ~         cmd_entry {
910 +             name: b"swap-pane\0" as *const u8 as *const libc::c_char,
911 +             alias: b"swapp\0" as *const u8 as *const libc::c_char,
912 +             args: {
913 +                 let mut init = C2RustUnnamed_31 {
914 +                     template: b"dDs:t:U\0" as *const u8 as *const libc::c_char,
915 +                     lower: 0 as libc::c_int,
916 +                     upper: 0 as libc::c_int,
917 +                 };
918 +                 init
919 +             },
920 +             usage: b"[-dDU] [-s src-pane] [-t dst-pane]\0" as *const u8
921 +                 as *const libc::c_char,
922 +             source: {
923 +                 let mut init = cmd_entry_flag {
924 +                     flag: 's' as i32 as libc::c_char,
925 +                     type_0: CMD_FIND_PANE,
926 +                     flags: 0x8 as libc::c_int,
927 +                 };
928 +                 init
929 +             },
930 +             target: {
931 +                 let mut init = cmd_entry_flag {
932 +                     flag: 't' as i32 as libc::c_char,
933 +                     type_0: CMD_FIND_PANE,
934 +                     flags: 0 as libc::c_int,
935 +                 };
936 +                 init
937 +             },
938 +             flags: 0 as libc::c_int,
939 +             exec: Some(
940 +                 cmd_swap_pane_exec
941 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
942 +             ),
943 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_pane.rs:917:17
    |
912 | /                 let mut init = C2RustUnnamed_31 {
913 | |                     template: b"dDs:t:U\0" as *const u8 as *const libc::c_char,
914 | |                     lower: 0 as libc::c_int,
915 | |                     upper: 0 as libc::c_int,
916 | |                 };
    | |__________________- unnecessary `let` binding
917 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
912 ~                 
913 ~                 C2RustUnnamed_31 {
914 +                     template: b"dDs:t:U\0" as *const u8 as *const libc::c_char,
915 +                     lower: 0 as libc::c_int,
916 +                     upper: 0 as libc::c_int,
917 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_pane.rs:927:17
    |
922 | /                 let mut init = cmd_entry_flag {
923 | |                     flag: 's' as i32 as libc::c_char,
924 | |                     type_0: CMD_FIND_PANE,
925 | |                     flags: 0x8 as libc::c_int,
926 | |                 };
    | |__________________- unnecessary `let` binding
927 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
922 ~                 
923 ~                 cmd_entry_flag {
924 +                     flag: 's' as i32 as libc::c_char,
925 +                     type_0: CMD_FIND_PANE,
926 +                     flags: 0x8 as libc::c_int,
927 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_pane.rs:935:17
    |
930 | /                 let mut init = cmd_entry_flag {
931 | |                     flag: 't' as i32 as libc::c_char,
932 | |                     type_0: CMD_FIND_PANE,
933 | |                     flags: 0 as libc::c_int,
934 | |                 };
    | |__________________- unnecessary `let` binding
935 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
930 ~                 
931 ~                 cmd_entry_flag {
932 +                     flag: 't' as i32 as libc::c_char,
933 +                     type_0: CMD_FIND_PANE,
934 +                     flags: 0 as libc::c_int,
935 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_swap_pane.rs:1067:5
     |
1067 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:950:34
    |
950 |     let mut src_w: *mut window = 0 as *mut window;
    |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:951:34
    |
951 |     let mut dst_w: *mut window = 0 as *mut window;
    |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:952:40
    |
952 |     let mut tmp_wp: *mut window_pane = 0 as *mut window_pane;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:953:40
    |
953 |     let mut src_wp: *mut window_pane = 0 as *mut window_pane;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:954:40
    |
954 |     let mut dst_wp: *mut window_pane = 0 as *mut window_pane;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:955:40
    |
955 |     let mut src_lc: *mut layout_cell = 0 as *mut layout_cell;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_pane.rs:956:40
    |
956 |     let mut dst_lc: *mut layout_cell = 0 as *mut layout_cell;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_swap_pane.rs:1059:29
     |
1059 |             (*src_w).last = 0 as *mut window_pane;
     |                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_swap_pane.rs:1062:29
     |
1062 |             (*dst_w).last = 0 as *mut window_pane;
     |                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_window.rs:965:9
    |
930 | /         let mut init = cmd_entry {
931 | |             name: b"swap-window\0" as *const u8 as *const libc::c_char,
932 | |             alias: b"swapw\0" as *const u8 as *const libc::c_char,
933 | |             args: {
...   |
963 | |             ),
964 | |         };
    | |__________- unnecessary `let` binding
965 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
930 ~         
931 ~         cmd_entry {
932 +             name: b"swap-window\0" as *const u8 as *const libc::c_char,
933 +             alias: b"swapw\0" as *const u8 as *const libc::c_char,
934 +             args: {
935 +                 let mut init = C2RustUnnamed_31 {
936 +                     template: b"ds:t:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 0 as libc::c_int,
938 +                     upper: 0 as libc::c_int,
939 +                 };
940 +                 init
941 +             },
942 +             usage: b"[-d] [-s src-window] [-t dst-window]\0" as *const u8
943 +                 as *const libc::c_char,
944 +             source: {
945 +                 let mut init = cmd_entry_flag {
946 +                     flag: 's' as i32 as libc::c_char,
947 +                     type_0: CMD_FIND_WINDOW,
948 +                     flags: 0x8 as libc::c_int,
949 +                 };
950 +                 init
951 +             },
952 +             target: {
953 +                 let mut init = cmd_entry_flag {
954 +                     flag: 't' as i32 as libc::c_char,
955 +                     type_0: CMD_FIND_WINDOW,
956 +                     flags: 0 as libc::c_int,
957 +                 };
958 +                 init
959 +             },
960 +             flags: 0 as libc::c_int,
961 +             exec: Some(
962 +                 cmd_swap_window_exec
963 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
964 +             ),
965 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_window.rs:939:17
    |
934 | /                 let mut init = C2RustUnnamed_31 {
935 | |                     template: b"ds:t:\0" as *const u8 as *const libc::c_char,
936 | |                     lower: 0 as libc::c_int,
937 | |                     upper: 0 as libc::c_int,
938 | |                 };
    | |__________________- unnecessary `let` binding
939 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~                 
935 ~                 C2RustUnnamed_31 {
936 +                     template: b"ds:t:\0" as *const u8 as *const libc::c_char,
937 +                     lower: 0 as libc::c_int,
938 +                     upper: 0 as libc::c_int,
939 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_window.rs:949:17
    |
944 | /                 let mut init = cmd_entry_flag {
945 | |                     flag: 's' as i32 as libc::c_char,
946 | |                     type_0: CMD_FIND_WINDOW,
947 | |                     flags: 0x8 as libc::c_int,
948 | |                 };
    | |__________________- unnecessary `let` binding
949 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
944 ~                 
945 ~                 cmd_entry_flag {
946 +                     flag: 's' as i32 as libc::c_char,
947 +                     type_0: CMD_FIND_WINDOW,
948 +                     flags: 0x8 as libc::c_int,
949 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_swap_window.rs:957:17
    |
952 | /                 let mut init = cmd_entry_flag {
953 | |                     flag: 't' as i32 as libc::c_char,
954 | |                     type_0: CMD_FIND_WINDOW,
955 | |                     flags: 0 as libc::c_int,
956 | |                 };
    | |__________________- unnecessary `let` binding
957 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
952 ~                 
953 ~                 cmd_entry_flag {
954 +                     flag: 't' as i32 as libc::c_char,
955 +                     type_0: CMD_FIND_WINDOW,
956 +                     flags: 0 as libc::c_int,
957 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_swap_window.rs:1034:5
     |
1034 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:972:33
    |
972 |     let mut src: *mut session = 0 as *mut session;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:973:33
    |
973 |     let mut dst: *mut session = 0 as *mut session;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:974:42
    |
974 |     let mut sg_src: *mut session_group = 0 as *mut session_group;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:975:42
    |
975 |     let mut sg_dst: *mut session_group = 0 as *mut session_group;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:976:36
    |
976 |     let mut wl_src: *mut winlink = 0 as *mut winlink;
    |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:977:36
    |
977 |     let mut wl_dst: *mut winlink = 0 as *mut winlink;
    |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:978:34
    |
978 |     let mut w_src: *mut window = 0 as *mut window;
    |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_swap_window.rs:979:34
    |
979 |     let mut w_dst: *mut window = 0 as *mut window;
    |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_swap_window.rs:1012:33
     |
1012 |     (*wl_dst).wentry.tqe_next = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_swap_window.rs:1017:33
     |
1017 |     (*wl_src).wentry.tqe_next = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_switch_client.rs:965:9
    |
936 | /         let mut init = cmd_entry {
937 | |             name: b"switch-client\0" as *const u8 as *const libc::c_char,
938 | |             alias: b"switchc\0" as *const u8 as *const libc::c_char,
939 | |             args: {
...   |
963 | |             ),
964 | |         };
    | |__________- unnecessary `let` binding
965 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
936 ~         
937 ~         cmd_entry {
938 +             name: b"switch-client\0" as *const u8 as *const libc::c_char,
939 +             alias: b"switchc\0" as *const u8 as *const libc::c_char,
940 +             args: {
941 +                 let mut init = C2RustUnnamed_31 {
942 +                     template: b"lc:Enpt:rT:\0" as *const u8 as *const libc::c_char,
943 +                     lower: 0 as libc::c_int,
944 +                     upper: 0 as libc::c_int,
945 +                 };
946 +                 init
947 +             },
948 +             usage: b"[-Elnpr] [-c target-client] [-t target-session] [-T key-table]\0"
949 +                 as *const u8 as *const libc::c_char,
950 +             source: cmd_entry_flag {
951 +                 flag: 0,
952 +                 type_0: CMD_FIND_PANE,
953 +                 flags: 0,
954 +             },
955 +             target: cmd_entry_flag {
956 +                 flag: 0,
957 +                 type_0: CMD_FIND_PANE,
958 +                 flags: 0,
959 +             },
960 +             flags: 0x2 as libc::c_int,
961 +             exec: Some(
962 +                 cmd_switch_client_exec
963 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
964 +             ),
965 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_switch_client.rs:945:17
    |
940 | /                 let mut init = C2RustUnnamed_31 {
941 | |                     template: b"lc:Enpt:rT:\0" as *const u8 as *const libc::c_char,
942 | |                     lower: 0 as libc::c_int,
943 | |                     upper: 0 as libc::c_int,
944 | |                 };
    | |__________________- unnecessary `let` binding
945 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
940 ~                 
941 ~                 C2RustUnnamed_31 {
942 +                     template: b"lc:Enpt:rT:\0" as *const u8 as *const libc::c_char,
943 +                     lower: 0 as libc::c_int,
944 +                     upper: 0 as libc::c_int,
945 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_switch_client.rs:1088:5
     |
1088 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_switch_client.rs:976:30
    |
976 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_switch_client.rs:977:31
    |
977 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_switch_client.rs:978:32
    |
978 |     let mut wl: *mut winlink = 0 as *mut winlink;
    |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_switch_client.rs:979:36
    |
979 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/cmd_switch_client.rs:980:46
    |
980 |     let mut tablename: *const libc::c_char = 0 as *const libc::c_char;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/cmd_switch_client.rs:981:37
    |
981 |     let mut table: *mut key_table = 0 as *mut key_table;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/cmd_switch_client.rs:1020:9
     |
1020 |         (*table).references;
     |         ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/cmd_switch_client.rs:1047:17
     |
1047 |             s = 0 as *mut session;
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_switch_client.rs:1076:40
     |
1076 |         server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_switch_client.rs:1080:32
     |
1080 |     session_update_activity(s, 0 as *mut timeval);
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_switch_client.rs:1081:48
     |
1081 |     gettimeofday(&mut (*s).last_attached_time, 0 as *mut libc::c_void);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_unbind_key.rs:937:9
    |
909 | /         let mut init = cmd_entry {
910 | |             name: b"unbind-key\0" as *const u8 as *const libc::c_char,
911 | |             alias: b"unbind\0" as *const u8 as *const libc::c_char,
912 | |             args: {
...   |
935 | |             ),
936 | |         };
    | |__________- unnecessary `let` binding
937 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
909 ~         
910 ~         cmd_entry {
911 +             name: b"unbind-key\0" as *const u8 as *const libc::c_char,
912 +             alias: b"unbind\0" as *const u8 as *const libc::c_char,
913 +             args: {
914 +                 let mut init = C2RustUnnamed_31 {
915 +                     template: b"anT:\0" as *const u8 as *const libc::c_char,
916 +                     lower: 0 as libc::c_int,
917 +                     upper: 1 as libc::c_int,
918 +                 };
919 +                 init
920 +             },
921 +             usage: b"[-an] [-T key-table] key\0" as *const u8 as *const libc::c_char,
922 +             source: cmd_entry_flag {
923 +                 flag: 0,
924 +                 type_0: CMD_FIND_PANE,
925 +                 flags: 0,
926 +             },
927 +             target: cmd_entry_flag {
928 +                 flag: 0,
929 +                 type_0: CMD_FIND_PANE,
930 +                 flags: 0,
931 +             },
932 +             flags: 0x4 as libc::c_int,
933 +             exec: Some(
934 +                 cmd_unbind_key_exec
935 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
936 +             ),
937 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_unbind_key.rs:918:17
    |
913 | /                 let mut init = C2RustUnnamed_31 {
914 | |                     template: b"anT:\0" as *const u8 as *const libc::c_char,
915 | |                     lower: 0 as libc::c_int,
916 | |                     upper: 1 as libc::c_int,
917 | |                 };
    | |__________________- unnecessary `let` binding
918 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
913 ~                 
914 ~                 C2RustUnnamed_31 {
915 +                     template: b"anT:\0" as *const u8 as *const libc::c_char,
916 +                     lower: 0 as libc::c_int,
917 +                     upper: 1 as libc::c_int,
918 +                 }
    |

warning: unneeded `return` statement
    --> src/cmd_unbind_key.rs:1006:5
     |
1006 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/cmd_unbind_key.rs:946:46
    |
946 |     let mut tablename: *const libc::c_char = 0 as *const libc::c_char;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/cmd_wait_for.rs:985:9
    |
957 | /         let mut init = cmd_entry {
958 | |             name: b"wait-for\0" as *const u8 as *const libc::c_char,
959 | |             alias: b"wait\0" as *const u8 as *const libc::c_char,
960 | |             args: {
...   |
983 | |             ),
984 | |         };
    | |__________- unnecessary `let` binding
985 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
957 ~         
958 ~         cmd_entry {
959 +             name: b"wait-for\0" as *const u8 as *const libc::c_char,
960 +             alias: b"wait\0" as *const u8 as *const libc::c_char,
961 +             args: {
962 +                 let mut init = C2RustUnnamed_31 {
963 +                     template: b"LSU\0" as *const u8 as *const libc::c_char,
964 +                     lower: 1 as libc::c_int,
965 +                     upper: 1 as libc::c_int,
966 +                 };
967 +                 init
968 +             },
969 +             usage: b"[-L|-S|-U] channel\0" as *const u8 as *const libc::c_char,
970 +             source: cmd_entry_flag {
971 +                 flag: 0,
972 +                 type_0: CMD_FIND_PANE,
973 +                 flags: 0,
974 +             },
975 +             target: cmd_entry_flag {
976 +                 flag: 0,
977 +                 type_0: CMD_FIND_PANE,
978 +                 flags: 0,
979 +             },
980 +             flags: 0 as libc::c_int,
981 +             exec: Some(
982 +                 cmd_wait_for_exec
983 +                     as unsafe extern "C" fn(*mut cmd, *mut cmdq_item) -> cmd_retval,
984 +             ),
985 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_wait_for.rs:966:17
    |
961 | /                 let mut init = C2RustUnnamed_31 {
962 | |                     template: b"LSU\0" as *const u8 as *const libc::c_char,
963 | |                     lower: 1 as libc::c_int,
964 | |                     upper: 1 as libc::c_int,
965 | |                 };
    | |__________________- unnecessary `let` binding
966 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
961 ~                 
962 ~                 C2RustUnnamed_31 {
963 +                     template: b"LSU\0" as *const u8 as *const libc::c_char,
964 +                     lower: 1 as libc::c_int,
965 +                     upper: 1 as libc::c_int,
966 +                 }
    |

warning: returning the result of a `let` binding from a block
   --> src/cmd_wait_for.rs:992:5
    |
989 | /     let mut init = wait_channels {
990 | |         rbh_root: 0 as *const wait_channel as *mut wait_channel,
991 | |     };
    | |______- unnecessary `let` binding
992 |       init
    |       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
989 ~     
990 ~     wait_channels {
991 +         rbh_root: 0 as *const wait_channel as *mut wait_channel,
992 +     }
    |

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1084:5
     |
1084 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/cmd_wait_for.rs:999:40
    |
999 |     let mut child: *mut wait_channel = 0 as *mut wait_channel;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1000:41
     |
1000 |     let mut parent: *mut wait_channel = 0 as *mut wait_channel;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1010:43
     |
1010 |         let mut left: *mut wait_channel = 0 as *mut wait_channel;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/cmd_wait_for.rs:1062:5
     |
1062 | /     match current_block {
1063 | |         7245201122033322888 => {
1064 | |             parent = (*elm).entry.rbe_parent;
1065 | |             color = (*elm).entry.rbe_color;
...    |
1079 | |         _ => {}
1080 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1062 ~     if current_block == 7245201122033322888 {
1063 +         parent = (*elm).entry.rbe_parent;
1064 +         color = (*elm).entry.rbe_color;
1065 +         if !child.is_null() {
1066 +             (*child).entry.rbe_parent = parent;
1067 +         }
1068 +         if !parent.is_null() {
1069 +             if (*parent).entry.rbe_left == elm {
1070 +                 (*parent).entry.rbe_left = child;
1071 +             } else {
1072 +                 (*parent).entry.rbe_right = child;
1073 +             }
1074 +         } else {
1075 +             (*head).rbh_root = child;
1076 +         }
1077 +     }
     |

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1091:38
     |
1091 |     let mut tmp: *mut wait_channel = 0 as *mut wait_channel;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1117:17
     |
1117 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1132:56
     |
1132 |                     let mut oleft: *mut wait_channel = 0 as *mut wait_channel;
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1155:21
     |
1155 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1180:17
     |
1180 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1206:17
     |
1206 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1221:57
     |
1221 |                     let mut oright: *mut wait_channel = 0 as *mut wait_channel;
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1244:21
     |
1244 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1269:17
     |
1269 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1293:5
     |
1293 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1284:41
     |
1284 |     let mut parent: *mut wait_channel = 0 as *mut wait_channel;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1315:5
     |
1315 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1350:5
     |
1350 |     return 0 as *mut wait_channel;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut wait_channel`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1321:38
     |
1321 |     let mut tmp: *mut wait_channel = 0 as *mut wait_channel;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1322:41
     |
1322 |     let mut parent: *mut wait_channel = 0 as *mut wait_channel;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/cmd_wait_for.rs:1328:9
     |
1328 | /         if comp < 0 as libc::c_int {
1329 | |             tmp = (*tmp).entry.rbe_left;
1330 | |         } else if comp > 0 as libc::c_int {
1331 | |             tmp = (*tmp).entry.rbe_right;
1332 | |         } else {
1333 | |             return tmp
1334 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1337:30
     |
1337 |     (*elm).entry.rbe_right = 0 as *mut wait_channel;
     |                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1350:12
     |
1350 |     return 0 as *mut wait_channel;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/cmd_wait_for.rs:1361:12
     |
1361 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1356:41
     |
1356 |     let mut parent: *mut wait_channel = 0 as *mut wait_channel;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1357:42
     |
1357 |     let mut gparent: *mut wait_channel = 0 as *mut wait_channel;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1358:38
     |
1358 |     let mut tmp: *mut wait_channel = 0 as *mut wait_channel;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1391:21
     |
1391 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1415:17
     |
1415 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1443:21
     |
1443 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/cmd_wait_for.rs:1467:17
     |
1467 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1489:5
     |
1489 |     return 0 as *mut wait_channel;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut wait_channel`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/cmd_wait_for.rs:1481:9
     |
1481 | /         if comp < 0 as libc::c_int {
1482 | |             tmp = (*tmp).entry.rbe_left;
1483 | |         } else if comp > 0 as libc::c_int {
1484 | |             tmp = (*tmp).entry.rbe_right;
1485 | |         } else {
1486 | |             return tmp
1487 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1489:12
     |
1489 |     return 0 as *mut wait_channel;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1495:5
     |
1495 |     return strcmp((*wc1).name, (*wc2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*wc1).name, (*wc2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1512:5
     |
1512 |     return wc;
     |     ^^^^^^^^^^ help: remove `return`: `wc`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1500:37
     |
1500 |     let mut wc: *mut wait_channel = 0 as *mut wait_channel;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1506:31
     |
1506 |     (*wc).waiters.tqh_first = 0 as *mut wait_item;
     |                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1508:31
     |
1508 |     (*wc).lockers.tqh_first = 0 as *mut wait_item;
     |                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1567:5
     |
1567 |     return cmd_wait_for_wait(item, name, wc);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_wait_for_wait(item, name, wc)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1536:37
     |
1536 |     let mut wc: *mut wait_channel = 0 as *mut wait_channel;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/cmd_wait_for.rs:1538:15
     |
1538 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1542:24
     |
1542 |             tqh_first: 0 as *mut wait_item,
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1543:23
     |
1543 |             tqh_last: 0 as *mut *mut wait_item,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1546:24
     |
1546 |             tqh_first: 0 as *mut wait_item,
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1547:23
     |
1547 |             tqh_last: 0 as *mut *mut wait_item,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1550:23
     |
1550 |             rbe_left: 0 as *mut wait_channel,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1551:24
     |
1551 |             rbe_right: 0 as *mut wait_channel,
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1552:25
     |
1552 |             rbe_parent: 0 as *mut wait_channel,
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1609:5
     |
1609 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1574:34
     |
1574 |     let mut wi: *mut wait_item = 0 as *mut wait_item;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1575:35
     |
1575 |     let mut wi1: *mut wait_item = 0 as *mut wait_item;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1648:5
     |
1648 |     return CMD_RETURN_WAIT;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_WAIT`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1617:34
     |
1617 |     let mut wi: *mut wait_item = 0 as *mut wait_item;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1644:28
     |
1644 |     (*wi).entry.tqe_next = 0 as *mut wait_item;
     |                            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1676:5
     |
1676 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1655:34
     |
1655 |     let mut wi: *mut wait_item = 0 as *mut wait_item;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1669:32
     |
1669 |         (*wi).entry.tqe_next = 0 as *mut wait_item;
     |                                ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/cmd_wait_for.rs:1706:5
     |
1706 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1683:34
     |
1683 |     let mut wi: *mut wait_item = 0 as *mut wait_item;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/cmd_wait_for.rs:1709:1
     |
1709 | / pub unsafe extern "C" fn cmd_wait_for_flush() {
1710 | |     let mut wc: *mut wait_channel = 0 as *mut wait_channel;
1711 | |     let mut wc1: *mut wait_channel = 0 as *mut wait_channel;
1712 | |     let mut wi: *mut wait_item = 0 as *mut wait_item;
...    |
1759 | |     }
1760 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1710:37
     |
1710 |     let mut wc: *mut wait_channel = 0 as *mut wait_channel;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1711:38
     |
1711 |     let mut wc1: *mut wait_channel = 0 as *mut wait_channel;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_channel>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1712:34
     |
1712 |     let mut wi: *mut wait_item = 0 as *mut wait_item;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/cmd_wait_for.rs:1713:35
     |
1713 |     let mut wi1: *mut wait_item = 0 as *mut wait_item;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wait_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
  --> src/colour.rs:50:5
   |
50 |     return (R - r) * (R - r) + (G - g) * (G - g) + (B - b) * (B - b);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(R - r) * (R - r) + (G - g) * (G - g) + (B - b) * (B - b)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/colour.rs:59:5
   |
59 |     return (v - 35 as libc::c_int) / 40 as libc::c_int;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(v - 35 as libc::c_int) / 40 as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:62:1
    |
62  | / pub unsafe extern "C" fn colour_find_rgb(
63  | |     mut r: u_char,
64  | |     mut g: u_char,
65  | |     mut b: u_char,
...   |
118 | |     return idx | 0x1000000 as libc::c_int;
119 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/colour.rs:118:5
    |
118 |     return idx | 0x1000000 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `idx | 0x1000000 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:121:1
    |
121 | / pub unsafe extern "C" fn colour_join_rgb(
122 | |     mut r: u_char,
123 | |     mut g: u_char,
124 | |     mut b: u_char,
...   |
128 | |         | b as libc::c_int & 0xff as libc::c_int | 0x2000000 as libc::c_int;
129 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/colour.rs:126:5
    |
126 | /     return (r as libc::c_int & 0xff as libc::c_int) << 16 as libc::c_int
127 | |         | (g as libc::c_int & 0xff as libc::c_int) << 8 as libc::c_int
128 | |         | b as libc::c_int & 0xff as libc::c_int | 0x2000000 as libc::c_int;
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 ~     (r as libc::c_int & 0xff as libc::c_int) << 16 as libc::c_int
127 +         | (g as libc::c_int & 0xff as libc::c_int) << 8 as libc::c_int
128 +         | b as libc::c_int & 0xff as libc::c_int | 0x2000000 as libc::c_int
    |

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:131:1
    |
131 | / pub unsafe extern "C" fn colour_split_rgb(
132 | |     mut c: libc::c_int,
133 | |     mut r: *mut u_char,
134 | |     mut g: *mut u_char,
...   |
139 | |     *b = (c & 0xff as libc::c_int) as u_char;
140 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:142:1
    |
142 | / pub unsafe extern "C" fn colour_tostring(mut c: libc::c_int) -> *const libc::c_char {
143 | |     static mut s: [libc::c_char; 32] = [0; 32];
144 | |     let mut r: u_char = 0;
145 | |     let mut g: u_char = 0;
...   |
188 | |     return 0 as *const libc::c_char;
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/colour.rs:188:5
    |
188 |     return 0 as *const libc::c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *const libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/colour.rs:188:12
    |
188 |     return 0 as *const libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:191:1
    |
191 | / pub unsafe extern "C" fn colour_fromstring(mut s: *const libc::c_char) -> libc::c_int {
192 | |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
193 | |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
194 | |     let mut n: libc::c_int = 0;
...   |
340 | |     return -(1 as libc::c_int);
341 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/colour.rs:340:5
    |
340 |     return -(1 as libc::c_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/colour.rs:192:43
    |
192 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/colour.rs:193:39
    |
193 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/colour.rs:206:13
    |
206 |             cp;
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/colour.rs:343:1
    |
343 | / pub unsafe extern "C" fn colour_256to16(mut c: u_char) -> u_char {
344 | |     static mut table: [u_char; 256] = [
345 | |         0 as libc::c_int as u_char,
346 | |         1 as libc::c_int as u_char,
...   |
602 | |     return table[c as usize];
603 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/colour.rs:602:5
    |
602 |     return table[c as usize];
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `table[c as usize]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/fdforkpty.rs:36:1
   |
36 | / pub unsafe extern "C" fn getptmfd() -> libc::c_int {
37 | |     return 2147483647 as libc::c_int;
38 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/fdforkpty.rs:37:5
   |
37 |     return 2147483647 as libc::c_int;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `2147483647 as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/fdforkpty.rs:40:1
   |
40 | / pub unsafe extern "C" fn fdforkpty(
41 | |     mut ptmfd: libc::c_int,
42 | |     mut master: *mut libc::c_int,
43 | |     mut name: *mut libc::c_char,
...  |
47 | |     return forkpty(master, name, tio, ws);
48 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/fdforkpty.rs:47:5
   |
47 |     return forkpty(master, name, tio, ws);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `forkpty(master, name, tio, ws)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/fgetln.rs:55:1
    |
55  | / pub unsafe extern "C" fn fgetln(
56  | |     mut fp: *mut FILE,
57  | |     mut len: *mut size_t,
58  | | ) -> *mut libc::c_char {
...   |
106 | |     return if *len != 0 { buf } else { 0 as *mut libc::c_char };
107 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
  --> src/compat/fgetln.rs:81:12
   |
81 |         if !(c != -(1 as libc::c_int)) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c == -(1 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/compat/fgetln.rs:106:5
    |
106 |     return if *len != 0 { buf } else { 0 as *mut libc::c_char };
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `if *len != 0 { buf } else { 0 as *mut libc::c_char }`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/fgetln.rs:62:36
   |
62 |     let mut p: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fgetln.rs:67:16
   |
67 |         return 0 as *mut libc::c_char;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fgetln.rs:75:20
   |
75 |             return 0 as *mut libc::c_char;
   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fgetln.rs:94:23
   |
94 |                 buf = 0 as *mut libc::c_char;
   |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fgetln.rs:96:24
   |
96 |                 return 0 as *mut libc::c_char;
   |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: manual implementation of an assign operation
  --> src/compat/fgetln.rs:99:13
   |
99 |             bufsz = 2 as libc::c_int as size_t * bufsz;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `bufsz *= 2 as libc::c_int as size_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: `0 as *mut _` detected
   --> src/compat/fgetln.rs:106:40
    |
106 |     return if *len != 0 { buf } else { 0 as *mut libc::c_char };
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
  --> src/compat/fparseln.rs:75:5
   |
75 | /     return (ne & 1 as libc::c_int as size_t != 0 as libc::c_int as size_t)
76 | |         as libc::c_int;
   | |_______________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
75 ~     (ne & 1 as libc::c_int as size_t != 0 as libc::c_int as size_t)
76 +         as libc::c_int
   |

warning: `0 as *const _` detected
  --> src/compat/fparseln.rs:60:39
   |
60 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
  --> src/compat/fparseln.rs:73:9
   |
73 |         ne;
   |         ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/fparseln.rs:79:1
    |
79  | / pub unsafe extern "C" fn fparseln(
80  | |     mut fp: *mut FILE,
81  | |     mut size: *mut size_t,
82  | |     mut lineno: *mut size_t,
...   |
238 | |     return buf;
239 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/fparseln.rs:238:5
    |
238 |     return buf;
    |     ^^^^^^^^^^^ help: remove `return`: `buf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/fparseln.rs:91:38
   |
91 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fparseln.rs:92:38
   |
92 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/fparseln.rs:93:37
   |
93 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/fparseln.rs:112:13
    |
112 |             *lineno;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/fparseln.rs:130:21
    |
130 |                     cp;
    |                     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/fparseln.rs:139:17
    |
139 |                 s;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/fparseln.rs:149:17
    |
149 |                 s;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/compat/fparseln.rs:162:20
    |
162 |             return 0 as *mut libc::c_char;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/fparseln.rs:218:17
    |
218 |                 cp;
    |                 ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/freezero.rs:12:1
   |
12 | / pub unsafe extern "C" fn freezero(mut ptr: *mut libc::c_void, mut size: size_t) {
13 | |     if !ptr.is_null() {
14 | |         memset(ptr, 0 as libc::c_int, size);
15 | |         free(ptr);
16 | |     }
17 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/getdtablecount.rs:45:1
   |
45 | / pub unsafe extern "C" fn getdtablecount() -> libc::c_int {
46 | |     let mut path: [libc::c_char; 4096] = [0; 4096];
47 | |     let mut g: glob_t = glob_t {
48 | |         gl_pathc: 0,
...  |
72 | |     return n;
73 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/getdtablecount.rs:72:5
   |
72 |     return n;
   |     ^^^^^^^^^ help: remove `return`: `n`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/getdtablecount.rs:49:19
   |
49 |         gl_pathv: 0 as *mut *mut libc::c_char,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/getopt.rs:61:1
    |
61  | / pub unsafe extern "C" fn BSDgetopt(
62  | |     mut nargc: libc::c_int,
63  | |     mut nargv: *const *mut libc::c_char,
64  | |     mut ostr: *const libc::c_char,
...   |
158 | |     return BSDoptopt;
159 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/getopt.rs:158:5
    |
158 |     return BSDoptopt;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `BSDoptopt`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/getopt.rs:67:38
   |
67 |     let mut oli: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
  --> src/compat/getopt.rs:92:13
   |
92 |             BSDoptind;
   |             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/getopt.rs:111:13
    |
111 |             BSDoptind;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/compat/getopt.rs:125:21
    |
125 |         BSDoptarg = 0 as *mut libc::c_char;
    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/getopt.rs:128:13
    |
128 |             BSDoptind;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/getopt.rs:156:9
    |
156 |         BSDoptind;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
 --> src/compat/getprogname.rs:6:1
  |
6 | / pub unsafe extern "C" fn getprogname() -> *const libc::c_char {
7 | |     return program_invocation_short_name;
8 | | }
  | |_^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
 --> src/compat/getprogname.rs:7:5
  |
7 |     return program_invocation_short_name;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `program_invocation_short_name`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:173:1
    |
173 | / pub unsafe extern "C" fn imsg_init(mut ibuf: *mut imsgbuf, mut fd: libc::c_int) {
174 | |     msgbuf_init(&mut (*ibuf).w);
175 | |     memset(
176 | |         &mut (*ibuf).r as *mut ibuf_read as *mut libc::c_void,
...   |
184 | |     (*ibuf).fds.tqh_last = &mut (*ibuf).fds.tqh_first;
185 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:183:29
    |
183 |     (*ibuf).fds.tqh_first = 0 as *mut imsg_fd;
    |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_fd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:187:1
    |
187 | / pub unsafe extern "C" fn imsg_read(mut ibuf: *mut imsgbuf) -> ssize_t {
188 | |     let mut msg: msghdr = msghdr {
189 | |         msg_name: 0 as *mut libc::c_void,
190 | |         msg_namelen: 0,
...   |
329 | |     return n;
330 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/compat/imsg.rs:279:16
    |
279 |             if !(*__errno_location() == 4 as libc::c_int) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*__errno_location() != 4 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/compat/imsg.rs:329:5
    |
329 |     return n;
    |     ^^^^^^^^^ help: remove `return`: `n`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:189:19
    |
189 |         msg_name: 0 as *mut libc::c_void,
    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:191:18
    |
191 |         msg_iov: 0 as *mut iovec,
    |                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<iovec>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:193:22
    |
193 |         msg_control: 0 as *mut libc::c_void,
    |                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:197:34
    |
197 |     let mut cmsg: *mut cmsghdr = 0 as *mut cmsghdr;
    |                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmsghdr>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:207:19
    |
207 |         iov_base: 0 as *mut libc::c_void,
    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:212:33
    |
212 |     let mut ifd: *mut imsg_fd = 0 as *mut imsg_fd;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_fd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:289:17
    |
289 |                 0 as *mut cmsghdr
    |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmsghdr>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:311:53
    |
311 | ...                   (*ifd).entry.tqe_next = 0 as *mut imsg_fd;
    |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_fd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:315:35
    |
315 | ...                   ifd = 0 as *mut imsg_fd;
    |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_fd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/imsg.rs:320:25
    |
320 |                         i;
    |                         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:332:1
    |
332 | / pub unsafe extern "C" fn imsg_get(
333 | |     mut ibuf: *mut imsgbuf,
334 | |     mut imsg: *mut imsg,
335 | | ) -> ssize_t {
...   |
392 | |         as ssize_t;
393 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:391:5
    |
391 | /     return datalen.wrapping_add(::core::mem::size_of::<imsg_hdr>() as libc::c_ulong)
392 | |         as ssize_t;
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
391 ~     datalen.wrapping_add(::core::mem::size_of::<imsg_hdr>() as libc::c_ulong)
392 +         as ssize_t
    |

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:366:24
    |
366 |         (*imsg).data = 0 as *mut libc::c_void;
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:395:1
    |
395 | / pub unsafe extern "C" fn imsg_compose(
396 | |     mut ibuf: *mut imsgbuf,
397 | |     mut type_0: uint32_t,
398 | |     mut peerid: uint32_t,
...   |
414 | |     return 1 as libc::c_int;
415 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:414:5
    |
414 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:404:31
    |
404 |     let mut wbuf: *mut ibuf = 0 as *mut ibuf;
    |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:417:1
    |
417 | / pub unsafe extern "C" fn imsg_composev(
418 | |     mut ibuf: *mut imsgbuf,
419 | |     mut type_0: uint32_t,
420 | |     mut peerid: uint32_t,
...   |
455 | |     return 1 as libc::c_int;
456 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:455:5
    |
455 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:426:31
    |
426 |     let mut wbuf: *mut ibuf = 0 as *mut ibuf;
    |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/imsg.rs:434:9
    |
434 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/imsg.rs:451:9
    |
451 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:458:1
    |
458 | / pub unsafe extern "C" fn imsg_create(
459 | |     mut ibuf: *mut imsgbuf,
460 | |     mut type_0: uint32_t,
461 | |     mut peerid: uint32_t,
...   |
499 | |     return wbuf;
500 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:499:5
    |
499 |     return wbuf;
    |     ^^^^^^^^^^^^ help: remove `return`: `wbuf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:465:31
    |
465 |     let mut wbuf: *mut ibuf = 0 as *mut ibuf;
    |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:478:16
    |
478 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:489:16
    |
489 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:497:16
    |
497 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:502:1
    |
502 | / pub unsafe extern "C" fn imsg_add(
503 | |     mut msg: *mut ibuf,
504 | |     mut data: *const libc::c_void,
505 | |     mut datalen: uint16_t,
...   |
513 | |     return datalen as libc::c_int;
514 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:513:5
    |
513 |     return datalen as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `datalen as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:516:1
    |
516 | / pub unsafe extern "C" fn imsg_close(mut ibuf: *mut imsgbuf, mut msg: *mut ibuf) {
517 | |     let mut hdr: *mut imsg_hdr = 0 as *mut imsg_hdr;
518 | |     hdr = (*msg).buf as *mut imsg_hdr;
519 | |     (*hdr).flags = ((*hdr).flags as libc::c_int & !(1 as libc::c_int)) as uint16_t;
...   |
524 | |     ibuf_close(&mut (*ibuf).w, msg);
525 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:517:34
    |
517 |     let mut hdr: *mut imsg_hdr = 0 as *mut imsg_hdr;
    |                                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_hdr>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:527:1
    |
527 | / pub unsafe extern "C" fn imsg_free(mut imsg: *mut imsg) {
528 | |     freezero(
529 | |         (*imsg).data,
530 | |         ((*imsg).hdr.len as libc::c_ulong)
531 | |             .wrapping_sub(::core::mem::size_of::<imsg_hdr>() as libc::c_ulong),
532 | |     );
533 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:549:5
    |
549 |     return fd;
    |     ^^^^^^^^^^ help: remove `return`: `fd`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg.rs:536:33
    |
536 |     let mut ifd: *mut imsg_fd = 0 as *mut imsg_fd;
    |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg_fd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:552:1
    |
552 | / pub unsafe extern "C" fn imsg_flush(mut ibuf: *mut imsgbuf) -> libc::c_int {
553 | |     while (*ibuf).w.queued != 0 {
554 | |         if msgbuf_write(&mut (*ibuf).w) <= 0 as libc::c_int {
555 | |             return -(1 as libc::c_int);
...   |
558 | |     return 0 as libc::c_int;
559 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg.rs:558:5
    |
558 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg.rs:561:1
    |
561 | / pub unsafe extern "C" fn imsg_clear(mut ibuf: *mut imsgbuf) {
562 | |     let mut fd: libc::c_int = 0;
563 | |     msgbuf_clear(&mut (*ibuf).w);
564 | |     loop {
...   |
570 | |     };
571 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/compat/imsg.rs:566:12
    |
566 |         if !(fd != -(1 as libc::c_int)) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `fd == -(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:110:1
    |
110 | / pub unsafe extern "C" fn ibuf_open(mut len: size_t) -> *mut ibuf {
111 | |     let mut buf: *mut ibuf = 0 as *mut ibuf;
112 | |     buf = calloc(
113 | |         1 as libc::c_int as libc::c_ulong,
...   |
127 | |     return buf;
128 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:127:5
    |
127 |     return buf;
    |     ^^^^^^^^^^^ help: remove `return`: `buf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:111:30
    |
111 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:117:16
    |
117 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:122:16
    |
122 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:130:1
    |
130 | / pub unsafe extern "C" fn ibuf_dynamic(mut len: size_t, mut max: size_t) -> *mut ibuf {
131 | |     let mut buf: *mut ibuf = 0 as *mut ibuf;
132 | |     if max < len {
133 | |         return 0 as *mut ibuf;
...   |
142 | |     return buf;
143 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:142:5
    |
142 |     return buf;
    |     ^^^^^^^^^^^ help: remove `return`: `buf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:131:30
    |
131 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:133:16
    |
133 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:137:16
    |
137 |         return 0 as *mut ibuf;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:161:5
    |
161 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:145:30
    |
145 |     let mut b: *mut u_char = 0 as *mut u_char;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:164:1
    |
164 | / pub unsafe extern "C" fn ibuf_add(
165 | |     mut buf: *mut ibuf,
166 | |     mut data: *const libc::c_void,
167 | |     mut len: size_t,
...   |
176 | |     return 0 as libc::c_int;
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:176:5
    |
176 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:179:1
    |
179 | / pub unsafe extern "C" fn ibuf_reserve(
180 | |     mut buf: *mut ibuf,
181 | |     mut len: size_t,
182 | | ) -> *mut libc::c_void {
...   |
191 | |     return b;
192 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:191:5
    |
191 |     return b;
    |     ^^^^^^^^^ help: remove `return`: `b`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:183:36
    |
183 |     let mut b: *mut libc::c_void = 0 as *mut libc::c_void;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:186:20
    |
186 |             return 0 as *mut libc::c_void;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:194:1
    |
194 | / pub unsafe extern "C" fn ibuf_seek(
195 | |     mut buf: *mut ibuf,
196 | |     mut pos: size_t,
197 | |     mut len: size_t,
...   |
202 | |     return ((*buf).buf).offset(pos as isize) as *mut libc::c_void;
203 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:202:5
    |
202 |     return ((*buf).buf).offset(pos as isize) as *mut libc::c_void;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*buf).buf).offset(pos as isize) as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:200:16
    |
200 |         return 0 as *mut libc::c_void;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:205:1
    |
205 | / pub unsafe extern "C" fn ibuf_size(mut buf: *mut ibuf) -> size_t {
206 | |     return (*buf).wpos;
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:206:5
    |
206 |     return (*buf).wpos;
    |     ^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*buf).wpos`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:209:1
    |
209 | / pub unsafe extern "C" fn ibuf_left(mut buf: *mut ibuf) -> size_t {
210 | |     return ((*buf).max).wrapping_sub((*buf).wpos);
211 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:210:5
    |
210 |     return ((*buf).max).wrapping_sub((*buf).wpos);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*buf).max).wrapping_sub((*buf).wpos)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:213:1
    |
213 | / pub unsafe extern "C" fn ibuf_close(mut msgbuf: *mut msgbuf, mut buf: *mut ibuf) {
214 | |     ibuf_enqueue(msgbuf, buf);
215 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:217:1
    |
217 | / pub unsafe extern "C" fn ibuf_write(mut msgbuf: *mut msgbuf) -> libc::c_int {
218 | |     let mut iov: [iovec; 1024] = [iovec {
219 | |         iov_base: 0 as *mut libc::c_void,
220 | |         iov_len: 0,
...   |
263 | |     return 1 as libc::c_int;
264 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:263:5
    |
263 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:219:19
    |
219 |         iov_base: 0 as *mut libc::c_void,
    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:222:30
    |
222 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/imsg_buffer.rs:239:9
    |
239 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:266:1
    |
266 | / pub unsafe extern "C" fn ibuf_free(mut buf: *mut ibuf) {
267 | |     if buf.is_null() {
268 | |         return;
269 | |     }
270 | |     freezero((*buf).buf as *mut libc::c_void, (*buf).size);
271 | |     free(buf as *mut libc::c_void);
272 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:274:1
    |
274 | / pub unsafe extern "C" fn msgbuf_init(mut msgbuf: *mut msgbuf) {
275 | |     (*msgbuf).queued = 0 as libc::c_int as uint32_t;
276 | |     (*msgbuf).fd = -(1 as libc::c_int);
277 | |     (*msgbuf).bufs.tqh_first = 0 as *mut ibuf;
278 | |     (*msgbuf).bufs.tqh_last = &mut (*msgbuf).bufs.tqh_first;
279 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:277:32
    |
277 |     (*msgbuf).bufs.tqh_first = 0 as *mut ibuf;
    |                                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:281:1
    |
281 | / pub unsafe extern "C" fn msgbuf_drain(mut msgbuf: *mut msgbuf, mut n: size_t) {
282 | |     let mut buf: *mut ibuf = 0 as *mut ibuf;
283 | |     let mut next: *mut ibuf = 0 as *mut ibuf;
284 | |     buf = (*msgbuf).bufs.tqh_first;
...   |
295 | |     }
296 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:282:30
    |
282 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:283:31
    |
283 |     let mut next: *mut ibuf = 0 as *mut ibuf;
    |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:298:1
    |
298 | / pub unsafe extern "C" fn msgbuf_clear(mut msgbuf: *mut msgbuf) {
299 | |     let mut buf: *mut ibuf = 0 as *mut ibuf;
300 | |     loop {
301 | |         buf = (*msgbuf).bufs.tqh_first;
...   |
306 | |     };
307 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:299:30
    |
299 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/imsg_buffer.rs:309:1
    |
309 | / pub unsafe extern "C" fn msgbuf_write(mut msgbuf: *mut msgbuf) -> libc::c_int {
310 | |     let mut iov: [iovec; 1024] = [iovec {
311 | |         iov_base: 0 as *mut libc::c_void,
312 | |         iov_len: 0,
...   |
417 | |     return 1 as libc::c_int;
418 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/imsg_buffer.rs:417:5
    |
417 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:311:19
    |
311 |         iov_base: 0 as *mut libc::c_void,
    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:314:30
    |
314 |     let mut buf: *mut ibuf = 0 as *mut ibuf;
    |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:318:19
    |
318 |         msg_name: 0 as *mut libc::c_void,
    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:320:18
    |
320 |         msg_iov: 0 as *mut iovec,
    |                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<iovec>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:322:22
    |
322 |         msg_control: 0 as *mut libc::c_void,
    |                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:326:34
    |
326 |     let mut cmsg: *mut cmsghdr = 0 as *mut cmsghdr;
    |                                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmsghdr>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/imsg_buffer.rs:359:9
    |
359 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:379:13
    |
379 |             0 as *mut cmsghdr
    |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmsghdr>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sendmsg` doesn't need a mutable reference
   --> src/compat/imsg_buffer.rs:394:39
    |
394 |             n = sendmsg((*msgbuf).fd, &mut msg, 0 as libc::c_int);
    |                                       ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/compat/imsg_buffer.rs:420:29
    |
420 |     (*buf).entry.tqe_next = 0 as *mut ibuf;
    |                             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<ibuf>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/compat/imsg_buffer.rs:425:5
    |
425 |     (*msgbuf).queued;
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/imsg_buffer.rs:438:5
    |
438 |     (*msgbuf).queued;
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/recallocarray.rs:22:1
   |
22 | / pub unsafe extern "C" fn recallocarray(
23 | |     mut ptr: *mut libc::c_void,
24 | |     mut oldnmemb: size_t,
25 | |     mut newnmemb: size_t,
...  |
91 | |     return newptr;
92 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/recallocarray.rs:91:5
   |
91 |     return newptr;
   |     ^^^^^^^^^^^^^^ help: remove `return`: `newptr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/recallocarray.rs:30:41
   |
30 |     let mut newptr: *mut libc::c_void = 0 as *mut libc::c_void;
   |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/recallocarray.rs:46:16
   |
46 |         return 0 as *mut libc::c_void;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/recallocarray.rs:61:16
   |
61 |         return 0 as *mut libc::c_void;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/compat/recallocarray.rs:77:16
   |
77 |         return 0 as *mut libc::c_void;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
  --> src/compat/strtonum.rs:17:1
   |
17 | / pub unsafe extern "C" fn strtonum(
18 | |     mut numstr: *const libc::c_char,
19 | |     mut minval: libc::c_longlong,
20 | |     mut maxval: libc::c_longlong,
...  |
82 | |     return ll;
83 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/strtonum.rs:82:5
   |
82 |     return ll;
   |     ^^^^^^^^^^ help: remove `return`: `ll`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/compat/strtonum.rs:24:37
   |
24 |     let mut ep: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
  --> src/compat/strtonum.rs:32:13
   |
28 | /             let mut init = errval {
29 | |                 errstr: 0 as *const libc::c_char,
30 | |                 err: 0 as libc::c_int,
31 | |             };
   | |______________- unnecessary `let` binding
32 |               init
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
   |
28 ~             
29 ~             errval {
30 +                 errstr: 0 as *const libc::c_char,
31 +                 err: 0 as libc::c_int,
32 +             }
   |

warning: `0 as *const _` detected
  --> src/compat/strtonum.rs:29:25
   |
29 |                 errstr: 0 as *const libc::c_char,
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
  --> src/compat/strtonum.rs:39:13
   |
35 | /             let mut init = errval {
36 | |                 errstr: b"invalid\0" as *const u8 as *const libc::c_char,
37 | |                 err: 22 as libc::c_int,
38 | |             };
   | |______________- unnecessary `let` binding
39 |               init
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
   |
35 ~             
36 ~             errval {
37 +                 errstr: b"invalid\0" as *const u8 as *const libc::c_char,
38 +                 err: 22 as libc::c_int,
39 +             }
   |

warning: returning the result of a `let` binding from a block
  --> src/compat/strtonum.rs:46:13
   |
42 | /             let mut init = errval {
43 | |                 errstr: b"too small\0" as *const u8 as *const libc::c_char,
44 | |                 err: 34 as libc::c_int,
45 | |             };
   | |______________- unnecessary `let` binding
46 |               init
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
   |
42 ~             
43 ~             errval {
44 +                 errstr: b"too small\0" as *const u8 as *const libc::c_char,
45 +                 err: 34 as libc::c_int,
46 +             }
   |

warning: returning the result of a `let` binding from a block
  --> src/compat/strtonum.rs:53:13
   |
49 | /             let mut init = errval {
50 | |                 errstr: b"too large\0" as *const u8 as *const libc::c_char,
51 | |                 err: 34 as libc::c_int,
52 | |             };
   | |______________- unnecessary `let` binding
53 |               init
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
   |
49 ~             
50 ~             errval {
51 +                 errstr: b"too large\0" as *const u8 as *const libc::c_char,
52 +                 err: 34 as libc::c_int,
53 +             }
   |

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/unvis.rs:8:1
    |
8   | / pub unsafe extern "C" fn unvis(
9   | |     mut cp: *mut libc::c_char,
10  | |     mut c: libc::c_char,
11  | |     mut astate: *mut libc::c_int,
...   |
167 | |     };
168 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/compat/unvis.rs:33:13
   |
33 |             return 1 as libc::c_int;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:112:13
    |
112 |             return -(1 as libc::c_int);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:123:13
    |
123 |             return 0 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:128:13
    |
128 |             return 1 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:138:13
    |
138 |             return 1 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:150:13
    |
150 |             return 2 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `2 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:161:13
    |
161 |             return 2 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `2 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/compat/unvis.rs:165:13
    |
165 |             return -(1 as libc::c_int);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/unvis.rs:170:1
    |
170 | / pub unsafe extern "C" fn strunvis(
171 | |     mut dst: *mut libc::c_char,
172 | |     mut src: *const libc::c_char,
173 | | ) -> libc::c_int {
...   |
210 | |     return dst.offset_from(start) as libc::c_long as libc::c_int;
211 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/compat/unvis.rs:181:12
    |
181 |         if !(c != 0) {
    |            ^^^^^^^^^ help: try: `c == 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/compat/unvis.rs:210:5
    |
210 |     return dst.offset_from(start) as libc::c_long as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/compat/unvis.rs:188:21
    |
188 |                     dst;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/unvis.rs:193:21
    |
193 |                     dst;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/unvis.rs:207:9
    |
207 |         dst;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/unvis.rs:213:1
    |
213 | / pub unsafe extern "C" fn strnunvis(
214 | |     mut dst: *mut libc::c_char,
215 | |     mut src: *const libc::c_char,
216 | |     mut sz: size_t,
...   |
274 | |     return dst.offset_from(start) as libc::c_long;
275 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/compat/unvis.rs:232:12
    |
232 |         if !(c != 0) {
    |            ^^^^^^^^^ help: try: `c == 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/compat/unvis.rs:274:5
    |
274 |     return dst.offset_from(start) as libc::c_long;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/compat/unvis.rs:242:21
    |
242 |                     dst;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/unvis.rs:250:21
    |
250 |                     dst;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/compat/unvis.rs:269:9
    |
269 |         dst;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/vis.rs:33:1
    |
33  | / pub unsafe extern "C" fn vis(
34  | |     mut dst: *mut libc::c_char,
35  | |     mut c: libc::c_int,
36  | |     mut flag: libc::c_int,
...   |
934 | |     return dst;
935 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/compat/vis.rs:934:5
    |
934 |     return dst;
    |     ^^^^^^^^^^^ help: remove `return`: `dst`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/compat/vis.rs:871:5
    |
871 | /     match current_block {
872 | |         15345278821338558188 => {
873 | |             if c & 0o177 as libc::c_int == ' ' as i32 || flag & 0x1 as libc::c_int != 0
874 | |                 || flag & 0x100 as libc::c_int != 0
...   |
931 | |         _ => {}
932 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
871 ~     if current_block == 15345278821338558188 {
872 +         if c & 0o177 as libc::c_int == ' ' as i32 || flag & 0x1 as libc::c_int != 0
873 +             || flag & 0x100 as libc::c_int != 0
874 +                 && (c == '*' as i32 || c == '?' as i32 || c == '[' as i32
875 +                     || c == '#' as i32)
876 +         {
877 +             let fresh22 = dst;
878 +             dst = dst.offset(1);
879 +             *fresh22 = '\\' as i32 as libc::c_char;
880 +             let fresh23 = dst;
881 +             dst = dst.offset(1);
882 +             *fresh23 = ((c as u_char as libc::c_int >> 6 as libc::c_int
883 +                 & 0o7 as libc::c_int) + '0' as i32) as libc::c_char;
884 +             let fresh24 = dst;
885 +             dst = dst.offset(1);
886 +             *fresh24 = ((c as u_char as libc::c_int >> 3 as libc::c_int
887 +                 & 0o7 as libc::c_int) + '0' as i32) as libc::c_char;
888 +             let fresh25 = dst;
889 +             dst = dst.offset(1);
890 +             *fresh25 = ((c as u_char as libc::c_int & 0o7 as libc::c_int)
891 +                 + '0' as i32) as libc::c_char;
892 +         } else {
893 +             if flag & 0x40 as libc::c_int == 0 as libc::c_int {
894 +                 let fresh26 = dst;
895 +                 dst = dst.offset(1);
896 +                 *fresh26 = '\\' as i32 as libc::c_char;
897 +             }
898 +             if c & 0o200 as libc::c_int != 0 {
899 +                 c &= 0o177 as libc::c_int;
900 +                 let fresh27 = dst;
901 +                 dst = dst.offset(1);
902 +                 *fresh27 = 'M' as i32 as libc::c_char;
903 +             }
904 +             if *(*__ctype_b_loc()).offset(c as u_char as libc::c_int as isize)
905 +                 as libc::c_int
906 +                 & _IScntrl as libc::c_int as libc::c_ushort as libc::c_int != 0
907 +             {
908 +                 let fresh28 = dst;
909 +                 dst = dst.offset(1);
910 +                 *fresh28 = '^' as i32 as libc::c_char;
911 +                 if c == 0o177 as libc::c_int {
912 +                     let fresh29 = dst;
913 +                     dst = dst.offset(1);
914 +                     *fresh29 = '?' as i32 as libc::c_char;
915 +                 } else {
916 +                     let fresh30 = dst;
917 +                     dst = dst.offset(1);
918 +                     *fresh30 = (c + '@' as i32) as libc::c_char;
919 +                 }
920 +             } else {
921 +                 let fresh31 = dst;
922 +                 dst = dst.offset(1);
923 +                 *fresh31 = '-' as i32 as libc::c_char;
924 +                 let fresh32 = dst;
925 +                 dst = dst.offset(1);
926 +                 *fresh32 = c as libc::c_char;
927 +             }
928 +         }
929 +     }
    |

warning: unsafe function's docs miss `# Safety` section
   --> src/compat/vis.rs:937:1
    |
937 | / pub unsafe extern "C" fn strvis(
938 | |     mut dst: *mut libc::c_char,
939 | |     mut src: *const libc::c_char,
940 | |     mut flag: libc::c_int,
...   |
954 | |     return dst.offset_from(start) as libc::c_long as libc::c_int;
955 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/compat/vis.rs:947:12
    |
947 |         if !(c != 0) {
    |            ^^^^^^^^^ help: try: `c == 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/compat/vis.rs:954:5
    |
954 |     return dst.offset_from(start) as libc::c_long as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/vis.rs:943:40
    |
943 |     let mut start: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/compat/vis.rs:957:1
     |
957  | / pub unsafe extern "C" fn strnvis(
958  | |     mut dst: *mut libc::c_char,
959  | |     mut src: *const libc::c_char,
960  | |     mut siz: size_t,
...    |
1050 | |     return dst.offset_from(start) as libc::c_long as libc::c_int;
1051 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/compat/vis.rs:1039:16
     |
1039 |             if !(c != 0) {
     |                ^^^^^^^^^ help: try: `c == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/compat/vis.rs:1050:5
     |
1050 |     return dst.offset_from(start) as libc::c_long as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/compat/vis.rs:963:40
    |
963 |     let mut start: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/compat/vis.rs:964:38
    |
964 |     let mut end: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/compat/vis.rs:1014:13
     |
1014 |             src;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/compat/vis.rs:1028:17
     |
1028 |                 src;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/compat/vis.rs:1053:1
     |
1053 | / pub unsafe extern "C" fn stravis(
1054 | |     mut outp: *mut *mut libc::c_char,
1055 | |     mut src: *const libc::c_char,
1056 | |     mut flag: libc::c_int,
...    |
1076 | |     return len;
1077 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/compat/vis.rs:1076:5
     |
1076 |     return len;
     |     ^^^^^^^^^^^ help: remove `return`: `len`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/compat/vis.rs:1058:38
     |
1058 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/compat/vis.rs:1079:1
     |
1079 | / pub unsafe extern "C" fn strvisx(
1080 | |     mut dst: *mut libc::c_char,
1081 | |     mut src: *const libc::c_char,
1082 | |     mut len: size_t,
...    |
1099 | |     return dst.offset_from(start) as libc::c_long as libc::c_int;
1100 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/compat/vis.rs:1099:5
     |
1099 |     return dst.offset_from(start) as libc::c_long as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/compat/vis.rs:1086:40
     |
1086 |     let mut start: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/compat/vis.rs:1093:9
     |
1093 |         len;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/control.rs:940:1
    |
940 | / pub unsafe extern "C" fn control_write_buffer(
941 | |     mut c: *mut client,
942 | |     mut buffer: *mut evbuffer,
943 | | ) {
...   |
950 | |     server_client_push_stdout(c);
951 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/control.rs:962:5
    |
962 |     return CMD_RETURN_NORMAL;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/control.rs:965:1
     |
965  | / pub unsafe extern "C" fn control_callback(
966  | |     mut c: *mut client,
967  | |     mut closed: libc::c_int,
968  | |     mut data: *mut libc::c_void,
...    |
1023 | |     };
1024 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/control.rs:970:39
    |
970 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control.rs:971:40
    |
971 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control.rs:972:38
    |
972 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control.rs:973:29
    |
973 |     let mut cmd: *mut cmd = 0 as *mut cmd;
    |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control.rs:974:36
    |
974 |     let mut item: *mut cmdq_item = 0 as *mut cmdq_item;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control.rs:979:49
    |
979 |         line = evbuffer_readln((*c).stdin_data, 0 as *mut size_t, EVBUFFER_EOL_LF);
    |                                                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<size_t>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/control.rs:989:17
    |
989 |                 0 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control.rs:1014:21
     |
1014 |                     0 as *mut cmd_find_state,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control.rs:1015:21
     |
1015 |                     0 as *mut mouse_event,
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/control_notify.rs:931:1
    |
931 | / pub unsafe extern "C" fn control_notify_input(
932 | |     mut c: *mut client,
933 | |     mut wp: *mut window_pane,
934 | |     mut input: *mut evbuffer,
...   |
974 | |     }
975 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/control_notify.rs:936:32
    |
936 |     let mut buf: *mut u_char = 0 as *mut u_char;
    |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control_notify.rs:938:38
    |
938 |     let mut message: *mut evbuffer = 0 as *mut evbuffer;
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<evbuffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/control_notify.rs:970:13
    |
970 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/control_notify.rs:977:1
    |
977 | / pub unsafe extern "C" fn control_notify_pane_mode_changed(mut pane: libc::c_int) {
978 | |     let mut c: *mut client = 0 as *mut client;
979 | |     c = clients.tqh_first;
980 | |     while !c.is_null() {
...   |
989 | |     }
990 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/control_notify.rs:978:30
    |
978 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:992:1
     |
992  | / pub unsafe extern "C" fn control_notify_window_layout_changed(mut w: *mut window) {
993  | |     let mut c: *mut client = 0 as *mut client;
994  | |     let mut s: *mut session = 0 as *mut session;
995  | |     let mut wl: *mut winlink = 0 as *mut winlink;
...    |
1029 | |     }
1030 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1002:12
     |
1002 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  ____________^
1003 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `!(c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1002:13
     |
1002 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  _____________^
1003 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1002:14
     |
1002 |         if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/control_notify.rs:993:30
    |
993 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control_notify.rs:994:31
    |
994 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control_notify.rs:995:32
    |
995 |     let mut wl: *mut winlink = 0 as *mut winlink;
    |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/control_notify.rs:996:45
    |
996 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/control_notify.rs:997:37
    |
997 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1011:29
     |
1011 | ...                   0 as *mut cmdq_item,
     |                       ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1014:29
     |
1014 | ...                   0 as *mut session,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1016:29
     |
1016 | ...                   0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1032:1
     |
1032 | / pub unsafe extern "C" fn control_notify_window_pane_changed(mut w: *mut window) {
1033 | |     let mut c: *mut client = 0 as *mut client;
1034 | |     c = clients.tqh_first;
1035 | |     while !c.is_null() {
...    |
1045 | |     }
1046 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1033:30
     |
1033 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1048:1
     |
1048 | / pub unsafe extern "C" fn control_notify_window_unlinked(
1049 | |     mut s: *mut session,
1050 | |     mut w: *mut window,
1051 | | ) {
...    |
1075 | |     }
1076 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1056:12
     |
1056 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  ____________^
1057 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `!(c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1056:13
     |
1056 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  _____________^
1057 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1056:14
     |
1056 |         if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1052:30
     |
1052 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1053:32
     |
1053 |     let mut cs: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1078:1
     |
1078 | / pub unsafe extern "C" fn control_notify_window_linked(
1079 | |     mut s: *mut session,
1080 | |     mut w: *mut window,
1081 | | ) {
...    |
1105 | |     }
1106 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1086:12
     |
1086 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  ____________^
1087 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `!(c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1086:13
     |
1086 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  _____________^
1087 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1086:14
     |
1086 |         if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1082:30
     |
1082 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1083:32
     |
1083 |     let mut cs: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1108:1
     |
1108 | / pub unsafe extern "C" fn control_notify_window_renamed(mut w: *mut window) {
1109 | |     let mut c: *mut client = 0 as *mut client;
1110 | |     let mut cs: *mut session = 0 as *mut session;
1111 | |     c = clients.tqh_first;
...    |
1135 | |     }
1136 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1113:12
     |
1113 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  ____________^
1114 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `!(c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1113:13
     |
1113 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  _____________^
1114 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1113:14
     |
1113 |         if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1109:30
     |
1109 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1110:32
     |
1110 |     let mut cs: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1138:1
     |
1138 | / pub unsafe extern "C" fn control_notify_client_session_changed(mut cc: *mut client) {
1139 | |     let mut c: *mut client = 0 as *mut client;
1140 | |     let mut s: *mut session = 0 as *mut session;
1141 | |     if ((*cc).session).is_null() {
...    |
1169 | |     }
1170 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1147:12
     |
1147 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  ____________^
1148 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `!(c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1147:13
     |
1147 |           if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |  _____________^
1148 | |             || ((*c).session).is_null())
     | |________________________________________^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0 || ((*c).session).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/control_notify.rs:1147:14
     |
1147 |         if !(!(!c.is_null() && (*c).flags & 0x2000 as libc::c_int != 0)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_null() || (*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1139:30
     |
1139 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1140:31
     |
1140 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1172:1
     |
1172 | / pub unsafe extern "C" fn control_notify_session_renamed(mut s: *mut session) {
1173 | |     let mut c: *mut client = 0 as *mut client;
1174 | |     c = clients.tqh_first;
1175 | |     while !c.is_null() {
...    |
1185 | |     }
1186 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1173:30
     |
1173 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1188:1
     |
1188 | / pub unsafe extern "C" fn control_notify_session_created(mut s: *mut session) {
1189 | |     let mut c: *mut client = 0 as *mut client;
1190 | |     c = clients.tqh_first;
1191 | |     while !c.is_null() {
...    |
1199 | |     }
1200 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1189:30
     |
1189 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1202:1
     |
1202 | / pub unsafe extern "C" fn control_notify_session_closed(mut s: *mut session) {
1203 | |     let mut c: *mut client = 0 as *mut client;
1204 | |     c = clients.tqh_first;
1205 | |     while !c.is_null() {
...    |
1213 | |     }
1214 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1203:30
     |
1203 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/control_notify.rs:1216:1
     |
1216 | / pub unsafe extern "C" fn control_notify_session_window_changed(mut s: *mut session) {
1217 | |     let mut c: *mut client = 0 as *mut client;
1218 | |     c = clients.tqh_first;
1219 | |     while !c.is_null() {
...    |
1230 | |     }
1231 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/control_notify.rs:1217:30
     |
1217 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:950:1
     |
950  | / pub unsafe extern "C" fn environ_RB_REMOVE_COLOR(
951  | |     mut head: *mut environ,
952  | |     mut parent: *mut environ_entry,
953  | |     mut elm: *mut environ_entry,
...    |
1141 | |     }
1142 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/environ.rs:955:39
    |
955 |     let mut tmp: *mut environ_entry = 0 as *mut environ_entry;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/environ.rs:981:17
    |
981 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/environ.rs:996:57
    |
996 |                     let mut oleft: *mut environ_entry = 0 as *mut environ_entry;
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/environ.rs:1019:21
     |
1019 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1044:17
     |
1044 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1070:17
     |
1070 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/environ.rs:1085:58
     |
1085 |                     let mut oright: *mut environ_entry = 0 as *mut environ_entry;
     |                                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/environ.rs:1108:21
     |
1108 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1133:17
     |
1133 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1144:1
     |
1144 | / pub unsafe extern "C" fn environ_RB_INSERT_COLOR(
1145 | |     mut head: *mut environ,
1146 | |     mut elm: *mut environ_entry,
1147 | | ) {
...    |
1263 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1264 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/environ.rs:1153:12
     |
1153 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/environ.rs:1148:42
     |
1148 |     let mut parent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1149:43
     |
1149 |     let mut gparent: *mut environ_entry = 0 as *mut environ_entry;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1150:39
     |
1150 |     let mut tmp: *mut environ_entry = 0 as *mut environ_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/environ.rs:1183:21
     |
1183 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1207:17
     |
1207 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1235:21
     |
1235 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/environ.rs:1259:17
     |
1259 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1266:1
     |
1266 | / pub unsafe extern "C" fn environ_RB_REMOVE(
1267 | |     mut head: *mut environ,
1268 | |     mut elm: *mut environ_entry,
1269 | | ) -> *mut environ_entry {
...    |
1356 | |     return old;
1357 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1356:5
     |
1356 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1271:41
     |
1271 |     let mut child: *mut environ_entry = 0 as *mut environ_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1272:42
     |
1272 |     let mut parent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1282:44
     |
1282 |         let mut left: *mut environ_entry = 0 as *mut environ_entry;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/environ.rs:1334:5
     |
1334 | /     match current_block {
1335 | |         7245201122033322888 => {
1336 | |             parent = (*elm).entry.rbe_parent;
1337 | |             color = (*elm).entry.rbe_color;
...    |
1351 | |         _ => {}
1352 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1334 ~     if current_block == 7245201122033322888 {
1335 +         parent = (*elm).entry.rbe_parent;
1336 +         color = (*elm).entry.rbe_color;
1337 +         if !child.is_null() {
1338 +             (*child).entry.rbe_parent = parent;
1339 +         }
1340 +         if !parent.is_null() {
1341 +             if (*parent).entry.rbe_left == elm {
1342 +                 (*parent).entry.rbe_left = child;
1343 +             } else {
1344 +                 (*parent).entry.rbe_right = child;
1345 +             }
1346 +         } else {
1347 +             (*head).rbh_root = child;
1348 +         }
1349 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1359:1
     |
1359 | / pub unsafe extern "C" fn environ_RB_FIND(
1360 | |     mut head: *mut environ,
1361 | |     mut elm: *mut environ_entry,
1362 | | ) -> *mut environ_entry {
...    |
1375 | |     return 0 as *mut environ_entry;
1376 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1375:5
     |
1375 |     return 0 as *mut environ_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut environ_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/environ.rs:1367:9
     |
1367 | /         if comp < 0 as libc::c_int {
1368 | |             tmp = (*tmp).entry.rbe_left;
1369 | |         } else if comp > 0 as libc::c_int {
1370 | |             tmp = (*tmp).entry.rbe_right;
1371 | |         } else {
1372 | |             return tmp
1373 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/environ.rs:1375:12
     |
1375 |     return 0 as *mut environ_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1378:1
     |
1378 | / pub unsafe extern "C" fn environ_RB_PREV(
1379 | |     mut elm: *mut environ_entry,
1380 | | ) -> *mut environ_entry {
1381 | |     if !((*elm).entry.rbe_left).is_null() {
...    |
1398 | |     return elm;
1399 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1398:5
     |
1398 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1401:1
     |
1401 | / pub unsafe extern "C" fn environ_RB_NFIND(
1402 | |     mut head: *mut environ,
1403 | |     mut elm: *mut environ_entry,
1404 | | ) -> *mut environ_entry {
...    |
1419 | |     return res;
1420 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1419:5
     |
1419 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1406:39
     |
1406 |     let mut res: *mut environ_entry = 0 as *mut environ_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/environ.rs:1410:9
     |
1410 | /         if comp < 0 as libc::c_int {
1411 | |             res = tmp;
1412 | |             tmp = (*tmp).entry.rbe_left;
1413 | |         } else if comp > 0 as libc::c_int {
...    |
1416 | |             return tmp
1417 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1422:1
     |
1422 | / pub unsafe extern "C" fn environ_RB_INSERT(
1423 | |     mut head: *mut environ,
1424 | |     mut elm: *mut environ_entry,
1425 | | ) -> *mut environ_entry {
...    |
1455 | |     return 0 as *mut environ_entry;
1456 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1455:5
     |
1455 |     return 0 as *mut environ_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut environ_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1426:39
     |
1426 |     let mut tmp: *mut environ_entry = 0 as *mut environ_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1427:42
     |
1427 |     let mut parent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/environ.rs:1433:9
     |
1433 | /         if comp < 0 as libc::c_int {
1434 | |             tmp = (*tmp).entry.rbe_left;
1435 | |         } else if comp > 0 as libc::c_int {
1436 | |             tmp = (*tmp).entry.rbe_right;
1437 | |         } else {
1438 | |             return tmp
1439 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/environ.rs:1442:30
     |
1442 |     (*elm).entry.rbe_right = 0 as *mut environ_entry;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1455:12
     |
1455 |     return 0 as *mut environ_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1458:1
     |
1458 | / pub unsafe extern "C" fn environ_RB_MINMAX(
1459 | |     mut head: *mut environ,
1460 | |     mut val: libc::c_int,
1461 | | ) -> *mut environ_entry {
...    |
1472 | |     return parent;
1473 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1472:5
     |
1472 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1463:42
     |
1463 |     let mut parent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1475:1
     |
1475 | / pub unsafe extern "C" fn environ_RB_NEXT(
1476 | |     mut elm: *mut environ_entry,
1477 | | ) -> *mut environ_entry {
1478 | |     if !((*elm).entry.rbe_right).is_null() {
...    |
1495 | |     return elm;
1496 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1495:5
     |
1495 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/environ.rs:1501:5
     |
1501 |     return strcmp((*envent1).name, (*envent2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*envent1).name, (*envent2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1504:1
     |
1504 | / pub unsafe extern "C" fn environ_create() -> *mut environ {
1505 | |     let mut env: *mut environ = 0 as *mut environ;
1506 | |     env = xcalloc(
1507 | |         1 as libc::c_int as size_t,
...    |
1511 | |     return env;
1512 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1511:5
     |
1511 |     return env;
     |     ^^^^^^^^^^^ help: remove `return`: `env`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1505:33
     |
1505 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1510:23
     |
1510 |     (*env).rbh_root = 0 as *mut environ_entry;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1514:1
     |
1514 | / pub unsafe extern "C" fn environ_free(mut env: *mut environ) {
1515 | |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
1516 | |     let mut envent1: *mut environ_entry = 0 as *mut environ_entry;
1517 | |     envent = environ_RB_MINMAX(env, -(1 as libc::c_int));
...    |
1530 | |     free(env as *mut libc::c_void);
1531 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1515:42
     |
1515 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1516:43
     |
1516 |     let mut envent1: *mut environ_entry = 0 as *mut environ_entry;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1533:1
     |
1533 | / pub unsafe extern "C" fn environ_first(mut env: *mut environ) -> *mut environ_entry {
1534 | |     return environ_RB_MINMAX(env, -(1 as libc::c_int));
1535 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1534:5
     |
1534 |     return environ_RB_MINMAX(env, -(1 as libc::c_int));
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `environ_RB_MINMAX(env, -(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1537:1
     |
1537 | / pub unsafe extern "C" fn environ_next(
1538 | |     mut envent: *mut environ_entry,
1539 | | ) -> *mut environ_entry {
1540 | |     return environ_RB_NEXT(envent);
1541 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1540:5
     |
1540 |     return environ_RB_NEXT(envent);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `environ_RB_NEXT(envent)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1543:1
     |
1543 | / pub unsafe extern "C" fn environ_copy(
1544 | |     mut srcenv: *mut environ,
1545 | |     mut dstenv: *mut environ,
1546 | | ) {
...    |
1561 | |     }
1562 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1547:42
     |
1547 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1564:1
     |
1564 | / pub unsafe extern "C" fn environ_find(
1565 | |     mut env: *mut environ,
1566 | |     mut name: *const libc::c_char,
1567 | | ) -> *mut environ_entry {
...    |
1579 | |     return environ_RB_FIND(env, &mut envent);
1580 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1579:5
     |
1579 |     return environ_RB_FIND(env, &mut envent);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `environ_RB_FIND(env, &mut envent)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1569:15
     |
1569 |         name: 0 as *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1570:16
     |
1570 |         value: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1572:23
     |
1572 |             rbe_left: 0 as *mut environ_entry,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1573:24
     |
1573 |             rbe_right: 0 as *mut environ_entry,
     |                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1574:25
     |
1574 |             rbe_parent: 0 as *mut environ_entry,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1582:1
     |
1582 | / pub unsafe extern "C" fn environ_clear(
1583 | |     mut env: *mut environ,
1584 | |     mut name: *const libc::c_char,
1585 | | ) {
...    |
1597 | |     };
1598 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1586:42
     |
1586 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1590:27
     |
1590 |         (*envent).value = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1595:27
     |
1595 |         (*envent).value = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1600:1
     |
1600 | / pub unsafe extern "C" fn environ_put(
1601 | |     mut env: *mut environ,
1602 | |     mut var: *const libc::c_char,
1603 | | ) {
...    |
1618 | |     free(name as *mut libc::c_void);
1619 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1604:39
     |
1604 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1605:40
     |
1605 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/environ.rs:1611:5
     |
1611 |     value;
     |     ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1621:1
     |
1621 | / pub unsafe extern "C" fn environ_unset(
1622 | |     mut env: *mut environ,
1623 | |     mut name: *const libc::c_char,
1624 | | ) {
...    |
1633 | |     free(envent as *mut libc::c_void);
1634 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1625:42
     |
1625 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1636:1
     |
1636 | / pub unsafe extern "C" fn environ_update(
1637 | |     mut oo: *mut options,
1638 | |     mut src: *mut environ,
1639 | |     mut dst: *mut environ,
...    |
1668 | |     }
1669 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1641:42
     |
1641 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/environ.rs:1642:37
     |
1642 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/environ.rs:1645:42
     |
1645 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/environ.rs:1667:9
     |
1667 |         idx;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1671:1
     |
1671 | / pub unsafe extern "C" fn environ_push(mut env: *mut environ) {
1672 | |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
1673 | |     environ = xcalloc(
1674 | |         1 as libc::c_int as size_t,
...    |
1684 | |     }
1685 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/environ.rs:1672:42
     |
1672 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/environ.rs:1687:1
     |
1687 | / pub unsafe extern "C" fn environ_for_session(
1688 | |     mut s: *mut session,
1689 | |     mut no_TERM: libc::c_int,
1690 | | ) -> *mut environ {
...    |
1724 | |     return env;
1725 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/environ.rs:1724:5
     |
1724 |     return env;
     |     ^^^^^^^^^^^ help: remove `return`: `env`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/environ.rs:1691:33
     |
1691 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/environ.rs:1692:42
     |
1692 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/format.rs:1247:5
     |
1244 | /     let mut init = format_job_tree {
1245 | |         rbh_root: 0 as *const format_job as *mut format_job,
1246 | |     };
     | |______- unnecessary `let` binding
1247 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1244 ~     
1245 ~     format_job_tree {
1246 +         rbh_root: 0 as *const format_job as *mut format_job,
1247 +     }
     |

warning: unneeded `return` statement
    --> src/format.rs:1282:5
     |
1282 |     return 0 as *mut format_job;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut format_job`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1253:36
     |
1253 |     let mut tmp: *mut format_job = 0 as *mut format_job;
     |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1254:39
     |
1254 |     let mut parent: *mut format_job = 0 as *mut format_job;
     |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:1260:9
     |
1260 | /         if comp < 0 as libc::c_int {
1261 | |             tmp = (*tmp).entry.rbe_left;
1262 | |         } else if comp > 0 as libc::c_int {
1263 | |             tmp = (*tmp).entry.rbe_right;
1264 | |         } else {
1265 | |             return tmp
1266 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/format.rs:1269:30
     |
1269 |     (*elm).entry.rbe_right = 0 as *mut format_job;
     |                              ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1282:12
     |
1282 |     return 0 as *mut format_job;
     |            ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/format.rs:1293:12
     |
1293 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/format.rs:1288:39
     |
1288 |     let mut parent: *mut format_job = 0 as *mut format_job;
     |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1289:40
     |
1289 |     let mut gparent: *mut format_job = 0 as *mut format_job;
     |                                        ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1290:36
     |
1290 |     let mut tmp: *mut format_job = 0 as *mut format_job;
     |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:1323:21
     |
1323 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1347:17
     |
1347 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1375:21
     |
1375 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1399:17
     |
1399 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/format.rs:1425:5
     |
1425 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/format.rs:1443:5
     |
1443 |     return 0 as *mut format_job;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut format_job`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:1435:9
     |
1435 | /         if comp < 0 as libc::c_int {
1436 | |             tmp = (*tmp).entry.rbe_left;
1437 | |         } else if comp > 0 as libc::c_int {
1438 | |             tmp = (*tmp).entry.rbe_right;
1439 | |         } else {
1440 | |             return tmp
1441 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/format.rs:1443:12
     |
1443 |     return 0 as *mut format_job;
     |            ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:1535:5
     |
1535 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1450:38
     |
1450 |     let mut child: *mut format_job = 0 as *mut format_job;
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1451:39
     |
1451 |     let mut parent: *mut format_job = 0 as *mut format_job;
     |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1461:41
     |
1461 |         let mut left: *mut format_job = 0 as *mut format_job;
     |                                         ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/format.rs:1513:5
     |
1513 | /     match current_block {
1514 | |         7245201122033322888 => {
1515 | |             parent = (*elm).entry.rbe_parent;
1516 | |             color = (*elm).entry.rbe_color;
...    |
1530 | |         _ => {}
1531 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1513 ~     if current_block == 7245201122033322888 {
1514 +         parent = (*elm).entry.rbe_parent;
1515 +         color = (*elm).entry.rbe_color;
1516 +         if !child.is_null() {
1517 +             (*child).entry.rbe_parent = parent;
1518 +         }
1519 +         if !parent.is_null() {
1520 +             if (*parent).entry.rbe_left == elm {
1521 +                 (*parent).entry.rbe_left = child;
1522 +             } else {
1523 +                 (*parent).entry.rbe_right = child;
1524 +             }
1525 +         } else {
1526 +             (*head).rbh_root = child;
1527 +         }
1528 +     }
     |

warning: `0 as *mut _` detected
    --> src/format.rs:1542:36
     |
1542 |     let mut tmp: *mut format_job = 0 as *mut format_job;
     |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:1568:17
     |
1568 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/format.rs:1583:54
     |
1583 |                     let mut oleft: *mut format_job = 0 as *mut format_job;
     |                                                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:1606:21
     |
1606 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1631:17
     |
1631 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1657:17
     |
1657 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/format.rs:1672:55
     |
1672 |                     let mut oright: *mut format_job = 0 as *mut format_job;
     |                                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:1695:21
     |
1695 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:1720:17
     |
1720 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/format.rs:1744:5
     |
1744 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1735:39
     |
1735 |     let mut parent: *mut format_job = 0 as *mut format_job;
     |                                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:1756:5
     |
1756 |     return strcmp((*fj1).cmd, (*fj2).cmd);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*fj1).cmd, (*fj2).cmd)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1759:1
     |
1759 | / pub unsafe extern "C" fn format_entry_tree_RB_FIND(
1760 | |     mut head: *mut format_entry_tree,
1761 | |     mut elm: *mut format_entry,
1762 | | ) -> *mut format_entry {
...    |
1775 | |     return 0 as *mut format_entry;
1776 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1775:5
     |
1775 |     return 0 as *mut format_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut format_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:1767:9
     |
1767 | /         if comp < 0 as libc::c_int {
1768 | |             tmp = (*tmp).entry.rbe_left;
1769 | |         } else if comp > 0 as libc::c_int {
1770 | |             tmp = (*tmp).entry.rbe_right;
1771 | |         } else {
1772 | |             return tmp
1773 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/format.rs:1775:12
     |
1775 |     return 0 as *mut format_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1778:1
     |
1778 | / pub unsafe extern "C" fn format_entry_tree_RB_REMOVE(
1779 | |     mut head: *mut format_entry_tree,
1780 | |     mut elm: *mut format_entry,
1781 | | ) -> *mut format_entry {
...    |
1868 | |     return old;
1869 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1868:5
     |
1868 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1783:40
     |
1783 |     let mut child: *mut format_entry = 0 as *mut format_entry;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1784:41
     |
1784 |     let mut parent: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1794:43
     |
1794 |         let mut left: *mut format_entry = 0 as *mut format_entry;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/format.rs:1846:5
     |
1846 | /     match current_block {
1847 | |         7245201122033322888 => {
1848 | |             parent = (*elm).entry.rbe_parent;
1849 | |             color = (*elm).entry.rbe_color;
...    |
1863 | |         _ => {}
1864 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1846 ~     if current_block == 7245201122033322888 {
1847 +         parent = (*elm).entry.rbe_parent;
1848 +         color = (*elm).entry.rbe_color;
1849 +         if !child.is_null() {
1850 +             (*child).entry.rbe_parent = parent;
1851 +         }
1852 +         if !parent.is_null() {
1853 +             if (*parent).entry.rbe_left == elm {
1854 +                 (*parent).entry.rbe_left = child;
1855 +             } else {
1856 +                 (*parent).entry.rbe_right = child;
1857 +             }
1858 +         } else {
1859 +             (*head).rbh_root = child;
1860 +         }
1861 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1871:1
     |
1871 | / pub unsafe extern "C" fn format_entry_tree_RB_INSERT(
1872 | |     mut head: *mut format_entry_tree,
1873 | |     mut elm: *mut format_entry,
1874 | | ) -> *mut format_entry {
...    |
1904 | |     return 0 as *mut format_entry;
1905 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1904:5
     |
1904 |     return 0 as *mut format_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut format_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1875:38
     |
1875 |     let mut tmp: *mut format_entry = 0 as *mut format_entry;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1876:41
     |
1876 |     let mut parent: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:1882:9
     |
1882 | /         if comp < 0 as libc::c_int {
1883 | |             tmp = (*tmp).entry.rbe_left;
1884 | |         } else if comp > 0 as libc::c_int {
1885 | |             tmp = (*tmp).entry.rbe_right;
1886 | |         } else {
1887 | |             return tmp
1888 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/format.rs:1891:30
     |
1891 |     (*elm).entry.rbe_right = 0 as *mut format_entry;
     |                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:1904:12
     |
1904 |     return 0 as *mut format_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1907:1
     |
1907 | / pub unsafe extern "C" fn format_entry_tree_RB_NEXT(
1908 | |     mut elm: *mut format_entry,
1909 | | ) -> *mut format_entry {
1910 | |     if !((*elm).entry.rbe_right).is_null() {
...    |
1927 | |     return elm;
1928 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1927:5
     |
1927 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1930:1
     |
1930 | / pub unsafe extern "C" fn format_entry_tree_RB_MINMAX(
1931 | |     mut head: *mut format_entry_tree,
1932 | |     mut val: libc::c_int,
1933 | | ) -> *mut format_entry {
...    |
1944 | |     return parent;
1945 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1944:5
     |
1944 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1935:41
     |
1935 |     let mut parent: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1947:1
     |
1947 | / pub unsafe extern "C" fn format_entry_tree_RB_NFIND(
1948 | |     mut head: *mut format_entry_tree,
1949 | |     mut elm: *mut format_entry,
1950 | | ) -> *mut format_entry {
...    |
1965 | |     return res;
1966 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:1965:5
     |
1965 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:1952:38
     |
1952 |     let mut res: *mut format_entry = 0 as *mut format_entry;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:1956:9
     |
1956 | /         if comp < 0 as libc::c_int {
1957 | |             res = tmp;
1958 | |             tmp = (*tmp).entry.rbe_left;
1959 | |         } else if comp > 0 as libc::c_int {
...    |
1962 | |             return tmp
1963 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:1968:1
     |
1968 | / pub unsafe extern "C" fn format_entry_tree_RB_REMOVE_COLOR(
1969 | |     mut head: *mut format_entry_tree,
1970 | |     mut parent: *mut format_entry,
1971 | |     mut elm: *mut format_entry,
...    |
2159 | |     }
2160 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/format.rs:1973:38
     |
1973 |     let mut tmp: *mut format_entry = 0 as *mut format_entry;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:1999:17
     |
1999 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/format.rs:2014:56
     |
2014 |                     let mut oleft: *mut format_entry = 0 as *mut format_entry;
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:2037:21
     |
2037 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2062:17
     |
2062 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2088:17
     |
2088 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/format.rs:2103:57
     |
2103 |                     let mut oright: *mut format_entry = 0 as *mut format_entry;
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:2126:21
     |
2126 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2151:17
     |
2151 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:2162:1
     |
2162 | / pub unsafe extern "C" fn format_entry_tree_RB_PREV(
2163 | |     mut elm: *mut format_entry,
2164 | | ) -> *mut format_entry {
2165 | |     if !((*elm).entry.rbe_left).is_null() {
...    |
2182 | |     return elm;
2183 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:2182:5
     |
2182 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:2185:1
     |
2185 | / pub unsafe extern "C" fn format_entry_tree_RB_INSERT_COLOR(
2186 | |     mut head: *mut format_entry_tree,
2187 | |     mut elm: *mut format_entry,
2188 | | ) {
...    |
2304 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
2305 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/format.rs:2194:12
     |
2194 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/format.rs:2189:41
     |
2189 |     let mut parent: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2190:42
     |
2190 |     let mut gparent: *mut format_entry = 0 as *mut format_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2191:38
     |
2191 |     let mut tmp: *mut format_entry = 0 as *mut format_entry;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/format.rs:2224:21
     |
2224 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2248:17
     |
2248 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2276:21
     |
2276 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/format.rs:2300:17
     |
2300 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/format.rs:2310:5
     |
2310 |     return strcmp((*fe1).key, (*fe2).key);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*fe1).key, (*fe2).key)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:2371:39
     |
2371 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2372:39
     |
2372 |     let mut next: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2399:14
     |
2399 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2409:39
     |
2409 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2410:38
     |
2410 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2412:17
     |
2412 |     (*fj).job = 0 as *mut job;
     |                 ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2413:11
     |
2413 |     buf = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:2547:5
     |
2547 |     return format_expand(ft, (*fj).out);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `format_expand(ft, (*fj).out)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:2458:42
     |
2458 |     let mut jobs: *mut format_job_tree = 0 as *mut format_job_tree;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2460:17
     |
2460 |         client: 0 as *mut client,
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:2462:14
     |
2462 |         cmd: 0 as *const libc::c_char,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:2463:19
     |
2463 |         expanded: 0 as *const libc::c_char,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2465:14
     |
2465 |         out: 0 as *mut libc::c_char,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2467:14
     |
2467 |         job: 0 as *mut job,
     |              ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2470:23
     |
2470 |             rbe_left: 0 as *mut format_job,
     |                       ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2471:24
     |
2471 |             rbe_right: 0 as *mut format_job,
     |                        ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2472:25
     |
2472 |             rbe_parent: 0 as *mut format_job,
     |                         ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2476:35
     |
2476 |     let mut fj: *mut format_job = 0 as *mut format_job;
     |                                   ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2478:43
     |
2478 |     let mut expanded: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2489:28
     |
2489 |         (*jobs).rbh_root = 0 as *mut format_job;
     |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:2502:26
     |
2502 |         (*fj).expanded = 0 as *const libc::c_char;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2519:14
     |
2519 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2524:13
     |
2524 |             0 as *mut session,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:2525:13
     |
2525 |             0 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2553:35
     |
2553 |     let mut fj: *mut format_job = 0 as *mut format_job;
     |                                   ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2554:36
     |
2554 |     let mut fj1: *mut format_job = 0 as *mut format_job;
     |                                    ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2556:16
     |
2556 |     now = time(0 as *mut time_t);
     |                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:2589:1
     |
2589 | / pub unsafe extern "C" fn format_lost_client(mut c: *mut client) {
2590 | |     if !((*c).jobs).is_null() {
2591 | |         format_job_tidy((*c).jobs, 1 as libc::c_int);
2592 | |     }
2593 | |     free((*c).jobs as *mut libc::c_void);
2594 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/format.rs:2600:30
     |
2600 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/format.rs:2606:9
     |
2602 | /         let mut init = timeval {
2603 | |             tv_sec: 60 as libc::c_int as __time_t,
2604 | |             tv_usec: 0,
2605 | |         };
     | |__________- unnecessary `let` binding
2606 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2602 ~         
2603 ~         timeval {
2604 +             tv_sec: 60 as libc::c_int as __time_t,
2605 +             tv_usec: 0,
2606 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/format.rs:2617:38
     |
2617 |     event_add(&mut format_job_event, &mut tv);
     |                                      ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/format.rs:2639:37
     |
2639 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/format.rs:2675:12
     |
2675 |           if !((*wl).flags & (0x1 as libc::c_int | 0x2 as libc::c_int | 0x4 as libc::c_int)
     |  ____________^
2676 | |             == 0 as libc::c_int)
     | |________________________________^ help: try: `(*wl).flags & (0x1 as libc::c_int | 0x2 as libc::c_int | 0x4 as libc::c_int) != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/format.rs:2666:32
     |
2666 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2727:32
     |
2727 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2768:32
     |
2768 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/format.rs:2774:9
     |
2774 |         idx;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/format.rs:2829:38
     |
2829 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2850:38
     |
2850 |     let mut cwd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2864:29
     |
2864 |     let mut gd: *mut grid = 0 as *mut grid;
     |                             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2865:34
     |
2865 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/format.rs:2890:9
     |
2890 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/format.rs:2918:12
     |
2918 |           if !(*((*wp).base.tabs).offset((i >> 3 as libc::c_int) as isize) as libc::c_int
     |  ____________^
2919 | |             & (1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int) == 0)
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
2918 ~         if *((*wp).base.tabs).offset((i >> 3 as libc::c_int) as isize) as libc::c_int
2919 +             & (1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int) != 0
     |

warning: `0 as *mut _` detected
    --> src/format.rs:2909:37
     |
2909 |     let mut buffer: *mut evbuffer = 0 as *mut evbuffer;
     |                                     ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<evbuffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/format.rs:2931:9
     |
2931 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/format.rs:2949:38
     |
2949 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2950:36
     |
2950 |     let mut loop_0: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2951:37
     |
2951 |     let mut buffer: *mut evbuffer = 0 as *mut evbuffer;
     |                                     ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<evbuffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:2989:37
     |
2989 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3004:1
     |
3004 | / pub unsafe extern "C" fn format_create(
3005 | |     mut c: *mut client,
3006 | |     mut item: *mut cmdq_item,
3007 | |     mut tag: libc::c_int,
...    |
3098 | |     return ft;
3099 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:3098:5
     |
3098 |     return ft;
     |     ^^^^^^^^^^ help: remove `return`: `ft`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3010:36
     |
3010 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/format.rs:3011:26
     |
3011 |     if event_initialized(&mut format_job_event) == 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/format.rs:3024:13
     |
3024 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3029:13
     |
3029 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3036:27
     |
3036 |     (*ft).tree.rbh_root = 0 as *mut format_entry;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/format.rs:3040:9
     |
3040 |         (*(*ft).client).references;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3101:1
     |
3101 | / pub unsafe extern "C" fn format_free(mut ft: *mut format_tree) {
3102 | |     let mut fe: *mut format_entry = 0 as *mut format_entry;
3103 | |     let mut fe1: *mut format_entry = 0 as *mut format_entry;
3104 | |     fe = format_entry_tree_RB_MINMAX(&mut (*ft).tree, -(1 as libc::c_int));
...    |
3120 | |     free(ft as *mut libc::c_void);
3121 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/format.rs:3102:37
     |
3102 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3103:38
     |
3103 |     let mut fe1: *mut format_entry = 0 as *mut format_entry;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3127:37
     |
3127 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3128:41
     |
3128 |     let mut fe_now: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3141:19
     |
3141 |     (*fe).value = 0 as *mut libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3148:37
     |
3148 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3149:41
     |
3149 |     let mut fe_now: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3162:19
     |
3162 |     (*fe).value = 0 as *mut libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:3287:5
     |
3287 |     return copy;
     |     ^^^^^^^^^^^^ help: remove `return`: `copy`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3170:37
     |
3170 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3172:14
     |
3172 |         key: 0 as *mut libc::c_char,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3173:16
     |
3173 |         value: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3177:23
     |
3177 |             rbe_left: 0 as *mut format_entry,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3178:24
     |
3178 |             rbe_right: 0 as *mut format_entry,
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3179:25
     |
3179 |             rbe_parent: 0 as *mut format_entry,
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3183:42
     |
3183 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3185:37
     |
3185 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:3186:42
     |
3186 |     let mut found: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3188:39
     |
3188 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3189:40
     |
3189 |     let mut saved: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/format.rs:3213:5
     |
3213 | /     match current_block {
3214 | |         11050875288958768710 => {
3215 | |             found = 0 as *const libc::c_char;
3216 | |             fe_find.key = key as *mut libc::c_char;
...    |
3271 | |         _ => {}
3272 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
3213 ~     if current_block == 11050875288958768710 {
3214 +         found = 0 as *const libc::c_char;
3215 +         fe_find.key = key as *mut libc::c_char;
3216 +         fe = format_entry_tree_RB_FIND(&mut (*ft).tree, &mut fe_find);
3217 +         if !fe.is_null() {
3218 +             if modifiers & 0x1 as libc::c_int != 0 {
3219 +                 if (*fe).t == 0 as libc::c_int as time_t {
3220 +                     return 0 as *mut libc::c_char;
3221 +                 }
3222 +                 ctime_r(&mut (*fe).t, s.as_mut_ptr());
3223 +                 s[strcspn(
3224 +                     s.as_mut_ptr(),
3225 +                     b"\n\0" as *const u8 as *const libc::c_char,
3226 +                 ) as usize] = '\0' as i32 as libc::c_char;
3227 +                 found = s.as_mut_ptr();
3228 +             } else if (*fe).t != 0 as libc::c_int as time_t {
3229 +                 xsnprintf(
3230 +                     s.as_mut_ptr(),
3231 +                     ::core::mem::size_of::<[libc::c_char; 64]>() as libc::c_ulong,
3232 +                     b"%lld\0" as *const u8 as *const libc::c_char,
3233 +                     (*fe).t as libc::c_longlong,
3234 +                 );
3235 +                 found = s.as_mut_ptr();
3236 +             } else {
3237 +                 if ((*fe).value).is_null() && ((*fe).cb).is_some() {
3238 +                     ((*fe).cb).expect("non-null function pointer")(ft, fe);
3239 +                     if ((*fe).value).is_null() {
3240 +                         (*fe)
3241 +                             .value = xstrdup(b"\0" as *const u8 as *const libc::c_char);
3242 +                     }
3243 +                 }
3244 +                 found = (*fe).value;
3245 +             }
3246 +         } else {
3247 +             if !modifiers & 0x1 as libc::c_int != 0 {
3248 +                 envent = 0 as *mut environ_entry;
3249 +                 if !((*ft).s).is_null() {
3250 +                     envent = environ_find((*(*ft).s).environ, key);
3251 +                 }
3252 +                 if envent.is_null() {
3253 +                     envent = environ_find(global_environ, key);
3254 +                 }
3255 +                 if !envent.is_null() {
3256 +                     found = (*envent).value;
3257 +                     current_block = 4231418125067221820;
3258 +                 } else {
3259 +                     current_block = 2873832966593178012;
3260 +                 }
3261 +             } else {
3262 +                 current_block = 2873832966593178012;
3263 +             }
3264 +             match current_block {
3265 +                 4231418125067221820 => {}
3266 +                 _ => return 0 as *mut libc::c_char,
3267 +             }
3268 +         }
3269 +     }
     |

warning: `0 as *const _` detected
    --> src/format.rs:3215:21
     |
3215 |             found = 0 as *const libc::c_char;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3221:32
     |
3221 |                         return 0 as *mut libc::c_char;
     |                                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `ctime_r` doesn't need a mutable reference
    --> src/format.rs:3223:29
     |
3223 |                     ctime_r(&mut (*fe).t, s.as_mut_ptr());
     |                             ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/format.rs:3249:30
     |
3249 |                     envent = 0 as *mut environ_entry;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3267:33
     |
3267 |                     _ => return 0 as *mut libc::c_char,
     |                                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3274:16
     |
3274 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:3309:5
     |
3309 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/format.rs:3294:13
     |
3294 |             brackets;
     |             ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3298:13
     |
3298 |             brackets;
     |             ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3304:9
     |
3304 |         s;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/format.rs:3307:16
     |
3307 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/format.rs:3324:5
     |
3324 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3316:37
     |
3316 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3327:1
     |
3327 | / pub unsafe extern "C" fn format_true(mut s: *const libc::c_char) -> libc::c_int {
3328 | |     if !s.is_null() && *s as libc::c_int != '\0' as i32
3329 | |         && (*s.offset(0 as libc::c_int as isize) as libc::c_int != '0' as i32
3330 | |             || *s.offset(1 as libc::c_int as isize) as libc::c_int != '\0' as i32)
...    |
3334 | |     return 0 as libc::c_int;
3335 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:3334:5
     |
3334 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/format.rs:3372:16
     |
3372 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != ':' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3378:16
     |
3378 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != ':' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3425:24
     |
3425 |                     if !(*endptr as libc::c_int != ':' as i32) {
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*endptr as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3432:16
     |
3432 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != ':' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3438:16
     |
3438 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != ':' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3444:16
     |
3444 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != ':' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == ':' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/format.rs:3450:16
     |
3450 |             if !(*copy.offset(1 as libc::c_int as isize) as libc::c_int != '/' as i32) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*copy.offset(1 as libc::c_int as isize) as libc::c_int == '/' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/format.rs:3626:5
     |
3626 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3346:39
     |
3346 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3347:40
     |
3347 |     let mut copy0: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3348:41
     |
3348 |     let mut endptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3349:38
     |
3349 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3350:40
     |
3350 |     let mut found: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3351:38
     |
3351 |     let mut new: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3352:40
     |
3352 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3353:39
     |
3353 |     let mut from: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3354:37
     |
3354 |     let mut to: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3355:39
     |
3355 |     let mut left: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3356:40
     |
3356 |     let mut right: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/format.rs:3457:21
     |
3457 |                     copy;
     |                     ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3472:25
     |
3472 |                         copy;
     |                         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `if` chain can be rewritten with `match`
    --> src/format.rs:3603:5
     |
3603 | /     if limit > 0 as libc::c_int as libc::c_long {
3604 | |         new = utf8_trimcstr(value, limit as u_int);
3605 | |         free(value as *mut libc::c_void);
3606 | |         value = new;
...    |
3610 | |         value = new;
3611 | |     }
     | |_____^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: manual implementation of an assign operation
    --> src/format.rs:3616:9
     |
3616 |         *len = *len * 2 as libc::c_int as size_t;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `*len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3629:1
     |
3629 | / pub unsafe extern "C" fn format_expand_time(
3630 | |     mut ft: *mut format_tree,
3631 | |     mut fmt: *const libc::c_char,
3632 | |     mut t: time_t,
...    |
3649 | |     return format_expand(ft, s.as_mut_ptr());
3650 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:3649:5
     |
3649 |     return format_expand(ft, s.as_mut_ptr());
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `format_expand(ft, s.as_mut_ptr())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3634:27
     |
3634 |     let mut tm: *mut tm = 0 as *mut tm;
     |                           ^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tm>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `localtime` doesn't need a mutable reference
    --> src/format.rs:3639:20
     |
3639 |     tm = localtime(&mut t);
     |                    ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3652:1
     |
3652 | / pub unsafe extern "C" fn format_expand(
3653 | |     mut ft: *mut format_tree,
3654 | |     mut fmt: *const libc::c_char,
3655 | | ) -> *mut libc::c_char {
...    |
3829 | |     return buf;
3830 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:3829:5
     |
3829 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3656:38
     |
3656 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3657:38
     |
3657 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3658:39
     |
3658 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:3659:40
     |
3659 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:3660:38
     |
3660 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: manual implementation of an assign operation
    --> src/format.rs:3682:17
     |
3682 |                 len = len * 2 as libc::c_int as size_t;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/format.rs:3691:13
     |
3691 |             fmt;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3702:29
     |
3702 | ...                   brackets;
     |                       ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3713:25
     |
3713 |                         ptr;
     |                         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: manual implementation of an assign operation
    --> src/format.rs:3736:25
     |
3736 |                         len = len * 2 as libc::c_int as size_t;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/format.rs:3754:29
     |
3754 | ...                   brackets;
     |                       ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/format.rs:3765:25
     |
3765 |                         ptr;
     |                         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: manual implementation of an assign operation
    --> src/format.rs:3787:25
     |
3787 |                         len = len * 2 as libc::c_int as size_t;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: `0 as *const _` detected
    --> src/format.rs:3794:25
     |
3794 |                     s = 0 as *const libc::c_char;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: manual implementation of an assign operation
    --> src/format.rs:3807:29
     |
3807 | ...                   len = len * 2 as libc::c_int as size_t;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3832:1
     |
3832 | / pub unsafe extern "C" fn format_single(
3833 | |     mut item: *mut cmdq_item,
3834 | |     mut fmt: *const libc::c_char,
3835 | |     mut c: *mut client,
...    |
3850 | |     return expanded;
3851 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/format.rs:3850:5
     |
3850 |     return expanded;
     |     ^^^^^^^^^^^^^^^^ help: remove `return`: `expanded`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/format.rs:3840:36
     |
3840 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3841:43
     |
3841 |     let mut expanded: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3845:28
     |
3845 |         ft = format_create(0 as *mut client, item, 0 as libc::c_int, 0 as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:3853:1
     |
3853 | / pub unsafe extern "C" fn format_defaults(
3854 | |     mut ft: *mut format_tree,
3855 | |     mut c: *mut client,
3856 | |     mut s: *mut session,
...    |
3908 | |     }
3909 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/format.rs:3874:15
     |
3874 |         (s != 0 as *mut libc::c_void as *mut session) as libc::c_int,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3880:16
     |
3880 |         (wl != 0 as *mut libc::c_void as *mut winlink) as libc::c_int,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3886:16
     |
3886 |         (wp != 0 as *mut libc::c_void as *mut window_pane) as libc::c_int,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3914:38
     |
3914 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:3951:16
     |
3951 |         (sg != 0 as *mut libc::c_void as *mut session_group) as libc::c_int,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/format.rs:4023:31
     |
4023 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/format.rs:4024:41
     |
4024 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:4184:1
     |
4184 | / pub unsafe extern "C" fn format_defaults_window(
4185 | |     mut ft: *mut format_tree,
4186 | |     mut w: *mut window,
4187 | | ) {
...    |
4245 | |     );
4246 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:4316:1
     |
4316 | / pub unsafe extern "C" fn format_defaults_pane(
4317 | |     mut ft: *mut format_tree,
4318 | |     mut wp: *mut window_pane,
4319 | | ) {
...    |
4637 | |     );
4638 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/format.rs:4640:1
     |
4640 | / pub unsafe extern "C" fn format_defaults_paste_buffer(
4641 | |     mut ft: *mut format_tree,
4642 | |     mut pb: *mut paste_buffer,
4643 | | ) {
...    |
4671 | |     free(s as *mut libc::c_void);
4672 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/format.rs:4646:36
     |
4646 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/grid.rs:142:5
    |
127 | /     let mut init = grid_cell {
128 | |         flags: 0 as libc::c_int as u_char,
129 | |         attr: 0 as libc::c_int as u_short,
130 | |         fg: 8 as libc::c_int,
...   |
140 | |         },
141 | |     };
    | |______- unnecessary `let` binding
142 |       init
    |       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
127 ~     
128 ~     grid_cell {
129 +         flags: 0 as libc::c_int as u_char,
130 +         attr: 0 as libc::c_int as u_short,
131 +         fg: 8 as libc::c_int,
132 +         bg: 8 as libc::c_int,
133 +         data: {
134 +             let mut init = utf8_data {
135 +                 data: [' ' as i32 as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
136 +                 have: 0 as libc::c_int as u_char,
137 +                 size: 1 as libc::c_int as u_char,
138 +                 width: 1 as libc::c_int as u_char,
139 +             };
140 +             init
141 +         },
142 +     }
    |

warning: returning the result of a `let` binding from a block
   --> src/grid.rs:139:13
    |
133 | /             let mut init = utf8_data {
134 | |                 data: [' ' as i32 as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
135 | |                 have: 0 as libc::c_int as u_char,
136 | |                 size: 1 as libc::c_int as u_char,
137 | |                 width: 1 as libc::c_int as u_char,
138 | |             };
    | |______________- unnecessary `let` binding
139 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
133 ~             
134 ~             utf8_data {
135 +                 data: [' ' as i32 as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
136 +                 have: 0 as libc::c_int as u_char,
137 +                 size: 1 as libc::c_int as u_char,
138 +                 width: 1 as libc::c_int as u_char,
139 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/grid.rs:159:5
    |
145 | /     let mut init = grid_cell_entry {
146 | |         flags: 0 as libc::c_int as u_char,
147 | |         c2rust_unnamed: C2RustUnnamed {
148 | |             data: {
...   |
157 | |         },
158 | |     };
    | |______- unnecessary `let` binding
159 |       init
    |       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
145 ~     
146 ~     grid_cell_entry {
147 +         flags: 0 as libc::c_int as u_char,
148 +         c2rust_unnamed: C2RustUnnamed {
149 +             data: {
150 +                 let mut init = C2RustUnnamed_0 {
151 +                     attr: 0 as libc::c_int as u_char,
152 +                     fg: 8 as libc::c_int as u_char,
153 +                     bg: 8 as libc::c_int as u_char,
154 +                     data: ' ' as i32 as u_char,
155 +                 };
156 +                 init
157 +             },
158 +         },
159 +     }
    |

warning: returning the result of a `let` binding from a block
   --> src/grid.rs:155:17
    |
149 | /                 let mut init = C2RustUnnamed_0 {
150 | |                     attr: 0 as libc::c_int as u_char,
151 | |                     fg: 8 as libc::c_int as u_char,
152 | |                     bg: 8 as libc::c_int as u_char,
153 | |                     data: ' ' as i32 as u_char,
154 | |                 };
    | |__________________- unnecessary `let` binding
155 |                   init
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
149 ~                 
150 ~                 C2RustUnnamed_0 {
151 +                     attr: 0 as libc::c_int as u_char,
152 +                     fg: 8 as libc::c_int as u_char,
153 +                     bg: 8 as libc::c_int as u_char,
154 +                     data: ' ' as i32 as u_char,
155 +                 }
    |

warning: unneeded `return` statement
   --> src/grid.rs:198:5
    |
198 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/grid.rs:202:44
    |
202 |     let mut new_extddata: *mut grid_cell = 0 as *mut grid_cell;
    |                                            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:203:41
    |
203 |     let mut gce: *mut grid_cell_entry = 0 as *mut grid_cell_entry;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:204:34
    |
204 |     let mut gc: *mut grid_cell = 0 as *mut grid_cell;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:215:13
    |
215 |             new_extdsize;
    |             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:218:9
    |
218 |         px;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/grid.rs:222:26
    |
222 |         (*gl).extddata = 0 as *mut grid_cell;
    |                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:227:9
    |
227 |         0 as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:249:9
    |
249 |         px;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
   --> src/grid.rs:284:5
    |
284 |     return gcp;
    |     ^^^^^^^^^^^ help: remove `return`: `gcp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/grid.rs:260:35
    |
260 |     let mut gcp: *mut grid_cell = 0 as *mut grid_cell;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:296:34
    |
296 |     let mut gc: *mut grid_cell = 0 as *mut grid_cell;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/grid.rs:325:5
    |
325 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:328:1
    |
328 | / pub unsafe extern "C" fn grid_cells_equal(
329 | |     mut gca: *const grid_cell,
330 | |     mut gcb: *const grid_cell,
331 | | ) -> libc::c_int {
...   |
350 | |     ) == 0 as libc::c_int) as libc::c_int;
351 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid.rs:346:5
    |
346 | /     return (memcmp(
347 | |         ((*gca).data.data).as_ptr() as *const libc::c_void,
348 | |         ((*gcb).data.data).as_ptr() as *const libc::c_void,
349 | |         (*gca).data.size as libc::c_ulong,
350 | |     ) == 0 as libc::c_int) as libc::c_int;
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
346 ~     (memcmp(
347 +         ((*gca).data.data).as_ptr() as *const libc::c_void,
348 +         ((*gcb).data.data).as_ptr() as *const libc::c_void,
349 +         (*gca).data.size as libc::c_ulong,
350 +     ) == 0 as libc::c_int) as libc::c_int
    |

warning: statement with no effect
   --> src/grid.rs:369:9
    |
369 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:373:1
    |
373 | / pub unsafe extern "C" fn grid_create(
374 | |     mut sx: u_int,
375 | |     mut sy: u_int,
376 | |     mut hlimit: u_int,
...   |
395 | |     return gd;
396 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid.rs:395:5
    |
395 |     return gd;
    |     ^^^^^^^^^^ help: remove `return`: `gd`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/grid.rs:378:29
    |
378 |     let mut gd: *mut grid = 0 as *mut grid;
    |                             ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:393:26
    |
393 |         (*gd).linedata = 0 as *mut grid_line;
    |                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:398:1
    |
398 | / pub unsafe extern "C" fn grid_destroy(mut gd: *mut grid) {
399 | |     grid_free_lines(gd, 0 as libc::c_int as u_int, ((*gd).hsize).wrapping_add((*gd).sy));
400 | |     free((*gd).linedata as *mut libc::c_void);
401 | |     free(gd as *mut libc::c_void);
402 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:404:1
    |
404 | / pub unsafe extern "C" fn grid_compare(
405 | |     mut ga: *mut grid,
406 | |     mut gb: *mut grid,
407 | | ) -> libc::c_int {
...   |
459 | |     return 0 as libc::c_int;
460 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid.rs:459:5
    |
459 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/grid.rs:408:35
    |
408 |     let mut gla: *mut grid_line = 0 as *mut grid_line;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:409:35
    |
409 |     let mut glb: *mut grid_line = 0 as *mut grid_line;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `grid_cells_equal` doesn't need a mutable reference
   --> src/grid.rs:450:33
    |
450 |             if grid_cells_equal(&mut gca, &mut gcb) == 0 {
    |                                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `grid_cells_equal` doesn't need a mutable reference
   --> src/grid.rs:450:43
    |
450 |             if grid_cells_equal(&mut gca, &mut gcb) == 0 {
    |                                           ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
   --> src/grid.rs:454:13
    |
454 |             xx;
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:457:9
    |
457 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:462:1
    |
462 | / pub unsafe extern "C" fn grid_collect_history(mut gd: *mut grid) {
463 | |     let mut ny: u_int = 0;
464 | |     if (*gd).hsize == 0 as libc::c_int as u_int || (*gd).hsize < (*gd).hlimit {
465 | |         return;
...   |
486 | |     }
487 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:489:1
    |
489 | / pub unsafe extern "C" fn grid_scroll_history(mut gd: *mut grid, mut bg: u_int) {
490 | |     let mut yy: u_int = 0;
491 | |     yy = ((*gd).hsize).wrapping_add((*gd).sy);
492 | |     (*gd)
...   |
503 | |     (*gd).hsize;
504 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/grid.rs:500:5
    |
500 |     (*gd).hscrolled;
    |     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:503:5
    |
503 |     (*gd).hsize;
    |     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:506:1
    |
506 | / pub unsafe extern "C" fn grid_clear_history(mut gd: *mut grid) {
507 | |     grid_free_lines(gd, 0 as libc::c_int as u_int, (*gd).hsize);
508 | |     memmove(
509 | |         &mut *((*gd).linedata).offset(0 as libc::c_int as isize) as *mut grid_line
...   |
523 | |     ) as *mut grid_line;
524 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:526:1
    |
526 | / pub unsafe extern "C" fn grid_scroll_history_region(
527 | |     mut gd: *mut grid,
528 | |     mut upper: u_int,
529 | |     mut lower: u_int,
...   |
569 | |     (*gd).hsize;
570 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/grid.rs:532:42
    |
532 |     let mut gl_history: *mut grid_line = 0 as *mut grid_line;
    |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:533:40
    |
533 |     let mut gl_upper: *mut grid_line = 0 as *mut grid_line;
    |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:550:5
    |
550 |     upper;
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:553:5
    |
553 |     lower;
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:567:5
    |
567 |     (*gd).hscrolled;
    |     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:569:5
    |
569 |     (*gd).hsize;
    |     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/grid.rs:577:34
    |
577 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:600:9
    |
600 |         xx;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:616:1
    |
616 | / pub unsafe extern "C" fn grid_peek_line(
617 | |     mut gd: *mut grid,
618 | |     mut py: u_int,
619 | | ) -> *const grid_line {
...   |
629 | |     return &mut *((*gd).linedata).offset(py as isize) as *mut grid_line;
630 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid.rs:629:5
    |
629 |     return &mut *((*gd).linedata).offset(py as isize) as *mut grid_line;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `&mut *((*gd).linedata).offset(py as isize) as *mut grid_line`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/grid.rs:627:16
    |
627 |         return 0 as *const grid_line;
    |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:670:1
    |
670 | / pub unsafe extern "C" fn grid_get_cell(
671 | |     mut gd: *mut grid,
672 | |     mut px: u_int,
673 | |     mut py: u_int,
...   |
690 | |     return grid_get_cell1(&mut *((*gd).linedata).offset(py as isize), px, gc);
691 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid.rs:690:5
    |
690 |     return grid_get_cell1(&mut *((*gd).linedata).offset(py as isize), px, gc);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `grid_get_cell1(&mut *((*gd).linedata).offset(py as isize), px, gc)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:693:1
    |
693 | / pub unsafe extern "C" fn grid_set_cell(
694 | |     mut gd: *mut grid,
695 | |     mut px: u_int,
696 | |     mut py: u_int,
...   |
725 | |     };
726 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/grid.rs:699:34
    |
699 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:700:41
    |
700 |     let mut gce: *mut grid_cell_entry = 0 as *mut grid_cell_entry;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:728:1
    |
728 | / pub unsafe extern "C" fn grid_set_cells(
729 | |     mut gd: *mut grid,
730 | |     mut px: u_int,
731 | |     mut py: u_int,
...   |
771 | |     }
772 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/grid.rs:736:34
    |
736 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:737:41
    |
737 |     let mut gce: *mut grid_cell_entry = 0 as *mut grid_cell_entry;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/grid.rs:738:35
    |
738 |     let mut gcp: *mut grid_cell = 0 as *mut grid_cell;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:770:9
    |
770 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:774:1
    |
774 | / pub unsafe extern "C" fn grid_clear(
775 | |     mut gd: *mut grid,
776 | |     mut px: u_int,
777 | |     mut py: u_int,
...   |
835 | |     }
836 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/grid.rs:829:21
    |
829 |                     xx;
    |                     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:834:9
    |
834 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:838:1
    |
838 | / pub unsafe extern "C" fn grid_clear_lines(
839 | |     mut gd: *mut grid,
840 | |     mut py: u_int,
841 | |     mut ny: u_int,
...   |
878 | |     }
879 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/grid.rs:877:9
    |
877 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:881:1
    |
881 | / pub unsafe extern "C" fn grid_move_lines(
882 | |     mut gd: *mut grid,
883 | |     mut dy: u_int,
884 | |     mut py: u_int,
...   |
951 | |     }
952 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/grid.rs:934:9
    |
934 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid.rs:950:9
    |
950 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid.rs:954:1
    |
954 | / pub unsafe extern "C" fn grid_move_cells(
955 | |     mut gd: *mut grid,
956 | |     mut dx: u_int,
957 | |     mut px: u_int,
...   |
997 | |     }
998 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/grid.rs:962:34
    |
962 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid.rs:996:9
    |
996 |         xx;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/grid.rs:1055:5
     |
1055 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/grid.rs:1113:5
     |
1113 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1138:13
     |
1134 | /             let mut init = C2RustUnnamed_1 {
1135 | |                 mask: 0x1 as libc::c_int as u_int,
1136 | |                 code: 1 as libc::c_int as u_int,
1137 | |             };
     | |______________- unnecessary `let` binding
1138 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1134 ~             
1135 ~             C2RustUnnamed_1 {
1136 +                 mask: 0x1 as libc::c_int as u_int,
1137 +                 code: 1 as libc::c_int as u_int,
1138 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1145:13
     |
1141 | /             let mut init = C2RustUnnamed_1 {
1142 | |                 mask: 0x2 as libc::c_int as u_int,
1143 | |                 code: 2 as libc::c_int as u_int,
1144 | |             };
     | |______________- unnecessary `let` binding
1145 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1141 ~             
1142 ~             C2RustUnnamed_1 {
1143 +                 mask: 0x2 as libc::c_int as u_int,
1144 +                 code: 2 as libc::c_int as u_int,
1145 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1152:13
     |
1148 | /             let mut init = C2RustUnnamed_1 {
1149 | |                 mask: 0x40 as libc::c_int as u_int,
1150 | |                 code: 3 as libc::c_int as u_int,
1151 | |             };
     | |______________- unnecessary `let` binding
1152 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1148 ~             
1149 ~             C2RustUnnamed_1 {
1150 +                 mask: 0x40 as libc::c_int as u_int,
1151 +                 code: 3 as libc::c_int as u_int,
1152 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1159:13
     |
1155 | /             let mut init = C2RustUnnamed_1 {
1156 | |                 mask: 0x4 as libc::c_int as u_int,
1157 | |                 code: 4 as libc::c_int as u_int,
1158 | |             };
     | |______________- unnecessary `let` binding
1159 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1155 ~             
1156 ~             C2RustUnnamed_1 {
1157 +                 mask: 0x4 as libc::c_int as u_int,
1158 +                 code: 4 as libc::c_int as u_int,
1159 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1166:13
     |
1162 | /             let mut init = C2RustUnnamed_1 {
1163 | |                 mask: 0x8 as libc::c_int as u_int,
1164 | |                 code: 5 as libc::c_int as u_int,
1165 | |             };
     | |______________- unnecessary `let` binding
1166 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1162 ~             
1163 ~             C2RustUnnamed_1 {
1164 +                 mask: 0x8 as libc::c_int as u_int,
1165 +                 code: 5 as libc::c_int as u_int,
1166 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1173:13
     |
1169 | /             let mut init = C2RustUnnamed_1 {
1170 | |                 mask: 0x10 as libc::c_int as u_int,
1171 | |                 code: 7 as libc::c_int as u_int,
1172 | |             };
     | |______________- unnecessary `let` binding
1173 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1169 ~             
1170 ~             C2RustUnnamed_1 {
1171 +                 mask: 0x10 as libc::c_int as u_int,
1172 +                 code: 7 as libc::c_int as u_int,
1173 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1180:13
     |
1176 | /             let mut init = C2RustUnnamed_1 {
1177 | |                 mask: 0x20 as libc::c_int as u_int,
1178 | |                 code: 8 as libc::c_int as u_int,
1179 | |             };
     | |______________- unnecessary `let` binding
1180 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1176 ~             
1177 ~             C2RustUnnamed_1 {
1178 +                 mask: 0x20 as libc::c_int as u_int,
1179 +                 code: 8 as libc::c_int as u_int,
1180 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/grid.rs:1187:13
     |
1183 | /             let mut init = C2RustUnnamed_1 {
1184 | |                 mask: 0x100 as libc::c_int as u_int,
1185 | |                 code: 9 as libc::c_int as u_int,
1186 | |             };
     | |______________- unnecessary `let` binding
1187 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1183 ~             
1184 ~             C2RustUnnamed_1 {
1185 +                 mask: 0x100 as libc::c_int as u_int,
1186 +                 code: 9 as libc::c_int as u_int,
1187 +             }
     |

warning: statement with no effect
    --> src/grid.rs:1204:13
     |
1204 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1218:9
     |
1218 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1246:13
     |
1246 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1285:13
     |
1285 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1324:13
     |
1324 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/grid.rs:1348:1
     |
1348 | / pub unsafe extern "C" fn grid_string_cells(
1349 | |     mut gd: *mut grid,
1350 | |     mut px: u_int,
1351 | |     mut py: u_int,
...    |
1476 | |     return buf;
1477 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/grid.rs:1409:12
     |
1409 |         if !(gc.flags as libc::c_int & 0x4 as libc::c_int != 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `gc.flags as libc::c_int & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/grid.rs:1476:5
     |
1476 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/grid.rs:1382:41
     |
1382 |     let mut data: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1383:38
     |
1383 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/grid.rs:1390:36
     |
1390 |     let mut gl: *const grid_line = 0 as *const grid_line;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `grid_string_cells_code` doesn't need a mutable reference
    --> src/grid.rs:1413:21
     |
1413 |                     &mut gc,
     |                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: manual implementation of an assign operation
    --> src/grid.rs:1446:17
     |
1446 |                 len = len * 2 as libc::c_int as size_t;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `len *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/grid.rs:1464:9
     |
1464 |         xx;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1472:13
     |
1472 |             off;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/grid.rs:1479:1
     |
1479 | / pub unsafe extern "C" fn grid_duplicate_lines(
1480 | |     mut dst: *mut grid,
1481 | |     mut dy: u_int,
1482 | |     mut src: *mut grid,
...    |
1544 | |     }
1545 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/grid.rs:1486:36
     |
1486 |     let mut dstl: *mut grid_line = 0 as *mut grid_line;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1487:36
     |
1487 |     let mut srcl: *mut grid_line = 0 as *mut grid_line;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1508:17
     |
1508 |                 0 as *mut libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1521:32
     |
1521 |             (*dstl).celldata = 0 as *mut grid_cell_entry;
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1527:17
     |
1527 |                 0 as *mut libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/grid.rs:1539:9
     |
1539 |         sy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1541:9
     |
1541 |         dy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1543:9
     |
1543 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/grid.rs:1571:5
     |
1571 |     return gl;
     |     ^^^^^^^^^^ help: remove `return`: `gl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/grid.rs:1555:34
     |
1555 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/grid.rs:1585:5
     |
1585 |     return to;
     |     ^^^^^^^^^^ help: remove `return`: `to`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/grid.rs:1577:34
     |
1577 |     let mut to: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/grid.rs:1627:11
     |
1627 |     while !(yy.wrapping_add(lines) == ((*gd).hsize).wrapping_add((*gd).sy)) {
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `yy.wrapping_add(lines) != ((*gd).hsize).wrapping_add((*gd).sy)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/grid.rs:1596:34
     |
1596 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1597:36
     |
1597 |     let mut from: *mut grid_line = 0 as *mut grid_line;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `grid_set_cell` doesn't need a mutable reference
    --> src/grid.rs:1648:43
     |
1648 |             grid_set_cell(target, at, to, &mut gc);
     |                                           ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/grid.rs:1650:13
     |
1650 |             at;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `grid_set_cell` doesn't need a mutable reference
    --> src/grid.rs:1659:47
     |
1659 |                 grid_set_cell(target, at, to, &mut gc);
     |                                               ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/grid.rs:1661:17
     |
1661 |                 at;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1663:17
     |
1663 |                 want;
     |                 ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1666:13
     |
1666 |             lines;
     |             ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1688:9
     |
1688 |         lines;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1698:9
     |
1698 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/grid.rs:1721:37
     |
1721 |     let mut first: *mut grid_line = 0 as *mut grid_line;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/grid.rs:1752:17
     |
1752 |                 lines;
     |                 ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1757:13
     |
1757 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1770:13
     |
1770 |             line;
     |             ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `grid_set_cell` doesn't need a mutable reference
    --> src/grid.rs:1775:41
     |
1775 |         grid_set_cell(target, xx, line, &mut gc);
     |                                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/grid.rs:1777:9
     |
1777 |         xx;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1779:9
     |
1779 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/grid.rs:1806:1
     |
1806 | / pub unsafe extern "C" fn grid_reflow(
1807 | |     mut gd: *mut grid,
1808 | |     mut sx: u_int,
1809 | |     mut cursor: *mut u_int,
...    |
1918 | |     );
1919 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/grid.rs:1846:12
     |
1846 |         if !((*gl).flags & 0x4 as libc::c_int != 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*gl).flags & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/grid.rs:1811:33
     |
1811 |     let mut target: *mut grid = 0 as *mut grid;
     |                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1812:34
     |
1812 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/grid.rs:1833:30
     |
1833 |     gettimeofday(&mut start, 0 as *mut libc::c_void);
     |                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/grid.rs:1872:21
     |
1872 |                     i;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/grid.rs:1886:9
     |
1886 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/grid.rs:1903:27
     |
1903 |     gettimeofday(&mut tv, 0 as *mut libc::c_void);
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: manual implementation of an assign operation
    --> src/grid.rs:1904:5
     |
1904 |     tv.tv_sec = tv.tv_sec - start.tv_sec;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `tv.tv_sec -= start.tv_sec`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/grid.rs:1905:5
     |
1905 |     tv.tv_usec = tv.tv_usec - start.tv_usec;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `tv.tv_usec -= start.tv_usec`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/grid.rs:1908:9
     |
1908 |         tv.tv_sec;
     |         ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:96:1
    |
96  | / pub unsafe extern "C" fn grid_view_get_cell(
97  | |     mut gd: *mut grid,
98  | |     mut px: u_int,
99  | |     mut py: u_int,
...   |
102 | |     grid_get_cell(gd, px, ((*gd).hsize).wrapping_add(py), gc);
103 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:105:1
    |
105 | / pub unsafe extern "C" fn grid_view_set_cell(
106 | |     mut gd: *mut grid,
107 | |     mut px: u_int,
108 | |     mut py: u_int,
...   |
111 | |     grid_set_cell(gd, px, ((*gd).hsize).wrapping_add(py), gc);
112 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:114:1
    |
114 | / pub unsafe extern "C" fn grid_view_set_cells(
115 | |     mut gd: *mut grid,
116 | |     mut px: u_int,
117 | |     mut py: u_int,
...   |
122 | |     grid_set_cells(gd, px, ((*gd).hsize).wrapping_add(py), gc, s, slen);
123 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:125:1
    |
125 | / pub unsafe extern "C" fn grid_view_clear_history(mut gd: *mut grid, mut bg: u_int) {
126 | |     let mut gl: *mut grid_line = 0 as *mut grid_line;
127 | |     let mut yy: u_int = 0;
128 | |     let mut last: u_int = 0;
...   |
168 | |     (*gd).hscrolled = 0 as libc::c_int as u_int;
169 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/grid_view.rs:126:34
    |
126 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
    |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/grid_view.rs:138:9
    |
138 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/grid_view.rs:156:9
    |
156 |         yy;
    |         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:171:1
    |
171 | / pub unsafe extern "C" fn grid_view_clear(
172 | |     mut gd: *mut grid,
173 | |     mut px: u_int,
174 | |     mut py: u_int,
...   |
181 | |     grid_clear(gd, px, py, nx, ny, bg);
182 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:184:1
    |
184 | / pub unsafe extern "C" fn grid_view_scroll_region_up(
185 | |     mut gd: *mut grid,
186 | |     mut rupper: u_int,
187 | |     mut rlower: u_int,
...   |
211 | |     };
212 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:214:1
    |
214 | / pub unsafe extern "C" fn grid_view_scroll_region_down(
215 | |     mut gd: *mut grid,
216 | |     mut rupper: u_int,
217 | |     mut rlower: u_int,
...   |
228 | |     );
229 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:231:1
    |
231 | / pub unsafe extern "C" fn grid_view_insert_lines(
232 | |     mut gd: *mut grid,
233 | |     mut py: u_int,
234 | |     mut ny: u_int,
...   |
246 | |     );
247 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:249:1
    |
249 | / pub unsafe extern "C" fn grid_view_insert_lines_region(
250 | |     mut gd: *mut grid,
251 | |     mut rlower: u_int,
252 | |     mut py: u_int,
...   |
277 | |     );
278 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:280:1
    |
280 | / pub unsafe extern "C" fn grid_view_delete_lines(
281 | |     mut gd: *mut grid,
282 | |     mut py: u_int,
283 | |     mut ny: u_int,
...   |
303 | |     );
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:306:1
    |
306 | / pub unsafe extern "C" fn grid_view_delete_lines_region(
307 | |     mut gd: *mut grid,
308 | |     mut rlower: u_int,
309 | |     mut py: u_int,
...   |
328 | |     );
329 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:331:1
    |
331 | / pub unsafe extern "C" fn grid_view_insert_cells(
332 | |     mut gd: *mut grid,
333 | |     mut px: u_int,
334 | |     mut py: u_int,
...   |
353 | |     };
354 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:356:1
    |
356 | / pub unsafe extern "C" fn grid_view_delete_cells(
357 | |     mut gd: *mut grid,
358 | |     mut px: u_int,
359 | |     mut py: u_int,
...   |
382 | |     );
383 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/grid_view.rs:385:1
    |
385 | / pub unsafe extern "C" fn grid_view_string_cells(
386 | |     mut gd: *mut grid,
387 | |     mut px: u_int,
388 | |     mut py: u_int,
...   |
402 | |     );
403 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/grid_view.rs:393:5
    |
393 | /     return grid_string_cells(
394 | |         gd,
395 | |         px,
396 | |         py,
...   |
401 | |         0 as libc::c_int,
402 | |     );
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
393 ~     grid_string_cells(
394 +         gd,
395 +         px,
396 +         py,
397 +         nx,
398 +         0 as *mut *mut grid_cell,
399 +         0 as libc::c_int,
400 +         0 as libc::c_int,
401 +         0 as libc::c_int,
402 +     )
    |

warning: `0 as *mut _` detected
   --> src/grid_view.rs:398:9
    |
398 |         0 as *mut *mut grid_cell,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/hooks.rs:1020:5
     |
1020 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/hooks.rs:935:32
    |
935 |     let mut child: *mut hook = 0 as *mut hook;
    |                                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/hooks.rs:936:33
    |
936 |     let mut parent: *mut hook = 0 as *mut hook;
    |                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/hooks.rs:946:35
    |
946 |         let mut left: *mut hook = 0 as *mut hook;
    |                                   ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/hooks.rs:998:5
     |
998  | /     match current_block {
999  | |         7245201122033322888 => {
1000 | |             parent = (*elm).entry.rbe_parent;
1001 | |             color = (*elm).entry.rbe_color;
...    |
1015 | |         _ => {}
1016 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
998  ~     if current_block == 7245201122033322888 {
999  +         parent = (*elm).entry.rbe_parent;
1000 +         color = (*elm).entry.rbe_color;
1001 +         if !child.is_null() {
1002 +             (*child).entry.rbe_parent = parent;
1003 +         }
1004 +         if !parent.is_null() {
1005 +             if (*parent).entry.rbe_left == elm {
1006 +                 (*parent).entry.rbe_left = child;
1007 +             } else {
1008 +                 (*parent).entry.rbe_right = child;
1009 +             }
1010 +         } else {
1011 +             (*head).rbh_root = child;
1012 +         }
1013 +     }
     |

warning: unneeded `return` statement
    --> src/hooks.rs:1040:5
     |
1040 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/hooks.rs:1047:30
     |
1047 |     let mut tmp: *mut hook = 0 as *mut hook;
     |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/hooks.rs:1073:17
     |
1073 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/hooks.rs:1088:48
     |
1088 |                     let mut oleft: *mut hook = 0 as *mut hook;
     |                                                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/hooks.rs:1111:21
     |
1111 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1136:17
     |
1136 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1162:17
     |
1162 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/hooks.rs:1177:49
     |
1177 |                     let mut oright: *mut hook = 0 as *mut hook;
     |                                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/hooks.rs:1200:21
     |
1200 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1225:17
     |
1225 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/hooks.rs:1249:5
     |
1249 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/hooks.rs:1240:33
     |
1240 |     let mut parent: *mut hook = 0 as *mut hook;
     |                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/hooks.rs:1260:12
     |
1260 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/hooks.rs:1255:33
     |
1255 |     let mut parent: *mut hook = 0 as *mut hook;
     |                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1256:34
     |
1256 |     let mut gparent: *mut hook = 0 as *mut hook;
     |                                  ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1257:30
     |
1257 |     let mut tmp: *mut hook = 0 as *mut hook;
     |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/hooks.rs:1290:21
     |
1290 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1314:17
     |
1314 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1342:21
     |
1342 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/hooks.rs:1366:17
     |
1366 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/hooks.rs:1405:5
     |
1405 |     return 0 as *mut hook;
     |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut hook`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/hooks.rs:1376:30
     |
1376 |     let mut tmp: *mut hook = 0 as *mut hook;
     |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1377:33
     |
1377 |     let mut parent: *mut hook = 0 as *mut hook;
     |                                 ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/hooks.rs:1383:9
     |
1383 | /         if comp < 0 as libc::c_int {
1384 | |             tmp = (*tmp).entry.rbe_left;
1385 | |         } else if comp > 0 as libc::c_int {
1386 | |             tmp = (*tmp).entry.rbe_right;
1387 | |         } else {
1388 | |             return tmp
1389 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/hooks.rs:1392:30
     |
1392 |     (*elm).entry.rbe_right = 0 as *mut hook;
     |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1405:12
     |
1405 |     return 0 as *mut hook;
     |            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/hooks.rs:1423:5
     |
1423 |     return 0 as *mut hook;
     |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut hook`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/hooks.rs:1415:9
     |
1415 | /         if comp < 0 as libc::c_int {
1416 | |             tmp = (*tmp).entry.rbe_left;
1417 | |         } else if comp > 0 as libc::c_int {
1418 | |             tmp = (*tmp).entry.rbe_right;
1419 | |         } else {
1420 | |             return tmp
1421 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/hooks.rs:1423:12
     |
1423 |     return 0 as *mut hook;
     |            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/hooks.rs:1429:5
     |
1429 |     return strcmp((*hook1).name, (*hook2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*hook1).name, (*hook2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1432:1
     |
1432 | / pub unsafe extern "C" fn hooks_get(mut s: *mut session) -> *mut hooks {
1433 | |     if !s.is_null() {
1434 | |         return (*s).hooks;
1435 | |     }
1436 | |     return global_hooks;
1437 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/hooks.rs:1436:5
     |
1436 |     return global_hooks;
     |     ^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `global_hooks`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1439:1
     |
1439 | / pub unsafe extern "C" fn hooks_create(mut parent: *mut hooks) -> *mut hooks {
1440 | |     let mut hooks: *mut hooks = 0 as *mut hooks;
1441 | |     hooks = xcalloc(
1442 | |         1 as libc::c_int as size_t,
...    |
1447 | |     return hooks;
1448 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/hooks.rs:1447:5
     |
1447 |     return hooks;
     |     ^^^^^^^^^^^^^ help: remove `return`: `hooks`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/hooks.rs:1440:33
     |
1440 |     let mut hooks: *mut hooks = 0 as *mut hooks;
     |                                 ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hooks>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1445:30
     |
1445 |     (*hooks).tree.rbh_root = 0 as *mut hook;
     |                              ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1456:1
     |
1456 | / pub unsafe extern "C" fn hooks_free(mut hooks: *mut hooks) {
1457 | |     let mut hook: *mut hook = 0 as *mut hook;
1458 | |     let mut hook1: *mut hook = 0 as *mut hook;
1459 | |     hook = hooks_tree_RB_MINMAX(&mut (*hooks).tree, -(1 as libc::c_int));
...    |
1469 | |     free(hooks as *mut libc::c_void);
1470 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/hooks.rs:1457:31
     |
1457 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1458:32
     |
1458 |     let mut hook1: *mut hook = 0 as *mut hook;
     |                                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1472:1
     |
1472 | / pub unsafe extern "C" fn hooks_first(mut hooks: *mut hooks) -> *mut hook {
1473 | |     return hooks_tree_RB_MINMAX(&mut (*hooks).tree, -(1 as libc::c_int));
1474 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/hooks.rs:1473:5
     |
1473 |     return hooks_tree_RB_MINMAX(&mut (*hooks).tree, -(1 as libc::c_int));
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `hooks_tree_RB_MINMAX(&mut (*hooks).tree, -(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1476:1
     |
1476 | / pub unsafe extern "C" fn hooks_next(mut hook: *mut hook) -> *mut hook {
1477 | |     return hooks_tree_RB_NEXT(hook);
1478 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/hooks.rs:1477:5
     |
1477 |     return hooks_tree_RB_NEXT(hook);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `hooks_tree_RB_NEXT(hook)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1480:1
     |
1480 | / pub unsafe extern "C" fn hooks_add(
1481 | |     mut hooks: *mut hooks,
1482 | |     mut name: *const libc::c_char,
1483 | |     mut cmdlist: *mut cmd_list,
...    |
1498 | |     hooks_tree_RB_INSERT(&mut (*hooks).tree, hook);
1499 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/hooks.rs:1485:31
     |
1485 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/hooks.rs:1497:5
     |
1497 |     (*(*hook).cmdlist).references;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1501:1
     |
1501 | / pub unsafe extern "C" fn hooks_remove(
1502 | |     mut hooks: *mut hooks,
1503 | |     mut name: *const libc::c_char,
1504 | | ) {
...    |
1509 | |     }
1510 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/hooks.rs:1505:31
     |
1505 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/hooks.rs:1526:5
     |
1526 |     return hooks_tree_RB_FIND(&mut (*hooks).tree, &mut hook);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `hooks_tree_RB_FIND(&mut (*hooks).tree, &mut hook)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/hooks.rs:1516:15
     |
1516 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1517:18
     |
1517 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1519:23
     |
1519 |             rbe_left: 0 as *mut hook,
     |                       ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1520:24
     |
1520 |             rbe_right: 0 as *mut hook,
     |                        ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1521:25
     |
1521 |             rbe_parent: 0 as *mut hook,
     |                         ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/hooks.rs:1529:1
     |
1529 | / pub unsafe extern "C" fn hooks_find(
1530 | |     mut hooks: *mut hooks,
1531 | |     mut name: *const libc::c_char,
1532 | | ) -> *mut hook {
...    |
1553 | |     return hook;
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/hooks.rs:1553:5
     |
1553 |     return hook;
     |     ^^^^^^^^^^^^ help: remove `return`: `hook`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/hooks.rs:1534:15
     |
1534 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1535:18
     |
1535 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1537:23
     |
1537 |             rbe_left: 0 as *mut hook,
     |                       ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1538:24
     |
1538 |             rbe_right: 0 as *mut hook,
     |                        ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1539:25
     |
1539 |             rbe_parent: 0 as *mut hook,
     |                         ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/hooks.rs:1543:31
     |
1543 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1188:9
     |
1183 | /         let mut init = input_table_entry {
1184 | |             ch: '0' as i32,
1185 | |             interm: b"(\0" as *const u8 as *const libc::c_char,
1186 | |             type_0: INPUT_ESC_SCSG0_ON as libc::c_int,
1187 | |         };
     | |__________- unnecessary `let` binding
1188 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1183 ~         
1184 ~         input_table_entry {
1185 +             ch: '0' as i32,
1186 +             interm: b"(\0" as *const u8 as *const libc::c_char,
1187 +             type_0: INPUT_ESC_SCSG0_ON as libc::c_int,
1188 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1196:9
     |
1191 | /         let mut init = input_table_entry {
1192 | |             ch: '0' as i32,
1193 | |             interm: b")\0" as *const u8 as *const libc::c_char,
1194 | |             type_0: INPUT_ESC_SCSG1_ON as libc::c_int,
1195 | |         };
     | |__________- unnecessary `let` binding
1196 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1191 ~         
1192 ~         input_table_entry {
1193 +             ch: '0' as i32,
1194 +             interm: b")\0" as *const u8 as *const libc::c_char,
1195 +             type_0: INPUT_ESC_SCSG1_ON as libc::c_int,
1196 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1204:9
     |
1199 | /         let mut init = input_table_entry {
1200 | |             ch: '7' as i32,
1201 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1202 | |             type_0: INPUT_ESC_DECSC as libc::c_int,
1203 | |         };
     | |__________- unnecessary `let` binding
1204 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1199 ~         
1200 ~         input_table_entry {
1201 +             ch: '7' as i32,
1202 +             interm: b"\0" as *const u8 as *const libc::c_char,
1203 +             type_0: INPUT_ESC_DECSC as libc::c_int,
1204 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1212:9
     |
1207 | /         let mut init = input_table_entry {
1208 | |             ch: '8' as i32,
1209 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1210 | |             type_0: INPUT_ESC_DECRC as libc::c_int,
1211 | |         };
     | |__________- unnecessary `let` binding
1212 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1207 ~         
1208 ~         input_table_entry {
1209 +             ch: '8' as i32,
1210 +             interm: b"\0" as *const u8 as *const libc::c_char,
1211 +             type_0: INPUT_ESC_DECRC as libc::c_int,
1212 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1220:9
     |
1215 | /         let mut init = input_table_entry {
1216 | |             ch: '8' as i32,
1217 | |             interm: b"#\0" as *const u8 as *const libc::c_char,
1218 | |             type_0: INPUT_ESC_DECALN as libc::c_int,
1219 | |         };
     | |__________- unnecessary `let` binding
1220 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1215 ~         
1216 ~         input_table_entry {
1217 +             ch: '8' as i32,
1218 +             interm: b"#\0" as *const u8 as *const libc::c_char,
1219 +             type_0: INPUT_ESC_DECALN as libc::c_int,
1220 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1228:9
     |
1223 | /         let mut init = input_table_entry {
1224 | |             ch: '=' as i32,
1225 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1226 | |             type_0: INPUT_ESC_DECKPAM as libc::c_int,
1227 | |         };
     | |__________- unnecessary `let` binding
1228 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1223 ~         
1224 ~         input_table_entry {
1225 +             ch: '=' as i32,
1226 +             interm: b"\0" as *const u8 as *const libc::c_char,
1227 +             type_0: INPUT_ESC_DECKPAM as libc::c_int,
1228 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1236:9
     |
1231 | /         let mut init = input_table_entry {
1232 | |             ch: '>' as i32,
1233 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1234 | |             type_0: INPUT_ESC_DECKPNM as libc::c_int,
1235 | |         };
     | |__________- unnecessary `let` binding
1236 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1231 ~         
1232 ~         input_table_entry {
1233 +             ch: '>' as i32,
1234 +             interm: b"\0" as *const u8 as *const libc::c_char,
1235 +             type_0: INPUT_ESC_DECKPNM as libc::c_int,
1236 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1244:9
     |
1239 | /         let mut init = input_table_entry {
1240 | |             ch: 'B' as i32,
1241 | |             interm: b"(\0" as *const u8 as *const libc::c_char,
1242 | |             type_0: INPUT_ESC_SCSG0_OFF as libc::c_int,
1243 | |         };
     | |__________- unnecessary `let` binding
1244 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1239 ~         
1240 ~         input_table_entry {
1241 +             ch: 'B' as i32,
1242 +             interm: b"(\0" as *const u8 as *const libc::c_char,
1243 +             type_0: INPUT_ESC_SCSG0_OFF as libc::c_int,
1244 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1252:9
     |
1247 | /         let mut init = input_table_entry {
1248 | |             ch: 'B' as i32,
1249 | |             interm: b")\0" as *const u8 as *const libc::c_char,
1250 | |             type_0: INPUT_ESC_SCSG1_OFF as libc::c_int,
1251 | |         };
     | |__________- unnecessary `let` binding
1252 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1247 ~         
1248 ~         input_table_entry {
1249 +             ch: 'B' as i32,
1250 +             interm: b")\0" as *const u8 as *const libc::c_char,
1251 +             type_0: INPUT_ESC_SCSG1_OFF as libc::c_int,
1252 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1260:9
     |
1255 | /         let mut init = input_table_entry {
1256 | |             ch: 'D' as i32,
1257 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1258 | |             type_0: INPUT_ESC_IND as libc::c_int,
1259 | |         };
     | |__________- unnecessary `let` binding
1260 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1255 ~         
1256 ~         input_table_entry {
1257 +             ch: 'D' as i32,
1258 +             interm: b"\0" as *const u8 as *const libc::c_char,
1259 +             type_0: INPUT_ESC_IND as libc::c_int,
1260 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1268:9
     |
1263 | /         let mut init = input_table_entry {
1264 | |             ch: 'E' as i32,
1265 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1266 | |             type_0: INPUT_ESC_NEL as libc::c_int,
1267 | |         };
     | |__________- unnecessary `let` binding
1268 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1263 ~         
1264 ~         input_table_entry {
1265 +             ch: 'E' as i32,
1266 +             interm: b"\0" as *const u8 as *const libc::c_char,
1267 +             type_0: INPUT_ESC_NEL as libc::c_int,
1268 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1276:9
     |
1271 | /         let mut init = input_table_entry {
1272 | |             ch: 'H' as i32,
1273 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1274 | |             type_0: INPUT_ESC_HTS as libc::c_int,
1275 | |         };
     | |__________- unnecessary `let` binding
1276 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1271 ~         
1272 ~         input_table_entry {
1273 +             ch: 'H' as i32,
1274 +             interm: b"\0" as *const u8 as *const libc::c_char,
1275 +             type_0: INPUT_ESC_HTS as libc::c_int,
1276 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1284:9
     |
1279 | /         let mut init = input_table_entry {
1280 | |             ch: 'M' as i32,
1281 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1282 | |             type_0: INPUT_ESC_RI as libc::c_int,
1283 | |         };
     | |__________- unnecessary `let` binding
1284 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1279 ~         
1280 ~         input_table_entry {
1281 +             ch: 'M' as i32,
1282 +             interm: b"\0" as *const u8 as *const libc::c_char,
1283 +             type_0: INPUT_ESC_RI as libc::c_int,
1284 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1292:9
     |
1287 | /         let mut init = input_table_entry {
1288 | |             ch: '\\' as i32,
1289 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1290 | |             type_0: INPUT_ESC_ST as libc::c_int,
1291 | |         };
     | |__________- unnecessary `let` binding
1292 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1287 ~         
1288 ~         input_table_entry {
1289 +             ch: '\\' as i32,
1290 +             interm: b"\0" as *const u8 as *const libc::c_char,
1291 +             type_0: INPUT_ESC_ST as libc::c_int,
1292 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1300:9
     |
1295 | /         let mut init = input_table_entry {
1296 | |             ch: 'c' as i32,
1297 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1298 | |             type_0: INPUT_ESC_RIS as libc::c_int,
1299 | |         };
     | |__________- unnecessary `let` binding
1300 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1295 ~         
1296 ~         input_table_entry {
1297 +             ch: 'c' as i32,
1298 +             interm: b"\0" as *const u8 as *const libc::c_char,
1299 +             type_0: INPUT_ESC_RIS as libc::c_int,
1300 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1310:9
     |
1305 | /         let mut init = input_table_entry {
1306 | |             ch: '@' as i32,
1307 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1308 | |             type_0: INPUT_CSI_ICH as libc::c_int,
1309 | |         };
     | |__________- unnecessary `let` binding
1310 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1305 ~         
1306 ~         input_table_entry {
1307 +             ch: '@' as i32,
1308 +             interm: b"\0" as *const u8 as *const libc::c_char,
1309 +             type_0: INPUT_CSI_ICH as libc::c_int,
1310 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1318:9
     |
1313 | /         let mut init = input_table_entry {
1314 | |             ch: 'A' as i32,
1315 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1316 | |             type_0: INPUT_CSI_CUU as libc::c_int,
1317 | |         };
     | |__________- unnecessary `let` binding
1318 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1313 ~         
1314 ~         input_table_entry {
1315 +             ch: 'A' as i32,
1316 +             interm: b"\0" as *const u8 as *const libc::c_char,
1317 +             type_0: INPUT_CSI_CUU as libc::c_int,
1318 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1326:9
     |
1321 | /         let mut init = input_table_entry {
1322 | |             ch: 'B' as i32,
1323 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1324 | |             type_0: INPUT_CSI_CUD as libc::c_int,
1325 | |         };
     | |__________- unnecessary `let` binding
1326 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1321 ~         
1322 ~         input_table_entry {
1323 +             ch: 'B' as i32,
1324 +             interm: b"\0" as *const u8 as *const libc::c_char,
1325 +             type_0: INPUT_CSI_CUD as libc::c_int,
1326 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1334:9
     |
1329 | /         let mut init = input_table_entry {
1330 | |             ch: 'C' as i32,
1331 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1332 | |             type_0: INPUT_CSI_CUF as libc::c_int,
1333 | |         };
     | |__________- unnecessary `let` binding
1334 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1329 ~         
1330 ~         input_table_entry {
1331 +             ch: 'C' as i32,
1332 +             interm: b"\0" as *const u8 as *const libc::c_char,
1333 +             type_0: INPUT_CSI_CUF as libc::c_int,
1334 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1342:9
     |
1337 | /         let mut init = input_table_entry {
1338 | |             ch: 'D' as i32,
1339 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1340 | |             type_0: INPUT_CSI_CUB as libc::c_int,
1341 | |         };
     | |__________- unnecessary `let` binding
1342 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1337 ~         
1338 ~         input_table_entry {
1339 +             ch: 'D' as i32,
1340 +             interm: b"\0" as *const u8 as *const libc::c_char,
1341 +             type_0: INPUT_CSI_CUB as libc::c_int,
1342 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1350:9
     |
1345 | /         let mut init = input_table_entry {
1346 | |             ch: 'E' as i32,
1347 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1348 | |             type_0: INPUT_CSI_CNL as libc::c_int,
1349 | |         };
     | |__________- unnecessary `let` binding
1350 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1345 ~         
1346 ~         input_table_entry {
1347 +             ch: 'E' as i32,
1348 +             interm: b"\0" as *const u8 as *const libc::c_char,
1349 +             type_0: INPUT_CSI_CNL as libc::c_int,
1350 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1358:9
     |
1353 | /         let mut init = input_table_entry {
1354 | |             ch: 'F' as i32,
1355 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1356 | |             type_0: INPUT_CSI_CPL as libc::c_int,
1357 | |         };
     | |__________- unnecessary `let` binding
1358 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1353 ~         
1354 ~         input_table_entry {
1355 +             ch: 'F' as i32,
1356 +             interm: b"\0" as *const u8 as *const libc::c_char,
1357 +             type_0: INPUT_CSI_CPL as libc::c_int,
1358 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1366:9
     |
1361 | /         let mut init = input_table_entry {
1362 | |             ch: 'G' as i32,
1363 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1364 | |             type_0: INPUT_CSI_HPA as libc::c_int,
1365 | |         };
     | |__________- unnecessary `let` binding
1366 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1361 ~         
1362 ~         input_table_entry {
1363 +             ch: 'G' as i32,
1364 +             interm: b"\0" as *const u8 as *const libc::c_char,
1365 +             type_0: INPUT_CSI_HPA as libc::c_int,
1366 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1374:9
     |
1369 | /         let mut init = input_table_entry {
1370 | |             ch: 'H' as i32,
1371 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1372 | |             type_0: INPUT_CSI_CUP as libc::c_int,
1373 | |         };
     | |__________- unnecessary `let` binding
1374 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1369 ~         
1370 ~         input_table_entry {
1371 +             ch: 'H' as i32,
1372 +             interm: b"\0" as *const u8 as *const libc::c_char,
1373 +             type_0: INPUT_CSI_CUP as libc::c_int,
1374 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1382:9
     |
1377 | /         let mut init = input_table_entry {
1378 | |             ch: 'J' as i32,
1379 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1380 | |             type_0: INPUT_CSI_ED as libc::c_int,
1381 | |         };
     | |__________- unnecessary `let` binding
1382 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1377 ~         
1378 ~         input_table_entry {
1379 +             ch: 'J' as i32,
1380 +             interm: b"\0" as *const u8 as *const libc::c_char,
1381 +             type_0: INPUT_CSI_ED as libc::c_int,
1382 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1390:9
     |
1385 | /         let mut init = input_table_entry {
1386 | |             ch: 'K' as i32,
1387 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1388 | |             type_0: INPUT_CSI_EL as libc::c_int,
1389 | |         };
     | |__________- unnecessary `let` binding
1390 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1385 ~         
1386 ~         input_table_entry {
1387 +             ch: 'K' as i32,
1388 +             interm: b"\0" as *const u8 as *const libc::c_char,
1389 +             type_0: INPUT_CSI_EL as libc::c_int,
1390 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1398:9
     |
1393 | /         let mut init = input_table_entry {
1394 | |             ch: 'L' as i32,
1395 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1396 | |             type_0: INPUT_CSI_IL as libc::c_int,
1397 | |         };
     | |__________- unnecessary `let` binding
1398 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1393 ~         
1394 ~         input_table_entry {
1395 +             ch: 'L' as i32,
1396 +             interm: b"\0" as *const u8 as *const libc::c_char,
1397 +             type_0: INPUT_CSI_IL as libc::c_int,
1398 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1406:9
     |
1401 | /         let mut init = input_table_entry {
1402 | |             ch: 'M' as i32,
1403 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1404 | |             type_0: INPUT_CSI_DL as libc::c_int,
1405 | |         };
     | |__________- unnecessary `let` binding
1406 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1401 ~         
1402 ~         input_table_entry {
1403 +             ch: 'M' as i32,
1404 +             interm: b"\0" as *const u8 as *const libc::c_char,
1405 +             type_0: INPUT_CSI_DL as libc::c_int,
1406 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1414:9
     |
1409 | /         let mut init = input_table_entry {
1410 | |             ch: 'P' as i32,
1411 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1412 | |             type_0: INPUT_CSI_DCH as libc::c_int,
1413 | |         };
     | |__________- unnecessary `let` binding
1414 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1409 ~         
1410 ~         input_table_entry {
1411 +             ch: 'P' as i32,
1412 +             interm: b"\0" as *const u8 as *const libc::c_char,
1413 +             type_0: INPUT_CSI_DCH as libc::c_int,
1414 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1422:9
     |
1417 | /         let mut init = input_table_entry {
1418 | |             ch: 'S' as i32,
1419 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1420 | |             type_0: INPUT_CSI_SU as libc::c_int,
1421 | |         };
     | |__________- unnecessary `let` binding
1422 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1417 ~         
1418 ~         input_table_entry {
1419 +             ch: 'S' as i32,
1420 +             interm: b"\0" as *const u8 as *const libc::c_char,
1421 +             type_0: INPUT_CSI_SU as libc::c_int,
1422 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1430:9
     |
1425 | /         let mut init = input_table_entry {
1426 | |             ch: 'X' as i32,
1427 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1428 | |             type_0: INPUT_CSI_ECH as libc::c_int,
1429 | |         };
     | |__________- unnecessary `let` binding
1430 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1425 ~         
1426 ~         input_table_entry {
1427 +             ch: 'X' as i32,
1428 +             interm: b"\0" as *const u8 as *const libc::c_char,
1429 +             type_0: INPUT_CSI_ECH as libc::c_int,
1430 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1438:9
     |
1433 | /         let mut init = input_table_entry {
1434 | |             ch: 'Z' as i32,
1435 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1436 | |             type_0: INPUT_CSI_CBT as libc::c_int,
1437 | |         };
     | |__________- unnecessary `let` binding
1438 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1433 ~         
1434 ~         input_table_entry {
1435 +             ch: 'Z' as i32,
1436 +             interm: b"\0" as *const u8 as *const libc::c_char,
1437 +             type_0: INPUT_CSI_CBT as libc::c_int,
1438 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1446:9
     |
1441 | /         let mut init = input_table_entry {
1442 | |             ch: 'b' as i32,
1443 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1444 | |             type_0: INPUT_CSI_REP as libc::c_int,
1445 | |         };
     | |__________- unnecessary `let` binding
1446 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1441 ~         
1442 ~         input_table_entry {
1443 +             ch: 'b' as i32,
1444 +             interm: b"\0" as *const u8 as *const libc::c_char,
1445 +             type_0: INPUT_CSI_REP as libc::c_int,
1446 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1454:9
     |
1449 | /         let mut init = input_table_entry {
1450 | |             ch: 'c' as i32,
1451 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1452 | |             type_0: INPUT_CSI_DA as libc::c_int,
1453 | |         };
     | |__________- unnecessary `let` binding
1454 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1449 ~         
1450 ~         input_table_entry {
1451 +             ch: 'c' as i32,
1452 +             interm: b"\0" as *const u8 as *const libc::c_char,
1453 +             type_0: INPUT_CSI_DA as libc::c_int,
1454 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1462:9
     |
1457 | /         let mut init = input_table_entry {
1458 | |             ch: 'c' as i32,
1459 | |             interm: b">\0" as *const u8 as *const libc::c_char,
1460 | |             type_0: INPUT_CSI_DA_TWO as libc::c_int,
1461 | |         };
     | |__________- unnecessary `let` binding
1462 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1457 ~         
1458 ~         input_table_entry {
1459 +             ch: 'c' as i32,
1460 +             interm: b">\0" as *const u8 as *const libc::c_char,
1461 +             type_0: INPUT_CSI_DA_TWO as libc::c_int,
1462 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1470:9
     |
1465 | /         let mut init = input_table_entry {
1466 | |             ch: 'd' as i32,
1467 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1468 | |             type_0: INPUT_CSI_VPA as libc::c_int,
1469 | |         };
     | |__________- unnecessary `let` binding
1470 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1465 ~         
1466 ~         input_table_entry {
1467 +             ch: 'd' as i32,
1468 +             interm: b"\0" as *const u8 as *const libc::c_char,
1469 +             type_0: INPUT_CSI_VPA as libc::c_int,
1470 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1478:9
     |
1473 | /         let mut init = input_table_entry {
1474 | |             ch: 'f' as i32,
1475 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1476 | |             type_0: INPUT_CSI_CUP as libc::c_int,
1477 | |         };
     | |__________- unnecessary `let` binding
1478 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1473 ~         
1474 ~         input_table_entry {
1475 +             ch: 'f' as i32,
1476 +             interm: b"\0" as *const u8 as *const libc::c_char,
1477 +             type_0: INPUT_CSI_CUP as libc::c_int,
1478 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1486:9
     |
1481 | /         let mut init = input_table_entry {
1482 | |             ch: 'g' as i32,
1483 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1484 | |             type_0: INPUT_CSI_TBC as libc::c_int,
1485 | |         };
     | |__________- unnecessary `let` binding
1486 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1481 ~         
1482 ~         input_table_entry {
1483 +             ch: 'g' as i32,
1484 +             interm: b"\0" as *const u8 as *const libc::c_char,
1485 +             type_0: INPUT_CSI_TBC as libc::c_int,
1486 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1494:9
     |
1489 | /         let mut init = input_table_entry {
1490 | |             ch: 'h' as i32,
1491 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1492 | |             type_0: INPUT_CSI_SM as libc::c_int,
1493 | |         };
     | |__________- unnecessary `let` binding
1494 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1489 ~         
1490 ~         input_table_entry {
1491 +             ch: 'h' as i32,
1492 +             interm: b"\0" as *const u8 as *const libc::c_char,
1493 +             type_0: INPUT_CSI_SM as libc::c_int,
1494 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1502:9
     |
1497 | /         let mut init = input_table_entry {
1498 | |             ch: 'h' as i32,
1499 | |             interm: b"?\0" as *const u8 as *const libc::c_char,
1500 | |             type_0: INPUT_CSI_SM_PRIVATE as libc::c_int,
1501 | |         };
     | |__________- unnecessary `let` binding
1502 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1497 ~         
1498 ~         input_table_entry {
1499 +             ch: 'h' as i32,
1500 +             interm: b"?\0" as *const u8 as *const libc::c_char,
1501 +             type_0: INPUT_CSI_SM_PRIVATE as libc::c_int,
1502 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1510:9
     |
1505 | /         let mut init = input_table_entry {
1506 | |             ch: 'l' as i32,
1507 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1508 | |             type_0: INPUT_CSI_RM as libc::c_int,
1509 | |         };
     | |__________- unnecessary `let` binding
1510 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1505 ~         
1506 ~         input_table_entry {
1507 +             ch: 'l' as i32,
1508 +             interm: b"\0" as *const u8 as *const libc::c_char,
1509 +             type_0: INPUT_CSI_RM as libc::c_int,
1510 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1518:9
     |
1513 | /         let mut init = input_table_entry {
1514 | |             ch: 'l' as i32,
1515 | |             interm: b"?\0" as *const u8 as *const libc::c_char,
1516 | |             type_0: INPUT_CSI_RM_PRIVATE as libc::c_int,
1517 | |         };
     | |__________- unnecessary `let` binding
1518 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1513 ~         
1514 ~         input_table_entry {
1515 +             ch: 'l' as i32,
1516 +             interm: b"?\0" as *const u8 as *const libc::c_char,
1517 +             type_0: INPUT_CSI_RM_PRIVATE as libc::c_int,
1518 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1526:9
     |
1521 | /         let mut init = input_table_entry {
1522 | |             ch: 'm' as i32,
1523 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1524 | |             type_0: INPUT_CSI_SGR as libc::c_int,
1525 | |         };
     | |__________- unnecessary `let` binding
1526 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1521 ~         
1522 ~         input_table_entry {
1523 +             ch: 'm' as i32,
1524 +             interm: b"\0" as *const u8 as *const libc::c_char,
1525 +             type_0: INPUT_CSI_SGR as libc::c_int,
1526 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1534:9
     |
1529 | /         let mut init = input_table_entry {
1530 | |             ch: 'n' as i32,
1531 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1532 | |             type_0: INPUT_CSI_DSR as libc::c_int,
1533 | |         };
     | |__________- unnecessary `let` binding
1534 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1529 ~         
1530 ~         input_table_entry {
1531 +             ch: 'n' as i32,
1532 +             interm: b"\0" as *const u8 as *const libc::c_char,
1533 +             type_0: INPUT_CSI_DSR as libc::c_int,
1534 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1542:9
     |
1537 | /         let mut init = input_table_entry {
1538 | |             ch: 'q' as i32,
1539 | |             interm: b" \0" as *const u8 as *const libc::c_char,
1540 | |             type_0: INPUT_CSI_DECSCUSR as libc::c_int,
1541 | |         };
     | |__________- unnecessary `let` binding
1542 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1537 ~         
1538 ~         input_table_entry {
1539 +             ch: 'q' as i32,
1540 +             interm: b" \0" as *const u8 as *const libc::c_char,
1541 +             type_0: INPUT_CSI_DECSCUSR as libc::c_int,
1542 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1550:9
     |
1545 | /         let mut init = input_table_entry {
1546 | |             ch: 'r' as i32,
1547 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1548 | |             type_0: INPUT_CSI_DECSTBM as libc::c_int,
1549 | |         };
     | |__________- unnecessary `let` binding
1550 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1545 ~         
1546 ~         input_table_entry {
1547 +             ch: 'r' as i32,
1548 +             interm: b"\0" as *const u8 as *const libc::c_char,
1549 +             type_0: INPUT_CSI_DECSTBM as libc::c_int,
1550 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1558:9
     |
1553 | /         let mut init = input_table_entry {
1554 | |             ch: 's' as i32,
1555 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1556 | |             type_0: INPUT_CSI_SCP as libc::c_int,
1557 | |         };
     | |__________- unnecessary `let` binding
1558 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1553 ~         
1554 ~         input_table_entry {
1555 +             ch: 's' as i32,
1556 +             interm: b"\0" as *const u8 as *const libc::c_char,
1557 +             type_0: INPUT_CSI_SCP as libc::c_int,
1558 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1566:9
     |
1561 | /         let mut init = input_table_entry {
1562 | |             ch: 't' as i32,
1563 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1564 | |             type_0: INPUT_CSI_WINOPS as libc::c_int,
1565 | |         };
     | |__________- unnecessary `let` binding
1566 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1561 ~         
1562 ~         input_table_entry {
1563 +             ch: 't' as i32,
1564 +             interm: b"\0" as *const u8 as *const libc::c_char,
1565 +             type_0: INPUT_CSI_WINOPS as libc::c_int,
1566 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1574:9
     |
1569 | /         let mut init = input_table_entry {
1570 | |             ch: 'u' as i32,
1571 | |             interm: b"\0" as *const u8 as *const libc::c_char,
1572 | |             type_0: INPUT_CSI_RCP as libc::c_int,
1573 | |         };
     | |__________- unnecessary `let` binding
1574 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1569 ~         
1570 ~         input_table_entry {
1571 +             ch: 'u' as i32,
1572 +             interm: b"\0" as *const u8 as *const libc::c_char,
1573 +             type_0: INPUT_CSI_RCP as libc::c_int,
1574 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1585:9
     |
1579 | /         let mut init = input_state {
1580 | |             name: b"ground\0" as *const u8 as *const libc::c_char,
1581 | |             enter: Some(input_ground as unsafe extern "C" fn(*mut input_ctx) -> ()),
1582 | |             exit: None,
1583 | |             transitions: input_state_ground_table.as_ptr(),
1584 | |         };
     | |__________- unnecessary `let` binding
1585 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1579 ~         
1580 ~         input_state {
1581 +             name: b"ground\0" as *const u8 as *const libc::c_char,
1582 +             enter: Some(input_ground as unsafe extern "C" fn(*mut input_ctx) -> ()),
1583 +             exit: None,
1584 +             transitions: input_state_ground_table.as_ptr(),
1585 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1596:9
     |
1590 | /         let mut init = input_state {
1591 | |             name: b"esc_enter\0" as *const u8 as *const libc::c_char,
1592 | |             enter: Some(input_clear as unsafe extern "C" fn(*mut input_ctx) -> ()),
1593 | |             exit: None,
1594 | |             transitions: input_state_esc_enter_table.as_ptr(),
1595 | |         };
     | |__________- unnecessary `let` binding
1596 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1590 ~         
1591 ~         input_state {
1592 +             name: b"esc_enter\0" as *const u8 as *const libc::c_char,
1593 +             enter: Some(input_clear as unsafe extern "C" fn(*mut input_ctx) -> ()),
1594 +             exit: None,
1595 +             transitions: input_state_esc_enter_table.as_ptr(),
1596 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1607:9
     |
1601 | /         let mut init = input_state {
1602 | |             name: b"esc_intermediate\0" as *const u8 as *const libc::c_char,
1603 | |             enter: None,
1604 | |             exit: None,
1605 | |             transitions: input_state_esc_intermediate_table.as_ptr(),
1606 | |         };
     | |__________- unnecessary `let` binding
1607 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1601 ~         
1602 ~         input_state {
1603 +             name: b"esc_intermediate\0" as *const u8 as *const libc::c_char,
1604 +             enter: None,
1605 +             exit: None,
1606 +             transitions: input_state_esc_intermediate_table.as_ptr(),
1607 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1618:9
     |
1612 | /         let mut init = input_state {
1613 | |             name: b"csi_enter\0" as *const u8 as *const libc::c_char,
1614 | |             enter: Some(input_clear as unsafe extern "C" fn(*mut input_ctx) -> ()),
1615 | |             exit: None,
1616 | |             transitions: input_state_csi_enter_table.as_ptr(),
1617 | |         };
     | |__________- unnecessary `let` binding
1618 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1612 ~         
1613 ~         input_state {
1614 +             name: b"csi_enter\0" as *const u8 as *const libc::c_char,
1615 +             enter: Some(input_clear as unsafe extern "C" fn(*mut input_ctx) -> ()),
1616 +             exit: None,
1617 +             transitions: input_state_csi_enter_table.as_ptr(),
1618 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1629:9
     |
1623 | /         let mut init = input_state {
1624 | |             name: b"csi_parameter\0" as *const u8 as *const libc::c_char,
1625 | |             enter: None,
1626 | |             exit: None,
1627 | |             transitions: input_state_csi_parameter_table.as_ptr(),
1628 | |         };
     | |__________- unnecessary `let` binding
1629 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1623 ~         
1624 ~         input_state {
1625 +             name: b"csi_parameter\0" as *const u8 as *const libc::c_char,
1626 +             enter: None,
1627 +             exit: None,
1628 +             transitions: input_state_csi_parameter_table.as_ptr(),
1629 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1640:9
     |
1634 | /         let mut init = input_state {
1635 | |             name: b"csi_intermediate\0" as *const u8 as *const libc::c_char,
1636 | |             enter: None,
1637 | |             exit: None,
1638 | |             transitions: input_state_csi_intermediate_table.as_ptr(),
1639 | |         };
     | |__________- unnecessary `let` binding
1640 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1634 ~         
1635 ~         input_state {
1636 +             name: b"csi_intermediate\0" as *const u8 as *const libc::c_char,
1637 +             enter: None,
1638 +             exit: None,
1639 +             transitions: input_state_csi_intermediate_table.as_ptr(),
1640 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1651:9
     |
1645 | /         let mut init = input_state {
1646 | |             name: b"csi_ignore\0" as *const u8 as *const libc::c_char,
1647 | |             enter: None,
1648 | |             exit: None,
1649 | |             transitions: input_state_csi_ignore_table.as_ptr(),
1650 | |         };
     | |__________- unnecessary `let` binding
1651 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1645 ~         
1646 ~         input_state {
1647 +             name: b"csi_ignore\0" as *const u8 as *const libc::c_char,
1648 +             enter: None,
1649 +             exit: None,
1650 +             transitions: input_state_csi_ignore_table.as_ptr(),
1651 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1662:9
     |
1656 | /         let mut init = input_state {
1657 | |             name: b"dcs_enter\0" as *const u8 as *const libc::c_char,
1658 | |             enter: Some(input_enter_dcs as unsafe extern "C" fn(*mut input_ctx) -> ()),
1659 | |             exit: None,
1660 | |             transitions: input_state_dcs_enter_table.as_ptr(),
1661 | |         };
     | |__________- unnecessary `let` binding
1662 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1656 ~         
1657 ~         input_state {
1658 +             name: b"dcs_enter\0" as *const u8 as *const libc::c_char,
1659 +             enter: Some(input_enter_dcs as unsafe extern "C" fn(*mut input_ctx) -> ()),
1660 +             exit: None,
1661 +             transitions: input_state_dcs_enter_table.as_ptr(),
1662 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1673:9
     |
1667 | /         let mut init = input_state {
1668 | |             name: b"dcs_parameter\0" as *const u8 as *const libc::c_char,
1669 | |             enter: None,
1670 | |             exit: None,
1671 | |             transitions: input_state_dcs_parameter_table.as_ptr(),
1672 | |         };
     | |__________- unnecessary `let` binding
1673 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1667 ~         
1668 ~         input_state {
1669 +             name: b"dcs_parameter\0" as *const u8 as *const libc::c_char,
1670 +             enter: None,
1671 +             exit: None,
1672 +             transitions: input_state_dcs_parameter_table.as_ptr(),
1673 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1684:9
     |
1678 | /         let mut init = input_state {
1679 | |             name: b"dcs_intermediate\0" as *const u8 as *const libc::c_char,
1680 | |             enter: None,
1681 | |             exit: None,
1682 | |             transitions: input_state_dcs_intermediate_table.as_ptr(),
1683 | |         };
     | |__________- unnecessary `let` binding
1684 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1678 ~         
1679 ~         input_state {
1680 +             name: b"dcs_intermediate\0" as *const u8 as *const libc::c_char,
1681 +             enter: None,
1682 +             exit: None,
1683 +             transitions: input_state_dcs_intermediate_table.as_ptr(),
1684 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1695:9
     |
1689 | /         let mut init = input_state {
1690 | |             name: b"dcs_handler\0" as *const u8 as *const libc::c_char,
1691 | |             enter: None,
1692 | |             exit: None,
1693 | |             transitions: input_state_dcs_handler_table.as_ptr(),
1694 | |         };
     | |__________- unnecessary `let` binding
1695 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1689 ~         
1690 ~         input_state {
1691 +             name: b"dcs_handler\0" as *const u8 as *const libc::c_char,
1692 +             enter: None,
1693 +             exit: None,
1694 +             transitions: input_state_dcs_handler_table.as_ptr(),
1695 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1706:9
     |
1700 | /         let mut init = input_state {
1701 | |             name: b"dcs_escape\0" as *const u8 as *const libc::c_char,
1702 | |             enter: None,
1703 | |             exit: None,
1704 | |             transitions: input_state_dcs_escape_table.as_ptr(),
1705 | |         };
     | |__________- unnecessary `let` binding
1706 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1700 ~         
1701 ~         input_state {
1702 +             name: b"dcs_escape\0" as *const u8 as *const libc::c_char,
1703 +             enter: None,
1704 +             exit: None,
1705 +             transitions: input_state_dcs_escape_table.as_ptr(),
1706 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1717:9
     |
1711 | /         let mut init = input_state {
1712 | |             name: b"dcs_ignore\0" as *const u8 as *const libc::c_char,
1713 | |             enter: None,
1714 | |             exit: None,
1715 | |             transitions: input_state_dcs_ignore_table.as_ptr(),
1716 | |         };
     | |__________- unnecessary `let` binding
1717 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1711 ~         
1712 ~         input_state {
1713 +             name: b"dcs_ignore\0" as *const u8 as *const libc::c_char,
1714 +             enter: None,
1715 +             exit: None,
1716 +             transitions: input_state_dcs_ignore_table.as_ptr(),
1717 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1728:9
     |
1722 | /         let mut init = input_state {
1723 | |             name: b"osc_string\0" as *const u8 as *const libc::c_char,
1724 | |             enter: Some(input_enter_osc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1725 | |             exit: Some(input_exit_osc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1726 | |             transitions: input_state_osc_string_table.as_ptr(),
1727 | |         };
     | |__________- unnecessary `let` binding
1728 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1722 ~         
1723 ~         input_state {
1724 +             name: b"osc_string\0" as *const u8 as *const libc::c_char,
1725 +             enter: Some(input_enter_osc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1726 +             exit: Some(input_exit_osc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1727 +             transitions: input_state_osc_string_table.as_ptr(),
1728 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1739:9
     |
1733 | /         let mut init = input_state {
1734 | |             name: b"apc_string\0" as *const u8 as *const libc::c_char,
1735 | |             enter: Some(input_enter_apc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1736 | |             exit: Some(input_exit_apc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1737 | |             transitions: input_state_apc_string_table.as_ptr(),
1738 | |         };
     | |__________- unnecessary `let` binding
1739 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1733 ~         
1734 ~         input_state {
1735 +             name: b"apc_string\0" as *const u8 as *const libc::c_char,
1736 +             enter: Some(input_enter_apc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1737 +             exit: Some(input_exit_apc as unsafe extern "C" fn(*mut input_ctx) -> ()),
1738 +             transitions: input_state_apc_string_table.as_ptr(),
1739 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1752:9
     |
1744 | /         let mut init = input_state {
1745 | |             name: b"rename_string\0" as *const u8 as *const libc::c_char,
1746 | |             enter: Some(
1747 | |                 input_enter_rename as unsafe extern "C" fn(*mut input_ctx) -> (),
...    |
1750 | |             transitions: input_state_rename_string_table.as_ptr(),
1751 | |         };
     | |__________- unnecessary `let` binding
1752 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1744 ~         
1745 ~         input_state {
1746 +             name: b"rename_string\0" as *const u8 as *const libc::c_char,
1747 +             enter: Some(
1748 +                 input_enter_rename as unsafe extern "C" fn(*mut input_ctx) -> (),
1749 +             ),
1750 +             exit: Some(input_exit_rename as unsafe extern "C" fn(*mut input_ctx) -> ()),
1751 +             transitions: input_state_rename_string_table.as_ptr(),
1752 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1765:9
     |
1757 | /         let mut init = input_state {
1758 | |             name: b"consume_st\0" as *const u8 as *const libc::c_char,
1759 | |             enter: Some(
1760 | |                 input_enter_rename as unsafe extern "C" fn(*mut input_ctx) -> (),
...    |
1763 | |             transitions: input_state_consume_st_table.as_ptr(),
1764 | |         };
     | |__________- unnecessary `let` binding
1765 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1757 ~         
1758 ~         input_state {
1759 +             name: b"consume_st\0" as *const u8 as *const libc::c_char,
1760 +             enter: Some(
1761 +                 input_enter_rename as unsafe extern "C" fn(*mut input_ctx) -> (),
1762 +             ),
1763 +             exit: None,
1764 +             transitions: input_state_consume_st_table.as_ptr(),
1765 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1780:13
     |
1771 | /             let mut init = input_transition {
1772 | |                 first: 0x18 as libc::c_int,
1773 | |                 last: 0x18 as libc::c_int,
1774 | |                 handler: Some(
...    |
1778 | |                 state: &input_state_ground as *const input_state,
1779 | |             };
     | |______________- unnecessary `let` binding
1780 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1771 ~             
1772 ~             input_transition {
1773 +                 first: 0x18 as libc::c_int,
1774 +                 last: 0x18 as libc::c_int,
1775 +                 handler: Some(
1776 +                     input_c0_dispatch
1777 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1778 +                 ),
1779 +                 state: &input_state_ground as *const input_state,
1780 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1792:13
     |
1783 | /             let mut init = input_transition {
1784 | |                 first: 0x1a as libc::c_int,
1785 | |                 last: 0x1a as libc::c_int,
1786 | |                 handler: Some(
...    |
1790 | |                 state: &input_state_ground as *const input_state,
1791 | |             };
     | |______________- unnecessary `let` binding
1792 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1783 ~             
1784 ~             input_transition {
1785 +                 first: 0x1a as libc::c_int,
1786 +                 last: 0x1a as libc::c_int,
1787 +                 handler: Some(
1788 +                     input_c0_dispatch
1789 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1790 +                 ),
1791 +                 state: &input_state_ground as *const input_state,
1792 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1801:13
     |
1795 | /             let mut init = input_transition {
1796 | |                 first: 0x1b as libc::c_int,
1797 | |                 last: 0x1b as libc::c_int,
1798 | |                 handler: None,
1799 | |                 state: &input_state_esc_enter as *const input_state,
1800 | |             };
     | |______________- unnecessary `let` binding
1801 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1795 ~             
1796 ~             input_transition {
1797 +                 first: 0x1b as libc::c_int,
1798 +                 last: 0x1b as libc::c_int,
1799 +                 handler: None,
1800 +                 state: &input_state_esc_enter as *const input_state,
1801 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1813:13
     |
1804 | /             let mut init = input_transition {
1805 | |                 first: 0 as libc::c_int,
1806 | |                 last: 0x17 as libc::c_int,
1807 | |                 handler: Some(
...    |
1811 | |                 state: 0 as *const input_state,
1812 | |             };
     | |______________- unnecessary `let` binding
1813 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1804 ~             
1805 ~             input_transition {
1806 +                 first: 0 as libc::c_int,
1807 +                 last: 0x17 as libc::c_int,
1808 +                 handler: Some(
1809 +                     input_c0_dispatch
1810 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1811 +                 ),
1812 +                 state: 0 as *const input_state,
1813 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1825:13
     |
1816 | /             let mut init = input_transition {
1817 | |                 first: 0x19 as libc::c_int,
1818 | |                 last: 0x19 as libc::c_int,
1819 | |                 handler: Some(
...    |
1823 | |                 state: 0 as *const input_state,
1824 | |             };
     | |______________- unnecessary `let` binding
1825 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1816 ~             
1817 ~             input_transition {
1818 +                 first: 0x19 as libc::c_int,
1819 +                 last: 0x19 as libc::c_int,
1820 +                 handler: Some(
1821 +                     input_c0_dispatch
1822 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1823 +                 ),
1824 +                 state: 0 as *const input_state,
1825 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1837:13
     |
1828 | /             let mut init = input_transition {
1829 | |                 first: 0x1c as libc::c_int,
1830 | |                 last: 0x1f as libc::c_int,
1831 | |                 handler: Some(
...    |
1835 | |                 state: 0 as *const input_state,
1836 | |             };
     | |______________- unnecessary `let` binding
1837 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1828 ~             
1829 ~             input_transition {
1830 +                 first: 0x1c as libc::c_int,
1831 +                 last: 0x1f as libc::c_int,
1832 +                 handler: Some(
1833 +                     input_c0_dispatch
1834 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1835 +                 ),
1836 +                 state: 0 as *const input_state,
1837 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1848:13
     |
1840 | /             let mut init = input_transition {
1841 | |                 first: 0x20 as libc::c_int,
1842 | |                 last: 0x7e as libc::c_int,
1843 | |                 handler: Some(
...    |
1846 | |                 state: 0 as *const input_state,
1847 | |             };
     | |______________- unnecessary `let` binding
1848 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1840 ~             
1841 ~             input_transition {
1842 +                 first: 0x20 as libc::c_int,
1843 +                 last: 0x7e as libc::c_int,
1844 +                 handler: Some(
1845 +                     input_print as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1846 +                 ),
1847 +                 state: 0 as *const input_state,
1848 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1857:13
     |
1851 | /             let mut init = input_transition {
1852 | |                 first: 0x7f as libc::c_int,
1853 | |                 last: 0x7f as libc::c_int,
1854 | |                 handler: None,
1855 | |                 state: 0 as *const input_state,
1856 | |             };
     | |______________- unnecessary `let` binding
1857 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1851 ~             
1852 ~             input_transition {
1853 +                 first: 0x7f as libc::c_int,
1854 +                 last: 0x7f as libc::c_int,
1855 +                 handler: None,
1856 +                 state: 0 as *const input_state,
1857 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1869:13
     |
1860 | /             let mut init = input_transition {
1861 | |                 first: 0x80 as libc::c_int,
1862 | |                 last: 0xff as libc::c_int,
1863 | |                 handler: Some(
...    |
1867 | |                 state: 0 as *const input_state,
1868 | |             };
     | |______________- unnecessary `let` binding
1869 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1860 ~             
1861 ~             input_transition {
1862 +                 first: 0x80 as libc::c_int,
1863 +                 last: 0xff as libc::c_int,
1864 +                 handler: Some(
1865 +                     input_top_bit_set
1866 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1867 +                 ),
1868 +                 state: 0 as *const input_state,
1869 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1878:13
     |
1872 | /             let mut init = input_transition {
1873 | |                 first: -(1 as libc::c_int),
1874 | |                 last: -(1 as libc::c_int),
1875 | |                 handler: None,
1876 | |                 state: 0 as *const input_state,
1877 | |             };
     | |______________- unnecessary `let` binding
1878 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1872 ~             
1873 ~             input_transition {
1874 +                 first: -(1 as libc::c_int),
1875 +                 last: -(1 as libc::c_int),
1876 +                 handler: None,
1877 +                 state: 0 as *const input_state,
1878 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1894:13
     |
1885 | /             let mut init = input_transition {
1886 | |                 first: 0x18 as libc::c_int,
1887 | |                 last: 0x18 as libc::c_int,
1888 | |                 handler: Some(
...    |
1892 | |                 state: &input_state_ground as *const input_state,
1893 | |             };
     | |______________- unnecessary `let` binding
1894 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1885 ~             
1886 ~             input_transition {
1887 +                 first: 0x18 as libc::c_int,
1888 +                 last: 0x18 as libc::c_int,
1889 +                 handler: Some(
1890 +                     input_c0_dispatch
1891 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1892 +                 ),
1893 +                 state: &input_state_ground as *const input_state,
1894 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1906:13
     |
1897 | /             let mut init = input_transition {
1898 | |                 first: 0x1a as libc::c_int,
1899 | |                 last: 0x1a as libc::c_int,
1900 | |                 handler: Some(
...    |
1904 | |                 state: &input_state_ground as *const input_state,
1905 | |             };
     | |______________- unnecessary `let` binding
1906 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1897 ~             
1898 ~             input_transition {
1899 +                 first: 0x1a as libc::c_int,
1900 +                 last: 0x1a as libc::c_int,
1901 +                 handler: Some(
1902 +                     input_c0_dispatch
1903 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1904 +                 ),
1905 +                 state: &input_state_ground as *const input_state,
1906 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1915:13
     |
1909 | /             let mut init = input_transition {
1910 | |                 first: 0x1b as libc::c_int,
1911 | |                 last: 0x1b as libc::c_int,
1912 | |                 handler: None,
1913 | |                 state: &input_state_esc_enter as *const input_state,
1914 | |             };
     | |______________- unnecessary `let` binding
1915 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1909 ~             
1910 ~             input_transition {
1911 +                 first: 0x1b as libc::c_int,
1912 +                 last: 0x1b as libc::c_int,
1913 +                 handler: None,
1914 +                 state: &input_state_esc_enter as *const input_state,
1915 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1927:13
     |
1918 | /             let mut init = input_transition {
1919 | |                 first: 0 as libc::c_int,
1920 | |                 last: 0x17 as libc::c_int,
1921 | |                 handler: Some(
...    |
1925 | |                 state: 0 as *const input_state,
1926 | |             };
     | |______________- unnecessary `let` binding
1927 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1918 ~             
1919 ~             input_transition {
1920 +                 first: 0 as libc::c_int,
1921 +                 last: 0x17 as libc::c_int,
1922 +                 handler: Some(
1923 +                     input_c0_dispatch
1924 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1925 +                 ),
1926 +                 state: 0 as *const input_state,
1927 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1939:13
     |
1930 | /             let mut init = input_transition {
1931 | |                 first: 0x19 as libc::c_int,
1932 | |                 last: 0x19 as libc::c_int,
1933 | |                 handler: Some(
...    |
1937 | |                 state: 0 as *const input_state,
1938 | |             };
     | |______________- unnecessary `let` binding
1939 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1930 ~             
1931 ~             input_transition {
1932 +                 first: 0x19 as libc::c_int,
1933 +                 last: 0x19 as libc::c_int,
1934 +                 handler: Some(
1935 +                     input_c0_dispatch
1936 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1937 +                 ),
1938 +                 state: 0 as *const input_state,
1939 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1951:13
     |
1942 | /             let mut init = input_transition {
1943 | |                 first: 0x1c as libc::c_int,
1944 | |                 last: 0x1f as libc::c_int,
1945 | |                 handler: Some(
...    |
1949 | |                 state: 0 as *const input_state,
1950 | |             };
     | |______________- unnecessary `let` binding
1951 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1942 ~             
1943 ~             input_transition {
1944 +                 first: 0x1c as libc::c_int,
1945 +                 last: 0x1f as libc::c_int,
1946 +                 handler: Some(
1947 +                     input_c0_dispatch
1948 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1949 +                 ),
1950 +                 state: 0 as *const input_state,
1951 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1963:13
     |
1954 | /             let mut init = input_transition {
1955 | |                 first: 0x20 as libc::c_int,
1956 | |                 last: 0x2f as libc::c_int,
1957 | |                 handler: Some(
...    |
1961 | |                 state: &input_state_esc_intermediate as *const input_state,
1962 | |             };
     | |______________- unnecessary `let` binding
1963 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1954 ~             
1955 ~             input_transition {
1956 +                 first: 0x20 as libc::c_int,
1957 +                 last: 0x2f as libc::c_int,
1958 +                 handler: Some(
1959 +                     input_intermediate
1960 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1961 +                 ),
1962 +                 state: &input_state_esc_intermediate as *const input_state,
1963 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1975:13
     |
1966 | /             let mut init = input_transition {
1967 | |                 first: 0x30 as libc::c_int,
1968 | |                 last: 0x4f as libc::c_int,
1969 | |                 handler: Some(
...    |
1973 | |                 state: &input_state_ground as *const input_state,
1974 | |             };
     | |______________- unnecessary `let` binding
1975 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1966 ~             
1967 ~             input_transition {
1968 +                 first: 0x30 as libc::c_int,
1969 +                 last: 0x4f as libc::c_int,
1970 +                 handler: Some(
1971 +                     input_esc_dispatch
1972 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1973 +                 ),
1974 +                 state: &input_state_ground as *const input_state,
1975 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1984:13
     |
1978 | /             let mut init = input_transition {
1979 | |                 first: 0x50 as libc::c_int,
1980 | |                 last: 0x50 as libc::c_int,
1981 | |                 handler: None,
1982 | |                 state: &input_state_dcs_enter as *const input_state,
1983 | |             };
     | |______________- unnecessary `let` binding
1984 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1978 ~             
1979 ~             input_transition {
1980 +                 first: 0x50 as libc::c_int,
1981 +                 last: 0x50 as libc::c_int,
1982 +                 handler: None,
1983 +                 state: &input_state_dcs_enter as *const input_state,
1984 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:1996:13
     |
1987 | /             let mut init = input_transition {
1988 | |                 first: 0x51 as libc::c_int,
1989 | |                 last: 0x57 as libc::c_int,
1990 | |                 handler: Some(
...    |
1994 | |                 state: &input_state_ground as *const input_state,
1995 | |             };
     | |______________- unnecessary `let` binding
1996 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1987 ~             
1988 ~             input_transition {
1989 +                 first: 0x51 as libc::c_int,
1990 +                 last: 0x57 as libc::c_int,
1991 +                 handler: Some(
1992 +                     input_esc_dispatch
1993 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
1994 +                 ),
1995 +                 state: &input_state_ground as *const input_state,
1996 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2005:13
     |
1999 | /             let mut init = input_transition {
2000 | |                 first: 0x58 as libc::c_int,
2001 | |                 last: 0x58 as libc::c_int,
2002 | |                 handler: None,
2003 | |                 state: &input_state_consume_st as *const input_state,
2004 | |             };
     | |______________- unnecessary `let` binding
2005 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1999 ~             
2000 ~             input_transition {
2001 +                 first: 0x58 as libc::c_int,
2002 +                 last: 0x58 as libc::c_int,
2003 +                 handler: None,
2004 +                 state: &input_state_consume_st as *const input_state,
2005 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2017:13
     |
2008 | /             let mut init = input_transition {
2009 | |                 first: 0x59 as libc::c_int,
2010 | |                 last: 0x59 as libc::c_int,
2011 | |                 handler: Some(
...    |
2015 | |                 state: &input_state_ground as *const input_state,
2016 | |             };
     | |______________- unnecessary `let` binding
2017 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2008 ~             
2009 ~             input_transition {
2010 +                 first: 0x59 as libc::c_int,
2011 +                 last: 0x59 as libc::c_int,
2012 +                 handler: Some(
2013 +                     input_esc_dispatch
2014 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2015 +                 ),
2016 +                 state: &input_state_ground as *const input_state,
2017 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2029:13
     |
2020 | /             let mut init = input_transition {
2021 | |                 first: 0x5a as libc::c_int,
2022 | |                 last: 0x5a as libc::c_int,
2023 | |                 handler: Some(
...    |
2027 | |                 state: &input_state_ground as *const input_state,
2028 | |             };
     | |______________- unnecessary `let` binding
2029 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2020 ~             
2021 ~             input_transition {
2022 +                 first: 0x5a as libc::c_int,
2023 +                 last: 0x5a as libc::c_int,
2024 +                 handler: Some(
2025 +                     input_esc_dispatch
2026 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2027 +                 ),
2028 +                 state: &input_state_ground as *const input_state,
2029 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2038:13
     |
2032 | /             let mut init = input_transition {
2033 | |                 first: 0x5b as libc::c_int,
2034 | |                 last: 0x5b as libc::c_int,
2035 | |                 handler: None,
2036 | |                 state: &input_state_csi_enter as *const input_state,
2037 | |             };
     | |______________- unnecessary `let` binding
2038 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2032 ~             
2033 ~             input_transition {
2034 +                 first: 0x5b as libc::c_int,
2035 +                 last: 0x5b as libc::c_int,
2036 +                 handler: None,
2037 +                 state: &input_state_csi_enter as *const input_state,
2038 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2050:13
     |
2041 | /             let mut init = input_transition {
2042 | |                 first: 0x5c as libc::c_int,
2043 | |                 last: 0x5c as libc::c_int,
2044 | |                 handler: Some(
...    |
2048 | |                 state: &input_state_ground as *const input_state,
2049 | |             };
     | |______________- unnecessary `let` binding
2050 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2041 ~             
2042 ~             input_transition {
2043 +                 first: 0x5c as libc::c_int,
2044 +                 last: 0x5c as libc::c_int,
2045 +                 handler: Some(
2046 +                     input_esc_dispatch
2047 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2048 +                 ),
2049 +                 state: &input_state_ground as *const input_state,
2050 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2059:13
     |
2053 | /             let mut init = input_transition {
2054 | |                 first: 0x5d as libc::c_int,
2055 | |                 last: 0x5d as libc::c_int,
2056 | |                 handler: None,
2057 | |                 state: &input_state_osc_string as *const input_state,
2058 | |             };
     | |______________- unnecessary `let` binding
2059 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2053 ~             
2054 ~             input_transition {
2055 +                 first: 0x5d as libc::c_int,
2056 +                 last: 0x5d as libc::c_int,
2057 +                 handler: None,
2058 +                 state: &input_state_osc_string as *const input_state,
2059 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2068:13
     |
2062 | /             let mut init = input_transition {
2063 | |                 first: 0x5e as libc::c_int,
2064 | |                 last: 0x5e as libc::c_int,
2065 | |                 handler: None,
2066 | |                 state: &input_state_consume_st as *const input_state,
2067 | |             };
     | |______________- unnecessary `let` binding
2068 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2062 ~             
2063 ~             input_transition {
2064 +                 first: 0x5e as libc::c_int,
2065 +                 last: 0x5e as libc::c_int,
2066 +                 handler: None,
2067 +                 state: &input_state_consume_st as *const input_state,
2068 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2077:13
     |
2071 | /             let mut init = input_transition {
2072 | |                 first: 0x5f as libc::c_int,
2073 | |                 last: 0x5f as libc::c_int,
2074 | |                 handler: None,
2075 | |                 state: &input_state_apc_string as *const input_state,
2076 | |             };
     | |______________- unnecessary `let` binding
2077 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2071 ~             
2072 ~             input_transition {
2073 +                 first: 0x5f as libc::c_int,
2074 +                 last: 0x5f as libc::c_int,
2075 +                 handler: None,
2076 +                 state: &input_state_apc_string as *const input_state,
2077 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2089:13
     |
2080 | /             let mut init = input_transition {
2081 | |                 first: 0x60 as libc::c_int,
2082 | |                 last: 0x6a as libc::c_int,
2083 | |                 handler: Some(
...    |
2087 | |                 state: &input_state_ground as *const input_state,
2088 | |             };
     | |______________- unnecessary `let` binding
2089 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2080 ~             
2081 ~             input_transition {
2082 +                 first: 0x60 as libc::c_int,
2083 +                 last: 0x6a as libc::c_int,
2084 +                 handler: Some(
2085 +                     input_esc_dispatch
2086 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2087 +                 ),
2088 +                 state: &input_state_ground as *const input_state,
2089 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2098:13
     |
2092 | /             let mut init = input_transition {
2093 | |                 first: 0x6b as libc::c_int,
2094 | |                 last: 0x6b as libc::c_int,
2095 | |                 handler: None,
2096 | |                 state: &input_state_rename_string as *const input_state,
2097 | |             };
     | |______________- unnecessary `let` binding
2098 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2092 ~             
2093 ~             input_transition {
2094 +                 first: 0x6b as libc::c_int,
2095 +                 last: 0x6b as libc::c_int,
2096 +                 handler: None,
2097 +                 state: &input_state_rename_string as *const input_state,
2098 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2110:13
     |
2101 | /             let mut init = input_transition {
2102 | |                 first: 0x6c as libc::c_int,
2103 | |                 last: 0x7e as libc::c_int,
2104 | |                 handler: Some(
...    |
2108 | |                 state: &input_state_ground as *const input_state,
2109 | |             };
     | |______________- unnecessary `let` binding
2110 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2101 ~             
2102 ~             input_transition {
2103 +                 first: 0x6c as libc::c_int,
2104 +                 last: 0x7e as libc::c_int,
2105 +                 handler: Some(
2106 +                     input_esc_dispatch
2107 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2108 +                 ),
2109 +                 state: &input_state_ground as *const input_state,
2110 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2119:13
     |
2113 | /             let mut init = input_transition {
2114 | |                 first: 0x7f as libc::c_int,
2115 | |                 last: 0xff as libc::c_int,
2116 | |                 handler: None,
2117 | |                 state: 0 as *const input_state,
2118 | |             };
     | |______________- unnecessary `let` binding
2119 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2113 ~             
2114 ~             input_transition {
2115 +                 first: 0x7f as libc::c_int,
2116 +                 last: 0xff as libc::c_int,
2117 +                 handler: None,
2118 +                 state: 0 as *const input_state,
2119 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2128:13
     |
2122 | /             let mut init = input_transition {
2123 | |                 first: -(1 as libc::c_int),
2124 | |                 last: -(1 as libc::c_int),
2125 | |                 handler: None,
2126 | |                 state: 0 as *const input_state,
2127 | |             };
     | |______________- unnecessary `let` binding
2128 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2122 ~             
2123 ~             input_transition {
2124 +                 first: -(1 as libc::c_int),
2125 +                 last: -(1 as libc::c_int),
2126 +                 handler: None,
2127 +                 state: 0 as *const input_state,
2128 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2144:13
     |
2135 | /             let mut init = input_transition {
2136 | |                 first: 0x18 as libc::c_int,
2137 | |                 last: 0x18 as libc::c_int,
2138 | |                 handler: Some(
...    |
2142 | |                 state: &input_state_ground as *const input_state,
2143 | |             };
     | |______________- unnecessary `let` binding
2144 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2135 ~             
2136 ~             input_transition {
2137 +                 first: 0x18 as libc::c_int,
2138 +                 last: 0x18 as libc::c_int,
2139 +                 handler: Some(
2140 +                     input_c0_dispatch
2141 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2142 +                 ),
2143 +                 state: &input_state_ground as *const input_state,
2144 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2156:13
     |
2147 | /             let mut init = input_transition {
2148 | |                 first: 0x1a as libc::c_int,
2149 | |                 last: 0x1a as libc::c_int,
2150 | |                 handler: Some(
...    |
2154 | |                 state: &input_state_ground as *const input_state,
2155 | |             };
     | |______________- unnecessary `let` binding
2156 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2147 ~             
2148 ~             input_transition {
2149 +                 first: 0x1a as libc::c_int,
2150 +                 last: 0x1a as libc::c_int,
2151 +                 handler: Some(
2152 +                     input_c0_dispatch
2153 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2154 +                 ),
2155 +                 state: &input_state_ground as *const input_state,
2156 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2165:13
     |
2159 | /             let mut init = input_transition {
2160 | |                 first: 0x1b as libc::c_int,
2161 | |                 last: 0x1b as libc::c_int,
2162 | |                 handler: None,
2163 | |                 state: &input_state_esc_enter as *const input_state,
2164 | |             };
     | |______________- unnecessary `let` binding
2165 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2159 ~             
2160 ~             input_transition {
2161 +                 first: 0x1b as libc::c_int,
2162 +                 last: 0x1b as libc::c_int,
2163 +                 handler: None,
2164 +                 state: &input_state_esc_enter as *const input_state,
2165 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2177:13
     |
2168 | /             let mut init = input_transition {
2169 | |                 first: 0 as libc::c_int,
2170 | |                 last: 0x17 as libc::c_int,
2171 | |                 handler: Some(
...    |
2175 | |                 state: 0 as *const input_state,
2176 | |             };
     | |______________- unnecessary `let` binding
2177 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2168 ~             
2169 ~             input_transition {
2170 +                 first: 0 as libc::c_int,
2171 +                 last: 0x17 as libc::c_int,
2172 +                 handler: Some(
2173 +                     input_c0_dispatch
2174 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2175 +                 ),
2176 +                 state: 0 as *const input_state,
2177 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2189:13
     |
2180 | /             let mut init = input_transition {
2181 | |                 first: 0x19 as libc::c_int,
2182 | |                 last: 0x19 as libc::c_int,
2183 | |                 handler: Some(
...    |
2187 | |                 state: 0 as *const input_state,
2188 | |             };
     | |______________- unnecessary `let` binding
2189 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2180 ~             
2181 ~             input_transition {
2182 +                 first: 0x19 as libc::c_int,
2183 +                 last: 0x19 as libc::c_int,
2184 +                 handler: Some(
2185 +                     input_c0_dispatch
2186 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2187 +                 ),
2188 +                 state: 0 as *const input_state,
2189 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2201:13
     |
2192 | /             let mut init = input_transition {
2193 | |                 first: 0x1c as libc::c_int,
2194 | |                 last: 0x1f as libc::c_int,
2195 | |                 handler: Some(
...    |
2199 | |                 state: 0 as *const input_state,
2200 | |             };
     | |______________- unnecessary `let` binding
2201 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2192 ~             
2193 ~             input_transition {
2194 +                 first: 0x1c as libc::c_int,
2195 +                 last: 0x1f as libc::c_int,
2196 +                 handler: Some(
2197 +                     input_c0_dispatch
2198 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2199 +                 ),
2200 +                 state: 0 as *const input_state,
2201 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2213:13
     |
2204 | /             let mut init = input_transition {
2205 | |                 first: 0x20 as libc::c_int,
2206 | |                 last: 0x2f as libc::c_int,
2207 | |                 handler: Some(
...    |
2211 | |                 state: 0 as *const input_state,
2212 | |             };
     | |______________- unnecessary `let` binding
2213 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2204 ~             
2205 ~             input_transition {
2206 +                 first: 0x20 as libc::c_int,
2207 +                 last: 0x2f as libc::c_int,
2208 +                 handler: Some(
2209 +                     input_intermediate
2210 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2211 +                 ),
2212 +                 state: 0 as *const input_state,
2213 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2225:13
     |
2216 | /             let mut init = input_transition {
2217 | |                 first: 0x30 as libc::c_int,
2218 | |                 last: 0x7e as libc::c_int,
2219 | |                 handler: Some(
...    |
2223 | |                 state: &input_state_ground as *const input_state,
2224 | |             };
     | |______________- unnecessary `let` binding
2225 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2216 ~             
2217 ~             input_transition {
2218 +                 first: 0x30 as libc::c_int,
2219 +                 last: 0x7e as libc::c_int,
2220 +                 handler: Some(
2221 +                     input_esc_dispatch
2222 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2223 +                 ),
2224 +                 state: &input_state_ground as *const input_state,
2225 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2234:13
     |
2228 | /             let mut init = input_transition {
2229 | |                 first: 0x7f as libc::c_int,
2230 | |                 last: 0xff as libc::c_int,
2231 | |                 handler: None,
2232 | |                 state: 0 as *const input_state,
2233 | |             };
     | |______________- unnecessary `let` binding
2234 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2228 ~             
2229 ~             input_transition {
2230 +                 first: 0x7f as libc::c_int,
2231 +                 last: 0xff as libc::c_int,
2232 +                 handler: None,
2233 +                 state: 0 as *const input_state,
2234 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2243:13
     |
2237 | /             let mut init = input_transition {
2238 | |                 first: -(1 as libc::c_int),
2239 | |                 last: -(1 as libc::c_int),
2240 | |                 handler: None,
2241 | |                 state: 0 as *const input_state,
2242 | |             };
     | |______________- unnecessary `let` binding
2243 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2237 ~             
2238 ~             input_transition {
2239 +                 first: -(1 as libc::c_int),
2240 +                 last: -(1 as libc::c_int),
2241 +                 handler: None,
2242 +                 state: 0 as *const input_state,
2243 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2259:13
     |
2250 | /             let mut init = input_transition {
2251 | |                 first: 0x18 as libc::c_int,
2252 | |                 last: 0x18 as libc::c_int,
2253 | |                 handler: Some(
...    |
2257 | |                 state: &input_state_ground as *const input_state,
2258 | |             };
     | |______________- unnecessary `let` binding
2259 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2250 ~             
2251 ~             input_transition {
2252 +                 first: 0x18 as libc::c_int,
2253 +                 last: 0x18 as libc::c_int,
2254 +                 handler: Some(
2255 +                     input_c0_dispatch
2256 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2257 +                 ),
2258 +                 state: &input_state_ground as *const input_state,
2259 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2271:13
     |
2262 | /             let mut init = input_transition {
2263 | |                 first: 0x1a as libc::c_int,
2264 | |                 last: 0x1a as libc::c_int,
2265 | |                 handler: Some(
...    |
2269 | |                 state: &input_state_ground as *const input_state,
2270 | |             };
     | |______________- unnecessary `let` binding
2271 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2262 ~             
2263 ~             input_transition {
2264 +                 first: 0x1a as libc::c_int,
2265 +                 last: 0x1a as libc::c_int,
2266 +                 handler: Some(
2267 +                     input_c0_dispatch
2268 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2269 +                 ),
2270 +                 state: &input_state_ground as *const input_state,
2271 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2280:13
     |
2274 | /             let mut init = input_transition {
2275 | |                 first: 0x1b as libc::c_int,
2276 | |                 last: 0x1b as libc::c_int,
2277 | |                 handler: None,
2278 | |                 state: &input_state_esc_enter as *const input_state,
2279 | |             };
     | |______________- unnecessary `let` binding
2280 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2274 ~             
2275 ~             input_transition {
2276 +                 first: 0x1b as libc::c_int,
2277 +                 last: 0x1b as libc::c_int,
2278 +                 handler: None,
2279 +                 state: &input_state_esc_enter as *const input_state,
2280 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2292:13
     |
2283 | /             let mut init = input_transition {
2284 | |                 first: 0 as libc::c_int,
2285 | |                 last: 0x17 as libc::c_int,
2286 | |                 handler: Some(
...    |
2290 | |                 state: 0 as *const input_state,
2291 | |             };
     | |______________- unnecessary `let` binding
2292 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2283 ~             
2284 ~             input_transition {
2285 +                 first: 0 as libc::c_int,
2286 +                 last: 0x17 as libc::c_int,
2287 +                 handler: Some(
2288 +                     input_c0_dispatch
2289 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2290 +                 ),
2291 +                 state: 0 as *const input_state,
2292 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2304:13
     |
2295 | /             let mut init = input_transition {
2296 | |                 first: 0x19 as libc::c_int,
2297 | |                 last: 0x19 as libc::c_int,
2298 | |                 handler: Some(
...    |
2302 | |                 state: 0 as *const input_state,
2303 | |             };
     | |______________- unnecessary `let` binding
2304 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2295 ~             
2296 ~             input_transition {
2297 +                 first: 0x19 as libc::c_int,
2298 +                 last: 0x19 as libc::c_int,
2299 +                 handler: Some(
2300 +                     input_c0_dispatch
2301 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2302 +                 ),
2303 +                 state: 0 as *const input_state,
2304 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2316:13
     |
2307 | /             let mut init = input_transition {
2308 | |                 first: 0x1c as libc::c_int,
2309 | |                 last: 0x1f as libc::c_int,
2310 | |                 handler: Some(
...    |
2314 | |                 state: 0 as *const input_state,
2315 | |             };
     | |______________- unnecessary `let` binding
2316 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2307 ~             
2308 ~             input_transition {
2309 +                 first: 0x1c as libc::c_int,
2310 +                 last: 0x1f as libc::c_int,
2311 +                 handler: Some(
2312 +                     input_c0_dispatch
2313 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2314 +                 ),
2315 +                 state: 0 as *const input_state,
2316 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2328:13
     |
2319 | /             let mut init = input_transition {
2320 | |                 first: 0x20 as libc::c_int,
2321 | |                 last: 0x2f as libc::c_int,
2322 | |                 handler: Some(
...    |
2326 | |                 state: &input_state_csi_intermediate as *const input_state,
2327 | |             };
     | |______________- unnecessary `let` binding
2328 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2319 ~             
2320 ~             input_transition {
2321 +                 first: 0x20 as libc::c_int,
2322 +                 last: 0x2f as libc::c_int,
2323 +                 handler: Some(
2324 +                     input_intermediate
2325 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2326 +                 ),
2327 +                 state: &input_state_csi_intermediate as *const input_state,
2328 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2340:13
     |
2331 | /             let mut init = input_transition {
2332 | |                 first: 0x30 as libc::c_int,
2333 | |                 last: 0x39 as libc::c_int,
2334 | |                 handler: Some(
...    |
2338 | |                 state: &input_state_csi_parameter as *const input_state,
2339 | |             };
     | |______________- unnecessary `let` binding
2340 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2331 ~             
2332 ~             input_transition {
2333 +                 first: 0x30 as libc::c_int,
2334 +                 last: 0x39 as libc::c_int,
2335 +                 handler: Some(
2336 +                     input_parameter
2337 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2338 +                 ),
2339 +                 state: &input_state_csi_parameter as *const input_state,
2340 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2352:13
     |
2343 | /             let mut init = input_transition {
2344 | |                 first: 0x3a as libc::c_int,
2345 | |                 last: 0x3a as libc::c_int,
2346 | |                 handler: Some(
...    |
2350 | |                 state: &input_state_csi_parameter as *const input_state,
2351 | |             };
     | |______________- unnecessary `let` binding
2352 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2343 ~             
2344 ~             input_transition {
2345 +                 first: 0x3a as libc::c_int,
2346 +                 last: 0x3a as libc::c_int,
2347 +                 handler: Some(
2348 +                     input_parameter
2349 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2350 +                 ),
2351 +                 state: &input_state_csi_parameter as *const input_state,
2352 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2364:13
     |
2355 | /             let mut init = input_transition {
2356 | |                 first: 0x3b as libc::c_int,
2357 | |                 last: 0x3b as libc::c_int,
2358 | |                 handler: Some(
...    |
2362 | |                 state: &input_state_csi_parameter as *const input_state,
2363 | |             };
     | |______________- unnecessary `let` binding
2364 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2355 ~             
2356 ~             input_transition {
2357 +                 first: 0x3b as libc::c_int,
2358 +                 last: 0x3b as libc::c_int,
2359 +                 handler: Some(
2360 +                     input_parameter
2361 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2362 +                 ),
2363 +                 state: &input_state_csi_parameter as *const input_state,
2364 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2376:13
     |
2367 | /             let mut init = input_transition {
2368 | |                 first: 0x3c as libc::c_int,
2369 | |                 last: 0x3f as libc::c_int,
2370 | |                 handler: Some(
...    |
2374 | |                 state: &input_state_csi_parameter as *const input_state,
2375 | |             };
     | |______________- unnecessary `let` binding
2376 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2367 ~             
2368 ~             input_transition {
2369 +                 first: 0x3c as libc::c_int,
2370 +                 last: 0x3f as libc::c_int,
2371 +                 handler: Some(
2372 +                     input_intermediate
2373 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2374 +                 ),
2375 +                 state: &input_state_csi_parameter as *const input_state,
2376 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2388:13
     |
2379 | /             let mut init = input_transition {
2380 | |                 first: 0x40 as libc::c_int,
2381 | |                 last: 0x7e as libc::c_int,
2382 | |                 handler: Some(
...    |
2386 | |                 state: &input_state_ground as *const input_state,
2387 | |             };
     | |______________- unnecessary `let` binding
2388 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2379 ~             
2380 ~             input_transition {
2381 +                 first: 0x40 as libc::c_int,
2382 +                 last: 0x7e as libc::c_int,
2383 +                 handler: Some(
2384 +                     input_csi_dispatch
2385 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2386 +                 ),
2387 +                 state: &input_state_ground as *const input_state,
2388 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2397:13
     |
2391 | /             let mut init = input_transition {
2392 | |                 first: 0x7f as libc::c_int,
2393 | |                 last: 0xff as libc::c_int,
2394 | |                 handler: None,
2395 | |                 state: 0 as *const input_state,
2396 | |             };
     | |______________- unnecessary `let` binding
2397 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2391 ~             
2392 ~             input_transition {
2393 +                 first: 0x7f as libc::c_int,
2394 +                 last: 0xff as libc::c_int,
2395 +                 handler: None,
2396 +                 state: 0 as *const input_state,
2397 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2406:13
     |
2400 | /             let mut init = input_transition {
2401 | |                 first: -(1 as libc::c_int),
2402 | |                 last: -(1 as libc::c_int),
2403 | |                 handler: None,
2404 | |                 state: 0 as *const input_state,
2405 | |             };
     | |______________- unnecessary `let` binding
2406 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2400 ~             
2401 ~             input_transition {
2402 +                 first: -(1 as libc::c_int),
2403 +                 last: -(1 as libc::c_int),
2404 +                 handler: None,
2405 +                 state: 0 as *const input_state,
2406 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2422:13
     |
2413 | /             let mut init = input_transition {
2414 | |                 first: 0x18 as libc::c_int,
2415 | |                 last: 0x18 as libc::c_int,
2416 | |                 handler: Some(
...    |
2420 | |                 state: &input_state_ground as *const input_state,
2421 | |             };
     | |______________- unnecessary `let` binding
2422 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2413 ~             
2414 ~             input_transition {
2415 +                 first: 0x18 as libc::c_int,
2416 +                 last: 0x18 as libc::c_int,
2417 +                 handler: Some(
2418 +                     input_c0_dispatch
2419 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2420 +                 ),
2421 +                 state: &input_state_ground as *const input_state,
2422 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2434:13
     |
2425 | /             let mut init = input_transition {
2426 | |                 first: 0x1a as libc::c_int,
2427 | |                 last: 0x1a as libc::c_int,
2428 | |                 handler: Some(
...    |
2432 | |                 state: &input_state_ground as *const input_state,
2433 | |             };
     | |______________- unnecessary `let` binding
2434 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2425 ~             
2426 ~             input_transition {
2427 +                 first: 0x1a as libc::c_int,
2428 +                 last: 0x1a as libc::c_int,
2429 +                 handler: Some(
2430 +                     input_c0_dispatch
2431 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2432 +                 ),
2433 +                 state: &input_state_ground as *const input_state,
2434 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2443:13
     |
2437 | /             let mut init = input_transition {
2438 | |                 first: 0x1b as libc::c_int,
2439 | |                 last: 0x1b as libc::c_int,
2440 | |                 handler: None,
2441 | |                 state: &input_state_esc_enter as *const input_state,
2442 | |             };
     | |______________- unnecessary `let` binding
2443 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2437 ~             
2438 ~             input_transition {
2439 +                 first: 0x1b as libc::c_int,
2440 +                 last: 0x1b as libc::c_int,
2441 +                 handler: None,
2442 +                 state: &input_state_esc_enter as *const input_state,
2443 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2455:13
     |
2446 | /             let mut init = input_transition {
2447 | |                 first: 0 as libc::c_int,
2448 | |                 last: 0x17 as libc::c_int,
2449 | |                 handler: Some(
...    |
2453 | |                 state: 0 as *const input_state,
2454 | |             };
     | |______________- unnecessary `let` binding
2455 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2446 ~             
2447 ~             input_transition {
2448 +                 first: 0 as libc::c_int,
2449 +                 last: 0x17 as libc::c_int,
2450 +                 handler: Some(
2451 +                     input_c0_dispatch
2452 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2453 +                 ),
2454 +                 state: 0 as *const input_state,
2455 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2467:13
     |
2458 | /             let mut init = input_transition {
2459 | |                 first: 0x19 as libc::c_int,
2460 | |                 last: 0x19 as libc::c_int,
2461 | |                 handler: Some(
...    |
2465 | |                 state: 0 as *const input_state,
2466 | |             };
     | |______________- unnecessary `let` binding
2467 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2458 ~             
2459 ~             input_transition {
2460 +                 first: 0x19 as libc::c_int,
2461 +                 last: 0x19 as libc::c_int,
2462 +                 handler: Some(
2463 +                     input_c0_dispatch
2464 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2465 +                 ),
2466 +                 state: 0 as *const input_state,
2467 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2479:13
     |
2470 | /             let mut init = input_transition {
2471 | |                 first: 0x1c as libc::c_int,
2472 | |                 last: 0x1f as libc::c_int,
2473 | |                 handler: Some(
...    |
2477 | |                 state: 0 as *const input_state,
2478 | |             };
     | |______________- unnecessary `let` binding
2479 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2470 ~             
2471 ~             input_transition {
2472 +                 first: 0x1c as libc::c_int,
2473 +                 last: 0x1f as libc::c_int,
2474 +                 handler: Some(
2475 +                     input_c0_dispatch
2476 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2477 +                 ),
2478 +                 state: 0 as *const input_state,
2479 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2491:13
     |
2482 | /             let mut init = input_transition {
2483 | |                 first: 0x20 as libc::c_int,
2484 | |                 last: 0x2f as libc::c_int,
2485 | |                 handler: Some(
...    |
2489 | |                 state: &input_state_csi_intermediate as *const input_state,
2490 | |             };
     | |______________- unnecessary `let` binding
2491 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2482 ~             
2483 ~             input_transition {
2484 +                 first: 0x20 as libc::c_int,
2485 +                 last: 0x2f as libc::c_int,
2486 +                 handler: Some(
2487 +                     input_intermediate
2488 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2489 +                 ),
2490 +                 state: &input_state_csi_intermediate as *const input_state,
2491 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2503:13
     |
2494 | /             let mut init = input_transition {
2495 | |                 first: 0x30 as libc::c_int,
2496 | |                 last: 0x39 as libc::c_int,
2497 | |                 handler: Some(
...    |
2501 | |                 state: 0 as *const input_state,
2502 | |             };
     | |______________- unnecessary `let` binding
2503 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2494 ~             
2495 ~             input_transition {
2496 +                 first: 0x30 as libc::c_int,
2497 +                 last: 0x39 as libc::c_int,
2498 +                 handler: Some(
2499 +                     input_parameter
2500 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2501 +                 ),
2502 +                 state: 0 as *const input_state,
2503 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2515:13
     |
2506 | /             let mut init = input_transition {
2507 | |                 first: 0x3a as libc::c_int,
2508 | |                 last: 0x3a as libc::c_int,
2509 | |                 handler: Some(
...    |
2513 | |                 state: 0 as *const input_state,
2514 | |             };
     | |______________- unnecessary `let` binding
2515 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2506 ~             
2507 ~             input_transition {
2508 +                 first: 0x3a as libc::c_int,
2509 +                 last: 0x3a as libc::c_int,
2510 +                 handler: Some(
2511 +                     input_parameter
2512 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2513 +                 ),
2514 +                 state: 0 as *const input_state,
2515 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2527:13
     |
2518 | /             let mut init = input_transition {
2519 | |                 first: 0x3b as libc::c_int,
2520 | |                 last: 0x3b as libc::c_int,
2521 | |                 handler: Some(
...    |
2525 | |                 state: 0 as *const input_state,
2526 | |             };
     | |______________- unnecessary `let` binding
2527 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2518 ~             
2519 ~             input_transition {
2520 +                 first: 0x3b as libc::c_int,
2521 +                 last: 0x3b as libc::c_int,
2522 +                 handler: Some(
2523 +                     input_parameter
2524 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2525 +                 ),
2526 +                 state: 0 as *const input_state,
2527 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2536:13
     |
2530 | /             let mut init = input_transition {
2531 | |                 first: 0x3c as libc::c_int,
2532 | |                 last: 0x3f as libc::c_int,
2533 | |                 handler: None,
2534 | |                 state: &input_state_csi_ignore as *const input_state,
2535 | |             };
     | |______________- unnecessary `let` binding
2536 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2530 ~             
2531 ~             input_transition {
2532 +                 first: 0x3c as libc::c_int,
2533 +                 last: 0x3f as libc::c_int,
2534 +                 handler: None,
2535 +                 state: &input_state_csi_ignore as *const input_state,
2536 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2548:13
     |
2539 | /             let mut init = input_transition {
2540 | |                 first: 0x40 as libc::c_int,
2541 | |                 last: 0x7e as libc::c_int,
2542 | |                 handler: Some(
...    |
2546 | |                 state: &input_state_ground as *const input_state,
2547 | |             };
     | |______________- unnecessary `let` binding
2548 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2539 ~             
2540 ~             input_transition {
2541 +                 first: 0x40 as libc::c_int,
2542 +                 last: 0x7e as libc::c_int,
2543 +                 handler: Some(
2544 +                     input_csi_dispatch
2545 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2546 +                 ),
2547 +                 state: &input_state_ground as *const input_state,
2548 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2557:13
     |
2551 | /             let mut init = input_transition {
2552 | |                 first: 0x7f as libc::c_int,
2553 | |                 last: 0xff as libc::c_int,
2554 | |                 handler: None,
2555 | |                 state: 0 as *const input_state,
2556 | |             };
     | |______________- unnecessary `let` binding
2557 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2551 ~             
2552 ~             input_transition {
2553 +                 first: 0x7f as libc::c_int,
2554 +                 last: 0xff as libc::c_int,
2555 +                 handler: None,
2556 +                 state: 0 as *const input_state,
2557 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2566:13
     |
2560 | /             let mut init = input_transition {
2561 | |                 first: -(1 as libc::c_int),
2562 | |                 last: -(1 as libc::c_int),
2563 | |                 handler: None,
2564 | |                 state: 0 as *const input_state,
2565 | |             };
     | |______________- unnecessary `let` binding
2566 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2560 ~             
2561 ~             input_transition {
2562 +                 first: -(1 as libc::c_int),
2563 +                 last: -(1 as libc::c_int),
2564 +                 handler: None,
2565 +                 state: 0 as *const input_state,
2566 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2582:13
     |
2573 | /             let mut init = input_transition {
2574 | |                 first: 0x18 as libc::c_int,
2575 | |                 last: 0x18 as libc::c_int,
2576 | |                 handler: Some(
...    |
2580 | |                 state: &input_state_ground as *const input_state,
2581 | |             };
     | |______________- unnecessary `let` binding
2582 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2573 ~             
2574 ~             input_transition {
2575 +                 first: 0x18 as libc::c_int,
2576 +                 last: 0x18 as libc::c_int,
2577 +                 handler: Some(
2578 +                     input_c0_dispatch
2579 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2580 +                 ),
2581 +                 state: &input_state_ground as *const input_state,
2582 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2594:13
     |
2585 | /             let mut init = input_transition {
2586 | |                 first: 0x1a as libc::c_int,
2587 | |                 last: 0x1a as libc::c_int,
2588 | |                 handler: Some(
...    |
2592 | |                 state: &input_state_ground as *const input_state,
2593 | |             };
     | |______________- unnecessary `let` binding
2594 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2585 ~             
2586 ~             input_transition {
2587 +                 first: 0x1a as libc::c_int,
2588 +                 last: 0x1a as libc::c_int,
2589 +                 handler: Some(
2590 +                     input_c0_dispatch
2591 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2592 +                 ),
2593 +                 state: &input_state_ground as *const input_state,
2594 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2603:13
     |
2597 | /             let mut init = input_transition {
2598 | |                 first: 0x1b as libc::c_int,
2599 | |                 last: 0x1b as libc::c_int,
2600 | |                 handler: None,
2601 | |                 state: &input_state_esc_enter as *const input_state,
2602 | |             };
     | |______________- unnecessary `let` binding
2603 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2597 ~             
2598 ~             input_transition {
2599 +                 first: 0x1b as libc::c_int,
2600 +                 last: 0x1b as libc::c_int,
2601 +                 handler: None,
2602 +                 state: &input_state_esc_enter as *const input_state,
2603 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2615:13
     |
2606 | /             let mut init = input_transition {
2607 | |                 first: 0 as libc::c_int,
2608 | |                 last: 0x17 as libc::c_int,
2609 | |                 handler: Some(
...    |
2613 | |                 state: 0 as *const input_state,
2614 | |             };
     | |______________- unnecessary `let` binding
2615 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2606 ~             
2607 ~             input_transition {
2608 +                 first: 0 as libc::c_int,
2609 +                 last: 0x17 as libc::c_int,
2610 +                 handler: Some(
2611 +                     input_c0_dispatch
2612 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2613 +                 ),
2614 +                 state: 0 as *const input_state,
2615 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2627:13
     |
2618 | /             let mut init = input_transition {
2619 | |                 first: 0x19 as libc::c_int,
2620 | |                 last: 0x19 as libc::c_int,
2621 | |                 handler: Some(
...    |
2625 | |                 state: 0 as *const input_state,
2626 | |             };
     | |______________- unnecessary `let` binding
2627 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2618 ~             
2619 ~             input_transition {
2620 +                 first: 0x19 as libc::c_int,
2621 +                 last: 0x19 as libc::c_int,
2622 +                 handler: Some(
2623 +                     input_c0_dispatch
2624 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2625 +                 ),
2626 +                 state: 0 as *const input_state,
2627 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2639:13
     |
2630 | /             let mut init = input_transition {
2631 | |                 first: 0x1c as libc::c_int,
2632 | |                 last: 0x1f as libc::c_int,
2633 | |                 handler: Some(
...    |
2637 | |                 state: 0 as *const input_state,
2638 | |             };
     | |______________- unnecessary `let` binding
2639 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2630 ~             
2631 ~             input_transition {
2632 +                 first: 0x1c as libc::c_int,
2633 +                 last: 0x1f as libc::c_int,
2634 +                 handler: Some(
2635 +                     input_c0_dispatch
2636 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2637 +                 ),
2638 +                 state: 0 as *const input_state,
2639 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2651:13
     |
2642 | /             let mut init = input_transition {
2643 | |                 first: 0x20 as libc::c_int,
2644 | |                 last: 0x2f as libc::c_int,
2645 | |                 handler: Some(
...    |
2649 | |                 state: 0 as *const input_state,
2650 | |             };
     | |______________- unnecessary `let` binding
2651 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2642 ~             
2643 ~             input_transition {
2644 +                 first: 0x20 as libc::c_int,
2645 +                 last: 0x2f as libc::c_int,
2646 +                 handler: Some(
2647 +                     input_intermediate
2648 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2649 +                 ),
2650 +                 state: 0 as *const input_state,
2651 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2660:13
     |
2654 | /             let mut init = input_transition {
2655 | |                 first: 0x30 as libc::c_int,
2656 | |                 last: 0x3f as libc::c_int,
2657 | |                 handler: None,
2658 | |                 state: &input_state_csi_ignore as *const input_state,
2659 | |             };
     | |______________- unnecessary `let` binding
2660 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2654 ~             
2655 ~             input_transition {
2656 +                 first: 0x30 as libc::c_int,
2657 +                 last: 0x3f as libc::c_int,
2658 +                 handler: None,
2659 +                 state: &input_state_csi_ignore as *const input_state,
2660 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2672:13
     |
2663 | /             let mut init = input_transition {
2664 | |                 first: 0x40 as libc::c_int,
2665 | |                 last: 0x7e as libc::c_int,
2666 | |                 handler: Some(
...    |
2670 | |                 state: &input_state_ground as *const input_state,
2671 | |             };
     | |______________- unnecessary `let` binding
2672 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2663 ~             
2664 ~             input_transition {
2665 +                 first: 0x40 as libc::c_int,
2666 +                 last: 0x7e as libc::c_int,
2667 +                 handler: Some(
2668 +                     input_csi_dispatch
2669 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2670 +                 ),
2671 +                 state: &input_state_ground as *const input_state,
2672 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2681:13
     |
2675 | /             let mut init = input_transition {
2676 | |                 first: 0x7f as libc::c_int,
2677 | |                 last: 0xff as libc::c_int,
2678 | |                 handler: None,
2679 | |                 state: 0 as *const input_state,
2680 | |             };
     | |______________- unnecessary `let` binding
2681 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2675 ~             
2676 ~             input_transition {
2677 +                 first: 0x7f as libc::c_int,
2678 +                 last: 0xff as libc::c_int,
2679 +                 handler: None,
2680 +                 state: 0 as *const input_state,
2681 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2690:13
     |
2684 | /             let mut init = input_transition {
2685 | |                 first: -(1 as libc::c_int),
2686 | |                 last: -(1 as libc::c_int),
2687 | |                 handler: None,
2688 | |                 state: 0 as *const input_state,
2689 | |             };
     | |______________- unnecessary `let` binding
2690 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2684 ~             
2685 ~             input_transition {
2686 +                 first: -(1 as libc::c_int),
2687 +                 last: -(1 as libc::c_int),
2688 +                 handler: None,
2689 +                 state: 0 as *const input_state,
2690 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2706:13
     |
2697 | /             let mut init = input_transition {
2698 | |                 first: 0x18 as libc::c_int,
2699 | |                 last: 0x18 as libc::c_int,
2700 | |                 handler: Some(
...    |
2704 | |                 state: &input_state_ground as *const input_state,
2705 | |             };
     | |______________- unnecessary `let` binding
2706 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2697 ~             
2698 ~             input_transition {
2699 +                 first: 0x18 as libc::c_int,
2700 +                 last: 0x18 as libc::c_int,
2701 +                 handler: Some(
2702 +                     input_c0_dispatch
2703 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2704 +                 ),
2705 +                 state: &input_state_ground as *const input_state,
2706 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2718:13
     |
2709 | /             let mut init = input_transition {
2710 | |                 first: 0x1a as libc::c_int,
2711 | |                 last: 0x1a as libc::c_int,
2712 | |                 handler: Some(
...    |
2716 | |                 state: &input_state_ground as *const input_state,
2717 | |             };
     | |______________- unnecessary `let` binding
2718 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2709 ~             
2710 ~             input_transition {
2711 +                 first: 0x1a as libc::c_int,
2712 +                 last: 0x1a as libc::c_int,
2713 +                 handler: Some(
2714 +                     input_c0_dispatch
2715 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2716 +                 ),
2717 +                 state: &input_state_ground as *const input_state,
2718 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2727:13
     |
2721 | /             let mut init = input_transition {
2722 | |                 first: 0x1b as libc::c_int,
2723 | |                 last: 0x1b as libc::c_int,
2724 | |                 handler: None,
2725 | |                 state: &input_state_esc_enter as *const input_state,
2726 | |             };
     | |______________- unnecessary `let` binding
2727 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2721 ~             
2722 ~             input_transition {
2723 +                 first: 0x1b as libc::c_int,
2724 +                 last: 0x1b as libc::c_int,
2725 +                 handler: None,
2726 +                 state: &input_state_esc_enter as *const input_state,
2727 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2739:13
     |
2730 | /             let mut init = input_transition {
2731 | |                 first: 0 as libc::c_int,
2732 | |                 last: 0x17 as libc::c_int,
2733 | |                 handler: Some(
...    |
2737 | |                 state: 0 as *const input_state,
2738 | |             };
     | |______________- unnecessary `let` binding
2739 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2730 ~             
2731 ~             input_transition {
2732 +                 first: 0 as libc::c_int,
2733 +                 last: 0x17 as libc::c_int,
2734 +                 handler: Some(
2735 +                     input_c0_dispatch
2736 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2737 +                 ),
2738 +                 state: 0 as *const input_state,
2739 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2751:13
     |
2742 | /             let mut init = input_transition {
2743 | |                 first: 0x19 as libc::c_int,
2744 | |                 last: 0x19 as libc::c_int,
2745 | |                 handler: Some(
...    |
2749 | |                 state: 0 as *const input_state,
2750 | |             };
     | |______________- unnecessary `let` binding
2751 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2742 ~             
2743 ~             input_transition {
2744 +                 first: 0x19 as libc::c_int,
2745 +                 last: 0x19 as libc::c_int,
2746 +                 handler: Some(
2747 +                     input_c0_dispatch
2748 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2749 +                 ),
2750 +                 state: 0 as *const input_state,
2751 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2763:13
     |
2754 | /             let mut init = input_transition {
2755 | |                 first: 0x1c as libc::c_int,
2756 | |                 last: 0x1f as libc::c_int,
2757 | |                 handler: Some(
...    |
2761 | |                 state: 0 as *const input_state,
2762 | |             };
     | |______________- unnecessary `let` binding
2763 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2754 ~             
2755 ~             input_transition {
2756 +                 first: 0x1c as libc::c_int,
2757 +                 last: 0x1f as libc::c_int,
2758 +                 handler: Some(
2759 +                     input_c0_dispatch
2760 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2761 +                 ),
2762 +                 state: 0 as *const input_state,
2763 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2772:13
     |
2766 | /             let mut init = input_transition {
2767 | |                 first: 0x20 as libc::c_int,
2768 | |                 last: 0x3f as libc::c_int,
2769 | |                 handler: None,
2770 | |                 state: 0 as *const input_state,
2771 | |             };
     | |______________- unnecessary `let` binding
2772 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2766 ~             
2767 ~             input_transition {
2768 +                 first: 0x20 as libc::c_int,
2769 +                 last: 0x3f as libc::c_int,
2770 +                 handler: None,
2771 +                 state: 0 as *const input_state,
2772 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2781:13
     |
2775 | /             let mut init = input_transition {
2776 | |                 first: 0x40 as libc::c_int,
2777 | |                 last: 0x7e as libc::c_int,
2778 | |                 handler: None,
2779 | |                 state: &input_state_ground as *const input_state,
2780 | |             };
     | |______________- unnecessary `let` binding
2781 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2775 ~             
2776 ~             input_transition {
2777 +                 first: 0x40 as libc::c_int,
2778 +                 last: 0x7e as libc::c_int,
2779 +                 handler: None,
2780 +                 state: &input_state_ground as *const input_state,
2781 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2790:13
     |
2784 | /             let mut init = input_transition {
2785 | |                 first: 0x7f as libc::c_int,
2786 | |                 last: 0xff as libc::c_int,
2787 | |                 handler: None,
2788 | |                 state: 0 as *const input_state,
2789 | |             };
     | |______________- unnecessary `let` binding
2790 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2784 ~             
2785 ~             input_transition {
2786 +                 first: 0x7f as libc::c_int,
2787 +                 last: 0xff as libc::c_int,
2788 +                 handler: None,
2789 +                 state: 0 as *const input_state,
2790 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2799:13
     |
2793 | /             let mut init = input_transition {
2794 | |                 first: -(1 as libc::c_int),
2795 | |                 last: -(1 as libc::c_int),
2796 | |                 handler: None,
2797 | |                 state: 0 as *const input_state,
2798 | |             };
     | |______________- unnecessary `let` binding
2799 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2793 ~             
2794 ~             input_transition {
2795 +                 first: -(1 as libc::c_int),
2796 +                 last: -(1 as libc::c_int),
2797 +                 handler: None,
2798 +                 state: 0 as *const input_state,
2799 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2815:13
     |
2806 | /             let mut init = input_transition {
2807 | |                 first: 0x18 as libc::c_int,
2808 | |                 last: 0x18 as libc::c_int,
2809 | |                 handler: Some(
...    |
2813 | |                 state: &input_state_ground as *const input_state,
2814 | |             };
     | |______________- unnecessary `let` binding
2815 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2806 ~             
2807 ~             input_transition {
2808 +                 first: 0x18 as libc::c_int,
2809 +                 last: 0x18 as libc::c_int,
2810 +                 handler: Some(
2811 +                     input_c0_dispatch
2812 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2813 +                 ),
2814 +                 state: &input_state_ground as *const input_state,
2815 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2827:13
     |
2818 | /             let mut init = input_transition {
2819 | |                 first: 0x1a as libc::c_int,
2820 | |                 last: 0x1a as libc::c_int,
2821 | |                 handler: Some(
...    |
2825 | |                 state: &input_state_ground as *const input_state,
2826 | |             };
     | |______________- unnecessary `let` binding
2827 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2818 ~             
2819 ~             input_transition {
2820 +                 first: 0x1a as libc::c_int,
2821 +                 last: 0x1a as libc::c_int,
2822 +                 handler: Some(
2823 +                     input_c0_dispatch
2824 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2825 +                 ),
2826 +                 state: &input_state_ground as *const input_state,
2827 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2836:13
     |
2830 | /             let mut init = input_transition {
2831 | |                 first: 0x1b as libc::c_int,
2832 | |                 last: 0x1b as libc::c_int,
2833 | |                 handler: None,
2834 | |                 state: &input_state_esc_enter as *const input_state,
2835 | |             };
     | |______________- unnecessary `let` binding
2836 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2830 ~             
2831 ~             input_transition {
2832 +                 first: 0x1b as libc::c_int,
2833 +                 last: 0x1b as libc::c_int,
2834 +                 handler: None,
2835 +                 state: &input_state_esc_enter as *const input_state,
2836 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2845:13
     |
2839 | /             let mut init = input_transition {
2840 | |                 first: 0 as libc::c_int,
2841 | |                 last: 0x17 as libc::c_int,
2842 | |                 handler: None,
2843 | |                 state: 0 as *const input_state,
2844 | |             };
     | |______________- unnecessary `let` binding
2845 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2839 ~             
2840 ~             input_transition {
2841 +                 first: 0 as libc::c_int,
2842 +                 last: 0x17 as libc::c_int,
2843 +                 handler: None,
2844 +                 state: 0 as *const input_state,
2845 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2854:13
     |
2848 | /             let mut init = input_transition {
2849 | |                 first: 0x19 as libc::c_int,
2850 | |                 last: 0x19 as libc::c_int,
2851 | |                 handler: None,
2852 | |                 state: 0 as *const input_state,
2853 | |             };
     | |______________- unnecessary `let` binding
2854 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2848 ~             
2849 ~             input_transition {
2850 +                 first: 0x19 as libc::c_int,
2851 +                 last: 0x19 as libc::c_int,
2852 +                 handler: None,
2853 +                 state: 0 as *const input_state,
2854 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2863:13
     |
2857 | /             let mut init = input_transition {
2858 | |                 first: 0x1c as libc::c_int,
2859 | |                 last: 0x1f as libc::c_int,
2860 | |                 handler: None,
2861 | |                 state: 0 as *const input_state,
2862 | |             };
     | |______________- unnecessary `let` binding
2863 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2857 ~             
2858 ~             input_transition {
2859 +                 first: 0x1c as libc::c_int,
2860 +                 last: 0x1f as libc::c_int,
2861 +                 handler: None,
2862 +                 state: 0 as *const input_state,
2863 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2875:13
     |
2866 | /             let mut init = input_transition {
2867 | |                 first: 0x20 as libc::c_int,
2868 | |                 last: 0x2f as libc::c_int,
2869 | |                 handler: Some(
...    |
2873 | |                 state: &input_state_dcs_intermediate as *const input_state,
2874 | |             };
     | |______________- unnecessary `let` binding
2875 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2866 ~             
2867 ~             input_transition {
2868 +                 first: 0x20 as libc::c_int,
2869 +                 last: 0x2f as libc::c_int,
2870 +                 handler: Some(
2871 +                     input_intermediate
2872 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2873 +                 ),
2874 +                 state: &input_state_dcs_intermediate as *const input_state,
2875 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2887:13
     |
2878 | /             let mut init = input_transition {
2879 | |                 first: 0x30 as libc::c_int,
2880 | |                 last: 0x39 as libc::c_int,
2881 | |                 handler: Some(
...    |
2885 | |                 state: &input_state_dcs_parameter as *const input_state,
2886 | |             };
     | |______________- unnecessary `let` binding
2887 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2878 ~             
2879 ~             input_transition {
2880 +                 first: 0x30 as libc::c_int,
2881 +                 last: 0x39 as libc::c_int,
2882 +                 handler: Some(
2883 +                     input_parameter
2884 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2885 +                 ),
2886 +                 state: &input_state_dcs_parameter as *const input_state,
2887 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2896:13
     |
2890 | /             let mut init = input_transition {
2891 | |                 first: 0x3a as libc::c_int,
2892 | |                 last: 0x3a as libc::c_int,
2893 | |                 handler: None,
2894 | |                 state: &input_state_dcs_ignore as *const input_state,
2895 | |             };
     | |______________- unnecessary `let` binding
2896 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2890 ~             
2891 ~             input_transition {
2892 +                 first: 0x3a as libc::c_int,
2893 +                 last: 0x3a as libc::c_int,
2894 +                 handler: None,
2895 +                 state: &input_state_dcs_ignore as *const input_state,
2896 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2908:13
     |
2899 | /             let mut init = input_transition {
2900 | |                 first: 0x3b as libc::c_int,
2901 | |                 last: 0x3b as libc::c_int,
2902 | |                 handler: Some(
...    |
2906 | |                 state: &input_state_dcs_parameter as *const input_state,
2907 | |             };
     | |______________- unnecessary `let` binding
2908 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2899 ~             
2900 ~             input_transition {
2901 +                 first: 0x3b as libc::c_int,
2902 +                 last: 0x3b as libc::c_int,
2903 +                 handler: Some(
2904 +                     input_parameter
2905 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2906 +                 ),
2907 +                 state: &input_state_dcs_parameter as *const input_state,
2908 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2920:13
     |
2911 | /             let mut init = input_transition {
2912 | |                 first: 0x3c as libc::c_int,
2913 | |                 last: 0x3f as libc::c_int,
2914 | |                 handler: Some(
...    |
2918 | |                 state: &input_state_dcs_parameter as *const input_state,
2919 | |             };
     | |______________- unnecessary `let` binding
2920 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2911 ~             
2912 ~             input_transition {
2913 +                 first: 0x3c as libc::c_int,
2914 +                 last: 0x3f as libc::c_int,
2915 +                 handler: Some(
2916 +                     input_intermediate
2917 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2918 +                 ),
2919 +                 state: &input_state_dcs_parameter as *const input_state,
2920 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2931:13
     |
2923 | /             let mut init = input_transition {
2924 | |                 first: 0x40 as libc::c_int,
2925 | |                 last: 0x7e as libc::c_int,
2926 | |                 handler: Some(
...    |
2929 | |                 state: &input_state_dcs_handler as *const input_state,
2930 | |             };
     | |______________- unnecessary `let` binding
2931 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2923 ~             
2924 ~             input_transition {
2925 +                 first: 0x40 as libc::c_int,
2926 +                 last: 0x7e as libc::c_int,
2927 +                 handler: Some(
2928 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2929 +                 ),
2930 +                 state: &input_state_dcs_handler as *const input_state,
2931 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2940:13
     |
2934 | /             let mut init = input_transition {
2935 | |                 first: 0x7f as libc::c_int,
2936 | |                 last: 0xff as libc::c_int,
2937 | |                 handler: None,
2938 | |                 state: 0 as *const input_state,
2939 | |             };
     | |______________- unnecessary `let` binding
2940 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2934 ~             
2935 ~             input_transition {
2936 +                 first: 0x7f as libc::c_int,
2937 +                 last: 0xff as libc::c_int,
2938 +                 handler: None,
2939 +                 state: 0 as *const input_state,
2940 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2949:13
     |
2943 | /             let mut init = input_transition {
2944 | |                 first: -(1 as libc::c_int),
2945 | |                 last: -(1 as libc::c_int),
2946 | |                 handler: None,
2947 | |                 state: 0 as *const input_state,
2948 | |             };
     | |______________- unnecessary `let` binding
2949 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2943 ~             
2944 ~             input_transition {
2945 +                 first: -(1 as libc::c_int),
2946 +                 last: -(1 as libc::c_int),
2947 +                 handler: None,
2948 +                 state: 0 as *const input_state,
2949 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2965:13
     |
2956 | /             let mut init = input_transition {
2957 | |                 first: 0x18 as libc::c_int,
2958 | |                 last: 0x18 as libc::c_int,
2959 | |                 handler: Some(
...    |
2963 | |                 state: &input_state_ground as *const input_state,
2964 | |             };
     | |______________- unnecessary `let` binding
2965 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2956 ~             
2957 ~             input_transition {
2958 +                 first: 0x18 as libc::c_int,
2959 +                 last: 0x18 as libc::c_int,
2960 +                 handler: Some(
2961 +                     input_c0_dispatch
2962 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2963 +                 ),
2964 +                 state: &input_state_ground as *const input_state,
2965 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2977:13
     |
2968 | /             let mut init = input_transition {
2969 | |                 first: 0x1a as libc::c_int,
2970 | |                 last: 0x1a as libc::c_int,
2971 | |                 handler: Some(
...    |
2975 | |                 state: &input_state_ground as *const input_state,
2976 | |             };
     | |______________- unnecessary `let` binding
2977 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2968 ~             
2969 ~             input_transition {
2970 +                 first: 0x1a as libc::c_int,
2971 +                 last: 0x1a as libc::c_int,
2972 +                 handler: Some(
2973 +                     input_c0_dispatch
2974 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
2975 +                 ),
2976 +                 state: &input_state_ground as *const input_state,
2977 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2986:13
     |
2980 | /             let mut init = input_transition {
2981 | |                 first: 0x1b as libc::c_int,
2982 | |                 last: 0x1b as libc::c_int,
2983 | |                 handler: None,
2984 | |                 state: &input_state_esc_enter as *const input_state,
2985 | |             };
     | |______________- unnecessary `let` binding
2986 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2980 ~             
2981 ~             input_transition {
2982 +                 first: 0x1b as libc::c_int,
2983 +                 last: 0x1b as libc::c_int,
2984 +                 handler: None,
2985 +                 state: &input_state_esc_enter as *const input_state,
2986 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:2995:13
     |
2989 | /             let mut init = input_transition {
2990 | |                 first: 0 as libc::c_int,
2991 | |                 last: 0x17 as libc::c_int,
2992 | |                 handler: None,
2993 | |                 state: 0 as *const input_state,
2994 | |             };
     | |______________- unnecessary `let` binding
2995 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2989 ~             
2990 ~             input_transition {
2991 +                 first: 0 as libc::c_int,
2992 +                 last: 0x17 as libc::c_int,
2993 +                 handler: None,
2994 +                 state: 0 as *const input_state,
2995 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3004:13
     |
2998 | /             let mut init = input_transition {
2999 | |                 first: 0x19 as libc::c_int,
3000 | |                 last: 0x19 as libc::c_int,
3001 | |                 handler: None,
3002 | |                 state: 0 as *const input_state,
3003 | |             };
     | |______________- unnecessary `let` binding
3004 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2998 ~             
2999 ~             input_transition {
3000 +                 first: 0x19 as libc::c_int,
3001 +                 last: 0x19 as libc::c_int,
3002 +                 handler: None,
3003 +                 state: 0 as *const input_state,
3004 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3013:13
     |
3007 | /             let mut init = input_transition {
3008 | |                 first: 0x1c as libc::c_int,
3009 | |                 last: 0x1f as libc::c_int,
3010 | |                 handler: None,
3011 | |                 state: 0 as *const input_state,
3012 | |             };
     | |______________- unnecessary `let` binding
3013 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3007 ~             
3008 ~             input_transition {
3009 +                 first: 0x1c as libc::c_int,
3010 +                 last: 0x1f as libc::c_int,
3011 +                 handler: None,
3012 +                 state: 0 as *const input_state,
3013 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3025:13
     |
3016 | /             let mut init = input_transition {
3017 | |                 first: 0x20 as libc::c_int,
3018 | |                 last: 0x2f as libc::c_int,
3019 | |                 handler: Some(
...    |
3023 | |                 state: &input_state_dcs_intermediate as *const input_state,
3024 | |             };
     | |______________- unnecessary `let` binding
3025 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3016 ~             
3017 ~             input_transition {
3018 +                 first: 0x20 as libc::c_int,
3019 +                 last: 0x2f as libc::c_int,
3020 +                 handler: Some(
3021 +                     input_intermediate
3022 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3023 +                 ),
3024 +                 state: &input_state_dcs_intermediate as *const input_state,
3025 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3037:13
     |
3028 | /             let mut init = input_transition {
3029 | |                 first: 0x30 as libc::c_int,
3030 | |                 last: 0x39 as libc::c_int,
3031 | |                 handler: Some(
...    |
3035 | |                 state: 0 as *const input_state,
3036 | |             };
     | |______________- unnecessary `let` binding
3037 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3028 ~             
3029 ~             input_transition {
3030 +                 first: 0x30 as libc::c_int,
3031 +                 last: 0x39 as libc::c_int,
3032 +                 handler: Some(
3033 +                     input_parameter
3034 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3035 +                 ),
3036 +                 state: 0 as *const input_state,
3037 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3046:13
     |
3040 | /             let mut init = input_transition {
3041 | |                 first: 0x3a as libc::c_int,
3042 | |                 last: 0x3a as libc::c_int,
3043 | |                 handler: None,
3044 | |                 state: &input_state_dcs_ignore as *const input_state,
3045 | |             };
     | |______________- unnecessary `let` binding
3046 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3040 ~             
3041 ~             input_transition {
3042 +                 first: 0x3a as libc::c_int,
3043 +                 last: 0x3a as libc::c_int,
3044 +                 handler: None,
3045 +                 state: &input_state_dcs_ignore as *const input_state,
3046 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3058:13
     |
3049 | /             let mut init = input_transition {
3050 | |                 first: 0x3b as libc::c_int,
3051 | |                 last: 0x3b as libc::c_int,
3052 | |                 handler: Some(
...    |
3056 | |                 state: 0 as *const input_state,
3057 | |             };
     | |______________- unnecessary `let` binding
3058 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3049 ~             
3050 ~             input_transition {
3051 +                 first: 0x3b as libc::c_int,
3052 +                 last: 0x3b as libc::c_int,
3053 +                 handler: Some(
3054 +                     input_parameter
3055 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3056 +                 ),
3057 +                 state: 0 as *const input_state,
3058 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3067:13
     |
3061 | /             let mut init = input_transition {
3062 | |                 first: 0x3c as libc::c_int,
3063 | |                 last: 0x3f as libc::c_int,
3064 | |                 handler: None,
3065 | |                 state: &input_state_dcs_ignore as *const input_state,
3066 | |             };
     | |______________- unnecessary `let` binding
3067 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3061 ~             
3062 ~             input_transition {
3063 +                 first: 0x3c as libc::c_int,
3064 +                 last: 0x3f as libc::c_int,
3065 +                 handler: None,
3066 +                 state: &input_state_dcs_ignore as *const input_state,
3067 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3078:13
     |
3070 | /             let mut init = input_transition {
3071 | |                 first: 0x40 as libc::c_int,
3072 | |                 last: 0x7e as libc::c_int,
3073 | |                 handler: Some(
...    |
3076 | |                 state: &input_state_dcs_handler as *const input_state,
3077 | |             };
     | |______________- unnecessary `let` binding
3078 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3070 ~             
3071 ~             input_transition {
3072 +                 first: 0x40 as libc::c_int,
3073 +                 last: 0x7e as libc::c_int,
3074 +                 handler: Some(
3075 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3076 +                 ),
3077 +                 state: &input_state_dcs_handler as *const input_state,
3078 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3087:13
     |
3081 | /             let mut init = input_transition {
3082 | |                 first: 0x7f as libc::c_int,
3083 | |                 last: 0xff as libc::c_int,
3084 | |                 handler: None,
3085 | |                 state: 0 as *const input_state,
3086 | |             };
     | |______________- unnecessary `let` binding
3087 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3081 ~             
3082 ~             input_transition {
3083 +                 first: 0x7f as libc::c_int,
3084 +                 last: 0xff as libc::c_int,
3085 +                 handler: None,
3086 +                 state: 0 as *const input_state,
3087 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3096:13
     |
3090 | /             let mut init = input_transition {
3091 | |                 first: -(1 as libc::c_int),
3092 | |                 last: -(1 as libc::c_int),
3093 | |                 handler: None,
3094 | |                 state: 0 as *const input_state,
3095 | |             };
     | |______________- unnecessary `let` binding
3096 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3090 ~             
3091 ~             input_transition {
3092 +                 first: -(1 as libc::c_int),
3093 +                 last: -(1 as libc::c_int),
3094 +                 handler: None,
3095 +                 state: 0 as *const input_state,
3096 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3112:13
     |
3103 | /             let mut init = input_transition {
3104 | |                 first: 0x18 as libc::c_int,
3105 | |                 last: 0x18 as libc::c_int,
3106 | |                 handler: Some(
...    |
3110 | |                 state: &input_state_ground as *const input_state,
3111 | |             };
     | |______________- unnecessary `let` binding
3112 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3103 ~             
3104 ~             input_transition {
3105 +                 first: 0x18 as libc::c_int,
3106 +                 last: 0x18 as libc::c_int,
3107 +                 handler: Some(
3108 +                     input_c0_dispatch
3109 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3110 +                 ),
3111 +                 state: &input_state_ground as *const input_state,
3112 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3124:13
     |
3115 | /             let mut init = input_transition {
3116 | |                 first: 0x1a as libc::c_int,
3117 | |                 last: 0x1a as libc::c_int,
3118 | |                 handler: Some(
...    |
3122 | |                 state: &input_state_ground as *const input_state,
3123 | |             };
     | |______________- unnecessary `let` binding
3124 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3115 ~             
3116 ~             input_transition {
3117 +                 first: 0x1a as libc::c_int,
3118 +                 last: 0x1a as libc::c_int,
3119 +                 handler: Some(
3120 +                     input_c0_dispatch
3121 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3122 +                 ),
3123 +                 state: &input_state_ground as *const input_state,
3124 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3133:13
     |
3127 | /             let mut init = input_transition {
3128 | |                 first: 0x1b as libc::c_int,
3129 | |                 last: 0x1b as libc::c_int,
3130 | |                 handler: None,
3131 | |                 state: &input_state_esc_enter as *const input_state,
3132 | |             };
     | |______________- unnecessary `let` binding
3133 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3127 ~             
3128 ~             input_transition {
3129 +                 first: 0x1b as libc::c_int,
3130 +                 last: 0x1b as libc::c_int,
3131 +                 handler: None,
3132 +                 state: &input_state_esc_enter as *const input_state,
3133 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3142:13
     |
3136 | /             let mut init = input_transition {
3137 | |                 first: 0 as libc::c_int,
3138 | |                 last: 0x17 as libc::c_int,
3139 | |                 handler: None,
3140 | |                 state: 0 as *const input_state,
3141 | |             };
     | |______________- unnecessary `let` binding
3142 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3136 ~             
3137 ~             input_transition {
3138 +                 first: 0 as libc::c_int,
3139 +                 last: 0x17 as libc::c_int,
3140 +                 handler: None,
3141 +                 state: 0 as *const input_state,
3142 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3151:13
     |
3145 | /             let mut init = input_transition {
3146 | |                 first: 0x19 as libc::c_int,
3147 | |                 last: 0x19 as libc::c_int,
3148 | |                 handler: None,
3149 | |                 state: 0 as *const input_state,
3150 | |             };
     | |______________- unnecessary `let` binding
3151 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3145 ~             
3146 ~             input_transition {
3147 +                 first: 0x19 as libc::c_int,
3148 +                 last: 0x19 as libc::c_int,
3149 +                 handler: None,
3150 +                 state: 0 as *const input_state,
3151 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3160:13
     |
3154 | /             let mut init = input_transition {
3155 | |                 first: 0x1c as libc::c_int,
3156 | |                 last: 0x1f as libc::c_int,
3157 | |                 handler: None,
3158 | |                 state: 0 as *const input_state,
3159 | |             };
     | |______________- unnecessary `let` binding
3160 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3154 ~             
3155 ~             input_transition {
3156 +                 first: 0x1c as libc::c_int,
3157 +                 last: 0x1f as libc::c_int,
3158 +                 handler: None,
3159 +                 state: 0 as *const input_state,
3160 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3172:13
     |
3163 | /             let mut init = input_transition {
3164 | |                 first: 0x20 as libc::c_int,
3165 | |                 last: 0x2f as libc::c_int,
3166 | |                 handler: Some(
...    |
3170 | |                 state: 0 as *const input_state,
3171 | |             };
     | |______________- unnecessary `let` binding
3172 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3163 ~             
3164 ~             input_transition {
3165 +                 first: 0x20 as libc::c_int,
3166 +                 last: 0x2f as libc::c_int,
3167 +                 handler: Some(
3168 +                     input_intermediate
3169 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3170 +                 ),
3171 +                 state: 0 as *const input_state,
3172 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3181:13
     |
3175 | /             let mut init = input_transition {
3176 | |                 first: 0x30 as libc::c_int,
3177 | |                 last: 0x3f as libc::c_int,
3178 | |                 handler: None,
3179 | |                 state: &input_state_dcs_ignore as *const input_state,
3180 | |             };
     | |______________- unnecessary `let` binding
3181 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3175 ~             
3176 ~             input_transition {
3177 +                 first: 0x30 as libc::c_int,
3178 +                 last: 0x3f as libc::c_int,
3179 +                 handler: None,
3180 +                 state: &input_state_dcs_ignore as *const input_state,
3181 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3192:13
     |
3184 | /             let mut init = input_transition {
3185 | |                 first: 0x40 as libc::c_int,
3186 | |                 last: 0x7e as libc::c_int,
3187 | |                 handler: Some(
...    |
3190 | |                 state: &input_state_dcs_handler as *const input_state,
3191 | |             };
     | |______________- unnecessary `let` binding
3192 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3184 ~             
3185 ~             input_transition {
3186 +                 first: 0x40 as libc::c_int,
3187 +                 last: 0x7e as libc::c_int,
3188 +                 handler: Some(
3189 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3190 +                 ),
3191 +                 state: &input_state_dcs_handler as *const input_state,
3192 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3201:13
     |
3195 | /             let mut init = input_transition {
3196 | |                 first: 0x7f as libc::c_int,
3197 | |                 last: 0xff as libc::c_int,
3198 | |                 handler: None,
3199 | |                 state: 0 as *const input_state,
3200 | |             };
     | |______________- unnecessary `let` binding
3201 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3195 ~             
3196 ~             input_transition {
3197 +                 first: 0x7f as libc::c_int,
3198 +                 last: 0xff as libc::c_int,
3199 +                 handler: None,
3200 +                 state: 0 as *const input_state,
3201 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3210:13
     |
3204 | /             let mut init = input_transition {
3205 | |                 first: -(1 as libc::c_int),
3206 | |                 last: -(1 as libc::c_int),
3207 | |                 handler: None,
3208 | |                 state: 0 as *const input_state,
3209 | |             };
     | |______________- unnecessary `let` binding
3210 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3204 ~             
3205 ~             input_transition {
3206 +                 first: -(1 as libc::c_int),
3207 +                 last: -(1 as libc::c_int),
3208 +                 handler: None,
3209 +                 state: 0 as *const input_state,
3210 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3225:13
     |
3217 | /             let mut init = input_transition {
3218 | |                 first: 0 as libc::c_int,
3219 | |                 last: 0x1a as libc::c_int,
3220 | |                 handler: Some(
...    |
3223 | |                 state: 0 as *const input_state,
3224 | |             };
     | |______________- unnecessary `let` binding
3225 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3217 ~             
3218 ~             input_transition {
3219 +                 first: 0 as libc::c_int,
3220 +                 last: 0x1a as libc::c_int,
3221 +                 handler: Some(
3222 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3223 +                 ),
3224 +                 state: 0 as *const input_state,
3225 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3234:13
     |
3228 | /             let mut init = input_transition {
3229 | |                 first: 0x1b as libc::c_int,
3230 | |                 last: 0x1b as libc::c_int,
3231 | |                 handler: None,
3232 | |                 state: &input_state_dcs_escape as *const input_state,
3233 | |             };
     | |______________- unnecessary `let` binding
3234 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3228 ~             
3229 ~             input_transition {
3230 +                 first: 0x1b as libc::c_int,
3231 +                 last: 0x1b as libc::c_int,
3232 +                 handler: None,
3233 +                 state: &input_state_dcs_escape as *const input_state,
3234 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3245:13
     |
3237 | /             let mut init = input_transition {
3238 | |                 first: 0x1c as libc::c_int,
3239 | |                 last: 0xff as libc::c_int,
3240 | |                 handler: Some(
...    |
3243 | |                 state: 0 as *const input_state,
3244 | |             };
     | |______________- unnecessary `let` binding
3245 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3237 ~             
3238 ~             input_transition {
3239 +                 first: 0x1c as libc::c_int,
3240 +                 last: 0xff as libc::c_int,
3241 +                 handler: Some(
3242 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3243 +                 ),
3244 +                 state: 0 as *const input_state,
3245 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3254:13
     |
3248 | /             let mut init = input_transition {
3249 | |                 first: -(1 as libc::c_int),
3250 | |                 last: -(1 as libc::c_int),
3251 | |                 handler: None,
3252 | |                 state: 0 as *const input_state,
3253 | |             };
     | |______________- unnecessary `let` binding
3254 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3248 ~             
3249 ~             input_transition {
3250 +                 first: -(1 as libc::c_int),
3251 +                 last: -(1 as libc::c_int),
3252 +                 handler: None,
3253 +                 state: 0 as *const input_state,
3254 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3269:13
     |
3261 | /             let mut init = input_transition {
3262 | |                 first: 0 as libc::c_int,
3263 | |                 last: 0x5b as libc::c_int,
3264 | |                 handler: Some(
...    |
3267 | |                 state: &input_state_dcs_handler as *const input_state,
3268 | |             };
     | |______________- unnecessary `let` binding
3269 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3261 ~             
3262 ~             input_transition {
3263 +                 first: 0 as libc::c_int,
3264 +                 last: 0x5b as libc::c_int,
3265 +                 handler: Some(
3266 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3267 +                 ),
3268 +                 state: &input_state_dcs_handler as *const input_state,
3269 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3281:13
     |
3272 | /             let mut init = input_transition {
3273 | |                 first: 0x5c as libc::c_int,
3274 | |                 last: 0x5c as libc::c_int,
3275 | |                 handler: Some(
...    |
3279 | |                 state: &input_state_ground as *const input_state,
3280 | |             };
     | |______________- unnecessary `let` binding
3281 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3272 ~             
3273 ~             input_transition {
3274 +                 first: 0x5c as libc::c_int,
3275 +                 last: 0x5c as libc::c_int,
3276 +                 handler: Some(
3277 +                     input_dcs_dispatch
3278 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3279 +                 ),
3280 +                 state: &input_state_ground as *const input_state,
3281 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3292:13
     |
3284 | /             let mut init = input_transition {
3285 | |                 first: 0x5d as libc::c_int,
3286 | |                 last: 0xff as libc::c_int,
3287 | |                 handler: Some(
...    |
3290 | |                 state: &input_state_dcs_handler as *const input_state,
3291 | |             };
     | |______________- unnecessary `let` binding
3292 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3284 ~             
3285 ~             input_transition {
3286 +                 first: 0x5d as libc::c_int,
3287 +                 last: 0xff as libc::c_int,
3288 +                 handler: Some(
3289 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3290 +                 ),
3291 +                 state: &input_state_dcs_handler as *const input_state,
3292 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3301:13
     |
3295 | /             let mut init = input_transition {
3296 | |                 first: -(1 as libc::c_int),
3297 | |                 last: -(1 as libc::c_int),
3298 | |                 handler: None,
3299 | |                 state: 0 as *const input_state,
3300 | |             };
     | |______________- unnecessary `let` binding
3301 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3295 ~             
3296 ~             input_transition {
3297 +                 first: -(1 as libc::c_int),
3298 +                 last: -(1 as libc::c_int),
3299 +                 handler: None,
3300 +                 state: 0 as *const input_state,
3301 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3317:13
     |
3308 | /             let mut init = input_transition {
3309 | |                 first: 0x18 as libc::c_int,
3310 | |                 last: 0x18 as libc::c_int,
3311 | |                 handler: Some(
...    |
3315 | |                 state: &input_state_ground as *const input_state,
3316 | |             };
     | |______________- unnecessary `let` binding
3317 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3308 ~             
3309 ~             input_transition {
3310 +                 first: 0x18 as libc::c_int,
3311 +                 last: 0x18 as libc::c_int,
3312 +                 handler: Some(
3313 +                     input_c0_dispatch
3314 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3315 +                 ),
3316 +                 state: &input_state_ground as *const input_state,
3317 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3329:13
     |
3320 | /             let mut init = input_transition {
3321 | |                 first: 0x1a as libc::c_int,
3322 | |                 last: 0x1a as libc::c_int,
3323 | |                 handler: Some(
...    |
3327 | |                 state: &input_state_ground as *const input_state,
3328 | |             };
     | |______________- unnecessary `let` binding
3329 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3320 ~             
3321 ~             input_transition {
3322 +                 first: 0x1a as libc::c_int,
3323 +                 last: 0x1a as libc::c_int,
3324 +                 handler: Some(
3325 +                     input_c0_dispatch
3326 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3327 +                 ),
3328 +                 state: &input_state_ground as *const input_state,
3329 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3338:13
     |
3332 | /             let mut init = input_transition {
3333 | |                 first: 0x1b as libc::c_int,
3334 | |                 last: 0x1b as libc::c_int,
3335 | |                 handler: None,
3336 | |                 state: &input_state_esc_enter as *const input_state,
3337 | |             };
     | |______________- unnecessary `let` binding
3338 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3332 ~             
3333 ~             input_transition {
3334 +                 first: 0x1b as libc::c_int,
3335 +                 last: 0x1b as libc::c_int,
3336 +                 handler: None,
3337 +                 state: &input_state_esc_enter as *const input_state,
3338 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3347:13
     |
3341 | /             let mut init = input_transition {
3342 | |                 first: 0 as libc::c_int,
3343 | |                 last: 0x17 as libc::c_int,
3344 | |                 handler: None,
3345 | |                 state: 0 as *const input_state,
3346 | |             };
     | |______________- unnecessary `let` binding
3347 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3341 ~             
3342 ~             input_transition {
3343 +                 first: 0 as libc::c_int,
3344 +                 last: 0x17 as libc::c_int,
3345 +                 handler: None,
3346 +                 state: 0 as *const input_state,
3347 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3356:13
     |
3350 | /             let mut init = input_transition {
3351 | |                 first: 0x19 as libc::c_int,
3352 | |                 last: 0x19 as libc::c_int,
3353 | |                 handler: None,
3354 | |                 state: 0 as *const input_state,
3355 | |             };
     | |______________- unnecessary `let` binding
3356 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3350 ~             
3351 ~             input_transition {
3352 +                 first: 0x19 as libc::c_int,
3353 +                 last: 0x19 as libc::c_int,
3354 +                 handler: None,
3355 +                 state: 0 as *const input_state,
3356 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3365:13
     |
3359 | /             let mut init = input_transition {
3360 | |                 first: 0x1c as libc::c_int,
3361 | |                 last: 0x1f as libc::c_int,
3362 | |                 handler: None,
3363 | |                 state: 0 as *const input_state,
3364 | |             };
     | |______________- unnecessary `let` binding
3365 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3359 ~             
3360 ~             input_transition {
3361 +                 first: 0x1c as libc::c_int,
3362 +                 last: 0x1f as libc::c_int,
3363 +                 handler: None,
3364 +                 state: 0 as *const input_state,
3365 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3374:13
     |
3368 | /             let mut init = input_transition {
3369 | |                 first: 0x20 as libc::c_int,
3370 | |                 last: 0xff as libc::c_int,
3371 | |                 handler: None,
3372 | |                 state: 0 as *const input_state,
3373 | |             };
     | |______________- unnecessary `let` binding
3374 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3368 ~             
3369 ~             input_transition {
3370 +                 first: 0x20 as libc::c_int,
3371 +                 last: 0xff as libc::c_int,
3372 +                 handler: None,
3373 +                 state: 0 as *const input_state,
3374 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3383:13
     |
3377 | /             let mut init = input_transition {
3378 | |                 first: -(1 as libc::c_int),
3379 | |                 last: -(1 as libc::c_int),
3380 | |                 handler: None,
3381 | |                 state: 0 as *const input_state,
3382 | |             };
     | |______________- unnecessary `let` binding
3383 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3377 ~             
3378 ~             input_transition {
3379 +                 first: -(1 as libc::c_int),
3380 +                 last: -(1 as libc::c_int),
3381 +                 handler: None,
3382 +                 state: 0 as *const input_state,
3383 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3399:13
     |
3390 | /             let mut init = input_transition {
3391 | |                 first: 0x18 as libc::c_int,
3392 | |                 last: 0x18 as libc::c_int,
3393 | |                 handler: Some(
...    |
3397 | |                 state: &input_state_ground as *const input_state,
3398 | |             };
     | |______________- unnecessary `let` binding
3399 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3390 ~             
3391 ~             input_transition {
3392 +                 first: 0x18 as libc::c_int,
3393 +                 last: 0x18 as libc::c_int,
3394 +                 handler: Some(
3395 +                     input_c0_dispatch
3396 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3397 +                 ),
3398 +                 state: &input_state_ground as *const input_state,
3399 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3411:13
     |
3402 | /             let mut init = input_transition {
3403 | |                 first: 0x1a as libc::c_int,
3404 | |                 last: 0x1a as libc::c_int,
3405 | |                 handler: Some(
...    |
3409 | |                 state: &input_state_ground as *const input_state,
3410 | |             };
     | |______________- unnecessary `let` binding
3411 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3402 ~             
3403 ~             input_transition {
3404 +                 first: 0x1a as libc::c_int,
3405 +                 last: 0x1a as libc::c_int,
3406 +                 handler: Some(
3407 +                     input_c0_dispatch
3408 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3409 +                 ),
3410 +                 state: &input_state_ground as *const input_state,
3411 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3420:13
     |
3414 | /             let mut init = input_transition {
3415 | |                 first: 0x1b as libc::c_int,
3416 | |                 last: 0x1b as libc::c_int,
3417 | |                 handler: None,
3418 | |                 state: &input_state_esc_enter as *const input_state,
3419 | |             };
     | |______________- unnecessary `let` binding
3420 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3414 ~             
3415 ~             input_transition {
3416 +                 first: 0x1b as libc::c_int,
3417 +                 last: 0x1b as libc::c_int,
3418 +                 handler: None,
3419 +                 state: &input_state_esc_enter as *const input_state,
3420 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3429:13
     |
3423 | /             let mut init = input_transition {
3424 | |                 first: 0 as libc::c_int,
3425 | |                 last: 0x6 as libc::c_int,
3426 | |                 handler: None,
3427 | |                 state: 0 as *const input_state,
3428 | |             };
     | |______________- unnecessary `let` binding
3429 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3423 ~             
3424 ~             input_transition {
3425 +                 first: 0 as libc::c_int,
3426 +                 last: 0x6 as libc::c_int,
3427 +                 handler: None,
3428 +                 state: 0 as *const input_state,
3429 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3438:13
     |
3432 | /             let mut init = input_transition {
3433 | |                 first: 0x7 as libc::c_int,
3434 | |                 last: 0x7 as libc::c_int,
3435 | |                 handler: None,
3436 | |                 state: &input_state_ground as *const input_state,
3437 | |             };
     | |______________- unnecessary `let` binding
3438 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3432 ~             
3433 ~             input_transition {
3434 +                 first: 0x7 as libc::c_int,
3435 +                 last: 0x7 as libc::c_int,
3436 +                 handler: None,
3437 +                 state: &input_state_ground as *const input_state,
3438 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3447:13
     |
3441 | /             let mut init = input_transition {
3442 | |                 first: 0x8 as libc::c_int,
3443 | |                 last: 0x17 as libc::c_int,
3444 | |                 handler: None,
3445 | |                 state: 0 as *const input_state,
3446 | |             };
     | |______________- unnecessary `let` binding
3447 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3441 ~             
3442 ~             input_transition {
3443 +                 first: 0x8 as libc::c_int,
3444 +                 last: 0x17 as libc::c_int,
3445 +                 handler: None,
3446 +                 state: 0 as *const input_state,
3447 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3456:13
     |
3450 | /             let mut init = input_transition {
3451 | |                 first: 0x19 as libc::c_int,
3452 | |                 last: 0x19 as libc::c_int,
3453 | |                 handler: None,
3454 | |                 state: 0 as *const input_state,
3455 | |             };
     | |______________- unnecessary `let` binding
3456 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3450 ~             
3451 ~             input_transition {
3452 +                 first: 0x19 as libc::c_int,
3453 +                 last: 0x19 as libc::c_int,
3454 +                 handler: None,
3455 +                 state: 0 as *const input_state,
3456 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3465:13
     |
3459 | /             let mut init = input_transition {
3460 | |                 first: 0x1c as libc::c_int,
3461 | |                 last: 0x1f as libc::c_int,
3462 | |                 handler: None,
3463 | |                 state: 0 as *const input_state,
3464 | |             };
     | |______________- unnecessary `let` binding
3465 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3459 ~             
3460 ~             input_transition {
3461 +                 first: 0x1c as libc::c_int,
3462 +                 last: 0x1f as libc::c_int,
3463 +                 handler: None,
3464 +                 state: 0 as *const input_state,
3465 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3476:13
     |
3468 | /             let mut init = input_transition {
3469 | |                 first: 0x20 as libc::c_int,
3470 | |                 last: 0xff as libc::c_int,
3471 | |                 handler: Some(
...    |
3474 | |                 state: 0 as *const input_state,
3475 | |             };
     | |______________- unnecessary `let` binding
3476 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3468 ~             
3469 ~             input_transition {
3470 +                 first: 0x20 as libc::c_int,
3471 +                 last: 0xff as libc::c_int,
3472 +                 handler: Some(
3473 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3474 +                 ),
3475 +                 state: 0 as *const input_state,
3476 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3485:13
     |
3479 | /             let mut init = input_transition {
3480 | |                 first: -(1 as libc::c_int),
3481 | |                 last: -(1 as libc::c_int),
3482 | |                 handler: None,
3483 | |                 state: 0 as *const input_state,
3484 | |             };
     | |______________- unnecessary `let` binding
3485 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3479 ~             
3480 ~             input_transition {
3481 +                 first: -(1 as libc::c_int),
3482 +                 last: -(1 as libc::c_int),
3483 +                 handler: None,
3484 +                 state: 0 as *const input_state,
3485 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3501:13
     |
3492 | /             let mut init = input_transition {
3493 | |                 first: 0x18 as libc::c_int,
3494 | |                 last: 0x18 as libc::c_int,
3495 | |                 handler: Some(
...    |
3499 | |                 state: &input_state_ground as *const input_state,
3500 | |             };
     | |______________- unnecessary `let` binding
3501 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3492 ~             
3493 ~             input_transition {
3494 +                 first: 0x18 as libc::c_int,
3495 +                 last: 0x18 as libc::c_int,
3496 +                 handler: Some(
3497 +                     input_c0_dispatch
3498 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3499 +                 ),
3500 +                 state: &input_state_ground as *const input_state,
3501 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3513:13
     |
3504 | /             let mut init = input_transition {
3505 | |                 first: 0x1a as libc::c_int,
3506 | |                 last: 0x1a as libc::c_int,
3507 | |                 handler: Some(
...    |
3511 | |                 state: &input_state_ground as *const input_state,
3512 | |             };
     | |______________- unnecessary `let` binding
3513 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3504 ~             
3505 ~             input_transition {
3506 +                 first: 0x1a as libc::c_int,
3507 +                 last: 0x1a as libc::c_int,
3508 +                 handler: Some(
3509 +                     input_c0_dispatch
3510 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3511 +                 ),
3512 +                 state: &input_state_ground as *const input_state,
3513 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3522:13
     |
3516 | /             let mut init = input_transition {
3517 | |                 first: 0x1b as libc::c_int,
3518 | |                 last: 0x1b as libc::c_int,
3519 | |                 handler: None,
3520 | |                 state: &input_state_esc_enter as *const input_state,
3521 | |             };
     | |______________- unnecessary `let` binding
3522 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3516 ~             
3517 ~             input_transition {
3518 +                 first: 0x1b as libc::c_int,
3519 +                 last: 0x1b as libc::c_int,
3520 +                 handler: None,
3521 +                 state: &input_state_esc_enter as *const input_state,
3522 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3531:13
     |
3525 | /             let mut init = input_transition {
3526 | |                 first: 0 as libc::c_int,
3527 | |                 last: 0x17 as libc::c_int,
3528 | |                 handler: None,
3529 | |                 state: 0 as *const input_state,
3530 | |             };
     | |______________- unnecessary `let` binding
3531 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3525 ~             
3526 ~             input_transition {
3527 +                 first: 0 as libc::c_int,
3528 +                 last: 0x17 as libc::c_int,
3529 +                 handler: None,
3530 +                 state: 0 as *const input_state,
3531 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3540:13
     |
3534 | /             let mut init = input_transition {
3535 | |                 first: 0x19 as libc::c_int,
3536 | |                 last: 0x19 as libc::c_int,
3537 | |                 handler: None,
3538 | |                 state: 0 as *const input_state,
3539 | |             };
     | |______________- unnecessary `let` binding
3540 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3534 ~             
3535 ~             input_transition {
3536 +                 first: 0x19 as libc::c_int,
3537 +                 last: 0x19 as libc::c_int,
3538 +                 handler: None,
3539 +                 state: 0 as *const input_state,
3540 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3549:13
     |
3543 | /             let mut init = input_transition {
3544 | |                 first: 0x1c as libc::c_int,
3545 | |                 last: 0x1f as libc::c_int,
3546 | |                 handler: None,
3547 | |                 state: 0 as *const input_state,
3548 | |             };
     | |______________- unnecessary `let` binding
3549 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3543 ~             
3544 ~             input_transition {
3545 +                 first: 0x1c as libc::c_int,
3546 +                 last: 0x1f as libc::c_int,
3547 +                 handler: None,
3548 +                 state: 0 as *const input_state,
3549 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3560:13
     |
3552 | /             let mut init = input_transition {
3553 | |                 first: 0x20 as libc::c_int,
3554 | |                 last: 0xff as libc::c_int,
3555 | |                 handler: Some(
...    |
3558 | |                 state: 0 as *const input_state,
3559 | |             };
     | |______________- unnecessary `let` binding
3560 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3552 ~             
3553 ~             input_transition {
3554 +                 first: 0x20 as libc::c_int,
3555 +                 last: 0xff as libc::c_int,
3556 +                 handler: Some(
3557 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3558 +                 ),
3559 +                 state: 0 as *const input_state,
3560 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3569:13
     |
3563 | /             let mut init = input_transition {
3564 | |                 first: -(1 as libc::c_int),
3565 | |                 last: -(1 as libc::c_int),
3566 | |                 handler: None,
3567 | |                 state: 0 as *const input_state,
3568 | |             };
     | |______________- unnecessary `let` binding
3569 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3563 ~             
3564 ~             input_transition {
3565 +                 first: -(1 as libc::c_int),
3566 +                 last: -(1 as libc::c_int),
3567 +                 handler: None,
3568 +                 state: 0 as *const input_state,
3569 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3585:13
     |
3576 | /             let mut init = input_transition {
3577 | |                 first: 0x18 as libc::c_int,
3578 | |                 last: 0x18 as libc::c_int,
3579 | |                 handler: Some(
...    |
3583 | |                 state: &input_state_ground as *const input_state,
3584 | |             };
     | |______________- unnecessary `let` binding
3585 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3576 ~             
3577 ~             input_transition {
3578 +                 first: 0x18 as libc::c_int,
3579 +                 last: 0x18 as libc::c_int,
3580 +                 handler: Some(
3581 +                     input_c0_dispatch
3582 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3583 +                 ),
3584 +                 state: &input_state_ground as *const input_state,
3585 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3597:13
     |
3588 | /             let mut init = input_transition {
3589 | |                 first: 0x1a as libc::c_int,
3590 | |                 last: 0x1a as libc::c_int,
3591 | |                 handler: Some(
...    |
3595 | |                 state: &input_state_ground as *const input_state,
3596 | |             };
     | |______________- unnecessary `let` binding
3597 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3588 ~             
3589 ~             input_transition {
3590 +                 first: 0x1a as libc::c_int,
3591 +                 last: 0x1a as libc::c_int,
3592 +                 handler: Some(
3593 +                     input_c0_dispatch
3594 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3595 +                 ),
3596 +                 state: &input_state_ground as *const input_state,
3597 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3606:13
     |
3600 | /             let mut init = input_transition {
3601 | |                 first: 0x1b as libc::c_int,
3602 | |                 last: 0x1b as libc::c_int,
3603 | |                 handler: None,
3604 | |                 state: &input_state_esc_enter as *const input_state,
3605 | |             };
     | |______________- unnecessary `let` binding
3606 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3600 ~             
3601 ~             input_transition {
3602 +                 first: 0x1b as libc::c_int,
3603 +                 last: 0x1b as libc::c_int,
3604 +                 handler: None,
3605 +                 state: &input_state_esc_enter as *const input_state,
3606 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3615:13
     |
3609 | /             let mut init = input_transition {
3610 | |                 first: 0 as libc::c_int,
3611 | |                 last: 0x17 as libc::c_int,
3612 | |                 handler: None,
3613 | |                 state: 0 as *const input_state,
3614 | |             };
     | |______________- unnecessary `let` binding
3615 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3609 ~             
3610 ~             input_transition {
3611 +                 first: 0 as libc::c_int,
3612 +                 last: 0x17 as libc::c_int,
3613 +                 handler: None,
3614 +                 state: 0 as *const input_state,
3615 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3624:13
     |
3618 | /             let mut init = input_transition {
3619 | |                 first: 0x19 as libc::c_int,
3620 | |                 last: 0x19 as libc::c_int,
3621 | |                 handler: None,
3622 | |                 state: 0 as *const input_state,
3623 | |             };
     | |______________- unnecessary `let` binding
3624 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3618 ~             
3619 ~             input_transition {
3620 +                 first: 0x19 as libc::c_int,
3621 +                 last: 0x19 as libc::c_int,
3622 +                 handler: None,
3623 +                 state: 0 as *const input_state,
3624 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3633:13
     |
3627 | /             let mut init = input_transition {
3628 | |                 first: 0x1c as libc::c_int,
3629 | |                 last: 0x1f as libc::c_int,
3630 | |                 handler: None,
3631 | |                 state: 0 as *const input_state,
3632 | |             };
     | |______________- unnecessary `let` binding
3633 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3627 ~             
3628 ~             input_transition {
3629 +                 first: 0x1c as libc::c_int,
3630 +                 last: 0x1f as libc::c_int,
3631 +                 handler: None,
3632 +                 state: 0 as *const input_state,
3633 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3644:13
     |
3636 | /             let mut init = input_transition {
3637 | |                 first: 0x20 as libc::c_int,
3638 | |                 last: 0xff as libc::c_int,
3639 | |                 handler: Some(
...    |
3642 | |                 state: 0 as *const input_state,
3643 | |             };
     | |______________- unnecessary `let` binding
3644 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3636 ~             
3637 ~             input_transition {
3638 +                 first: 0x20 as libc::c_int,
3639 +                 last: 0xff as libc::c_int,
3640 +                 handler: Some(
3641 +                     input_input as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3642 +                 ),
3643 +                 state: 0 as *const input_state,
3644 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3653:13
     |
3647 | /             let mut init = input_transition {
3648 | |                 first: -(1 as libc::c_int),
3649 | |                 last: -(1 as libc::c_int),
3650 | |                 handler: None,
3651 | |                 state: 0 as *const input_state,
3652 | |             };
     | |______________- unnecessary `let` binding
3653 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3647 ~             
3648 ~             input_transition {
3649 +                 first: -(1 as libc::c_int),
3650 +                 last: -(1 as libc::c_int),
3651 +                 handler: None,
3652 +                 state: 0 as *const input_state,
3653 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3669:13
     |
3660 | /             let mut init = input_transition {
3661 | |                 first: 0x18 as libc::c_int,
3662 | |                 last: 0x18 as libc::c_int,
3663 | |                 handler: Some(
...    |
3667 | |                 state: &input_state_ground as *const input_state,
3668 | |             };
     | |______________- unnecessary `let` binding
3669 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3660 ~             
3661 ~             input_transition {
3662 +                 first: 0x18 as libc::c_int,
3663 +                 last: 0x18 as libc::c_int,
3664 +                 handler: Some(
3665 +                     input_c0_dispatch
3666 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3667 +                 ),
3668 +                 state: &input_state_ground as *const input_state,
3669 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3681:13
     |
3672 | /             let mut init = input_transition {
3673 | |                 first: 0x1a as libc::c_int,
3674 | |                 last: 0x1a as libc::c_int,
3675 | |                 handler: Some(
...    |
3679 | |                 state: &input_state_ground as *const input_state,
3680 | |             };
     | |______________- unnecessary `let` binding
3681 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3672 ~             
3673 ~             input_transition {
3674 +                 first: 0x1a as libc::c_int,
3675 +                 last: 0x1a as libc::c_int,
3676 +                 handler: Some(
3677 +                     input_c0_dispatch
3678 +                         as unsafe extern "C" fn(*mut input_ctx) -> libc::c_int,
3679 +                 ),
3680 +                 state: &input_state_ground as *const input_state,
3681 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3690:13
     |
3684 | /             let mut init = input_transition {
3685 | |                 first: 0x1b as libc::c_int,
3686 | |                 last: 0x1b as libc::c_int,
3687 | |                 handler: None,
3688 | |                 state: &input_state_esc_enter as *const input_state,
3689 | |             };
     | |______________- unnecessary `let` binding
3690 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3684 ~             
3685 ~             input_transition {
3686 +                 first: 0x1b as libc::c_int,
3687 +                 last: 0x1b as libc::c_int,
3688 +                 handler: None,
3689 +                 state: &input_state_esc_enter as *const input_state,
3690 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3699:13
     |
3693 | /             let mut init = input_transition {
3694 | |                 first: 0 as libc::c_int,
3695 | |                 last: 0x17 as libc::c_int,
3696 | |                 handler: None,
3697 | |                 state: 0 as *const input_state,
3698 | |             };
     | |______________- unnecessary `let` binding
3699 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3693 ~             
3694 ~             input_transition {
3695 +                 first: 0 as libc::c_int,
3696 +                 last: 0x17 as libc::c_int,
3697 +                 handler: None,
3698 +                 state: 0 as *const input_state,
3699 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3708:13
     |
3702 | /             let mut init = input_transition {
3703 | |                 first: 0x19 as libc::c_int,
3704 | |                 last: 0x19 as libc::c_int,
3705 | |                 handler: None,
3706 | |                 state: 0 as *const input_state,
3707 | |             };
     | |______________- unnecessary `let` binding
3708 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3702 ~             
3703 ~             input_transition {
3704 +                 first: 0x19 as libc::c_int,
3705 +                 last: 0x19 as libc::c_int,
3706 +                 handler: None,
3707 +                 state: 0 as *const input_state,
3708 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3717:13
     |
3711 | /             let mut init = input_transition {
3712 | |                 first: 0x1c as libc::c_int,
3713 | |                 last: 0x1f as libc::c_int,
3714 | |                 handler: None,
3715 | |                 state: 0 as *const input_state,
3716 | |             };
     | |______________- unnecessary `let` binding
3717 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3711 ~             
3712 ~             input_transition {
3713 +                 first: 0x1c as libc::c_int,
3714 +                 last: 0x1f as libc::c_int,
3715 +                 handler: None,
3716 +                 state: 0 as *const input_state,
3717 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3726:13
     |
3720 | /             let mut init = input_transition {
3721 | |                 first: 0x20 as libc::c_int,
3722 | |                 last: 0xff as libc::c_int,
3723 | |                 handler: None,
3724 | |                 state: 0 as *const input_state,
3725 | |             };
     | |______________- unnecessary `let` binding
3726 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3720 ~             
3721 ~             input_transition {
3722 +                 first: 0x20 as libc::c_int,
3723 +                 last: 0xff as libc::c_int,
3724 +                 handler: None,
3725 +                 state: 0 as *const input_state,
3726 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3735:13
     |
3729 | /             let mut init = input_transition {
3730 | |                 first: -(1 as libc::c_int),
3731 | |                 last: -(1 as libc::c_int),
3732 | |                 handler: None,
3733 | |                 state: 0 as *const input_state,
3734 | |             };
     | |______________- unnecessary `let` binding
3735 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3729 ~             
3730 ~             input_transition {
3731 +                 first: -(1 as libc::c_int),
3732 +                 last: -(1 as libc::c_int),
3733 +                 handler: None,
3734 +                 state: 0 as *const input_state,
3735 +             }
     |

warning: unneeded `return` statement
    --> src/input.rs:3748:5
     |
3748 |     return strcmp(((*ictx).interm_buf).as_ptr() as *const libc::c_char, (*entry).interm);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp(((*ictx).interm_buf).as_ptr() as *const libc::c_char, (*entry).interm)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/input.rs:3775:9
     |
3771 | /         let mut init = timeval {
3772 | |             tv_sec: 0,
3773 | |             tv_usec: 100000 as libc::c_int as __suseconds_t,
3774 | |         };
     | |__________- unnecessary `let` binding
3775 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3771 ~         
3772 ~         timeval {
3773 +             tv_sec: 0,
3774 +             tv_usec: 100000 as libc::c_int as __suseconds_t,
3775 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/input.rs:3778:35
     |
3778 |     event_add(&mut (*ictx).timer, &mut tv);
     |                                   ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/input.rs:3798:1
     |
3798 | / pub unsafe extern "C" fn input_init(mut wp: *mut window_pane) {
3799 | |     let mut ictx: *mut input_ctx = 0 as *mut input_ctx;
3800 | |     (*wp)
3801 | |         .ictx = xcalloc(
...    |
3823 | |     input_reset(wp, 0 as libc::c_int);
3824 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/input.rs:3799:36
     |
3799 |     let mut ictx: *mut input_ctx = 0 as *mut input_ctx;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_ctx>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/input.rs:3826:1
     |
3826 | / pub unsafe extern "C" fn input_free(mut wp: *mut window_pane) {
3827 | |     let mut ictx: *mut input_ctx = (*wp).ictx;
3828 | |     let mut i: u_int = 0;
3829 | |     i = 0 as libc::c_int as u_int;
...    |
3845 | |     (*wp).ictx = 0 as *mut input_ctx;
3846 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/input.rs:3839:9
     |
3839 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/input.rs:3845:18
     |
3845 |     (*wp).ictx = 0 as *mut input_ctx;
     |                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_ctx>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/input.rs:3848:1
     |
3848 | / pub unsafe extern "C" fn input_reset(mut wp: *mut window_pane, mut clear: libc::c_int) {
3849 | |     let mut ictx: *mut input_ctx = (*wp).ictx;
3850 | |     input_reset_cell(ictx);
3851 | |     if clear != 0 {
...    |
3863 | |     (*ictx).flags = 0 as libc::c_int;
3864 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/input.rs:3855:50
     |
3855 |             screen_write_start(&mut (*ictx).ctx, 0 as *mut window_pane, &mut (*wp).base);
     |                                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/input.rs:3866:1
     |
3866 | / pub unsafe extern "C" fn input_pending(mut wp: *mut window_pane) -> *mut evbuffer {
3867 | |     return (*(*wp).ictx).since_ground;
3868 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/input.rs:3867:5
     |
3867 |     return (*(*wp).ictx).since_ground;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*(*wp).ictx).since_ground`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/input.rs:3883:1
     |
3883 | / pub unsafe extern "C" fn input_parse(mut wp: *mut window_pane) {
3884 | |     let mut ictx: *mut input_ctx = (*wp).ictx;
3885 | |     let mut itr: *const input_transition = 0 as *const input_transition;
3886 | |     let mut evb: *mut evbuffer = (*(*wp).event).input;
...    |
3953 | |     evbuffer_drain(evb, len);
3954 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/input.rs:3885:44
     |
3885 |     let mut itr: *const input_transition = 0 as *const input_transition;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<input_transition>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:3887:32
     |
3887 |     let mut buf: *mut u_char = 0 as *mut u_char;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:3898:46
     |
3898 |         screen_write_start(&mut (*ictx).ctx, 0 as *mut window_pane, &mut (*wp).base);
     |                                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input.rs:3925:13
     |
3925 |             itr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:4041:5
     |
4041 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/input.rs:3956:43
     |
3956 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:3957:38
     |
3957 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:3958:38
     |
3958 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:3959:36
     |
3959 |     let mut ip: *mut input_param = 0 as *mut input_param;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_param>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input.rs:3971:9
     |
3971 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:4039:9
     |
4039 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:4066:5
     |
4066 |     return retval;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `retval`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:4049:36
     |
4049 |     let mut ip: *mut input_param = 0 as *mut input_param;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_param>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/input.rs:4119:5
     |
4119 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: the function `screen_write_collect_add` doesn't need a mutable reference
    --> src/input.rs:4112:48
     |
4112 |     screen_write_collect_add(&mut (*ictx).ctx, &mut (*ictx).cell.cell);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/input.rs:4133:5
     |
4133 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:4147:5
     |
4147 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:4167:5
     |
4167 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: manual implementation of an assign operation
    --> src/input.rs:4153:9
     |
4153 |         available = available * 2 as libc::c_int as size_t;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `available *= 2 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: this boolean expression can be simplified
    --> src/input.rs:4210:24
     |
4210 |                       if !((*s).cx
     |  ________________________^
4211 | |                         < ((*(*s).grid).sx).wrapping_sub(1 as libc::c_int as u_int))
     | |____________________________________________________________________________________^ help: try: `(*s).cx >= ((*(*s).grid).sx).wrapping_sub(1 as libc::c_int as u_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/input.rs:4257:5
     |
4257 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/input.rs:4202:21
     |
4202 |                     (*s).cx;
     |                     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/input.rs:4250:5
     |
4250 | /     match current_block_10 {
4251 | |         2067411670301728034 => {
4252 | |             screen_write_linefeed(sctx, 0 as libc::c_int, (*ictx).cell.cell.bg as u_int);
4253 | |         }
4254 | |         _ => {}
4255 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
4250 ~     if current_block_10 == 2067411670301728034 {
4251 +         screen_write_linefeed(sctx, 0 as libc::c_int, (*ictx).cell.cell.bg as u_int);
4252 +     }
     |

warning: unneeded `return` statement
    --> src/input.rs:4368:5
     |
4368 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:4262:45
     |
4262 |     let mut entry: *mut input_table_entry = 0 as *mut input_table_entry;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/input.rs:4365:9
     |
4365 |         14 | _ => {}
     |         ^^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/input.rs:4317:21
     |
4317 |                 let ref mut fresh4 = *((*s).tabs)
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
4317 ~                 let fresh4 = &mut (*((*s).tabs)
4318 +                     .offset(((*s).cx >> 3 as libc::c_int) as isize));
     |

warning: this boolean expression can be simplified
    --> src/input.rs:4434:16
     |
4434 |             if !(n == -(1 as libc::c_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/input.rs:4801:16
     |
4801 |             if !(n == -(1 as libc::c_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/input.rs:4802:20
     |
4802 |                 if !((*ictx).last == -(1 as libc::c_int)) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*ictx).last != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/input.rs:4926:5
     |
4926 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:4373:45
     |
4373 |     let mut entry: *mut input_table_entry = 0 as *mut input_table_entry;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: manual implementation of an assign operation
    --> src/input.rs:4438:25
     |
4438 |                         n = n - 1;
     |                         ^^^^^^^^^ help: replace it with: `n -= 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/input.rs:4444:25
     |
4444 |                         cx;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:4808:25
     |
4808 |                         i;
     |                         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/input.rs:4866:29
     |
4866 |                         let ref mut fresh6 = *((*s).tabs)
     |                             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
4866 ~                         let fresh6 = &mut (*((*s).tabs)
4867 +                             .offset(((*s).cx >> 3 as libc::c_int) as isize));
     |

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/input.rs:4879:29
     |
4879 |                         let ref mut fresh7 = *_name
     |                             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
4879 ~                         let fresh7 = &mut (*_name
4880 +                             .offset((_start >> 3 as libc::c_int) as isize));
     |

warning: statement with no effect
    --> src/input.rs:4885:25
     |
4885 |                         _start;
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:4953:9
     |
4953 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5023:9
     |
5023 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5051:9
     |
5051 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/input.rs:5106:20
     |
5106 |                 if !((*(*ictx).ctx.s).mode & 0x800 as libc::c_int != 0) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*(*ictx).ctx.s).mode & 0x800 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/input.rs:5139:9
     |
5139 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/input.rs:5149:12
     |
5149 |         if !(n != -(1 as libc::c_int)) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n == -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/input.rs:5159:17
     |
5159 |                 m;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5172:17
     |
5172 |                 m;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5189:17
     |
5189 |                 m;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/input.rs:5227:9
     |
5227 | /         match current_block_17 {
5228 | |             1185040227185769797 => {
5229 | |                 m += 1;
5230 | |                 m;
...    |
5237 | |             _ => {}
5238 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
5227 ~         if current_block_17 == 1185040227185769797 {
5228 +             m += 1;
5229 +             m;
5230 +             if input_get(ictx, m as u_int, 0 as libc::c_int, -(1 as libc::c_int))
5231 +                 == -(1 as libc::c_int)
5232 +             {
5233 +                 return;
5234 +             }
5235 +         }
     |

warning: statement with no effect
    --> src/input.rs:5230:17
     |
5230 |                 m;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5240:9
     |
5240 |         m;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:5260:5
     |
5260 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/input.rs:5276:9
     |
5276 |         *i;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:5301:5
     |
5301 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/input.rs:5407:16
     |
5407 |             if !(n < i.wrapping_add(4 as libc::c_int as u_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n >= i.wrapping_add(4 as libc::c_int as u_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/input.rs:5418:16
     |
5418 |             if !(n < i.wrapping_add(2 as libc::c_int as u_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n >= i.wrapping_add(2 as libc::c_int as u_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/input.rs:5338:39
     |
5338 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5339:38
     |
5339 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5340:38
     |
5340 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/input.rs:5343:43
     |
5343 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input.rs:5351:9
     |
5351 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/input.rs:5449:16
     |
5449 |             if !(n == -(1 as libc::c_int)) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/input.rs:5452:21
     |
5452 |                     i;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/input.rs:5571:9
     |
5571 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:5617:5
     |
5617 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/input.rs:5656:9
     |
5656 |         p;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/input.rs:5813:5
     |
5813 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/input.rs:5796:9
     |
5796 |         1 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: the function `screen_write_collect_add` doesn't need a mutable reference
    --> src/input.rs:5812:48
     |
5812 |     screen_write_collect_add(&mut (*ictx).ctx, &mut (*ictx).cell.cell);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: this boolean expression can be simplified
    --> src/input.rs:5827:12
     |
5827 |         if !(!s.is_null() && *s as libc::c_int != '\0' as i32) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `s.is_null() || *s as libc::c_int == '\0' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/input.rs:5867:13
     |
5867 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:5871:13
     |
5871 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:5817:39
     |
5817 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5818:36
     |
5818 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5819:39
     |
5819 |     let mut next: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/input.rs:5888:9
     |
5888 |         return;
     |         ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:5892:9
     |
5892 |         return;
     |         ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:5908:9
     |
5908 |         return;
     |         ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:5912:9
     |
5912 |         return;
     |         ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:5916:38
     |
5916 |     let mut end: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5918:32
     |
5918 |     let mut out: *mut u_char = 0 as *mut u_char;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5922:13
     |
5922 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5923:12
     |
5923 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5924:15
     |
5924 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5925:15
     |
5925 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input.rs:5944:5
     |
5944 |     end;
     |     ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/input.rs:5960:38
     |
5960 |     screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                      ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/input.rs:5981:12
     |
5981 |         if !(*s as libc::c_int != '\0' as i32) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*s as libc::c_int == '\0' as i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/input.rs:6006:13
     |
6006 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/input.rs:6010:13
     |
6010 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/input.rs:5971:39
     |
5971 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input.rs:5972:36
     |
5972 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input.rs:5999:13
     |
5999 |             s;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1054:9
     |
1049 | /         let mut init = input_key_ent {
1050 | |             key: KEYC_BSPACE as libc::c_int as key_code,
1051 | |             data: b"\x7F\0" as *const u8 as *const libc::c_char,
1052 | |             flags: 0 as libc::c_int,
1053 | |         };
     | |__________- unnecessary `let` binding
1054 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1049 ~         
1050 ~         input_key_ent {
1051 +             key: KEYC_BSPACE as libc::c_int as key_code,
1052 +             data: b"\x7F\0" as *const u8 as *const libc::c_char,
1053 +             flags: 0 as libc::c_int,
1054 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1062:9
     |
1057 | /         let mut init = input_key_ent {
1058 | |             key: KEYC_PASTE_START as libc::c_int as key_code,
1059 | |             data: b"\x1B[200~\0" as *const u8 as *const libc::c_char,
1060 | |             flags: 0 as libc::c_int,
1061 | |         };
     | |__________- unnecessary `let` binding
1062 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1057 ~         
1058 ~         input_key_ent {
1059 +             key: KEYC_PASTE_START as libc::c_int as key_code,
1060 +             data: b"\x1B[200~\0" as *const u8 as *const libc::c_char,
1061 +             flags: 0 as libc::c_int,
1062 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1070:9
     |
1065 | /         let mut init = input_key_ent {
1066 | |             key: KEYC_PASTE_END as libc::c_int as key_code,
1067 | |             data: b"\x1B[201~\0" as *const u8 as *const libc::c_char,
1068 | |             flags: 0 as libc::c_int,
1069 | |         };
     | |__________- unnecessary `let` binding
1070 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1065 ~         
1066 ~         input_key_ent {
1067 +             key: KEYC_PASTE_END as libc::c_int as key_code,
1068 +             data: b"\x1B[201~\0" as *const u8 as *const libc::c_char,
1069 +             flags: 0 as libc::c_int,
1070 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1078:9
     |
1073 | /         let mut init = input_key_ent {
1074 | |             key: KEYC_F1 as libc::c_int as key_code,
1075 | |             data: b"\x1BOP\0" as *const u8 as *const libc::c_char,
1076 | |             flags: 0 as libc::c_int,
1077 | |         };
     | |__________- unnecessary `let` binding
1078 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1073 ~         
1074 ~         input_key_ent {
1075 +             key: KEYC_F1 as libc::c_int as key_code,
1076 +             data: b"\x1BOP\0" as *const u8 as *const libc::c_char,
1077 +             flags: 0 as libc::c_int,
1078 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1086:9
     |
1081 | /         let mut init = input_key_ent {
1082 | |             key: KEYC_F2 as libc::c_int as key_code,
1083 | |             data: b"\x1BOQ\0" as *const u8 as *const libc::c_char,
1084 | |             flags: 0 as libc::c_int,
1085 | |         };
     | |__________- unnecessary `let` binding
1086 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1081 ~         
1082 ~         input_key_ent {
1083 +             key: KEYC_F2 as libc::c_int as key_code,
1084 +             data: b"\x1BOQ\0" as *const u8 as *const libc::c_char,
1085 +             flags: 0 as libc::c_int,
1086 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1094:9
     |
1089 | /         let mut init = input_key_ent {
1090 | |             key: KEYC_F3 as libc::c_int as key_code,
1091 | |             data: b"\x1BOR\0" as *const u8 as *const libc::c_char,
1092 | |             flags: 0 as libc::c_int,
1093 | |         };
     | |__________- unnecessary `let` binding
1094 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1089 ~         
1090 ~         input_key_ent {
1091 +             key: KEYC_F3 as libc::c_int as key_code,
1092 +             data: b"\x1BOR\0" as *const u8 as *const libc::c_char,
1093 +             flags: 0 as libc::c_int,
1094 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1102:9
     |
1097 | /         let mut init = input_key_ent {
1098 | |             key: KEYC_F4 as libc::c_int as key_code,
1099 | |             data: b"\x1BOS\0" as *const u8 as *const libc::c_char,
1100 | |             flags: 0 as libc::c_int,
1101 | |         };
     | |__________- unnecessary `let` binding
1102 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1097 ~         
1098 ~         input_key_ent {
1099 +             key: KEYC_F4 as libc::c_int as key_code,
1100 +             data: b"\x1BOS\0" as *const u8 as *const libc::c_char,
1101 +             flags: 0 as libc::c_int,
1102 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1110:9
     |
1105 | /         let mut init = input_key_ent {
1106 | |             key: KEYC_F5 as libc::c_int as key_code,
1107 | |             data: b"\x1B[15~\0" as *const u8 as *const libc::c_char,
1108 | |             flags: 0 as libc::c_int,
1109 | |         };
     | |__________- unnecessary `let` binding
1110 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1105 ~         
1106 ~         input_key_ent {
1107 +             key: KEYC_F5 as libc::c_int as key_code,
1108 +             data: b"\x1B[15~\0" as *const u8 as *const libc::c_char,
1109 +             flags: 0 as libc::c_int,
1110 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1118:9
     |
1113 | /         let mut init = input_key_ent {
1114 | |             key: KEYC_F6 as libc::c_int as key_code,
1115 | |             data: b"\x1B[17~\0" as *const u8 as *const libc::c_char,
1116 | |             flags: 0 as libc::c_int,
1117 | |         };
     | |__________- unnecessary `let` binding
1118 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1113 ~         
1114 ~         input_key_ent {
1115 +             key: KEYC_F6 as libc::c_int as key_code,
1116 +             data: b"\x1B[17~\0" as *const u8 as *const libc::c_char,
1117 +             flags: 0 as libc::c_int,
1118 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1126:9
     |
1121 | /         let mut init = input_key_ent {
1122 | |             key: KEYC_F7 as libc::c_int as key_code,
1123 | |             data: b"\x1B[18~\0" as *const u8 as *const libc::c_char,
1124 | |             flags: 0 as libc::c_int,
1125 | |         };
     | |__________- unnecessary `let` binding
1126 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1121 ~         
1122 ~         input_key_ent {
1123 +             key: KEYC_F7 as libc::c_int as key_code,
1124 +             data: b"\x1B[18~\0" as *const u8 as *const libc::c_char,
1125 +             flags: 0 as libc::c_int,
1126 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1134:9
     |
1129 | /         let mut init = input_key_ent {
1130 | |             key: KEYC_F8 as libc::c_int as key_code,
1131 | |             data: b"\x1B[19~\0" as *const u8 as *const libc::c_char,
1132 | |             flags: 0 as libc::c_int,
1133 | |         };
     | |__________- unnecessary `let` binding
1134 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1129 ~         
1130 ~         input_key_ent {
1131 +             key: KEYC_F8 as libc::c_int as key_code,
1132 +             data: b"\x1B[19~\0" as *const u8 as *const libc::c_char,
1133 +             flags: 0 as libc::c_int,
1134 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1142:9
     |
1137 | /         let mut init = input_key_ent {
1138 | |             key: KEYC_F9 as libc::c_int as key_code,
1139 | |             data: b"\x1B[20~\0" as *const u8 as *const libc::c_char,
1140 | |             flags: 0 as libc::c_int,
1141 | |         };
     | |__________- unnecessary `let` binding
1142 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1137 ~         
1138 ~         input_key_ent {
1139 +             key: KEYC_F9 as libc::c_int as key_code,
1140 +             data: b"\x1B[20~\0" as *const u8 as *const libc::c_char,
1141 +             flags: 0 as libc::c_int,
1142 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1150:9
     |
1145 | /         let mut init = input_key_ent {
1146 | |             key: KEYC_F10 as libc::c_int as key_code,
1147 | |             data: b"\x1B[21~\0" as *const u8 as *const libc::c_char,
1148 | |             flags: 0 as libc::c_int,
1149 | |         };
     | |__________- unnecessary `let` binding
1150 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1145 ~         
1146 ~         input_key_ent {
1147 +             key: KEYC_F10 as libc::c_int as key_code,
1148 +             data: b"\x1B[21~\0" as *const u8 as *const libc::c_char,
1149 +             flags: 0 as libc::c_int,
1150 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1158:9
     |
1153 | /         let mut init = input_key_ent {
1154 | |             key: KEYC_F11 as libc::c_int as key_code,
1155 | |             data: b"\x1B[23~\0" as *const u8 as *const libc::c_char,
1156 | |             flags: 0 as libc::c_int,
1157 | |         };
     | |__________- unnecessary `let` binding
1158 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1153 ~         
1154 ~         input_key_ent {
1155 +             key: KEYC_F11 as libc::c_int as key_code,
1156 +             data: b"\x1B[23~\0" as *const u8 as *const libc::c_char,
1157 +             flags: 0 as libc::c_int,
1158 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1166:9
     |
1161 | /         let mut init = input_key_ent {
1162 | |             key: KEYC_F12 as libc::c_int as key_code,
1163 | |             data: b"\x1B[24~\0" as *const u8 as *const libc::c_char,
1164 | |             flags: 0 as libc::c_int,
1165 | |         };
     | |__________- unnecessary `let` binding
1166 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1161 ~         
1162 ~         input_key_ent {
1163 +             key: KEYC_F12 as libc::c_int as key_code,
1164 +             data: b"\x1B[24~\0" as *const u8 as *const libc::c_char,
1165 +             flags: 0 as libc::c_int,
1166 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1175:9
     |
1169 | /         let mut init = input_key_ent {
1170 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1171 | |                 | 0x800000000000 as libc::c_ulonglong,
1172 | |             data: b"\x1B[25~\0" as *const u8 as *const libc::c_char,
1173 | |             flags: 0 as libc::c_int,
1174 | |         };
     | |__________- unnecessary `let` binding
1175 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1169 ~         
1170 ~         input_key_ent {
1171 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1172 +                 | 0x800000000000 as libc::c_ulonglong,
1173 +             data: b"\x1B[25~\0" as *const u8 as *const libc::c_char,
1174 +             flags: 0 as libc::c_int,
1175 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1184:9
     |
1178 | /         let mut init = input_key_ent {
1179 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1180 | |                 | 0x800000000000 as libc::c_ulonglong,
1181 | |             data: b"\x1B[26~\0" as *const u8 as *const libc::c_char,
1182 | |             flags: 0 as libc::c_int,
1183 | |         };
     | |__________- unnecessary `let` binding
1184 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1178 ~         
1179 ~         input_key_ent {
1180 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1181 +                 | 0x800000000000 as libc::c_ulonglong,
1182 +             data: b"\x1B[26~\0" as *const u8 as *const libc::c_char,
1183 +             flags: 0 as libc::c_int,
1184 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1193:9
     |
1187 | /         let mut init = input_key_ent {
1188 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1189 | |                 | 0x800000000000 as libc::c_ulonglong,
1190 | |             data: b"\x1B[28~\0" as *const u8 as *const libc::c_char,
1191 | |             flags: 0 as libc::c_int,
1192 | |         };
     | |__________- unnecessary `let` binding
1193 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1187 ~         
1188 ~         input_key_ent {
1189 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1190 +                 | 0x800000000000 as libc::c_ulonglong,
1191 +             data: b"\x1B[28~\0" as *const u8 as *const libc::c_char,
1192 +             flags: 0 as libc::c_int,
1193 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1202:9
     |
1196 | /         let mut init = input_key_ent {
1197 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1198 | |                 | 0x800000000000 as libc::c_ulonglong,
1199 | |             data: b"\x1B[29~\0" as *const u8 as *const libc::c_char,
1200 | |             flags: 0 as libc::c_int,
1201 | |         };
     | |__________- unnecessary `let` binding
1202 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1196 ~         
1197 ~         input_key_ent {
1198 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1199 +                 | 0x800000000000 as libc::c_ulonglong,
1200 +             data: b"\x1B[29~\0" as *const u8 as *const libc::c_char,
1201 +             flags: 0 as libc::c_int,
1202 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1211:9
     |
1205 | /         let mut init = input_key_ent {
1206 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1207 | |                 | 0x800000000000 as libc::c_ulonglong,
1208 | |             data: b"\x1B[31~\0" as *const u8 as *const libc::c_char,
1209 | |             flags: 0 as libc::c_int,
1210 | |         };
     | |__________- unnecessary `let` binding
1211 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1205 ~         
1206 ~         input_key_ent {
1207 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1208 +                 | 0x800000000000 as libc::c_ulonglong,
1209 +             data: b"\x1B[31~\0" as *const u8 as *const libc::c_char,
1210 +             flags: 0 as libc::c_int,
1211 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1220:9
     |
1214 | /         let mut init = input_key_ent {
1215 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1216 | |                 | 0x800000000000 as libc::c_ulonglong,
1217 | |             data: b"\x1B[32~\0" as *const u8 as *const libc::c_char,
1218 | |             flags: 0 as libc::c_int,
1219 | |         };
     | |__________- unnecessary `let` binding
1220 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1214 ~         
1215 ~         input_key_ent {
1216 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1217 +                 | 0x800000000000 as libc::c_ulonglong,
1218 +             data: b"\x1B[32~\0" as *const u8 as *const libc::c_char,
1219 +             flags: 0 as libc::c_int,
1220 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1229:9
     |
1223 | /         let mut init = input_key_ent {
1224 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1225 | |                 | 0x800000000000 as libc::c_ulonglong,
1226 | |             data: b"\x1B[33~\0" as *const u8 as *const libc::c_char,
1227 | |             flags: 0 as libc::c_int,
1228 | |         };
     | |__________- unnecessary `let` binding
1229 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1223 ~         
1224 ~         input_key_ent {
1225 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1226 +                 | 0x800000000000 as libc::c_ulonglong,
1227 +             data: b"\x1B[33~\0" as *const u8 as *const libc::c_char,
1228 +             flags: 0 as libc::c_int,
1229 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1238:9
     |
1232 | /         let mut init = input_key_ent {
1233 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1234 | |                 | 0x800000000000 as libc::c_ulonglong,
1235 | |             data: b"\x1B[34~\0" as *const u8 as *const libc::c_char,
1236 | |             flags: 0 as libc::c_int,
1237 | |         };
     | |__________- unnecessary `let` binding
1238 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1232 ~         
1233 ~         input_key_ent {
1234 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1235 +                 | 0x800000000000 as libc::c_ulonglong,
1236 +             data: b"\x1B[34~\0" as *const u8 as *const libc::c_char,
1237 +             flags: 0 as libc::c_int,
1238 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1246:9
     |
1241 | /         let mut init = input_key_ent {
1242 | |             key: KEYC_IC as libc::c_int as key_code,
1243 | |             data: b"\x1B[2~\0" as *const u8 as *const libc::c_char,
1244 | |             flags: 0 as libc::c_int,
1245 | |         };
     | |__________- unnecessary `let` binding
1246 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1241 ~         
1242 ~         input_key_ent {
1243 +             key: KEYC_IC as libc::c_int as key_code,
1244 +             data: b"\x1B[2~\0" as *const u8 as *const libc::c_char,
1245 +             flags: 0 as libc::c_int,
1246 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1254:9
     |
1249 | /         let mut init = input_key_ent {
1250 | |             key: KEYC_DC as libc::c_int as key_code,
1251 | |             data: b"\x1B[3~\0" as *const u8 as *const libc::c_char,
1252 | |             flags: 0 as libc::c_int,
1253 | |         };
     | |__________- unnecessary `let` binding
1254 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1249 ~         
1250 ~         input_key_ent {
1251 +             key: KEYC_DC as libc::c_int as key_code,
1252 +             data: b"\x1B[3~\0" as *const u8 as *const libc::c_char,
1253 +             flags: 0 as libc::c_int,
1254 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1262:9
     |
1257 | /         let mut init = input_key_ent {
1258 | |             key: KEYC_HOME as libc::c_int as key_code,
1259 | |             data: b"\x1B[1~\0" as *const u8 as *const libc::c_char,
1260 | |             flags: 0 as libc::c_int,
1261 | |         };
     | |__________- unnecessary `let` binding
1262 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1257 ~         
1258 ~         input_key_ent {
1259 +             key: KEYC_HOME as libc::c_int as key_code,
1260 +             data: b"\x1B[1~\0" as *const u8 as *const libc::c_char,
1261 +             flags: 0 as libc::c_int,
1262 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1270:9
     |
1265 | /         let mut init = input_key_ent {
1266 | |             key: KEYC_END as libc::c_int as key_code,
1267 | |             data: b"\x1B[4~\0" as *const u8 as *const libc::c_char,
1268 | |             flags: 0 as libc::c_int,
1269 | |         };
     | |__________- unnecessary `let` binding
1270 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1265 ~         
1266 ~         input_key_ent {
1267 +             key: KEYC_END as libc::c_int as key_code,
1268 +             data: b"\x1B[4~\0" as *const u8 as *const libc::c_char,
1269 +             flags: 0 as libc::c_int,
1270 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1278:9
     |
1273 | /         let mut init = input_key_ent {
1274 | |             key: KEYC_NPAGE as libc::c_int as key_code,
1275 | |             data: b"\x1B[6~\0" as *const u8 as *const libc::c_char,
1276 | |             flags: 0 as libc::c_int,
1277 | |         };
     | |__________- unnecessary `let` binding
1278 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1273 ~         
1274 ~         input_key_ent {
1275 +             key: KEYC_NPAGE as libc::c_int as key_code,
1276 +             data: b"\x1B[6~\0" as *const u8 as *const libc::c_char,
1277 +             flags: 0 as libc::c_int,
1278 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1286:9
     |
1281 | /         let mut init = input_key_ent {
1282 | |             key: KEYC_PPAGE as libc::c_int as key_code,
1283 | |             data: b"\x1B[5~\0" as *const u8 as *const libc::c_char,
1284 | |             flags: 0 as libc::c_int,
1285 | |         };
     | |__________- unnecessary `let` binding
1286 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1281 ~         
1282 ~         input_key_ent {
1283 +             key: KEYC_PPAGE as libc::c_int as key_code,
1284 +             data: b"\x1B[5~\0" as *const u8 as *const libc::c_char,
1285 +             flags: 0 as libc::c_int,
1286 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1294:9
     |
1289 | /         let mut init = input_key_ent {
1290 | |             key: KEYC_BTAB as libc::c_int as key_code,
1291 | |             data: b"\x1B[Z\0" as *const u8 as *const libc::c_char,
1292 | |             flags: 0 as libc::c_int,
1293 | |         };
     | |__________- unnecessary `let` binding
1294 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1289 ~         
1290 ~         input_key_ent {
1291 +             key: KEYC_BTAB as libc::c_int as key_code,
1292 +             data: b"\x1B[Z\0" as *const u8 as *const libc::c_char,
1293 +             flags: 0 as libc::c_int,
1294 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1303:9
     |
1297 | /         let mut init = input_key_ent {
1298 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1299 | |                 | 0x400000000000 as libc::c_ulonglong,
1300 | |             data: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1301 | |             flags: 0x2 as libc::c_int,
1302 | |         };
     | |__________- unnecessary `let` binding
1303 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1297 ~         
1298 ~         input_key_ent {
1299 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1300 +                 | 0x400000000000 as libc::c_ulonglong,
1301 +             data: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1302 +             flags: 0x2 as libc::c_int,
1303 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1312:9
     |
1306 | /         let mut init = input_key_ent {
1307 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1308 | |                 | 0x400000000000 as libc::c_ulonglong,
1309 | |             data: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1310 | |             flags: 0x2 as libc::c_int,
1311 | |         };
     | |__________- unnecessary `let` binding
1312 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1306 ~         
1307 ~         input_key_ent {
1308 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1309 +                 | 0x400000000000 as libc::c_ulonglong,
1310 +             data: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1311 +             flags: 0x2 as libc::c_int,
1312 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1321:9
     |
1315 | /         let mut init = input_key_ent {
1316 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1317 | |                 | 0x400000000000 as libc::c_ulonglong,
1318 | |             data: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1319 | |             flags: 0x2 as libc::c_int,
1320 | |         };
     | |__________- unnecessary `let` binding
1321 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1315 ~         
1316 ~         input_key_ent {
1317 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1318 +                 | 0x400000000000 as libc::c_ulonglong,
1319 +             data: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1320 +             flags: 0x2 as libc::c_int,
1321 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1330:9
     |
1324 | /         let mut init = input_key_ent {
1325 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1326 | |                 | 0x400000000000 as libc::c_ulonglong,
1327 | |             data: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1328 | |             flags: 0x2 as libc::c_int,
1329 | |         };
     | |__________- unnecessary `let` binding
1330 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1324 ~         
1325 ~         input_key_ent {
1326 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1327 +                 | 0x400000000000 as libc::c_ulonglong,
1328 +             data: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1329 +             flags: 0x2 as libc::c_int,
1330 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1338:9
     |
1333 | /         let mut init = input_key_ent {
1334 | |             key: KEYC_UP as libc::c_int as key_code,
1335 | |             data: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1336 | |             flags: 0x2 as libc::c_int,
1337 | |         };
     | |__________- unnecessary `let` binding
1338 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1333 ~         
1334 ~         input_key_ent {
1335 +             key: KEYC_UP as libc::c_int as key_code,
1336 +             data: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1337 +             flags: 0x2 as libc::c_int,
1338 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1346:9
     |
1341 | /         let mut init = input_key_ent {
1342 | |             key: KEYC_DOWN as libc::c_int as key_code,
1343 | |             data: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1344 | |             flags: 0x2 as libc::c_int,
1345 | |         };
     | |__________- unnecessary `let` binding
1346 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1341 ~         
1342 ~         input_key_ent {
1343 +             key: KEYC_DOWN as libc::c_int as key_code,
1344 +             data: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1345 +             flags: 0x2 as libc::c_int,
1346 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1354:9
     |
1349 | /         let mut init = input_key_ent {
1350 | |             key: KEYC_RIGHT as libc::c_int as key_code,
1351 | |             data: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1352 | |             flags: 0x2 as libc::c_int,
1353 | |         };
     | |__________- unnecessary `let` binding
1354 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1349 ~         
1350 ~         input_key_ent {
1351 +             key: KEYC_RIGHT as libc::c_int as key_code,
1352 +             data: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1353 +             flags: 0x2 as libc::c_int,
1354 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1362:9
     |
1357 | /         let mut init = input_key_ent {
1358 | |             key: KEYC_LEFT as libc::c_int as key_code,
1359 | |             data: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1360 | |             flags: 0x2 as libc::c_int,
1361 | |         };
     | |__________- unnecessary `let` binding
1362 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1357 ~         
1358 ~         input_key_ent {
1359 +             key: KEYC_LEFT as libc::c_int as key_code,
1360 +             data: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1361 +             flags: 0x2 as libc::c_int,
1362 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1371:9
     |
1365 | /         let mut init = input_key_ent {
1366 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1367 | |                 | 0x400000000000 as libc::c_ulonglong,
1368 | |             data: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1369 | |             flags: 0 as libc::c_int,
1370 | |         };
     | |__________- unnecessary `let` binding
1371 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1365 ~         
1366 ~         input_key_ent {
1367 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1368 +                 | 0x400000000000 as libc::c_ulonglong,
1369 +             data: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1370 +             flags: 0 as libc::c_int,
1371 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1380:9
     |
1374 | /         let mut init = input_key_ent {
1375 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1376 | |                 | 0x400000000000 as libc::c_ulonglong,
1377 | |             data: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1378 | |             flags: 0 as libc::c_int,
1379 | |         };
     | |__________- unnecessary `let` binding
1380 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1374 ~         
1375 ~         input_key_ent {
1376 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1377 +                 | 0x400000000000 as libc::c_ulonglong,
1378 +             data: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1379 +             flags: 0 as libc::c_int,
1380 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1389:9
     |
1383 | /         let mut init = input_key_ent {
1384 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1385 | |                 | 0x400000000000 as libc::c_ulonglong,
1386 | |             data: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1387 | |             flags: 0 as libc::c_int,
1388 | |         };
     | |__________- unnecessary `let` binding
1389 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1383 ~         
1384 ~         input_key_ent {
1385 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1386 +                 | 0x400000000000 as libc::c_ulonglong,
1387 +             data: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1388 +             flags: 0 as libc::c_int,
1389 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1398:9
     |
1392 | /         let mut init = input_key_ent {
1393 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1394 | |                 | 0x400000000000 as libc::c_ulonglong,
1395 | |             data: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1396 | |             flags: 0 as libc::c_int,
1397 | |         };
     | |__________- unnecessary `let` binding
1398 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1392 ~         
1393 ~         input_key_ent {
1394 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1395 +                 | 0x400000000000 as libc::c_ulonglong,
1396 +             data: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1397 +             flags: 0 as libc::c_int,
1398 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1406:9
     |
1401 | /         let mut init = input_key_ent {
1402 | |             key: KEYC_UP as libc::c_int as key_code,
1403 | |             data: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1404 | |             flags: 0 as libc::c_int,
1405 | |         };
     | |__________- unnecessary `let` binding
1406 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1401 ~         
1402 ~         input_key_ent {
1403 +             key: KEYC_UP as libc::c_int as key_code,
1404 +             data: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1405 +             flags: 0 as libc::c_int,
1406 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1414:9
     |
1409 | /         let mut init = input_key_ent {
1410 | |             key: KEYC_DOWN as libc::c_int as key_code,
1411 | |             data: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1412 | |             flags: 0 as libc::c_int,
1413 | |         };
     | |__________- unnecessary `let` binding
1414 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1409 ~         
1410 ~         input_key_ent {
1411 +             key: KEYC_DOWN as libc::c_int as key_code,
1412 +             data: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1413 +             flags: 0 as libc::c_int,
1414 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1422:9
     |
1417 | /         let mut init = input_key_ent {
1418 | |             key: KEYC_RIGHT as libc::c_int as key_code,
1419 | |             data: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1420 | |             flags: 0 as libc::c_int,
1421 | |         };
     | |__________- unnecessary `let` binding
1422 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1417 ~         
1418 ~         input_key_ent {
1419 +             key: KEYC_RIGHT as libc::c_int as key_code,
1420 +             data: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1421 +             flags: 0 as libc::c_int,
1422 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1430:9
     |
1425 | /         let mut init = input_key_ent {
1426 | |             key: KEYC_LEFT as libc::c_int as key_code,
1427 | |             data: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1428 | |             flags: 0 as libc::c_int,
1429 | |         };
     | |__________- unnecessary `let` binding
1430 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1425 ~         
1426 ~         input_key_ent {
1427 +             key: KEYC_LEFT as libc::c_int as key_code,
1428 +             data: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1429 +             flags: 0 as libc::c_int,
1430 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1438:9
     |
1433 | /         let mut init = input_key_ent {
1434 | |             key: KEYC_KP_SLASH as libc::c_int as key_code,
1435 | |             data: b"\x1BOo\0" as *const u8 as *const libc::c_char,
1436 | |             flags: 0x1 as libc::c_int,
1437 | |         };
     | |__________- unnecessary `let` binding
1438 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1433 ~         
1434 ~         input_key_ent {
1435 +             key: KEYC_KP_SLASH as libc::c_int as key_code,
1436 +             data: b"\x1BOo\0" as *const u8 as *const libc::c_char,
1437 +             flags: 0x1 as libc::c_int,
1438 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1446:9
     |
1441 | /         let mut init = input_key_ent {
1442 | |             key: KEYC_KP_STAR as libc::c_int as key_code,
1443 | |             data: b"\x1BOj\0" as *const u8 as *const libc::c_char,
1444 | |             flags: 0x1 as libc::c_int,
1445 | |         };
     | |__________- unnecessary `let` binding
1446 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1441 ~         
1442 ~         input_key_ent {
1443 +             key: KEYC_KP_STAR as libc::c_int as key_code,
1444 +             data: b"\x1BOj\0" as *const u8 as *const libc::c_char,
1445 +             flags: 0x1 as libc::c_int,
1446 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1454:9
     |
1449 | /         let mut init = input_key_ent {
1450 | |             key: KEYC_KP_MINUS as libc::c_int as key_code,
1451 | |             data: b"\x1BOm\0" as *const u8 as *const libc::c_char,
1452 | |             flags: 0x1 as libc::c_int,
1453 | |         };
     | |__________- unnecessary `let` binding
1454 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1449 ~         
1450 ~         input_key_ent {
1451 +             key: KEYC_KP_MINUS as libc::c_int as key_code,
1452 +             data: b"\x1BOm\0" as *const u8 as *const libc::c_char,
1453 +             flags: 0x1 as libc::c_int,
1454 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1462:9
     |
1457 | /         let mut init = input_key_ent {
1458 | |             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1459 | |             data: b"\x1BOw\0" as *const u8 as *const libc::c_char,
1460 | |             flags: 0x1 as libc::c_int,
1461 | |         };
     | |__________- unnecessary `let` binding
1462 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1457 ~         
1458 ~         input_key_ent {
1459 +             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1460 +             data: b"\x1BOw\0" as *const u8 as *const libc::c_char,
1461 +             flags: 0x1 as libc::c_int,
1462 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1470:9
     |
1465 | /         let mut init = input_key_ent {
1466 | |             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1467 | |             data: b"\x1BOx\0" as *const u8 as *const libc::c_char,
1468 | |             flags: 0x1 as libc::c_int,
1469 | |         };
     | |__________- unnecessary `let` binding
1470 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1465 ~         
1466 ~         input_key_ent {
1467 +             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1468 +             data: b"\x1BOx\0" as *const u8 as *const libc::c_char,
1469 +             flags: 0x1 as libc::c_int,
1470 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1478:9
     |
1473 | /         let mut init = input_key_ent {
1474 | |             key: KEYC_KP_NINE as libc::c_int as key_code,
1475 | |             data: b"\x1BOy\0" as *const u8 as *const libc::c_char,
1476 | |             flags: 0x1 as libc::c_int,
1477 | |         };
     | |__________- unnecessary `let` binding
1478 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1473 ~         
1474 ~         input_key_ent {
1475 +             key: KEYC_KP_NINE as libc::c_int as key_code,
1476 +             data: b"\x1BOy\0" as *const u8 as *const libc::c_char,
1477 +             flags: 0x1 as libc::c_int,
1478 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1486:9
     |
1481 | /         let mut init = input_key_ent {
1482 | |             key: KEYC_KP_PLUS as libc::c_int as key_code,
1483 | |             data: b"\x1BOk\0" as *const u8 as *const libc::c_char,
1484 | |             flags: 0x1 as libc::c_int,
1485 | |         };
     | |__________- unnecessary `let` binding
1486 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1481 ~         
1482 ~         input_key_ent {
1483 +             key: KEYC_KP_PLUS as libc::c_int as key_code,
1484 +             data: b"\x1BOk\0" as *const u8 as *const libc::c_char,
1485 +             flags: 0x1 as libc::c_int,
1486 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1494:9
     |
1489 | /         let mut init = input_key_ent {
1490 | |             key: KEYC_KP_FOUR as libc::c_int as key_code,
1491 | |             data: b"\x1BOt\0" as *const u8 as *const libc::c_char,
1492 | |             flags: 0x1 as libc::c_int,
1493 | |         };
     | |__________- unnecessary `let` binding
1494 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1489 ~         
1490 ~         input_key_ent {
1491 +             key: KEYC_KP_FOUR as libc::c_int as key_code,
1492 +             data: b"\x1BOt\0" as *const u8 as *const libc::c_char,
1493 +             flags: 0x1 as libc::c_int,
1494 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1502:9
     |
1497 | /         let mut init = input_key_ent {
1498 | |             key: KEYC_KP_FIVE as libc::c_int as key_code,
1499 | |             data: b"\x1BOu\0" as *const u8 as *const libc::c_char,
1500 | |             flags: 0x1 as libc::c_int,
1501 | |         };
     | |__________- unnecessary `let` binding
1502 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1497 ~         
1498 ~         input_key_ent {
1499 +             key: KEYC_KP_FIVE as libc::c_int as key_code,
1500 +             data: b"\x1BOu\0" as *const u8 as *const libc::c_char,
1501 +             flags: 0x1 as libc::c_int,
1502 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1510:9
     |
1505 | /         let mut init = input_key_ent {
1506 | |             key: KEYC_KP_SIX as libc::c_int as key_code,
1507 | |             data: b"\x1BOv\0" as *const u8 as *const libc::c_char,
1508 | |             flags: 0x1 as libc::c_int,
1509 | |         };
     | |__________- unnecessary `let` binding
1510 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1505 ~         
1506 ~         input_key_ent {
1507 +             key: KEYC_KP_SIX as libc::c_int as key_code,
1508 +             data: b"\x1BOv\0" as *const u8 as *const libc::c_char,
1509 +             flags: 0x1 as libc::c_int,
1510 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1518:9
     |
1513 | /         let mut init = input_key_ent {
1514 | |             key: KEYC_KP_ONE as libc::c_int as key_code,
1515 | |             data: b"\x1BOq\0" as *const u8 as *const libc::c_char,
1516 | |             flags: 0x1 as libc::c_int,
1517 | |         };
     | |__________- unnecessary `let` binding
1518 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1513 ~         
1514 ~         input_key_ent {
1515 +             key: KEYC_KP_ONE as libc::c_int as key_code,
1516 +             data: b"\x1BOq\0" as *const u8 as *const libc::c_char,
1517 +             flags: 0x1 as libc::c_int,
1518 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1526:9
     |
1521 | /         let mut init = input_key_ent {
1522 | |             key: KEYC_KP_TWO as libc::c_int as key_code,
1523 | |             data: b"\x1BOr\0" as *const u8 as *const libc::c_char,
1524 | |             flags: 0x1 as libc::c_int,
1525 | |         };
     | |__________- unnecessary `let` binding
1526 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1521 ~         
1522 ~         input_key_ent {
1523 +             key: KEYC_KP_TWO as libc::c_int as key_code,
1524 +             data: b"\x1BOr\0" as *const u8 as *const libc::c_char,
1525 +             flags: 0x1 as libc::c_int,
1526 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1534:9
     |
1529 | /         let mut init = input_key_ent {
1530 | |             key: KEYC_KP_THREE as libc::c_int as key_code,
1531 | |             data: b"\x1BOs\0" as *const u8 as *const libc::c_char,
1532 | |             flags: 0x1 as libc::c_int,
1533 | |         };
     | |__________- unnecessary `let` binding
1534 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1529 ~         
1530 ~         input_key_ent {
1531 +             key: KEYC_KP_THREE as libc::c_int as key_code,
1532 +             data: b"\x1BOs\0" as *const u8 as *const libc::c_char,
1533 +             flags: 0x1 as libc::c_int,
1534 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1542:9
     |
1537 | /         let mut init = input_key_ent {
1538 | |             key: KEYC_KP_ENTER as libc::c_int as key_code,
1539 | |             data: b"\x1BOM\0" as *const u8 as *const libc::c_char,
1540 | |             flags: 0x1 as libc::c_int,
1541 | |         };
     | |__________- unnecessary `let` binding
1542 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1537 ~         
1538 ~         input_key_ent {
1539 +             key: KEYC_KP_ENTER as libc::c_int as key_code,
1540 +             data: b"\x1BOM\0" as *const u8 as *const libc::c_char,
1541 +             flags: 0x1 as libc::c_int,
1542 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1550:9
     |
1545 | /         let mut init = input_key_ent {
1546 | |             key: KEYC_KP_ZERO as libc::c_int as key_code,
1547 | |             data: b"\x1BOp\0" as *const u8 as *const libc::c_char,
1548 | |             flags: 0x1 as libc::c_int,
1549 | |         };
     | |__________- unnecessary `let` binding
1550 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1545 ~         
1546 ~         input_key_ent {
1547 +             key: KEYC_KP_ZERO as libc::c_int as key_code,
1548 +             data: b"\x1BOp\0" as *const u8 as *const libc::c_char,
1549 +             flags: 0x1 as libc::c_int,
1550 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1558:9
     |
1553 | /         let mut init = input_key_ent {
1554 | |             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1555 | |             data: b"\x1BOn\0" as *const u8 as *const libc::c_char,
1556 | |             flags: 0x1 as libc::c_int,
1557 | |         };
     | |__________- unnecessary `let` binding
1558 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1553 ~         
1554 ~         input_key_ent {
1555 +             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1556 +             data: b"\x1BOn\0" as *const u8 as *const libc::c_char,
1557 +             flags: 0x1 as libc::c_int,
1558 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1566:9
     |
1561 | /         let mut init = input_key_ent {
1562 | |             key: KEYC_KP_SLASH as libc::c_int as key_code,
1563 | |             data: b"/\0" as *const u8 as *const libc::c_char,
1564 | |             flags: 0 as libc::c_int,
1565 | |         };
     | |__________- unnecessary `let` binding
1566 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1561 ~         
1562 ~         input_key_ent {
1563 +             key: KEYC_KP_SLASH as libc::c_int as key_code,
1564 +             data: b"/\0" as *const u8 as *const libc::c_char,
1565 +             flags: 0 as libc::c_int,
1566 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1574:9
     |
1569 | /         let mut init = input_key_ent {
1570 | |             key: KEYC_KP_STAR as libc::c_int as key_code,
1571 | |             data: b"*\0" as *const u8 as *const libc::c_char,
1572 | |             flags: 0 as libc::c_int,
1573 | |         };
     | |__________- unnecessary `let` binding
1574 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1569 ~         
1570 ~         input_key_ent {
1571 +             key: KEYC_KP_STAR as libc::c_int as key_code,
1572 +             data: b"*\0" as *const u8 as *const libc::c_char,
1573 +             flags: 0 as libc::c_int,
1574 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1582:9
     |
1577 | /         let mut init = input_key_ent {
1578 | |             key: KEYC_KP_MINUS as libc::c_int as key_code,
1579 | |             data: b"-\0" as *const u8 as *const libc::c_char,
1580 | |             flags: 0 as libc::c_int,
1581 | |         };
     | |__________- unnecessary `let` binding
1582 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1577 ~         
1578 ~         input_key_ent {
1579 +             key: KEYC_KP_MINUS as libc::c_int as key_code,
1580 +             data: b"-\0" as *const u8 as *const libc::c_char,
1581 +             flags: 0 as libc::c_int,
1582 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1590:9
     |
1585 | /         let mut init = input_key_ent {
1586 | |             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1587 | |             data: b"7\0" as *const u8 as *const libc::c_char,
1588 | |             flags: 0 as libc::c_int,
1589 | |         };
     | |__________- unnecessary `let` binding
1590 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1585 ~         
1586 ~         input_key_ent {
1587 +             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1588 +             data: b"7\0" as *const u8 as *const libc::c_char,
1589 +             flags: 0 as libc::c_int,
1590 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1598:9
     |
1593 | /         let mut init = input_key_ent {
1594 | |             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1595 | |             data: b"8\0" as *const u8 as *const libc::c_char,
1596 | |             flags: 0 as libc::c_int,
1597 | |         };
     | |__________- unnecessary `let` binding
1598 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1593 ~         
1594 ~         input_key_ent {
1595 +             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1596 +             data: b"8\0" as *const u8 as *const libc::c_char,
1597 +             flags: 0 as libc::c_int,
1598 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1606:9
     |
1601 | /         let mut init = input_key_ent {
1602 | |             key: KEYC_KP_NINE as libc::c_int as key_code,
1603 | |             data: b"9\0" as *const u8 as *const libc::c_char,
1604 | |             flags: 0 as libc::c_int,
1605 | |         };
     | |__________- unnecessary `let` binding
1606 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1601 ~         
1602 ~         input_key_ent {
1603 +             key: KEYC_KP_NINE as libc::c_int as key_code,
1604 +             data: b"9\0" as *const u8 as *const libc::c_char,
1605 +             flags: 0 as libc::c_int,
1606 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1614:9
     |
1609 | /         let mut init = input_key_ent {
1610 | |             key: KEYC_KP_PLUS as libc::c_int as key_code,
1611 | |             data: b"+\0" as *const u8 as *const libc::c_char,
1612 | |             flags: 0 as libc::c_int,
1613 | |         };
     | |__________- unnecessary `let` binding
1614 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1609 ~         
1610 ~         input_key_ent {
1611 +             key: KEYC_KP_PLUS as libc::c_int as key_code,
1612 +             data: b"+\0" as *const u8 as *const libc::c_char,
1613 +             flags: 0 as libc::c_int,
1614 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1622:9
     |
1617 | /         let mut init = input_key_ent {
1618 | |             key: KEYC_KP_FOUR as libc::c_int as key_code,
1619 | |             data: b"4\0" as *const u8 as *const libc::c_char,
1620 | |             flags: 0 as libc::c_int,
1621 | |         };
     | |__________- unnecessary `let` binding
1622 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1617 ~         
1618 ~         input_key_ent {
1619 +             key: KEYC_KP_FOUR as libc::c_int as key_code,
1620 +             data: b"4\0" as *const u8 as *const libc::c_char,
1621 +             flags: 0 as libc::c_int,
1622 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1630:9
     |
1625 | /         let mut init = input_key_ent {
1626 | |             key: KEYC_KP_FIVE as libc::c_int as key_code,
1627 | |             data: b"5\0" as *const u8 as *const libc::c_char,
1628 | |             flags: 0 as libc::c_int,
1629 | |         };
     | |__________- unnecessary `let` binding
1630 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1625 ~         
1626 ~         input_key_ent {
1627 +             key: KEYC_KP_FIVE as libc::c_int as key_code,
1628 +             data: b"5\0" as *const u8 as *const libc::c_char,
1629 +             flags: 0 as libc::c_int,
1630 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1638:9
     |
1633 | /         let mut init = input_key_ent {
1634 | |             key: KEYC_KP_SIX as libc::c_int as key_code,
1635 | |             data: b"6\0" as *const u8 as *const libc::c_char,
1636 | |             flags: 0 as libc::c_int,
1637 | |         };
     | |__________- unnecessary `let` binding
1638 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1633 ~         
1634 ~         input_key_ent {
1635 +             key: KEYC_KP_SIX as libc::c_int as key_code,
1636 +             data: b"6\0" as *const u8 as *const libc::c_char,
1637 +             flags: 0 as libc::c_int,
1638 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1646:9
     |
1641 | /         let mut init = input_key_ent {
1642 | |             key: KEYC_KP_ONE as libc::c_int as key_code,
1643 | |             data: b"1\0" as *const u8 as *const libc::c_char,
1644 | |             flags: 0 as libc::c_int,
1645 | |         };
     | |__________- unnecessary `let` binding
1646 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1641 ~         
1642 ~         input_key_ent {
1643 +             key: KEYC_KP_ONE as libc::c_int as key_code,
1644 +             data: b"1\0" as *const u8 as *const libc::c_char,
1645 +             flags: 0 as libc::c_int,
1646 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1654:9
     |
1649 | /         let mut init = input_key_ent {
1650 | |             key: KEYC_KP_TWO as libc::c_int as key_code,
1651 | |             data: b"2\0" as *const u8 as *const libc::c_char,
1652 | |             flags: 0 as libc::c_int,
1653 | |         };
     | |__________- unnecessary `let` binding
1654 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1649 ~         
1650 ~         input_key_ent {
1651 +             key: KEYC_KP_TWO as libc::c_int as key_code,
1652 +             data: b"2\0" as *const u8 as *const libc::c_char,
1653 +             flags: 0 as libc::c_int,
1654 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1662:9
     |
1657 | /         let mut init = input_key_ent {
1658 | |             key: KEYC_KP_THREE as libc::c_int as key_code,
1659 | |             data: b"3\0" as *const u8 as *const libc::c_char,
1660 | |             flags: 0 as libc::c_int,
1661 | |         };
     | |__________- unnecessary `let` binding
1662 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1657 ~         
1658 ~         input_key_ent {
1659 +             key: KEYC_KP_THREE as libc::c_int as key_code,
1660 +             data: b"3\0" as *const u8 as *const libc::c_char,
1661 +             flags: 0 as libc::c_int,
1662 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1670:9
     |
1665 | /         let mut init = input_key_ent {
1666 | |             key: KEYC_KP_ENTER as libc::c_int as key_code,
1667 | |             data: b"\n\0" as *const u8 as *const libc::c_char,
1668 | |             flags: 0 as libc::c_int,
1669 | |         };
     | |__________- unnecessary `let` binding
1670 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1665 ~         
1666 ~         input_key_ent {
1667 +             key: KEYC_KP_ENTER as libc::c_int as key_code,
1668 +             data: b"\n\0" as *const u8 as *const libc::c_char,
1669 +             flags: 0 as libc::c_int,
1670 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1678:9
     |
1673 | /         let mut init = input_key_ent {
1674 | |             key: KEYC_KP_ZERO as libc::c_int as key_code,
1675 | |             data: b"0\0" as *const u8 as *const libc::c_char,
1676 | |             flags: 0 as libc::c_int,
1677 | |         };
     | |__________- unnecessary `let` binding
1678 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1673 ~         
1674 ~         input_key_ent {
1675 +             key: KEYC_KP_ZERO as libc::c_int as key_code,
1676 +             data: b"0\0" as *const u8 as *const libc::c_char,
1677 +             flags: 0 as libc::c_int,
1678 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/input_keys.rs:1686:9
     |
1681 | /         let mut init = input_key_ent {
1682 | |             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1683 | |             data: b".\0" as *const u8 as *const libc::c_char,
1684 | |             flags: 0 as libc::c_int,
1685 | |         };
     | |__________- unnecessary `let` binding
1686 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1681 ~         
1682 ~         input_key_ent {
1683 +             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1684 +             data: b".\0" as *const u8 as *const libc::c_char,
1685 +             flags: 0 as libc::c_int,
1686 +         }
     |

warning: unneeded `return` statement
    --> src/input_keys.rs:1703:5
     |
1703 |     return 1 as libc::c_int as size_t;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int as size_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/input_keys.rs:1706:1
     |
1706 | / pub unsafe extern "C" fn input_key(
1707 | |     mut wp: *mut window_pane,
1708 | |     mut key: key_code,
1709 | |     mut m: *mut mouse_event,
...    |
1843 | |     bufferevent_write((*wp).event, (*ike).data as *const libc::c_void, dlen);
1844 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/input_keys.rs:1711:41
     |
1711 |     let mut ike: *const input_key_ent = 0 as *const input_key_ent;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<input_key_ent>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/input_keys.rs:1714:38
     |
1714 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/input_keys.rs:1821:9
     |
1821 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/job.rs:1009:5
     |
1006 | /     let mut init = joblist {
1007 | |         lh_first: 0 as *const job as *mut job,
1008 | |     };
     | |______- unnecessary `let` binding
1009 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1006 ~     
1007 ~     joblist {
1008 +         lh_first: 0 as *const job as *mut job,
1009 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/job.rs:1012:1
     |
1012 | / pub unsafe extern "C" fn job_run(
1013 | |     mut cmd: *const libc::c_char,
1014 | |     mut s: *mut session,
1015 | |     mut cwd: *const libc::c_char,
...    |
1156 | |     return job;
1157 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/job.rs:1156:5
     |
1156 |     return job;
     |     ^^^^^^^^^^^ help: remove `return`: `job`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/job.rs:1022:29
     |
1022 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/job.rs:1023:33
     |
1023 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/job.rs:1027:41
     |
1027 |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/job.rs:1037:16
     |
1037 |         return 0 as *mut job;
     |                ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/job.rs:1041:35
     |
1041 |     sigprocmask(0 as libc::c_int, &mut set, &mut oldset);
     |                                   ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/job.rs:1045:43
     |
1045 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/job.rs:1045:56
     |
1045 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/job.rs:1049:20
     |
1049 |             return 0 as *mut job;
     |                    ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/job.rs:1053:43
     |
1053 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/job.rs:1053:56
     |
1053 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/job.rs:1098:17
     |
1098 |                 0 as *mut libc::c_void as *mut libc::c_char,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/job.rs:1104:35
     |
1104 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                   ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/job.rs:1104:48
     |
1104 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/job.rs:1159:1
     |
1159 | / pub unsafe extern "C" fn job_free(mut job: *mut job) {
1160 | |     log_debug(b"free job %p: %s\0" as *const u8 as *const libc::c_char, job, (*job).cmd);
1161 | |     if !((*job).entry.le_next).is_null() {
1162 | |         (*(*job).entry.le_next).entry.le_prev = (*job).entry.le_prev;
...    |
1178 | |     free(job as *mut libc::c_void);
1179 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/job.rs:1231:1
     |
1231 | / pub unsafe extern "C" fn job_died(mut job: *mut job, mut status: libc::c_int) {
1232 | |     log_debug(
1233 | |         b"job died %p: %s, pid %ld\0" as *const u8 as *const libc::c_char,
1234 | |         job,
...    |
1247 | |     };
1248 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:940:1
     |
940  | / pub unsafe extern "C" fn key_bindings_RB_INSERT_COLOR(
941  | |     mut head: *mut key_bindings,
942  | |     mut elm: *mut key_binding,
943  | | ) {
...    |
1059 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1060 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/key_bindings.rs:949:12
    |
949 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/key_bindings.rs:944:40
    |
944 |     let mut parent: *mut key_binding = 0 as *mut key_binding;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/key_bindings.rs:945:41
    |
945 |     let mut gparent: *mut key_binding = 0 as *mut key_binding;
    |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/key_bindings.rs:946:37
    |
946 |     let mut tmp: *mut key_binding = 0 as *mut key_binding;
    |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/key_bindings.rs:979:21
    |
979 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1003:17
     |
1003 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1031:21
     |
1031 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1055:17
     |
1055 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1062:1
     |
1062 | / pub unsafe extern "C" fn key_bindings_RB_MINMAX(
1063 | |     mut head: *mut key_bindings,
1064 | |     mut val: libc::c_int,
1065 | | ) -> *mut key_binding {
...    |
1076 | |     return parent;
1077 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1076:5
     |
1076 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1067:40
     |
1067 |     let mut parent: *mut key_binding = 0 as *mut key_binding;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1079:1
     |
1079 | / pub unsafe extern "C" fn key_bindings_RB_REMOVE_COLOR(
1080 | |     mut head: *mut key_bindings,
1081 | |     mut parent: *mut key_binding,
1082 | |     mut elm: *mut key_binding,
...    |
1270 | |     }
1271 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1084:37
     |
1084 |     let mut tmp: *mut key_binding = 0 as *mut key_binding;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1110:17
     |
1110 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1125:55
     |
1125 |                     let mut oleft: *mut key_binding = 0 as *mut key_binding;
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1148:21
     |
1148 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1173:17
     |
1173 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1199:17
     |
1199 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1214:56
     |
1214 |                     let mut oright: *mut key_binding = 0 as *mut key_binding;
     |                                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1237:21
     |
1237 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1262:17
     |
1262 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1273:1
     |
1273 | / pub unsafe extern "C" fn key_bindings_RB_REMOVE(
1274 | |     mut head: *mut key_bindings,
1275 | |     mut elm: *mut key_binding,
1276 | | ) -> *mut key_binding {
...    |
1363 | |     return old;
1364 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1363:5
     |
1363 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1278:39
     |
1278 |     let mut child: *mut key_binding = 0 as *mut key_binding;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1279:40
     |
1279 |     let mut parent: *mut key_binding = 0 as *mut key_binding;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1289:42
     |
1289 |         let mut left: *mut key_binding = 0 as *mut key_binding;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/key_bindings.rs:1341:5
     |
1341 | /     match current_block {
1342 | |         7245201122033322888 => {
1343 | |             parent = (*elm).entry.rbe_parent;
1344 | |             color = (*elm).entry.rbe_color;
...    |
1358 | |         _ => {}
1359 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1341 ~     if current_block == 7245201122033322888 {
1342 +         parent = (*elm).entry.rbe_parent;
1343 +         color = (*elm).entry.rbe_color;
1344 +         if !child.is_null() {
1345 +             (*child).entry.rbe_parent = parent;
1346 +         }
1347 +         if !parent.is_null() {
1348 +             if (*parent).entry.rbe_left == elm {
1349 +                 (*parent).entry.rbe_left = child;
1350 +             } else {
1351 +                 (*parent).entry.rbe_right = child;
1352 +             }
1353 +         } else {
1354 +             (*head).rbh_root = child;
1355 +         }
1356 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1366:1
     |
1366 | / pub unsafe extern "C" fn key_bindings_RB_INSERT(
1367 | |     mut head: *mut key_bindings,
1368 | |     mut elm: *mut key_binding,
1369 | | ) -> *mut key_binding {
...    |
1399 | |     return 0 as *mut key_binding;
1400 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1399:5
     |
1399 |     return 0 as *mut key_binding;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut key_binding`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1370:37
     |
1370 |     let mut tmp: *mut key_binding = 0 as *mut key_binding;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1371:40
     |
1371 |     let mut parent: *mut key_binding = 0 as *mut key_binding;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1377:9
     |
1377 | /         if comp < 0 as libc::c_int {
1378 | |             tmp = (*tmp).entry.rbe_left;
1379 | |         } else if comp > 0 as libc::c_int {
1380 | |             tmp = (*tmp).entry.rbe_right;
1381 | |         } else {
1382 | |             return tmp
1383 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1386:30
     |
1386 |     (*elm).entry.rbe_right = 0 as *mut key_binding;
     |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1399:12
     |
1399 |     return 0 as *mut key_binding;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1402:1
     |
1402 | / pub unsafe extern "C" fn key_bindings_RB_FIND(
1403 | |     mut head: *mut key_bindings,
1404 | |     mut elm: *mut key_binding,
1405 | | ) -> *mut key_binding {
...    |
1418 | |     return 0 as *mut key_binding;
1419 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1418:5
     |
1418 |     return 0 as *mut key_binding;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut key_binding`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1410:9
     |
1410 | /         if comp < 0 as libc::c_int {
1411 | |             tmp = (*tmp).entry.rbe_left;
1412 | |         } else if comp > 0 as libc::c_int {
1413 | |             tmp = (*tmp).entry.rbe_right;
1414 | |         } else {
1415 | |             return tmp
1416 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1418:12
     |
1418 |     return 0 as *mut key_binding;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1421:1
     |
1421 | / pub unsafe extern "C" fn key_bindings_RB_NFIND(
1422 | |     mut head: *mut key_bindings,
1423 | |     mut elm: *mut key_binding,
1424 | | ) -> *mut key_binding {
...    |
1439 | |     return res;
1440 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1439:5
     |
1439 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1426:37
     |
1426 |     let mut res: *mut key_binding = 0 as *mut key_binding;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1430:9
     |
1430 | /         if comp < 0 as libc::c_int {
1431 | |             res = tmp;
1432 | |             tmp = (*tmp).entry.rbe_left;
1433 | |         } else if comp > 0 as libc::c_int {
...    |
1436 | |             return tmp
1437 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1442:1
     |
1442 | / pub unsafe extern "C" fn key_bindings_RB_NEXT(
1443 | |     mut elm: *mut key_binding,
1444 | | ) -> *mut key_binding {
1445 | |     if !((*elm).entry.rbe_right).is_null() {
...    |
1462 | |     return elm;
1463 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1462:5
     |
1462 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1465:1
     |
1465 | / pub unsafe extern "C" fn key_bindings_RB_PREV(
1466 | |     mut elm: *mut key_binding,
1467 | | ) -> *mut key_binding {
1468 | |     if !((*elm).entry.rbe_left).is_null() {
...    |
1485 | |     return elm;
1486 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1485:5
     |
1485 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1488:1
     |
1488 | / pub unsafe extern "C" fn key_tables_RB_INSERT_COLOR(
1489 | |     mut head: *mut key_tables,
1490 | |     mut elm: *mut key_table,
1491 | | ) {
...    |
1607 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1608 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/key_bindings.rs:1497:12
     |
1497 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1492:38
     |
1492 |     let mut parent: *mut key_table = 0 as *mut key_table;
     |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1493:39
     |
1493 |     let mut gparent: *mut key_table = 0 as *mut key_table;
     |                                       ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1494:35
     |
1494 |     let mut tmp: *mut key_table = 0 as *mut key_table;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1527:21
     |
1527 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1551:17
     |
1551 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1579:21
     |
1579 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1603:17
     |
1603 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1610:1
     |
1610 | / pub unsafe extern "C" fn key_tables_RB_INSERT(
1611 | |     mut head: *mut key_tables,
1612 | |     mut elm: *mut key_table,
1613 | | ) -> *mut key_table {
...    |
1643 | |     return 0 as *mut key_table;
1644 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1643:5
     |
1643 |     return 0 as *mut key_table;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut key_table`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1614:35
     |
1614 |     let mut tmp: *mut key_table = 0 as *mut key_table;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1615:38
     |
1615 |     let mut parent: *mut key_table = 0 as *mut key_table;
     |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1621:9
     |
1621 | /         if comp < 0 as libc::c_int {
1622 | |             tmp = (*tmp).entry.rbe_left;
1623 | |         } else if comp > 0 as libc::c_int {
1624 | |             tmp = (*tmp).entry.rbe_right;
1625 | |         } else {
1626 | |             return tmp
1627 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1630:30
     |
1630 |     (*elm).entry.rbe_right = 0 as *mut key_table;
     |                              ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1643:12
     |
1643 |     return 0 as *mut key_table;
     |            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1646:1
     |
1646 | / pub unsafe extern "C" fn key_tables_RB_REMOVE_COLOR(
1647 | |     mut head: *mut key_tables,
1648 | |     mut parent: *mut key_table,
1649 | |     mut elm: *mut key_table,
...    |
1837 | |     }
1838 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1651:35
     |
1651 |     let mut tmp: *mut key_table = 0 as *mut key_table;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1677:17
     |
1677 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1692:53
     |
1692 |                     let mut oleft: *mut key_table = 0 as *mut key_table;
     |                                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1715:21
     |
1715 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1740:17
     |
1740 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1766:17
     |
1766 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1781:54
     |
1781 |                     let mut oright: *mut key_table = 0 as *mut key_table;
     |                                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/key_bindings.rs:1804:21
     |
1804 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/key_bindings.rs:1829:17
     |
1829 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1840:1
     |
1840 | / pub unsafe extern "C" fn key_tables_RB_REMOVE(
1841 | |     mut head: *mut key_tables,
1842 | |     mut elm: *mut key_table,
1843 | | ) -> *mut key_table {
...    |
1930 | |     return old;
1931 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1930:5
     |
1930 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1845:37
     |
1845 |     let mut child: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1846:38
     |
1846 |     let mut parent: *mut key_table = 0 as *mut key_table;
     |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1856:40
     |
1856 |         let mut left: *mut key_table = 0 as *mut key_table;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/key_bindings.rs:1908:5
     |
1908 | /     match current_block {
1909 | |         7245201122033322888 => {
1910 | |             parent = (*elm).entry.rbe_parent;
1911 | |             color = (*elm).entry.rbe_color;
...    |
1925 | |         _ => {}
1926 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1908 ~     if current_block == 7245201122033322888 {
1909 +         parent = (*elm).entry.rbe_parent;
1910 +         color = (*elm).entry.rbe_color;
1911 +         if !child.is_null() {
1912 +             (*child).entry.rbe_parent = parent;
1913 +         }
1914 +         if !parent.is_null() {
1915 +             if (*parent).entry.rbe_left == elm {
1916 +                 (*parent).entry.rbe_left = child;
1917 +             } else {
1918 +                 (*parent).entry.rbe_right = child;
1919 +             }
1920 +         } else {
1921 +             (*head).rbh_root = child;
1922 +         }
1923 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1933:1
     |
1933 | / pub unsafe extern "C" fn key_tables_RB_NFIND(
1934 | |     mut head: *mut key_tables,
1935 | |     mut elm: *mut key_table,
1936 | | ) -> *mut key_table {
...    |
1951 | |     return res;
1952 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1951:5
     |
1951 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1938:35
     |
1938 |     let mut res: *mut key_table = 0 as *mut key_table;
     |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1942:9
     |
1942 | /         if comp < 0 as libc::c_int {
1943 | |             res = tmp;
1944 | |             tmp = (*tmp).entry.rbe_left;
1945 | |         } else if comp > 0 as libc::c_int {
...    |
1948 | |             return tmp
1949 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1954:1
     |
1954 | / pub unsafe extern "C" fn key_tables_RB_PREV(mut elm: *mut key_table) -> *mut key_table {
1955 | |     if !((*elm).entry.rbe_left).is_null() {
1956 | |         elm = (*elm).entry.rbe_left;
1957 | |         while !((*elm).entry.rbe_right).is_null() {
...    |
1972 | |     return elm;
1973 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1972:5
     |
1972 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1975:1
     |
1975 | / pub unsafe extern "C" fn key_tables_RB_FIND(
1976 | |     mut head: *mut key_tables,
1977 | |     mut elm: *mut key_table,
1978 | | ) -> *mut key_table {
...    |
1991 | |     return 0 as *mut key_table;
1992 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:1991:5
     |
1991 |     return 0 as *mut key_table;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut key_table`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/key_bindings.rs:1983:9
     |
1983 | /         if comp < 0 as libc::c_int {
1984 | |             tmp = (*tmp).entry.rbe_left;
1985 | |         } else if comp > 0 as libc::c_int {
1986 | |             tmp = (*tmp).entry.rbe_right;
1987 | |         } else {
1988 | |             return tmp
1989 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:1991:12
     |
1991 |     return 0 as *mut key_table;
     |            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:1994:1
     |
1994 | / pub unsafe extern "C" fn key_tables_RB_NEXT(mut elm: *mut key_table) -> *mut key_table {
1995 | |     if !((*elm).entry.rbe_right).is_null() {
1996 | |         elm = (*elm).entry.rbe_right;
1997 | |         while !((*elm).entry.rbe_left).is_null() {
...    |
2012 | |     return elm;
2013 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:2012:5
     |
2012 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2015:1
     |
2015 | / pub unsafe extern "C" fn key_tables_RB_MINMAX(
2016 | |     mut head: *mut key_tables,
2017 | |     mut val: libc::c_int,
2018 | | ) -> *mut key_table {
...    |
2029 | |     return parent;
2030 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:2029:5
     |
2029 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2020:38
     |
2020 |     let mut parent: *mut key_table = 0 as *mut key_table;
     |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/key_bindings.rs:2036:5
     |
2033 | /     let mut init = key_tables {
2034 | |         rbh_root: 0 as *const key_table as *mut key_table,
2035 | |     };
     | |______- unnecessary `let` binding
2036 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2033 ~     
2034 ~     key_tables {
2035 +         rbh_root: 0 as *const key_table as *mut key_table,
2036 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2039:1
     |
2039 | / pub unsafe extern "C" fn key_table_cmp(
2040 | |     mut e1: *mut key_table,
2041 | |     mut e2: *mut key_table,
2042 | | ) -> libc::c_int {
2043 | |     return strcmp((*e1).name, (*e2).name);
2044 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:2043:5
     |
2043 |     return strcmp((*e1).name, (*e2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*e1).name, (*e2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2046:1
     |
2046 | / pub unsafe extern "C" fn key_bindings_cmp(
2047 | |     mut bd1: *mut key_binding,
2048 | |     mut bd2: *mut key_binding,
2049 | | ) -> libc::c_int {
...    |
2056 | |     return 0 as libc::c_int;
2057 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:2056:5
     |
2056 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2059:1
     |
2059 | / pub unsafe extern "C" fn key_bindings_get_table(
2060 | |     mut name: *const libc::c_char,
2061 | |     mut create: libc::c_int,
2062 | | ) -> *mut key_table {
...    |
2088 | |     return table;
2089 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_bindings.rs:2088:5
     |
2088 |     return table;
     |     ^^^^^^^^^^^^^ help: remove `return`: `table`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/key_bindings.rs:2064:15
     |
2064 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2066:23
     |
2066 |             rbh_root: 0 as *mut key_binding,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2070:23
     |
2070 |             rbe_left: 0 as *mut key_table,
     |                       ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2071:24
     |
2071 |             rbe_right: 0 as *mut key_table,
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2072:25
     |
2072 |             rbe_parent: 0 as *mut key_table,
     |                         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2076:37
     |
2076 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2085:38
     |
2085 |     (*table).key_bindings.rbh_root = 0 as *mut key_binding;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2091:1
     |
2091 | / pub unsafe extern "C" fn key_bindings_unref_table(mut table: *mut key_table) {
2092 | |     let mut bd: *mut key_binding = 0 as *mut key_binding;
2093 | |     let mut bd1: *mut key_binding = 0 as *mut key_binding;
2094 | |     (*table).references = ((*table).references).wrapping_sub(1);
...    |
2111 | |     free(table as *mut libc::c_void);
2112 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2092:36
     |
2092 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2093:37
     |
2093 |     let mut bd1: *mut key_binding = 0 as *mut key_binding;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2114:1
     |
2114 | / pub unsafe extern "C" fn key_bindings_add(
2115 | |     mut name: *const libc::c_char,
2116 | |     mut key: key_code,
2117 | |     mut repeat: libc::c_int,
...    |
2150 | |     (*bd).cmdlist = cmdlist;
2151 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2120:37
     |
2120 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2123:18
     |
2123 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2126:23
     |
2126 |             rbe_left: 0 as *mut key_binding,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2127:24
     |
2127 |             rbe_right: 0 as *mut key_binding,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2128:25
     |
2128 |             rbe_parent: 0 as *mut key_binding,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2132:36
     |
2132 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2153:1
     |
2153 | / pub unsafe extern "C" fn key_bindings_remove(
2154 | |     mut name: *const libc::c_char,
2155 | |     mut key: key_code,
2156 | | ) {
...    |
2185 | |     }
2186 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2157:37
     |
2157 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2160:18
     |
2160 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2163:23
     |
2163 |             rbe_left: 0 as *mut key_binding,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2164:24
     |
2164 |             rbe_right: 0 as *mut key_binding,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2165:25
     |
2165 |             rbe_parent: 0 as *mut key_binding,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2169:36
     |
2169 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2188:1
     |
2188 | / pub unsafe extern "C" fn key_bindings_remove_table(mut name: *const libc::c_char) {
2189 | |     let mut table: *mut key_table = 0 as *mut key_table;
2190 | |     let mut c: *mut client = 0 as *mut client;
2191 | |     table = key_bindings_get_table(name, 0 as libc::c_int);
...    |
2202 | |     }
2203 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2189:37
     |
2189 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2190:30
     |
2190 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/key_bindings.rs:2199:44
     |
2199 |             server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2205:1
     |
2205 | / pub unsafe extern "C" fn key_bindings_init() {
2206 | |     static mut defaults: [*const libc::c_char; 227] = [
2207 | |         b"bind C-b send-prefix\0" as *const u8 as *const libc::c_char,
2208 | |         b"bind C-o rotate-window\0" as *const u8 as *const libc::c_char,
...    |
2601 | |     }
2602 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2570:38
     |
2570 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2571:40
     |
2571 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2590:13
     |
2590 |             0 as *mut client,
     |             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2593:17
     |
2593 |                 0 as *mut cmd_find_state,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2594:17
     |
2594 |                 0 as *mut mouse_event,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/key_bindings.rs:2600:9
     |
2600 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/key_bindings.rs:2608:5
     |
2608 |     return CMD_RETURN_ERROR;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_ERROR`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/key_bindings.rs:2611:1
     |
2611 | / pub unsafe extern "C" fn key_bindings_dispatch(
2612 | |     mut bd: *mut key_binding,
2613 | |     mut item: *mut cmdq_item,
2614 | |     mut c: *mut client,
...    |
2651 | |     };
2652 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2618:29
     |
2618 |     let mut cmd: *mut cmd = 0 as *mut cmd;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2619:40
     |
2619 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/key_bindings.rs:2639:13
     |
2639 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:175:9
    |
171 | /         let mut init = C2RustUnnamed_0 {
172 | |             string: b"F1\0" as *const u8 as *const libc::c_char,
173 | |             key: KEYC_F1 as libc::c_int as key_code,
174 | |         };
    | |__________- unnecessary `let` binding
175 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
171 ~         
172 ~         C2RustUnnamed_0 {
173 +             string: b"F1\0" as *const u8 as *const libc::c_char,
174 +             key: KEYC_F1 as libc::c_int as key_code,
175 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:182:9
    |
178 | /         let mut init = C2RustUnnamed_0 {
179 | |             string: b"F2\0" as *const u8 as *const libc::c_char,
180 | |             key: KEYC_F2 as libc::c_int as key_code,
181 | |         };
    | |__________- unnecessary `let` binding
182 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
178 ~         
179 ~         C2RustUnnamed_0 {
180 +             string: b"F2\0" as *const u8 as *const libc::c_char,
181 +             key: KEYC_F2 as libc::c_int as key_code,
182 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:189:9
    |
185 | /         let mut init = C2RustUnnamed_0 {
186 | |             string: b"F3\0" as *const u8 as *const libc::c_char,
187 | |             key: KEYC_F3 as libc::c_int as key_code,
188 | |         };
    | |__________- unnecessary `let` binding
189 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
185 ~         
186 ~         C2RustUnnamed_0 {
187 +             string: b"F3\0" as *const u8 as *const libc::c_char,
188 +             key: KEYC_F3 as libc::c_int as key_code,
189 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:196:9
    |
192 | /         let mut init = C2RustUnnamed_0 {
193 | |             string: b"F4\0" as *const u8 as *const libc::c_char,
194 | |             key: KEYC_F4 as libc::c_int as key_code,
195 | |         };
    | |__________- unnecessary `let` binding
196 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
192 ~         
193 ~         C2RustUnnamed_0 {
194 +             string: b"F4\0" as *const u8 as *const libc::c_char,
195 +             key: KEYC_F4 as libc::c_int as key_code,
196 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:203:9
    |
199 | /         let mut init = C2RustUnnamed_0 {
200 | |             string: b"F5\0" as *const u8 as *const libc::c_char,
201 | |             key: KEYC_F5 as libc::c_int as key_code,
202 | |         };
    | |__________- unnecessary `let` binding
203 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
199 ~         
200 ~         C2RustUnnamed_0 {
201 +             string: b"F5\0" as *const u8 as *const libc::c_char,
202 +             key: KEYC_F5 as libc::c_int as key_code,
203 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:210:9
    |
206 | /         let mut init = C2RustUnnamed_0 {
207 | |             string: b"F6\0" as *const u8 as *const libc::c_char,
208 | |             key: KEYC_F6 as libc::c_int as key_code,
209 | |         };
    | |__________- unnecessary `let` binding
210 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
206 ~         
207 ~         C2RustUnnamed_0 {
208 +             string: b"F6\0" as *const u8 as *const libc::c_char,
209 +             key: KEYC_F6 as libc::c_int as key_code,
210 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:217:9
    |
213 | /         let mut init = C2RustUnnamed_0 {
214 | |             string: b"F7\0" as *const u8 as *const libc::c_char,
215 | |             key: KEYC_F7 as libc::c_int as key_code,
216 | |         };
    | |__________- unnecessary `let` binding
217 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
213 ~         
214 ~         C2RustUnnamed_0 {
215 +             string: b"F7\0" as *const u8 as *const libc::c_char,
216 +             key: KEYC_F7 as libc::c_int as key_code,
217 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:224:9
    |
220 | /         let mut init = C2RustUnnamed_0 {
221 | |             string: b"F8\0" as *const u8 as *const libc::c_char,
222 | |             key: KEYC_F8 as libc::c_int as key_code,
223 | |         };
    | |__________- unnecessary `let` binding
224 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
220 ~         
221 ~         C2RustUnnamed_0 {
222 +             string: b"F8\0" as *const u8 as *const libc::c_char,
223 +             key: KEYC_F8 as libc::c_int as key_code,
224 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:231:9
    |
227 | /         let mut init = C2RustUnnamed_0 {
228 | |             string: b"F9\0" as *const u8 as *const libc::c_char,
229 | |             key: KEYC_F9 as libc::c_int as key_code,
230 | |         };
    | |__________- unnecessary `let` binding
231 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
227 ~         
228 ~         C2RustUnnamed_0 {
229 +             string: b"F9\0" as *const u8 as *const libc::c_char,
230 +             key: KEYC_F9 as libc::c_int as key_code,
231 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:238:9
    |
234 | /         let mut init = C2RustUnnamed_0 {
235 | |             string: b"F10\0" as *const u8 as *const libc::c_char,
236 | |             key: KEYC_F10 as libc::c_int as key_code,
237 | |         };
    | |__________- unnecessary `let` binding
238 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
234 ~         
235 ~         C2RustUnnamed_0 {
236 +             string: b"F10\0" as *const u8 as *const libc::c_char,
237 +             key: KEYC_F10 as libc::c_int as key_code,
238 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:245:9
    |
241 | /         let mut init = C2RustUnnamed_0 {
242 | |             string: b"F11\0" as *const u8 as *const libc::c_char,
243 | |             key: KEYC_F11 as libc::c_int as key_code,
244 | |         };
    | |__________- unnecessary `let` binding
245 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
241 ~         
242 ~         C2RustUnnamed_0 {
243 +             string: b"F11\0" as *const u8 as *const libc::c_char,
244 +             key: KEYC_F11 as libc::c_int as key_code,
245 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:252:9
    |
248 | /         let mut init = C2RustUnnamed_0 {
249 | |             string: b"F12\0" as *const u8 as *const libc::c_char,
250 | |             key: KEYC_F12 as libc::c_int as key_code,
251 | |         };
    | |__________- unnecessary `let` binding
252 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
248 ~         
249 ~         C2RustUnnamed_0 {
250 +             string: b"F12\0" as *const u8 as *const libc::c_char,
251 +             key: KEYC_F12 as libc::c_int as key_code,
252 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:259:9
    |
255 | /         let mut init = C2RustUnnamed_0 {
256 | |             string: b"IC\0" as *const u8 as *const libc::c_char,
257 | |             key: KEYC_IC as libc::c_int as key_code,
258 | |         };
    | |__________- unnecessary `let` binding
259 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
255 ~         
256 ~         C2RustUnnamed_0 {
257 +             string: b"IC\0" as *const u8 as *const libc::c_char,
258 +             key: KEYC_IC as libc::c_int as key_code,
259 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:266:9
    |
262 | /         let mut init = C2RustUnnamed_0 {
263 | |             string: b"DC\0" as *const u8 as *const libc::c_char,
264 | |             key: KEYC_DC as libc::c_int as key_code,
265 | |         };
    | |__________- unnecessary `let` binding
266 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
262 ~         
263 ~         C2RustUnnamed_0 {
264 +             string: b"DC\0" as *const u8 as *const libc::c_char,
265 +             key: KEYC_DC as libc::c_int as key_code,
266 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:273:9
    |
269 | /         let mut init = C2RustUnnamed_0 {
270 | |             string: b"Home\0" as *const u8 as *const libc::c_char,
271 | |             key: KEYC_HOME as libc::c_int as key_code,
272 | |         };
    | |__________- unnecessary `let` binding
273 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
269 ~         
270 ~         C2RustUnnamed_0 {
271 +             string: b"Home\0" as *const u8 as *const libc::c_char,
272 +             key: KEYC_HOME as libc::c_int as key_code,
273 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:280:9
    |
276 | /         let mut init = C2RustUnnamed_0 {
277 | |             string: b"End\0" as *const u8 as *const libc::c_char,
278 | |             key: KEYC_END as libc::c_int as key_code,
279 | |         };
    | |__________- unnecessary `let` binding
280 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
276 ~         
277 ~         C2RustUnnamed_0 {
278 +             string: b"End\0" as *const u8 as *const libc::c_char,
279 +             key: KEYC_END as libc::c_int as key_code,
280 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:287:9
    |
283 | /         let mut init = C2RustUnnamed_0 {
284 | |             string: b"NPage\0" as *const u8 as *const libc::c_char,
285 | |             key: KEYC_NPAGE as libc::c_int as key_code,
286 | |         };
    | |__________- unnecessary `let` binding
287 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
283 ~         
284 ~         C2RustUnnamed_0 {
285 +             string: b"NPage\0" as *const u8 as *const libc::c_char,
286 +             key: KEYC_NPAGE as libc::c_int as key_code,
287 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:294:9
    |
290 | /         let mut init = C2RustUnnamed_0 {
291 | |             string: b"PageDown\0" as *const u8 as *const libc::c_char,
292 | |             key: KEYC_NPAGE as libc::c_int as key_code,
293 | |         };
    | |__________- unnecessary `let` binding
294 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
290 ~         
291 ~         C2RustUnnamed_0 {
292 +             string: b"PageDown\0" as *const u8 as *const libc::c_char,
293 +             key: KEYC_NPAGE as libc::c_int as key_code,
294 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:301:9
    |
297 | /         let mut init = C2RustUnnamed_0 {
298 | |             string: b"PgDn\0" as *const u8 as *const libc::c_char,
299 | |             key: KEYC_NPAGE as libc::c_int as key_code,
300 | |         };
    | |__________- unnecessary `let` binding
301 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
297 ~         
298 ~         C2RustUnnamed_0 {
299 +             string: b"PgDn\0" as *const u8 as *const libc::c_char,
300 +             key: KEYC_NPAGE as libc::c_int as key_code,
301 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:308:9
    |
304 | /         let mut init = C2RustUnnamed_0 {
305 | |             string: b"PPage\0" as *const u8 as *const libc::c_char,
306 | |             key: KEYC_PPAGE as libc::c_int as key_code,
307 | |         };
    | |__________- unnecessary `let` binding
308 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
304 ~         
305 ~         C2RustUnnamed_0 {
306 +             string: b"PPage\0" as *const u8 as *const libc::c_char,
307 +             key: KEYC_PPAGE as libc::c_int as key_code,
308 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:315:9
    |
311 | /         let mut init = C2RustUnnamed_0 {
312 | |             string: b"PageUp\0" as *const u8 as *const libc::c_char,
313 | |             key: KEYC_PPAGE as libc::c_int as key_code,
314 | |         };
    | |__________- unnecessary `let` binding
315 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
311 ~         
312 ~         C2RustUnnamed_0 {
313 +             string: b"PageUp\0" as *const u8 as *const libc::c_char,
314 +             key: KEYC_PPAGE as libc::c_int as key_code,
315 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:322:9
    |
318 | /         let mut init = C2RustUnnamed_0 {
319 | |             string: b"PgUp\0" as *const u8 as *const libc::c_char,
320 | |             key: KEYC_PPAGE as libc::c_int as key_code,
321 | |         };
    | |__________- unnecessary `let` binding
322 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
318 ~         
319 ~         C2RustUnnamed_0 {
320 +             string: b"PgUp\0" as *const u8 as *const libc::c_char,
321 +             key: KEYC_PPAGE as libc::c_int as key_code,
322 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:329:9
    |
325 | /         let mut init = C2RustUnnamed_0 {
326 | |             string: b"Tab\0" as *const u8 as *const libc::c_char,
327 | |             key: '\t' as i32 as key_code,
328 | |         };
    | |__________- unnecessary `let` binding
329 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
325 ~         
326 ~         C2RustUnnamed_0 {
327 +             string: b"Tab\0" as *const u8 as *const libc::c_char,
328 +             key: '\t' as i32 as key_code,
329 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:336:9
    |
332 | /         let mut init = C2RustUnnamed_0 {
333 | |             string: b"BTab\0" as *const u8 as *const libc::c_char,
334 | |             key: KEYC_BTAB as libc::c_int as key_code,
335 | |         };
    | |__________- unnecessary `let` binding
336 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
332 ~         
333 ~         C2RustUnnamed_0 {
334 +             string: b"BTab\0" as *const u8 as *const libc::c_char,
335 +             key: KEYC_BTAB as libc::c_int as key_code,
336 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:343:9
    |
339 | /         let mut init = C2RustUnnamed_0 {
340 | |             string: b"Space\0" as *const u8 as *const libc::c_char,
341 | |             key: ' ' as i32 as key_code,
342 | |         };
    | |__________- unnecessary `let` binding
343 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
339 ~         
340 ~         C2RustUnnamed_0 {
341 +             string: b"Space\0" as *const u8 as *const libc::c_char,
342 +             key: ' ' as i32 as key_code,
343 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:350:9
    |
346 | /         let mut init = C2RustUnnamed_0 {
347 | |             string: b"BSpace\0" as *const u8 as *const libc::c_char,
348 | |             key: KEYC_BSPACE as libc::c_int as key_code,
349 | |         };
    | |__________- unnecessary `let` binding
350 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
346 ~         
347 ~         C2RustUnnamed_0 {
348 +             string: b"BSpace\0" as *const u8 as *const libc::c_char,
349 +             key: KEYC_BSPACE as libc::c_int as key_code,
350 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:357:9
    |
353 | /         let mut init = C2RustUnnamed_0 {
354 | |             string: b"Enter\0" as *const u8 as *const libc::c_char,
355 | |             key: '\r' as i32 as key_code,
356 | |         };
    | |__________- unnecessary `let` binding
357 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
353 ~         
354 ~         C2RustUnnamed_0 {
355 +             string: b"Enter\0" as *const u8 as *const libc::c_char,
356 +             key: '\r' as i32 as key_code,
357 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:364:9
    |
360 | /         let mut init = C2RustUnnamed_0 {
361 | |             string: b"Escape\0" as *const u8 as *const libc::c_char,
362 | |             key: '\u{1b}' as i32 as key_code,
363 | |         };
    | |__________- unnecessary `let` binding
364 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
360 ~         
361 ~         C2RustUnnamed_0 {
362 +             string: b"Escape\0" as *const u8 as *const libc::c_char,
363 +             key: '\u{1b}' as i32 as key_code,
364 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:371:9
    |
367 | /         let mut init = C2RustUnnamed_0 {
368 | |             string: b"Up\0" as *const u8 as *const libc::c_char,
369 | |             key: KEYC_UP as libc::c_int as key_code,
370 | |         };
    | |__________- unnecessary `let` binding
371 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
367 ~         
368 ~         C2RustUnnamed_0 {
369 +             string: b"Up\0" as *const u8 as *const libc::c_char,
370 +             key: KEYC_UP as libc::c_int as key_code,
371 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:378:9
    |
374 | /         let mut init = C2RustUnnamed_0 {
375 | |             string: b"Down\0" as *const u8 as *const libc::c_char,
376 | |             key: KEYC_DOWN as libc::c_int as key_code,
377 | |         };
    | |__________- unnecessary `let` binding
378 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
374 ~         
375 ~         C2RustUnnamed_0 {
376 +             string: b"Down\0" as *const u8 as *const libc::c_char,
377 +             key: KEYC_DOWN as libc::c_int as key_code,
378 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:385:9
    |
381 | /         let mut init = C2RustUnnamed_0 {
382 | |             string: b"Left\0" as *const u8 as *const libc::c_char,
383 | |             key: KEYC_LEFT as libc::c_int as key_code,
384 | |         };
    | |__________- unnecessary `let` binding
385 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
381 ~         
382 ~         C2RustUnnamed_0 {
383 +             string: b"Left\0" as *const u8 as *const libc::c_char,
384 +             key: KEYC_LEFT as libc::c_int as key_code,
385 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:392:9
    |
388 | /         let mut init = C2RustUnnamed_0 {
389 | |             string: b"Right\0" as *const u8 as *const libc::c_char,
390 | |             key: KEYC_RIGHT as libc::c_int as key_code,
391 | |         };
    | |__________- unnecessary `let` binding
392 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
388 ~         
389 ~         C2RustUnnamed_0 {
390 +             string: b"Right\0" as *const u8 as *const libc::c_char,
391 +             key: KEYC_RIGHT as libc::c_int as key_code,
392 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:399:9
    |
395 | /         let mut init = C2RustUnnamed_0 {
396 | |             string: b"KP/\0" as *const u8 as *const libc::c_char,
397 | |             key: KEYC_KP_SLASH as libc::c_int as key_code,
398 | |         };
    | |__________- unnecessary `let` binding
399 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
395 ~         
396 ~         C2RustUnnamed_0 {
397 +             string: b"KP/\0" as *const u8 as *const libc::c_char,
398 +             key: KEYC_KP_SLASH as libc::c_int as key_code,
399 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:406:9
    |
402 | /         let mut init = C2RustUnnamed_0 {
403 | |             string: b"KP*\0" as *const u8 as *const libc::c_char,
404 | |             key: KEYC_KP_STAR as libc::c_int as key_code,
405 | |         };
    | |__________- unnecessary `let` binding
406 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
402 ~         
403 ~         C2RustUnnamed_0 {
404 +             string: b"KP*\0" as *const u8 as *const libc::c_char,
405 +             key: KEYC_KP_STAR as libc::c_int as key_code,
406 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:413:9
    |
409 | /         let mut init = C2RustUnnamed_0 {
410 | |             string: b"KP-\0" as *const u8 as *const libc::c_char,
411 | |             key: KEYC_KP_MINUS as libc::c_int as key_code,
412 | |         };
    | |__________- unnecessary `let` binding
413 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
409 ~         
410 ~         C2RustUnnamed_0 {
411 +             string: b"KP-\0" as *const u8 as *const libc::c_char,
412 +             key: KEYC_KP_MINUS as libc::c_int as key_code,
413 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:420:9
    |
416 | /         let mut init = C2RustUnnamed_0 {
417 | |             string: b"KP7\0" as *const u8 as *const libc::c_char,
418 | |             key: KEYC_KP_SEVEN as libc::c_int as key_code,
419 | |         };
    | |__________- unnecessary `let` binding
420 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
416 ~         
417 ~         C2RustUnnamed_0 {
418 +             string: b"KP7\0" as *const u8 as *const libc::c_char,
419 +             key: KEYC_KP_SEVEN as libc::c_int as key_code,
420 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:427:9
    |
423 | /         let mut init = C2RustUnnamed_0 {
424 | |             string: b"KP8\0" as *const u8 as *const libc::c_char,
425 | |             key: KEYC_KP_EIGHT as libc::c_int as key_code,
426 | |         };
    | |__________- unnecessary `let` binding
427 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
423 ~         
424 ~         C2RustUnnamed_0 {
425 +             string: b"KP8\0" as *const u8 as *const libc::c_char,
426 +             key: KEYC_KP_EIGHT as libc::c_int as key_code,
427 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:434:9
    |
430 | /         let mut init = C2RustUnnamed_0 {
431 | |             string: b"KP9\0" as *const u8 as *const libc::c_char,
432 | |             key: KEYC_KP_NINE as libc::c_int as key_code,
433 | |         };
    | |__________- unnecessary `let` binding
434 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
430 ~         
431 ~         C2RustUnnamed_0 {
432 +             string: b"KP9\0" as *const u8 as *const libc::c_char,
433 +             key: KEYC_KP_NINE as libc::c_int as key_code,
434 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:441:9
    |
437 | /         let mut init = C2RustUnnamed_0 {
438 | |             string: b"KP+\0" as *const u8 as *const libc::c_char,
439 | |             key: KEYC_KP_PLUS as libc::c_int as key_code,
440 | |         };
    | |__________- unnecessary `let` binding
441 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
437 ~         
438 ~         C2RustUnnamed_0 {
439 +             string: b"KP+\0" as *const u8 as *const libc::c_char,
440 +             key: KEYC_KP_PLUS as libc::c_int as key_code,
441 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:448:9
    |
444 | /         let mut init = C2RustUnnamed_0 {
445 | |             string: b"KP4\0" as *const u8 as *const libc::c_char,
446 | |             key: KEYC_KP_FOUR as libc::c_int as key_code,
447 | |         };
    | |__________- unnecessary `let` binding
448 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
444 ~         
445 ~         C2RustUnnamed_0 {
446 +             string: b"KP4\0" as *const u8 as *const libc::c_char,
447 +             key: KEYC_KP_FOUR as libc::c_int as key_code,
448 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:455:9
    |
451 | /         let mut init = C2RustUnnamed_0 {
452 | |             string: b"KP5\0" as *const u8 as *const libc::c_char,
453 | |             key: KEYC_KP_FIVE as libc::c_int as key_code,
454 | |         };
    | |__________- unnecessary `let` binding
455 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
451 ~         
452 ~         C2RustUnnamed_0 {
453 +             string: b"KP5\0" as *const u8 as *const libc::c_char,
454 +             key: KEYC_KP_FIVE as libc::c_int as key_code,
455 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:462:9
    |
458 | /         let mut init = C2RustUnnamed_0 {
459 | |             string: b"KP6\0" as *const u8 as *const libc::c_char,
460 | |             key: KEYC_KP_SIX as libc::c_int as key_code,
461 | |         };
    | |__________- unnecessary `let` binding
462 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
458 ~         
459 ~         C2RustUnnamed_0 {
460 +             string: b"KP6\0" as *const u8 as *const libc::c_char,
461 +             key: KEYC_KP_SIX as libc::c_int as key_code,
462 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:469:9
    |
465 | /         let mut init = C2RustUnnamed_0 {
466 | |             string: b"KP1\0" as *const u8 as *const libc::c_char,
467 | |             key: KEYC_KP_ONE as libc::c_int as key_code,
468 | |         };
    | |__________- unnecessary `let` binding
469 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
465 ~         
466 ~         C2RustUnnamed_0 {
467 +             string: b"KP1\0" as *const u8 as *const libc::c_char,
468 +             key: KEYC_KP_ONE as libc::c_int as key_code,
469 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:476:9
    |
472 | /         let mut init = C2RustUnnamed_0 {
473 | |             string: b"KP2\0" as *const u8 as *const libc::c_char,
474 | |             key: KEYC_KP_TWO as libc::c_int as key_code,
475 | |         };
    | |__________- unnecessary `let` binding
476 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
472 ~         
473 ~         C2RustUnnamed_0 {
474 +             string: b"KP2\0" as *const u8 as *const libc::c_char,
475 +             key: KEYC_KP_TWO as libc::c_int as key_code,
476 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:483:9
    |
479 | /         let mut init = C2RustUnnamed_0 {
480 | |             string: b"KP3\0" as *const u8 as *const libc::c_char,
481 | |             key: KEYC_KP_THREE as libc::c_int as key_code,
482 | |         };
    | |__________- unnecessary `let` binding
483 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
479 ~         
480 ~         C2RustUnnamed_0 {
481 +             string: b"KP3\0" as *const u8 as *const libc::c_char,
482 +             key: KEYC_KP_THREE as libc::c_int as key_code,
483 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:490:9
    |
486 | /         let mut init = C2RustUnnamed_0 {
487 | |             string: b"KPEnter\0" as *const u8 as *const libc::c_char,
488 | |             key: KEYC_KP_ENTER as libc::c_int as key_code,
489 | |         };
    | |__________- unnecessary `let` binding
490 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
486 ~         
487 ~         C2RustUnnamed_0 {
488 +             string: b"KPEnter\0" as *const u8 as *const libc::c_char,
489 +             key: KEYC_KP_ENTER as libc::c_int as key_code,
490 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:497:9
    |
493 | /         let mut init = C2RustUnnamed_0 {
494 | |             string: b"KP0\0" as *const u8 as *const libc::c_char,
495 | |             key: KEYC_KP_ZERO as libc::c_int as key_code,
496 | |         };
    | |__________- unnecessary `let` binding
497 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
493 ~         
494 ~         C2RustUnnamed_0 {
495 +             string: b"KP0\0" as *const u8 as *const libc::c_char,
496 +             key: KEYC_KP_ZERO as libc::c_int as key_code,
497 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:504:9
    |
500 | /         let mut init = C2RustUnnamed_0 {
501 | |             string: b"KP.\0" as *const u8 as *const libc::c_char,
502 | |             key: KEYC_KP_PERIOD as libc::c_int as key_code,
503 | |         };
    | |__________- unnecessary `let` binding
504 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
500 ~         
501 ~         C2RustUnnamed_0 {
502 +             string: b"KP.\0" as *const u8 as *const libc::c_char,
503 +             key: KEYC_KP_PERIOD as libc::c_int as key_code,
504 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:511:9
    |
507 | /         let mut init = C2RustUnnamed_0 {
508 | |             string: b"MouseDown1Pane\0" as *const u8 as *const libc::c_char,
509 | |             key: KEYC_MOUSEDOWN1_PANE as libc::c_int as key_code,
510 | |         };
    | |__________- unnecessary `let` binding
511 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
507 ~         
508 ~         C2RustUnnamed_0 {
509 +             string: b"MouseDown1Pane\0" as *const u8 as *const libc::c_char,
510 +             key: KEYC_MOUSEDOWN1_PANE as libc::c_int as key_code,
511 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:518:9
    |
514 | /         let mut init = C2RustUnnamed_0 {
515 | |             string: b"MouseDown1Status\0" as *const u8 as *const libc::c_char,
516 | |             key: KEYC_MOUSEDOWN1_STATUS as libc::c_int as key_code,
517 | |         };
    | |__________- unnecessary `let` binding
518 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
514 ~         
515 ~         C2RustUnnamed_0 {
516 +             string: b"MouseDown1Status\0" as *const u8 as *const libc::c_char,
517 +             key: KEYC_MOUSEDOWN1_STATUS as libc::c_int as key_code,
518 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:525:9
    |
521 | /         let mut init = C2RustUnnamed_0 {
522 | |             string: b"MouseDown1Border\0" as *const u8 as *const libc::c_char,
523 | |             key: KEYC_MOUSEDOWN1_BORDER as libc::c_int as key_code,
524 | |         };
    | |__________- unnecessary `let` binding
525 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
521 ~         
522 ~         C2RustUnnamed_0 {
523 +             string: b"MouseDown1Border\0" as *const u8 as *const libc::c_char,
524 +             key: KEYC_MOUSEDOWN1_BORDER as libc::c_int as key_code,
525 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:532:9
    |
528 | /         let mut init = C2RustUnnamed_0 {
529 | |             string: b"MouseDown2Pane\0" as *const u8 as *const libc::c_char,
530 | |             key: KEYC_MOUSEDOWN2_PANE as libc::c_int as key_code,
531 | |         };
    | |__________- unnecessary `let` binding
532 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
528 ~         
529 ~         C2RustUnnamed_0 {
530 +             string: b"MouseDown2Pane\0" as *const u8 as *const libc::c_char,
531 +             key: KEYC_MOUSEDOWN2_PANE as libc::c_int as key_code,
532 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:539:9
    |
535 | /         let mut init = C2RustUnnamed_0 {
536 | |             string: b"MouseDown2Status\0" as *const u8 as *const libc::c_char,
537 | |             key: KEYC_MOUSEDOWN2_STATUS as libc::c_int as key_code,
538 | |         };
    | |__________- unnecessary `let` binding
539 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
535 ~         
536 ~         C2RustUnnamed_0 {
537 +             string: b"MouseDown2Status\0" as *const u8 as *const libc::c_char,
538 +             key: KEYC_MOUSEDOWN2_STATUS as libc::c_int as key_code,
539 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:546:9
    |
542 | /         let mut init = C2RustUnnamed_0 {
543 | |             string: b"MouseDown2Border\0" as *const u8 as *const libc::c_char,
544 | |             key: KEYC_MOUSEDOWN2_BORDER as libc::c_int as key_code,
545 | |         };
    | |__________- unnecessary `let` binding
546 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
542 ~         
543 ~         C2RustUnnamed_0 {
544 +             string: b"MouseDown2Border\0" as *const u8 as *const libc::c_char,
545 +             key: KEYC_MOUSEDOWN2_BORDER as libc::c_int as key_code,
546 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:553:9
    |
549 | /         let mut init = C2RustUnnamed_0 {
550 | |             string: b"MouseDown3Pane\0" as *const u8 as *const libc::c_char,
551 | |             key: KEYC_MOUSEDOWN3_PANE as libc::c_int as key_code,
552 | |         };
    | |__________- unnecessary `let` binding
553 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
549 ~         
550 ~         C2RustUnnamed_0 {
551 +             string: b"MouseDown3Pane\0" as *const u8 as *const libc::c_char,
552 +             key: KEYC_MOUSEDOWN3_PANE as libc::c_int as key_code,
553 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:560:9
    |
556 | /         let mut init = C2RustUnnamed_0 {
557 | |             string: b"MouseDown3Status\0" as *const u8 as *const libc::c_char,
558 | |             key: KEYC_MOUSEDOWN3_STATUS as libc::c_int as key_code,
559 | |         };
    | |__________- unnecessary `let` binding
560 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
556 ~         
557 ~         C2RustUnnamed_0 {
558 +             string: b"MouseDown3Status\0" as *const u8 as *const libc::c_char,
559 +             key: KEYC_MOUSEDOWN3_STATUS as libc::c_int as key_code,
560 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:567:9
    |
563 | /         let mut init = C2RustUnnamed_0 {
564 | |             string: b"MouseDown3Border\0" as *const u8 as *const libc::c_char,
565 | |             key: KEYC_MOUSEDOWN3_BORDER as libc::c_int as key_code,
566 | |         };
    | |__________- unnecessary `let` binding
567 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
563 ~         
564 ~         C2RustUnnamed_0 {
565 +             string: b"MouseDown3Border\0" as *const u8 as *const libc::c_char,
566 +             key: KEYC_MOUSEDOWN3_BORDER as libc::c_int as key_code,
567 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:574:9
    |
570 | /         let mut init = C2RustUnnamed_0 {
571 | |             string: b"MouseUp1Pane\0" as *const u8 as *const libc::c_char,
572 | |             key: KEYC_MOUSEUP1_PANE as libc::c_int as key_code,
573 | |         };
    | |__________- unnecessary `let` binding
574 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
570 ~         
571 ~         C2RustUnnamed_0 {
572 +             string: b"MouseUp1Pane\0" as *const u8 as *const libc::c_char,
573 +             key: KEYC_MOUSEUP1_PANE as libc::c_int as key_code,
574 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:581:9
    |
577 | /         let mut init = C2RustUnnamed_0 {
578 | |             string: b"MouseUp1Status\0" as *const u8 as *const libc::c_char,
579 | |             key: KEYC_MOUSEUP1_STATUS as libc::c_int as key_code,
580 | |         };
    | |__________- unnecessary `let` binding
581 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
577 ~         
578 ~         C2RustUnnamed_0 {
579 +             string: b"MouseUp1Status\0" as *const u8 as *const libc::c_char,
580 +             key: KEYC_MOUSEUP1_STATUS as libc::c_int as key_code,
581 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:588:9
    |
584 | /         let mut init = C2RustUnnamed_0 {
585 | |             string: b"MouseUp1Border\0" as *const u8 as *const libc::c_char,
586 | |             key: KEYC_MOUSEUP1_BORDER as libc::c_int as key_code,
587 | |         };
    | |__________- unnecessary `let` binding
588 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
584 ~         
585 ~         C2RustUnnamed_0 {
586 +             string: b"MouseUp1Border\0" as *const u8 as *const libc::c_char,
587 +             key: KEYC_MOUSEUP1_BORDER as libc::c_int as key_code,
588 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:595:9
    |
591 | /         let mut init = C2RustUnnamed_0 {
592 | |             string: b"MouseUp2Pane\0" as *const u8 as *const libc::c_char,
593 | |             key: KEYC_MOUSEUP2_PANE as libc::c_int as key_code,
594 | |         };
    | |__________- unnecessary `let` binding
595 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
591 ~         
592 ~         C2RustUnnamed_0 {
593 +             string: b"MouseUp2Pane\0" as *const u8 as *const libc::c_char,
594 +             key: KEYC_MOUSEUP2_PANE as libc::c_int as key_code,
595 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:602:9
    |
598 | /         let mut init = C2RustUnnamed_0 {
599 | |             string: b"MouseUp2Status\0" as *const u8 as *const libc::c_char,
600 | |             key: KEYC_MOUSEUP2_STATUS as libc::c_int as key_code,
601 | |         };
    | |__________- unnecessary `let` binding
602 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
598 ~         
599 ~         C2RustUnnamed_0 {
600 +             string: b"MouseUp2Status\0" as *const u8 as *const libc::c_char,
601 +             key: KEYC_MOUSEUP2_STATUS as libc::c_int as key_code,
602 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:609:9
    |
605 | /         let mut init = C2RustUnnamed_0 {
606 | |             string: b"MouseUp2Border\0" as *const u8 as *const libc::c_char,
607 | |             key: KEYC_MOUSEUP2_BORDER as libc::c_int as key_code,
608 | |         };
    | |__________- unnecessary `let` binding
609 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
605 ~         
606 ~         C2RustUnnamed_0 {
607 +             string: b"MouseUp2Border\0" as *const u8 as *const libc::c_char,
608 +             key: KEYC_MOUSEUP2_BORDER as libc::c_int as key_code,
609 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:616:9
    |
612 | /         let mut init = C2RustUnnamed_0 {
613 | |             string: b"MouseUp3Pane\0" as *const u8 as *const libc::c_char,
614 | |             key: KEYC_MOUSEUP3_PANE as libc::c_int as key_code,
615 | |         };
    | |__________- unnecessary `let` binding
616 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
612 ~         
613 ~         C2RustUnnamed_0 {
614 +             string: b"MouseUp3Pane\0" as *const u8 as *const libc::c_char,
615 +             key: KEYC_MOUSEUP3_PANE as libc::c_int as key_code,
616 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:623:9
    |
619 | /         let mut init = C2RustUnnamed_0 {
620 | |             string: b"MouseUp3Status\0" as *const u8 as *const libc::c_char,
621 | |             key: KEYC_MOUSEUP3_STATUS as libc::c_int as key_code,
622 | |         };
    | |__________- unnecessary `let` binding
623 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
619 ~         
620 ~         C2RustUnnamed_0 {
621 +             string: b"MouseUp3Status\0" as *const u8 as *const libc::c_char,
622 +             key: KEYC_MOUSEUP3_STATUS as libc::c_int as key_code,
623 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:630:9
    |
626 | /         let mut init = C2RustUnnamed_0 {
627 | |             string: b"MouseUp3Border\0" as *const u8 as *const libc::c_char,
628 | |             key: KEYC_MOUSEUP3_BORDER as libc::c_int as key_code,
629 | |         };
    | |__________- unnecessary `let` binding
630 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
626 ~         
627 ~         C2RustUnnamed_0 {
628 +             string: b"MouseUp3Border\0" as *const u8 as *const libc::c_char,
629 +             key: KEYC_MOUSEUP3_BORDER as libc::c_int as key_code,
630 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:637:9
    |
633 | /         let mut init = C2RustUnnamed_0 {
634 | |             string: b"MouseDrag1Pane\0" as *const u8 as *const libc::c_char,
635 | |             key: KEYC_MOUSEDRAG1_PANE as libc::c_int as key_code,
636 | |         };
    | |__________- unnecessary `let` binding
637 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
633 ~         
634 ~         C2RustUnnamed_0 {
635 +             string: b"MouseDrag1Pane\0" as *const u8 as *const libc::c_char,
636 +             key: KEYC_MOUSEDRAG1_PANE as libc::c_int as key_code,
637 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:644:9
    |
640 | /         let mut init = C2RustUnnamed_0 {
641 | |             string: b"MouseDrag1Status\0" as *const u8 as *const libc::c_char,
642 | |             key: KEYC_MOUSEDRAG1_STATUS as libc::c_int as key_code,
643 | |         };
    | |__________- unnecessary `let` binding
644 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
640 ~         
641 ~         C2RustUnnamed_0 {
642 +             string: b"MouseDrag1Status\0" as *const u8 as *const libc::c_char,
643 +             key: KEYC_MOUSEDRAG1_STATUS as libc::c_int as key_code,
644 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:651:9
    |
647 | /         let mut init = C2RustUnnamed_0 {
648 | |             string: b"MouseDrag1Border\0" as *const u8 as *const libc::c_char,
649 | |             key: KEYC_MOUSEDRAG1_BORDER as libc::c_int as key_code,
650 | |         };
    | |__________- unnecessary `let` binding
651 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
647 ~         
648 ~         C2RustUnnamed_0 {
649 +             string: b"MouseDrag1Border\0" as *const u8 as *const libc::c_char,
650 +             key: KEYC_MOUSEDRAG1_BORDER as libc::c_int as key_code,
651 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:658:9
    |
654 | /         let mut init = C2RustUnnamed_0 {
655 | |             string: b"MouseDrag2Pane\0" as *const u8 as *const libc::c_char,
656 | |             key: KEYC_MOUSEDRAG2_PANE as libc::c_int as key_code,
657 | |         };
    | |__________- unnecessary `let` binding
658 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
654 ~         
655 ~         C2RustUnnamed_0 {
656 +             string: b"MouseDrag2Pane\0" as *const u8 as *const libc::c_char,
657 +             key: KEYC_MOUSEDRAG2_PANE as libc::c_int as key_code,
658 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:665:9
    |
661 | /         let mut init = C2RustUnnamed_0 {
662 | |             string: b"MouseDrag2Status\0" as *const u8 as *const libc::c_char,
663 | |             key: KEYC_MOUSEDRAG2_STATUS as libc::c_int as key_code,
664 | |         };
    | |__________- unnecessary `let` binding
665 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
661 ~         
662 ~         C2RustUnnamed_0 {
663 +             string: b"MouseDrag2Status\0" as *const u8 as *const libc::c_char,
664 +             key: KEYC_MOUSEDRAG2_STATUS as libc::c_int as key_code,
665 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:672:9
    |
668 | /         let mut init = C2RustUnnamed_0 {
669 | |             string: b"MouseDrag2Border\0" as *const u8 as *const libc::c_char,
670 | |             key: KEYC_MOUSEDRAG2_BORDER as libc::c_int as key_code,
671 | |         };
    | |__________- unnecessary `let` binding
672 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
668 ~         
669 ~         C2RustUnnamed_0 {
670 +             string: b"MouseDrag2Border\0" as *const u8 as *const libc::c_char,
671 +             key: KEYC_MOUSEDRAG2_BORDER as libc::c_int as key_code,
672 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:679:9
    |
675 | /         let mut init = C2RustUnnamed_0 {
676 | |             string: b"MouseDrag3Pane\0" as *const u8 as *const libc::c_char,
677 | |             key: KEYC_MOUSEDRAG3_PANE as libc::c_int as key_code,
678 | |         };
    | |__________- unnecessary `let` binding
679 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
675 ~         
676 ~         C2RustUnnamed_0 {
677 +             string: b"MouseDrag3Pane\0" as *const u8 as *const libc::c_char,
678 +             key: KEYC_MOUSEDRAG3_PANE as libc::c_int as key_code,
679 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:686:9
    |
682 | /         let mut init = C2RustUnnamed_0 {
683 | |             string: b"MouseDrag3Status\0" as *const u8 as *const libc::c_char,
684 | |             key: KEYC_MOUSEDRAG3_STATUS as libc::c_int as key_code,
685 | |         };
    | |__________- unnecessary `let` binding
686 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
682 ~         
683 ~         C2RustUnnamed_0 {
684 +             string: b"MouseDrag3Status\0" as *const u8 as *const libc::c_char,
685 +             key: KEYC_MOUSEDRAG3_STATUS as libc::c_int as key_code,
686 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:693:9
    |
689 | /         let mut init = C2RustUnnamed_0 {
690 | |             string: b"MouseDrag3Border\0" as *const u8 as *const libc::c_char,
691 | |             key: KEYC_MOUSEDRAG3_BORDER as libc::c_int as key_code,
692 | |         };
    | |__________- unnecessary `let` binding
693 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
689 ~         
690 ~         C2RustUnnamed_0 {
691 +             string: b"MouseDrag3Border\0" as *const u8 as *const libc::c_char,
692 +             key: KEYC_MOUSEDRAG3_BORDER as libc::c_int as key_code,
693 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:700:9
    |
696 | /         let mut init = C2RustUnnamed_0 {
697 | |             string: b"MouseDragEnd1Pane\0" as *const u8 as *const libc::c_char,
698 | |             key: KEYC_MOUSEDRAGEND1_PANE as libc::c_int as key_code,
699 | |         };
    | |__________- unnecessary `let` binding
700 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
696 ~         
697 ~         C2RustUnnamed_0 {
698 +             string: b"MouseDragEnd1Pane\0" as *const u8 as *const libc::c_char,
699 +             key: KEYC_MOUSEDRAGEND1_PANE as libc::c_int as key_code,
700 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:707:9
    |
703 | /         let mut init = C2RustUnnamed_0 {
704 | |             string: b"MouseDragEnd1Status\0" as *const u8 as *const libc::c_char,
705 | |             key: KEYC_MOUSEDRAGEND1_STATUS as libc::c_int as key_code,
706 | |         };
    | |__________- unnecessary `let` binding
707 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
703 ~         
704 ~         C2RustUnnamed_0 {
705 +             string: b"MouseDragEnd1Status\0" as *const u8 as *const libc::c_char,
706 +             key: KEYC_MOUSEDRAGEND1_STATUS as libc::c_int as key_code,
707 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:714:9
    |
710 | /         let mut init = C2RustUnnamed_0 {
711 | |             string: b"MouseDragEnd1Border\0" as *const u8 as *const libc::c_char,
712 | |             key: KEYC_MOUSEDRAGEND1_BORDER as libc::c_int as key_code,
713 | |         };
    | |__________- unnecessary `let` binding
714 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
710 ~         
711 ~         C2RustUnnamed_0 {
712 +             string: b"MouseDragEnd1Border\0" as *const u8 as *const libc::c_char,
713 +             key: KEYC_MOUSEDRAGEND1_BORDER as libc::c_int as key_code,
714 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:721:9
    |
717 | /         let mut init = C2RustUnnamed_0 {
718 | |             string: b"MouseDragEnd2Pane\0" as *const u8 as *const libc::c_char,
719 | |             key: KEYC_MOUSEDRAGEND2_PANE as libc::c_int as key_code,
720 | |         };
    | |__________- unnecessary `let` binding
721 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
717 ~         
718 ~         C2RustUnnamed_0 {
719 +             string: b"MouseDragEnd2Pane\0" as *const u8 as *const libc::c_char,
720 +             key: KEYC_MOUSEDRAGEND2_PANE as libc::c_int as key_code,
721 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:728:9
    |
724 | /         let mut init = C2RustUnnamed_0 {
725 | |             string: b"MouseDragEnd2Status\0" as *const u8 as *const libc::c_char,
726 | |             key: KEYC_MOUSEDRAGEND2_STATUS as libc::c_int as key_code,
727 | |         };
    | |__________- unnecessary `let` binding
728 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
724 ~         
725 ~         C2RustUnnamed_0 {
726 +             string: b"MouseDragEnd2Status\0" as *const u8 as *const libc::c_char,
727 +             key: KEYC_MOUSEDRAGEND2_STATUS as libc::c_int as key_code,
728 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:735:9
    |
731 | /         let mut init = C2RustUnnamed_0 {
732 | |             string: b"MouseDragEnd2Border\0" as *const u8 as *const libc::c_char,
733 | |             key: KEYC_MOUSEDRAGEND2_BORDER as libc::c_int as key_code,
734 | |         };
    | |__________- unnecessary `let` binding
735 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
731 ~         
732 ~         C2RustUnnamed_0 {
733 +             string: b"MouseDragEnd2Border\0" as *const u8 as *const libc::c_char,
734 +             key: KEYC_MOUSEDRAGEND2_BORDER as libc::c_int as key_code,
735 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:742:9
    |
738 | /         let mut init = C2RustUnnamed_0 {
739 | |             string: b"MouseDragEnd3Pane\0" as *const u8 as *const libc::c_char,
740 | |             key: KEYC_MOUSEDRAGEND3_PANE as libc::c_int as key_code,
741 | |         };
    | |__________- unnecessary `let` binding
742 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
738 ~         
739 ~         C2RustUnnamed_0 {
740 +             string: b"MouseDragEnd3Pane\0" as *const u8 as *const libc::c_char,
741 +             key: KEYC_MOUSEDRAGEND3_PANE as libc::c_int as key_code,
742 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:749:9
    |
745 | /         let mut init = C2RustUnnamed_0 {
746 | |             string: b"MouseDragEnd3Status\0" as *const u8 as *const libc::c_char,
747 | |             key: KEYC_MOUSEDRAGEND3_STATUS as libc::c_int as key_code,
748 | |         };
    | |__________- unnecessary `let` binding
749 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
745 ~         
746 ~         C2RustUnnamed_0 {
747 +             string: b"MouseDragEnd3Status\0" as *const u8 as *const libc::c_char,
748 +             key: KEYC_MOUSEDRAGEND3_STATUS as libc::c_int as key_code,
749 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:756:9
    |
752 | /         let mut init = C2RustUnnamed_0 {
753 | |             string: b"MouseDragEnd3Border\0" as *const u8 as *const libc::c_char,
754 | |             key: KEYC_MOUSEDRAGEND3_BORDER as libc::c_int as key_code,
755 | |         };
    | |__________- unnecessary `let` binding
756 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
752 ~         
753 ~         C2RustUnnamed_0 {
754 +             string: b"MouseDragEnd3Border\0" as *const u8 as *const libc::c_char,
755 +             key: KEYC_MOUSEDRAGEND3_BORDER as libc::c_int as key_code,
756 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:763:9
    |
759 | /         let mut init = C2RustUnnamed_0 {
760 | |             string: b"WheelUpPane\0" as *const u8 as *const libc::c_char,
761 | |             key: KEYC_WHEELUP_PANE as libc::c_int as key_code,
762 | |         };
    | |__________- unnecessary `let` binding
763 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
759 ~         
760 ~         C2RustUnnamed_0 {
761 +             string: b"WheelUpPane\0" as *const u8 as *const libc::c_char,
762 +             key: KEYC_WHEELUP_PANE as libc::c_int as key_code,
763 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:770:9
    |
766 | /         let mut init = C2RustUnnamed_0 {
767 | |             string: b"WheelUpStatus\0" as *const u8 as *const libc::c_char,
768 | |             key: KEYC_WHEELUP_STATUS as libc::c_int as key_code,
769 | |         };
    | |__________- unnecessary `let` binding
770 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
766 ~         
767 ~         C2RustUnnamed_0 {
768 +             string: b"WheelUpStatus\0" as *const u8 as *const libc::c_char,
769 +             key: KEYC_WHEELUP_STATUS as libc::c_int as key_code,
770 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:777:9
    |
773 | /         let mut init = C2RustUnnamed_0 {
774 | |             string: b"WheelUpBorder\0" as *const u8 as *const libc::c_char,
775 | |             key: KEYC_WHEELUP_BORDER as libc::c_int as key_code,
776 | |         };
    | |__________- unnecessary `let` binding
777 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
773 ~         
774 ~         C2RustUnnamed_0 {
775 +             string: b"WheelUpBorder\0" as *const u8 as *const libc::c_char,
776 +             key: KEYC_WHEELUP_BORDER as libc::c_int as key_code,
777 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:784:9
    |
780 | /         let mut init = C2RustUnnamed_0 {
781 | |             string: b"WheelDownPane\0" as *const u8 as *const libc::c_char,
782 | |             key: KEYC_WHEELDOWN_PANE as libc::c_int as key_code,
783 | |         };
    | |__________- unnecessary `let` binding
784 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
780 ~         
781 ~         C2RustUnnamed_0 {
782 +             string: b"WheelDownPane\0" as *const u8 as *const libc::c_char,
783 +             key: KEYC_WHEELDOWN_PANE as libc::c_int as key_code,
784 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:791:9
    |
787 | /         let mut init = C2RustUnnamed_0 {
788 | |             string: b"WheelDownStatus\0" as *const u8 as *const libc::c_char,
789 | |             key: KEYC_WHEELDOWN_STATUS as libc::c_int as key_code,
790 | |         };
    | |__________- unnecessary `let` binding
791 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
787 ~         
788 ~         C2RustUnnamed_0 {
789 +             string: b"WheelDownStatus\0" as *const u8 as *const libc::c_char,
790 +             key: KEYC_WHEELDOWN_STATUS as libc::c_int as key_code,
791 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:798:9
    |
794 | /         let mut init = C2RustUnnamed_0 {
795 | |             string: b"WheelDownBorder\0" as *const u8 as *const libc::c_char,
796 | |             key: KEYC_WHEELDOWN_BORDER as libc::c_int as key_code,
797 | |         };
    | |__________- unnecessary `let` binding
798 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
794 ~         
795 ~         C2RustUnnamed_0 {
796 +             string: b"WheelDownBorder\0" as *const u8 as *const libc::c_char,
797 +             key: KEYC_WHEELDOWN_BORDER as libc::c_int as key_code,
798 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:805:9
    |
801 | /         let mut init = C2RustUnnamed_0 {
802 | |             string: b"DoubleClick1Pane\0" as *const u8 as *const libc::c_char,
803 | |             key: KEYC_DOUBLECLICK1_PANE as libc::c_int as key_code,
804 | |         };
    | |__________- unnecessary `let` binding
805 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
801 ~         
802 ~         C2RustUnnamed_0 {
803 +             string: b"DoubleClick1Pane\0" as *const u8 as *const libc::c_char,
804 +             key: KEYC_DOUBLECLICK1_PANE as libc::c_int as key_code,
805 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:812:9
    |
808 | /         let mut init = C2RustUnnamed_0 {
809 | |             string: b"DoubleClick1Status\0" as *const u8 as *const libc::c_char,
810 | |             key: KEYC_DOUBLECLICK1_STATUS as libc::c_int as key_code,
811 | |         };
    | |__________- unnecessary `let` binding
812 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
808 ~         
809 ~         C2RustUnnamed_0 {
810 +             string: b"DoubleClick1Status\0" as *const u8 as *const libc::c_char,
811 +             key: KEYC_DOUBLECLICK1_STATUS as libc::c_int as key_code,
812 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:819:9
    |
815 | /         let mut init = C2RustUnnamed_0 {
816 | |             string: b"DoubleClick1Border\0" as *const u8 as *const libc::c_char,
817 | |             key: KEYC_DOUBLECLICK1_BORDER as libc::c_int as key_code,
818 | |         };
    | |__________- unnecessary `let` binding
819 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
815 ~         
816 ~         C2RustUnnamed_0 {
817 +             string: b"DoubleClick1Border\0" as *const u8 as *const libc::c_char,
818 +             key: KEYC_DOUBLECLICK1_BORDER as libc::c_int as key_code,
819 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:826:9
    |
822 | /         let mut init = C2RustUnnamed_0 {
823 | |             string: b"DoubleClick2Pane\0" as *const u8 as *const libc::c_char,
824 | |             key: KEYC_DOUBLECLICK2_PANE as libc::c_int as key_code,
825 | |         };
    | |__________- unnecessary `let` binding
826 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
822 ~         
823 ~         C2RustUnnamed_0 {
824 +             string: b"DoubleClick2Pane\0" as *const u8 as *const libc::c_char,
825 +             key: KEYC_DOUBLECLICK2_PANE as libc::c_int as key_code,
826 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:833:9
    |
829 | /         let mut init = C2RustUnnamed_0 {
830 | |             string: b"DoubleClick2Status\0" as *const u8 as *const libc::c_char,
831 | |             key: KEYC_DOUBLECLICK2_STATUS as libc::c_int as key_code,
832 | |         };
    | |__________- unnecessary `let` binding
833 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
829 ~         
830 ~         C2RustUnnamed_0 {
831 +             string: b"DoubleClick2Status\0" as *const u8 as *const libc::c_char,
832 +             key: KEYC_DOUBLECLICK2_STATUS as libc::c_int as key_code,
833 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:840:9
    |
836 | /         let mut init = C2RustUnnamed_0 {
837 | |             string: b"DoubleClick2Border\0" as *const u8 as *const libc::c_char,
838 | |             key: KEYC_DOUBLECLICK2_BORDER as libc::c_int as key_code,
839 | |         };
    | |__________- unnecessary `let` binding
840 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
836 ~         
837 ~         C2RustUnnamed_0 {
838 +             string: b"DoubleClick2Border\0" as *const u8 as *const libc::c_char,
839 +             key: KEYC_DOUBLECLICK2_BORDER as libc::c_int as key_code,
840 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:847:9
    |
843 | /         let mut init = C2RustUnnamed_0 {
844 | |             string: b"DoubleClick3Pane\0" as *const u8 as *const libc::c_char,
845 | |             key: KEYC_DOUBLECLICK3_PANE as libc::c_int as key_code,
846 | |         };
    | |__________- unnecessary `let` binding
847 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
843 ~         
844 ~         C2RustUnnamed_0 {
845 +             string: b"DoubleClick3Pane\0" as *const u8 as *const libc::c_char,
846 +             key: KEYC_DOUBLECLICK3_PANE as libc::c_int as key_code,
847 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:854:9
    |
850 | /         let mut init = C2RustUnnamed_0 {
851 | |             string: b"DoubleClick3Status\0" as *const u8 as *const libc::c_char,
852 | |             key: KEYC_DOUBLECLICK3_STATUS as libc::c_int as key_code,
853 | |         };
    | |__________- unnecessary `let` binding
854 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
850 ~         
851 ~         C2RustUnnamed_0 {
852 +             string: b"DoubleClick3Status\0" as *const u8 as *const libc::c_char,
853 +             key: KEYC_DOUBLECLICK3_STATUS as libc::c_int as key_code,
854 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:861:9
    |
857 | /         let mut init = C2RustUnnamed_0 {
858 | |             string: b"DoubleClick3Border\0" as *const u8 as *const libc::c_char,
859 | |             key: KEYC_DOUBLECLICK3_BORDER as libc::c_int as key_code,
860 | |         };
    | |__________- unnecessary `let` binding
861 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
857 ~         
858 ~         C2RustUnnamed_0 {
859 +             string: b"DoubleClick3Border\0" as *const u8 as *const libc::c_char,
860 +             key: KEYC_DOUBLECLICK3_BORDER as libc::c_int as key_code,
861 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:868:9
    |
864 | /         let mut init = C2RustUnnamed_0 {
865 | |             string: b"TripleClick1Pane\0" as *const u8 as *const libc::c_char,
866 | |             key: KEYC_TRIPLECLICK1_PANE as libc::c_int as key_code,
867 | |         };
    | |__________- unnecessary `let` binding
868 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
864 ~         
865 ~         C2RustUnnamed_0 {
866 +             string: b"TripleClick1Pane\0" as *const u8 as *const libc::c_char,
867 +             key: KEYC_TRIPLECLICK1_PANE as libc::c_int as key_code,
868 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:875:9
    |
871 | /         let mut init = C2RustUnnamed_0 {
872 | |             string: b"TripleClick1Status\0" as *const u8 as *const libc::c_char,
873 | |             key: KEYC_TRIPLECLICK1_STATUS as libc::c_int as key_code,
874 | |         };
    | |__________- unnecessary `let` binding
875 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
871 ~         
872 ~         C2RustUnnamed_0 {
873 +             string: b"TripleClick1Status\0" as *const u8 as *const libc::c_char,
874 +             key: KEYC_TRIPLECLICK1_STATUS as libc::c_int as key_code,
875 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:882:9
    |
878 | /         let mut init = C2RustUnnamed_0 {
879 | |             string: b"TripleClick1Border\0" as *const u8 as *const libc::c_char,
880 | |             key: KEYC_TRIPLECLICK1_BORDER as libc::c_int as key_code,
881 | |         };
    | |__________- unnecessary `let` binding
882 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
878 ~         
879 ~         C2RustUnnamed_0 {
880 +             string: b"TripleClick1Border\0" as *const u8 as *const libc::c_char,
881 +             key: KEYC_TRIPLECLICK1_BORDER as libc::c_int as key_code,
882 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:889:9
    |
885 | /         let mut init = C2RustUnnamed_0 {
886 | |             string: b"TripleClick2Pane\0" as *const u8 as *const libc::c_char,
887 | |             key: KEYC_TRIPLECLICK2_PANE as libc::c_int as key_code,
888 | |         };
    | |__________- unnecessary `let` binding
889 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
885 ~         
886 ~         C2RustUnnamed_0 {
887 +             string: b"TripleClick2Pane\0" as *const u8 as *const libc::c_char,
888 +             key: KEYC_TRIPLECLICK2_PANE as libc::c_int as key_code,
889 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:896:9
    |
892 | /         let mut init = C2RustUnnamed_0 {
893 | |             string: b"TripleClick2Status\0" as *const u8 as *const libc::c_char,
894 | |             key: KEYC_TRIPLECLICK2_STATUS as libc::c_int as key_code,
895 | |         };
    | |__________- unnecessary `let` binding
896 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
892 ~         
893 ~         C2RustUnnamed_0 {
894 +             string: b"TripleClick2Status\0" as *const u8 as *const libc::c_char,
895 +             key: KEYC_TRIPLECLICK2_STATUS as libc::c_int as key_code,
896 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:903:9
    |
899 | /         let mut init = C2RustUnnamed_0 {
900 | |             string: b"TripleClick2Border\0" as *const u8 as *const libc::c_char,
901 | |             key: KEYC_TRIPLECLICK2_BORDER as libc::c_int as key_code,
902 | |         };
    | |__________- unnecessary `let` binding
903 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
899 ~         
900 ~         C2RustUnnamed_0 {
901 +             string: b"TripleClick2Border\0" as *const u8 as *const libc::c_char,
902 +             key: KEYC_TRIPLECLICK2_BORDER as libc::c_int as key_code,
903 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:910:9
    |
906 | /         let mut init = C2RustUnnamed_0 {
907 | |             string: b"TripleClick3Pane\0" as *const u8 as *const libc::c_char,
908 | |             key: KEYC_TRIPLECLICK3_PANE as libc::c_int as key_code,
909 | |         };
    | |__________- unnecessary `let` binding
910 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
906 ~         
907 ~         C2RustUnnamed_0 {
908 +             string: b"TripleClick3Pane\0" as *const u8 as *const libc::c_char,
909 +             key: KEYC_TRIPLECLICK3_PANE as libc::c_int as key_code,
910 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:917:9
    |
913 | /         let mut init = C2RustUnnamed_0 {
914 | |             string: b"TripleClick3Status\0" as *const u8 as *const libc::c_char,
915 | |             key: KEYC_TRIPLECLICK3_STATUS as libc::c_int as key_code,
916 | |         };
    | |__________- unnecessary `let` binding
917 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
913 ~         
914 ~         C2RustUnnamed_0 {
915 +             string: b"TripleClick3Status\0" as *const u8 as *const libc::c_char,
916 +             key: KEYC_TRIPLECLICK3_STATUS as libc::c_int as key_code,
917 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/key_string.rs:924:9
    |
920 | /         let mut init = C2RustUnnamed_0 {
921 | |             string: b"TripleClick3Border\0" as *const u8 as *const libc::c_char,
922 | |             key: KEYC_TRIPLECLICK3_BORDER as libc::c_int as key_code,
923 | |         };
    | |__________- unnecessary `let` binding
924 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
920 ~         
921 ~         C2RustUnnamed_0 {
922 +             string: b"TripleClick3Border\0" as *const u8 as *const libc::c_char,
923 +             key: KEYC_TRIPLECLICK3_BORDER as libc::c_int as key_code,
924 +         }
    |

warning: unneeded `return` statement
   --> src/key_string.rs:951:5
    |
951 |     return 0xfffe00000000 as libc::c_ulonglong;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xfffe00000000 as libc::c_ulonglong`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/key_string.rs:941:9
    |
941 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
   --> src/key_string.rs:978:5
    |
978 |     return modifiers;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `modifiers`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/key_string.rs:972:27
    |
972 |                 *string = 0 as *const libc::c_char;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/key_string.rs:981:1
     |
981  | / pub unsafe extern "C" fn key_string_lookup_string(
982  | |     mut string: *const libc::c_char,
983  | | ) -> key_code {
984  | |     static mut other: *const libc::c_char = b"!#()+,-.0123456789:;<=>?'\r\t\0"
...    |
1088 | |     return key | modifiers;
1089 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_string.rs:1088:5
     |
1088 |     return key | modifiers;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `key | modifiers`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/key_string.rs:1025:9
     |
1025 |         string;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/key_string.rs:1051:17
     |
1051 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_combine` doesn't need a mutable reference
    --> src/key_string.rs:1056:29
     |
1056 |             if utf8_combine(&mut ud, &mut wc) as libc::c_uint
     |                             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/key_string.rs:1091:1
     |
1091 | / pub unsafe extern "C" fn key_string_lookup_key(
1092 | |     mut key: key_code,
1093 | | ) -> *const libc::c_char {
1094 | |     static mut out: [libc::c_char; 32] = [0; 32];
...    |
1268 | |     return out.as_mut_ptr();
1269 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/key_string.rs:1268:5
     |
1268 |     return out.as_mut_ptr();
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `out.as_mut_ptr()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/key_string.rs:1197:9
     |
1197 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/layout.rs:907:1
    |
907 | / pub unsafe extern "C" fn layout_create_cell(
908 | |     mut lcparent: *mut layout_cell,
909 | | ) -> *mut layout_cell {
910 | |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
...   |
934 | |     return lc;
935 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/layout.rs:934:5
    |
934 |     return lc;
    |     ^^^^^^^^^^ help: remove `return`: `lc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/layout.rs:910:36
    |
910 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/layout.rs:915:29
    |
915 |     (*lc).cells.tqh_first = 0 as *mut layout_cell;
    |                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/layout.rs:933:16
    |
933 |     (*lc).wp = 0 as *mut window_pane;
    |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/layout.rs:937:1
    |
937 | / pub unsafe extern "C" fn layout_free_cell(mut lc: *mut layout_cell) {
938 | |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
939 | |     match (*lc).type_0 as libc::c_uint {
940 | |         0 | 1 => {
...   |
961 | |     free(lc as *mut libc::c_void);
962 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/layout.rs:938:41
    |
938 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
    |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/layout.rs:956:43
    |
956 |                 (*(*lc).wp).layout_cell = 0 as *mut layout_cell;
    |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:964:1
     |
964  | / pub unsafe extern "C" fn layout_print_cell(
965  | |     mut lc: *mut layout_cell,
966  | |     mut hdr: *const libc::c_char,
967  | |     mut n: u_int,
...    |
1013 | |     };
1014 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/layout.rs:969:41
    |
969 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
    |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/layout.rs:970:43
    |
970 |     let mut type_0: *const libc::c_char = 0 as *const libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/layout.rs:1012:9
     |
1012 |         2 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1016:1
     |
1016 | / pub unsafe extern "C" fn layout_set_size(
1017 | |     mut lc: *mut layout_cell,
1018 | |     mut sx: u_int,
1019 | |     mut sy: u_int,
...    |
1026 | |     (*lc).yoff = yoff;
1027 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1029:1
     |
1029 | / pub unsafe extern "C" fn layout_make_leaf(
1030 | |     mut lc: *mut layout_cell,
1031 | |     mut wp: *mut window_pane,
1032 | | ) {
...    |
1037 | |     (*lc).wp = wp;
1038 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1034:29
     |
1034 |     (*lc).cells.tqh_first = 0 as *mut layout_cell;
     |                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1040:1
     |
1040 | / pub unsafe extern "C" fn layout_make_node(
1041 | |     mut lc: *mut layout_cell,
1042 | |     mut type_0: layout_type,
1043 | | ) {
...    |
1053 | |     (*lc).wp = 0 as *mut window_pane;
1054 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1048:29
     |
1048 |     (*lc).cells.tqh_first = 0 as *mut layout_cell;
     |                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1051:35
     |
1051 |         (*(*lc).wp).layout_cell = 0 as *mut layout_cell;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1053:16
     |
1053 |     (*lc).wp = 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1056:1
     |
1056 | / pub unsafe extern "C" fn layout_fix_offsets(mut lc: *mut layout_cell) {
1057 | |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
1058 | |     let mut xoff: u_int = 0;
1059 | |     let mut yoff: u_int = 0;
...    |
1090 | |     };
1091 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1057:41
     |
1057 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout.rs:1114:5
     |
1114 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1096:42
     |
1096 |     let mut first_lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1117:1
     |
1117 | / pub unsafe extern "C" fn layout_fix_panes(
1118 | |     mut w: *mut window,
1119 | |     mut wsx: u_int,
1120 | |     mut wsy: u_int,
...    |
1170 | |     }
1171 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1122:36
     |
1122 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1123:36
     |
1123 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1173:1
     |
1173 | / pub unsafe extern "C" fn layout_count_cells(mut lc: *mut layout_cell) -> u_int {
1174 | |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
1175 | |     let mut count: u_int = 0;
1176 | |     match (*lc).type_0 as libc::c_uint {
...    |
1190 | |     };
1191 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout.rs:1177:14
     |
1177 |         2 => return 1 as libc::c_int as u_int,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/layout.rs:1185:13
     |
1185 |             return count;
     |             ^^^^^^^^^^^^^ help: remove `return`: `count`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1174:41
     |
1174 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout.rs:1243:5
     |
1243 |     return available;
     |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `available`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1197:41
     |
1197 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1246:1
     |
1246 | / pub unsafe extern "C" fn layout_resize_adjust(
1247 | |     mut w: *mut window,
1248 | |     mut lc: *mut layout_cell,
1249 | |     mut type_0: layout_type,
...    |
1287 | |     }
1288 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1252:41
     |
1252 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout.rs:1278:17
     |
1278 |                 change;
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout.rs:1283:17
     |
1283 |                 change;
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1290:1
     |
1290 | / pub unsafe extern "C" fn layout_destroy_cell(
1291 | |     mut w: *mut window,
1292 | |     mut lc: *mut layout_cell,
1293 | |     mut lcroot: *mut *mut layout_cell,
...    |
1356 | |     }
1357 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1295:41
     |
1295 |     let mut lcother: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1296:42
     |
1296 |     let mut lcparent: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1300:19
     |
1300 |         *lcroot = 0 as *mut layout_cell;
     |                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1359:1
     |
1359 | / pub unsafe extern "C" fn layout_init(mut w: *mut window, mut wp: *mut window_pane) {
1360 | |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
1361 | |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
1362 | |     lc = (*w).layout_root;
...    |
1371 | |     layout_fix_panes(w, (*w).sx, (*w).sy);
1372 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1360:36
     |
1360 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1361:43
     |
1361 |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
     |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1374:1
     |
1374 | / pub unsafe extern "C" fn layout_free(mut w: *mut window) {
1375 | |     layout_free_cell((*w).layout_root);
1376 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1378:1
     |
1378 | / pub unsafe extern "C" fn layout_resize(
1379 | |     mut w: *mut window,
1380 | |     mut sx: u_int,
1381 | |     mut sy: u_int,
...    |
1419 | |     layout_fix_panes(w, sx, sy);
1420 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1422:1
     |
1422 | / pub unsafe extern "C" fn layout_resize_pane_to(
1423 | |     mut wp: *mut window_pane,
1424 | |     mut type_0: layout_type,
1425 | |     mut new_size: u_int,
...    |
1452 | |     layout_resize_pane(wp, type_0, change, 1 as libc::c_int);
1453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1427:36
     |
1427 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1428:42
     |
1428 |     let mut lcparent: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1455:1
     |
1455 | / pub unsafe extern "C" fn layout_resize_pane(
1456 | |     mut wp: *mut window_pane,
1457 | |     mut type_0: layout_type,
1458 | |     mut change: libc::c_int,
...    |
1498 | |     );
1499 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:1462:36
     |
1462 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1463:42
     |
1463 |     let mut lcparent: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout.rs:1537:5
     |
1537 |     return size as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `size as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1507:39
     |
1507 |     let mut lcadd: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1508:42
     |
1508 |     let mut lcremove: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout.rs:1571:5
     |
1571 |     return size as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `size as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1545:39
     |
1545 |     let mut lcadd: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1546:42
     |
1546 |     let mut lcremove: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1574:1
     |
1574 | / pub unsafe extern "C" fn layout_assign_pane(
1575 | |     mut lc: *mut layout_cell,
1576 | |     mut wp: *mut window_pane,
1577 | | ) {
1578 | |     layout_make_leaf(lc, wp);
1579 | |     layout_fix_panes((*wp).window, (*(*wp).window).sx, (*(*wp).window).sy);
1580 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout.rs:1618:5
     |
1618 |     return new_size;
     |     ^^^^^^^^^^^^^^^^ help: remove `return`: `new_size`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/layout.rs:1676:16
     |
1676 |               if !((*lcchild).type_0 as libc::c_uint
     |  ________________^
1677 | |                 == LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint)
     | |____________________________________________________________________^ help: try: `(*lcchild).type_0 as libc::c_uint != LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/layout.rs:1686:5
     |
1686 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1626:41
     |
1626 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout.rs:1640:9
     |
1640 |         count;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout.rs:1670:13
     |
1670 |             idx;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout.rs:1692:41
     |
1692 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout.rs:1705:9
     |
1705 |         count;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout.rs:1768:9
     |
1768 |         idx;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:1773:1
     |
1773 | / pub unsafe extern "C" fn layout_split_pane(
1774 | |     mut wp: *mut window_pane,
1775 | |     mut type_0: layout_type,
1776 | |     mut size: libc::c_int,
...    |
2010 | |     return lcnew;
2011 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout.rs:2010:5
     |
2010 |     return lcnew;
     |     ^^^^^^^^^^^^^ help: remove `return`: `lcnew`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:1780:36
     |
1780 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1781:42
     |
1781 |     let mut lcparent: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1782:39
     |
1782 |     let mut lcnew: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1783:37
     |
1783 |     let mut lc1: *mut layout_cell = 0 as *mut layout_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1784:37
     |
1784 |     let mut lc2: *mut layout_cell = 0 as *mut layout_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1806:24
     |
1806 |                 return 0 as *mut layout_cell;
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1811:24
     |
1811 |                 return 0 as *mut layout_cell;
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1848:16
     |
1848 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1921:39
     |
1921 |             (*lcnew).entry.tqe_next = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout.rs:1966:39
     |
1966 |             (*lcnew).entry.tqe_next = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:2013:1
     |
2013 | / pub unsafe extern "C" fn layout_close_pane(mut wp: *mut window_pane) {
2014 | |     let mut w: *mut window = (*wp).window;
2015 | |     layout_destroy_cell(w, (*wp).layout_cell, &mut (*w).layout_root);
2016 | |     if !((*w).layout_root).is_null() {
...    |
2020 | |     notify_window(b"window-layout-changed\0" as *const u8 as *const libc::c_char, w);
2021 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:2023:1
     |
2023 | / pub unsafe extern "C" fn layout_spread_cell(
2024 | |     mut w: *mut window,
2025 | |     mut parent: *mut layout_cell,
2026 | | ) -> libc::c_int {
...    |
2082 | |     return changed;
2083 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout.rs:2082:5
     |
2082 |     return changed;
     |     ^^^^^^^^^^^^^^^ help: remove `return`: `changed`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout.rs:2027:36
     |
2027 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout.rs:2037:9
     |
2037 |         number;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/layout.rs:2085:1
     |
2085 | / pub unsafe extern "C" fn layout_spread_out(mut wp: *mut window_pane) {
2086 | |     let mut parent: *mut layout_cell = 0 as *mut layout_cell;
2087 | |     let mut w: *mut window = (*wp).window;
2088 | |     parent = (*(*wp).layout_cell).parent;
...    |
2103 | |     };
2104 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout.rs:2086:40
     |
2086 |     let mut parent: *mut layout_cell = 0 as *mut layout_cell;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/layout_custom.rs:954:5
    |
954 |     return layout_find_bottomright(lc);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `layout_find_bottomright(lc)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/layout_custom.rs:967:5
    |
967 |     return csum;
    |     ^^^^^^^^^^^^ help: remove `return`: `csum`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/layout_custom.rs:965:9
    |
965 |         layout;
    |         ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/layout_custom.rs:970:1
    |
970 | / pub unsafe extern "C" fn layout_dump(mut root: *mut layout_cell) -> *mut libc::c_char {
971 | |     let mut layout: [libc::c_char; 8192] = [0; 8192];
972 | |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
973 | |     *layout.as_mut_ptr() = '\0' as i32 as libc::c_char;
...   |
988 | |     return out;
989 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/layout_custom.rs:988:5
    |
988 |     return out;
    |     ^^^^^^^^^^^ help: remove `return`: `out`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/layout_custom.rs:972:38
    |
972 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/layout_custom.rs:980:16
    |
980 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout_custom.rs:1069:5
     |
1069 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/layout_custom.rs:995:41
    |
995 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
    |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/layout_custom.rs:1042:9
     |
1042 |         2 | _ => {
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/layout_custom.rs:1046:5
     |
1046 | /     match current_block_21 {
1047 | |         11056912653737305132 => {
1048 | |             if strlcat(buf, &*brackets.offset(1 as libc::c_int as isize), len) >= len {
1049 | |                 return -(1 as libc::c_int);
...    |
1067 | |         _ => {}
1068 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1046 ~     if current_block_21 == 11056912653737305132 {
1047 +         if strlcat(buf, &*brackets.offset(1 as libc::c_int as isize), len) >= len {
1048 +             return -(1 as libc::c_int);
1049 +         }
1050 +         lcchild = (*lc).cells.tqh_first;
1051 +         while !lcchild.is_null() {
1052 +             if layout_append(lcchild, buf, len) != 0 as libc::c_int {
1053 +                 return -(1 as libc::c_int);
1054 +             }
1055 +             if strlcat(buf, b",\0" as *const u8 as *const libc::c_char, len) >= len {
1056 +                 return -(1 as libc::c_int);
1057 +             }
1058 +             lcchild = (*lcchild).entry.tqe_next;
1059 +         }
1060 +         *buf
1061 +             .offset(
1062 +                 (strlen(buf)).wrapping_sub(1 as libc::c_int as libc::c_ulong)
1063 +                     as isize,
1064 +             ) = *brackets.offset(0 as libc::c_int as isize);
1065 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/layout_custom.rs:1072:1
     |
1072 | / pub unsafe extern "C" fn layout_parse(
1073 | |     mut w: *mut window,
1074 | |     mut layout: *const libc::c_char,
1075 | | ) -> libc::c_int {
...    |
1152 | |     };
1153 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1077:36
     |
1077 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1078:41
     |
1078 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1079:36
     |
1079 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1097:27
     |
1097 |     lc = layout_construct(0 as *mut layout_cell, &mut layout);
     |                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout_custom.rs:1163:13
     |
1163 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/layout_custom.rs:1171:13
     |
1171 |             return;
     |             ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1158:41
     |
1158 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/layout_custom.rs:1323:5
     |
1323 |     return lc;
     |     ^^^^^^^^^^ help: remove `return`: `lc`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1181:36
     |
1181 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1182:41
     |
1182 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/layout_custom.rs:1187:42
     |
1187 |     let mut saved: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1191:16
     |
1191 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1202:16
     |
1202 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1208:9
     |
1208 |         *layout;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1211:16
     |
1211 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1214:5
     |
1214 |     *layout;
     |     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_custom.rs:1219:9
     |
1219 |         *layout;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1222:16
     |
1222 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1225:5
     |
1225 |     *layout;
     |     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_custom.rs:1230:9
     |
1230 |         *layout;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1233:16
     |
1233 |         return 0 as *mut layout_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1236:5
     |
1236 |     *layout;
     |     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_custom.rs:1241:9
     |
1241 |         *layout;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_custom.rs:1246:9
     |
1246 |         *layout;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_custom.rs:1252:13
     |
1252 |             *layout;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1281:24
     |
1281 |                 return 0 as *mut layout_cell;
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1285:17
     |
1285 |                 *layout;
     |                 ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_custom.rs:1291:45
     |
1291 |                 (*lcchild).entry.tqe_next = 0 as *mut layout_cell;
     |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_custom.rs:1322:5
     |
1322 |     *layout;
     |     ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/layout_set.rs:939:13
    |
933 | /             let mut init = C2RustUnnamed_34 {
934 | |                 name: b"even-horizontal\0" as *const u8 as *const libc::c_char,
935 | |                 arrange: Some(
936 | |                     layout_set_even_h as unsafe extern "C" fn(*mut window) -> (),
937 | |                 ),
938 | |             };
    | |______________- unnecessary `let` binding
939 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
933 ~             
934 ~             C2RustUnnamed_34 {
935 +                 name: b"even-horizontal\0" as *const u8 as *const libc::c_char,
936 +                 arrange: Some(
937 +                     layout_set_even_h as unsafe extern "C" fn(*mut window) -> (),
938 +                 ),
939 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/layout_set.rs:948:13
    |
942 | /             let mut init = C2RustUnnamed_34 {
943 | |                 name: b"even-vertical\0" as *const u8 as *const libc::c_char,
944 | |                 arrange: Some(
945 | |                     layout_set_even_v as unsafe extern "C" fn(*mut window) -> (),
946 | |                 ),
947 | |             };
    | |______________- unnecessary `let` binding
948 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
942 ~             
943 ~             C2RustUnnamed_34 {
944 +                 name: b"even-vertical\0" as *const u8 as *const libc::c_char,
945 +                 arrange: Some(
946 +                     layout_set_even_v as unsafe extern "C" fn(*mut window) -> (),
947 +                 ),
948 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/layout_set.rs:957:13
    |
951 | /             let mut init = C2RustUnnamed_34 {
952 | |                 name: b"main-horizontal\0" as *const u8 as *const libc::c_char,
953 | |                 arrange: Some(
954 | |                     layout_set_main_h as unsafe extern "C" fn(*mut window) -> (),
955 | |                 ),
956 | |             };
    | |______________- unnecessary `let` binding
957 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
951 ~             
952 ~             C2RustUnnamed_34 {
953 +                 name: b"main-horizontal\0" as *const u8 as *const libc::c_char,
954 +                 arrange: Some(
955 +                     layout_set_main_h as unsafe extern "C" fn(*mut window) -> (),
956 +                 ),
957 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/layout_set.rs:966:13
    |
960 | /             let mut init = C2RustUnnamed_34 {
961 | |                 name: b"main-vertical\0" as *const u8 as *const libc::c_char,
962 | |                 arrange: Some(
963 | |                     layout_set_main_v as unsafe extern "C" fn(*mut window) -> (),
964 | |                 ),
965 | |             };
    | |______________- unnecessary `let` binding
966 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
960 ~             
961 ~             C2RustUnnamed_34 {
962 +                 name: b"main-vertical\0" as *const u8 as *const libc::c_char,
963 +                 arrange: Some(
964 +                     layout_set_main_v as unsafe extern "C" fn(*mut window) -> (),
965 +                 ),
966 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/layout_set.rs:975:13
    |
969 | /             let mut init = C2RustUnnamed_34 {
970 | |                 name: b"tiled\0" as *const u8 as *const libc::c_char,
971 | |                 arrange: Some(
972 | |                     layout_set_tiled as unsafe extern "C" fn(*mut window) -> (),
973 | |                 ),
974 | |             };
    | |______________- unnecessary `let` binding
975 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
969 ~             
970 ~             C2RustUnnamed_34 {
971 +                 name: b"tiled\0" as *const u8 as *const libc::c_char,
972 +                 arrange: Some(
973 +                     layout_set_tiled as unsafe extern "C" fn(*mut window) -> (),
974 +                 ),
975 +             }
    |

warning: unsafe function's docs miss `# Safety` section
    --> src/layout_set.rs:980:1
     |
980  | / pub unsafe extern "C" fn layout_set_lookup(
981  | |     mut name: *const libc::c_char,
982  | | ) -> libc::c_int {
983  | |     let mut i: u_int = 0;
...    |
1000 | |     return matched;
1001 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout_set.rs:1000:5
     |
1000 |     return matched;
     |     ^^^^^^^^^^^^^^^ help: remove `return`: `matched`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/layout_set.rs:998:9
    |
998 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/layout_set.rs:1003:1
     |
1003 | / pub unsafe extern "C" fn layout_set_select(
1004 | |     mut w: *mut window,
1005 | |     mut layout: u_int,
1006 | | ) -> u_int {
...    |
1020 | |     return layout;
1021 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout_set.rs:1020:5
     |
1020 |     return layout;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `layout`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/layout_set.rs:1023:1
     |
1023 | / pub unsafe extern "C" fn layout_set_next(mut w: *mut window) -> u_int {
1024 | |     let mut layout: u_int = 0;
1025 | |     if (*w).lastlayout == -(1 as libc::c_int) {
1026 | |         layout = 0 as libc::c_int as u_int;
...    |
1043 | |     return layout;
1044 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout_set.rs:1043:5
     |
1043 |     return layout;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `layout`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/layout_set.rs:1046:1
     |
1046 | / pub unsafe extern "C" fn layout_set_previous(mut w: *mut window) -> u_int {
1047 | |     let mut layout: u_int = 0;
1048 | |     if (*w).lastlayout == -(1 as libc::c_int) {
1049 | |         layout = (::core::mem::size_of::<[C2RustUnnamed_34; 5]>() as libc::c_ulong)
...    |
1069 | |     return layout;
1070 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/layout_set.rs:1069:5
     |
1069 |     return layout;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `layout`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/layout_set.rs:1062:13
     |
1062 |             layout;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1072:36
     |
1072 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1073:36
     |
1073 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1074:39
     |
1074 |     let mut lcnew: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1087:43
     |
1087 |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
     |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1103:35
     |
1103 |         (*lcnew).entry.tqe_next = 0 as *mut layout_cell;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/layout_set.rs:1280:16
     |
1280 |             if !((*w).sx <= used) {
     |                ^^^^^^^^^^^^^^^^^^ help: try: `(*w).sx > used`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1128:36
     |
1128 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1129:36
     |
1129 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1130:40
     |
1130 |     let mut lcmain: *mut layout_cell = 0 as *mut layout_cell;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1131:39
     |
1131 |     let mut lcrow: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1132:41
     |
1132 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1158:5
     |
1158 |     n;
     |     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1203:43
     |
1203 |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
     |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1224:32
     |
1224 |     (*lcmain).entry.tqe_next = 0 as *mut layout_cell;
     |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1242:35
     |
1242 |         (*lcrow).entry.tqe_next = 0 as *mut layout_cell;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1262:45
     |
1262 |                 (*lcchild).entry.tqe_next = 0 as *mut layout_cell;
     |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1271:17
     |
1271 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1275:17
     |
1275 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1291:9
     |
1291 |         j;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/layout_set.rs:1473:16
     |
1473 |             if !((*w).sy <= used) {
     |                ^^^^^^^^^^^^^^^^^^ help: try: `(*w).sy > used`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1321:36
     |
1321 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1322:36
     |
1322 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1323:40
     |
1323 |     let mut lcmain: *mut layout_cell = 0 as *mut layout_cell;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1324:42
     |
1324 |     let mut lccolumn: *mut layout_cell = 0 as *mut layout_cell;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1325:41
     |
1325 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1351:5
     |
1351 |     n;
     |     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1396:43
     |
1396 |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
     |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1417:32
     |
1417 |     (*lcmain).entry.tqe_next = 0 as *mut layout_cell;
     |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1435:38
     |
1435 |         (*lccolumn).entry.tqe_next = 0 as *mut layout_cell;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1455:45
     |
1455 |                 (*lcchild).entry.tqe_next = 0 as *mut layout_cell;
     |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1464:17
     |
1464 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1468:17
     |
1468 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1484:9
     |
1484 |         j;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/layout_set.rs:1625:16
     |
1625 |             if !((*w).sx <= used) {
     |                ^^^^^^^^^^^^^^^^^^ help: try: `(*w).sx > used`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1514:36
     |
1514 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1515:36
     |
1515 |     let mut lc: *mut layout_cell = 0 as *mut layout_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1516:39
     |
1516 |     let mut lcrow: *mut layout_cell = 0 as *mut layout_cell;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1517:41
     |
1517 |     let mut lcchild: *mut layout_cell = 0 as *mut layout_cell;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1543:9
     |
1543 |         rows;
     |         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1546:13
     |
1546 |             columns;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1559:43
     |
1559 |     (*w).layout_root = layout_create_cell(0 as *mut layout_cell);
     |                                           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1585:35
     |
1585 |         (*lcrow).entry.tqe_next = 0 as *mut layout_cell;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/layout_set.rs:1607:45
     |
1607 |                 (*lcchild).entry.tqe_next = 0 as *mut layout_cell;
     |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/layout_set.rs:1616:17
     |
1616 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1620:17
     |
1620 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/layout_set.rs:1636:9
     |
1636 |         j;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:105:1
    |
105 | / pub unsafe extern "C" fn log_add_level() {
106 | |     log_level += 1;
107 | |     log_level;
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/log.rs:107:5
    |
107 |     log_level;
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:110:1
    |
110 | / pub unsafe extern "C" fn log_get_level() -> libc::c_int {
111 | |     return log_level;
112 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/log.rs:111:5
    |
111 |     return log_level;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `log_level`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:114:1
    |
114 | / pub unsafe extern "C" fn log_open(mut name: *const libc::c_char) {
115 | |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
116 | |     if log_level == 0 as libc::c_int {
117 | |         return;
...   |
141 | |     );
142 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/log.rs:115:39
    |
115 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/log.rs:133:9
    |
133 |         0 as *mut libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:144:1
    |
144 | / pub unsafe extern "C" fn log_toggle(mut name: *const libc::c_char) {
145 | |     if log_level == 0 as libc::c_int {
146 | |         log_level = 1 as libc::c_int;
147 | |         log_open(name);
...   |
153 | |     };
154 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:156:1
    |
156 | / pub unsafe extern "C" fn log_close() {
157 | |     if !log_file.is_null() {
158 | |         fclose(log_file);
159 | |     }
160 | |     log_file = 0 as *mut FILE;
161 | |     event_set_log_callback(None);
162 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/log.rs:160:16
    |
160 |     log_file = 0 as *mut FILE;
    |                ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/log.rs:164:1
    |
164 | / pub unsafe extern "C" fn log_vwrite(
165 | |     mut msg: *const libc::c_char,
166 | |     mut ap: ::core::ffi::VaList,
167 | | ) {
...   |
199 | |     free(fmt as *mut libc::c_void);
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/log.rs:168:38
    |
168 |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/log.rs:169:38
    |
169 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/log.rs:186:27
    |
186 |     gettimeofday(&mut tv, 0 as *mut libc::c_void);
    |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/mode_tree.rs:1235:5
     |
1235 |     return 0 as *mut mode_tree_item;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut mode_tree_item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1222:40
     |
1222 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1223:42
     |
1223 |     let mut child: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1235:12
     |
1235 |     return 0 as *mut mode_tree_item;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1244:40
     |
1244 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1245:41
     |
1245 |     let mut mti1: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1273:24
     |
1273 |     (*mtd).line_list = 0 as *mut mode_tree_line;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1281:40
     |
1281 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1282:41
     |
1282 |     let mut line: *mut mode_tree_line = 0 as *mut mode_tree_line;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:1324:13
     |
1324 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1330:40
     |
1330 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1339:1
     |
1339 | / pub unsafe extern "C" fn mode_tree_up(
1340 | |     mut mtd: *mut mode_tree_data,
1341 | |     mut wrap: libc::c_int,
1342 | | ) {
...    |
1357 | |     };
1358 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/mode_tree.rs:1352:9
     |
1352 |         (*mtd).current;
     |         ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:1355:13
     |
1355 |             (*mtd).offset;
     |             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1360:1
     |
1360 | / pub unsafe extern "C" fn mode_tree_down(
1361 | |     mut mtd: *mut mode_tree_data,
1362 | |     mut wrap: libc::c_int,
1363 | | ) {
...    |
1380 | |     };
1381 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/mode_tree.rs:1371:9
     |
1371 |         (*mtd).current;
     |         ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:1378:13
     |
1378 |             (*mtd).offset;
     |             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1383:1
     |
1383 | / pub unsafe extern "C" fn mode_tree_get_current(
1384 | |     mut mtd: *mut mode_tree_data,
1385 | | ) -> *mut libc::c_void {
1386 | |     return (*(*((*mtd).line_list).offset((*mtd).current as isize)).item).itemdata;
1387 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/mode_tree.rs:1386:5
     |
1386 |     return (*(*((*mtd).line_list).offset((*mtd).current as isize)).item).itemdata;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*(*((*mtd).line_list).offset((*mtd).current as isize)).item).itemdata`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1389:1
     |
1389 | / pub unsafe extern "C" fn mode_tree_expand_current(mut mtd: *mut mode_tree_data) {
1390 | |     if (*(*((*mtd).line_list).offset((*mtd).current as isize)).item).expanded == 0 {
1391 | |         (*(*((*mtd).line_list).offset((*mtd).current as isize)).item)
1392 | |             .expanded = 1 as libc::c_int;
1393 | |         mode_tree_build(mtd);
1394 | |     }
1395 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1397:1
     |
1397 | / pub unsafe extern "C" fn mode_tree_set_current(
1398 | |     mut mtd: *mut mode_tree_data,
1399 | |     mut tag: uint64_t,
1400 | | ) {
...    |
1423 | |     };
1424 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/mode_tree.rs:1408:9
     |
1408 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1426:1
     |
1426 | / pub unsafe extern "C" fn mode_tree_count_tagged(mut mtd: *mut mode_tree_data) -> u_int {
1427 | |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
1428 | |     let mut i: u_int = 0;
1429 | |     let mut tagged: u_int = 0;
...    |
1441 | |     return tagged;
1442 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/mode_tree.rs:1441:5
     |
1441 |     return tagged;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `tagged`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1427:40
     |
1427 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:1436:13
     |
1436 |             tagged;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:1439:9
     |
1439 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1444:1
     |
1444 | / pub unsafe extern "C" fn mode_tree_each_tagged(
1445 | |     mut mtd: *mut mode_tree_data,
1446 | |     mut cb: mode_tree_each_cb,
1447 | |     mut c: *mut client,
...    |
1471 | |     }
1472 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1451:40
     |
1451 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:1466:9
     |
1466 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn mode_tree_start(
1475 | |     mut wp: *mut window_pane,
1476 | |     mut args: *mut args,
1477 | |     mut buildcb: mode_tree_build_cb,
...    |
1528 | |     return mtd;
1529 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/mode_tree.rs:1528:5
     |
1528 |     return mtd;
     |     ^^^^^^^^^^^ help: remove `return`: `mtd`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1485:40
     |
1485 |     let mut mtd: *mut mode_tree_data = 0 as *mut mode_tree_data;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/mode_tree.rs:1486:41
     |
1486 |     let mut sort: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:1507:13
     |
1507 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1513:25
     |
1513 |         (*mtd).filter = 0 as *mut libc::c_char;
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1518:33
     |
1518 |     (*mtd).children.tqh_first = 0 as *mut mode_tree_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1531:1
     |
1531 | / pub unsafe extern "C" fn mode_tree_zoom(
1532 | |     mut mtd: *mut mode_tree_data,
1533 | |     mut args: *mut args,
1534 | | ) {
...    |
1543 | |     };
1544 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1546:1
     |
1546 | / pub unsafe extern "C" fn mode_tree_build(mut mtd: *mut mode_tree_data) {
1547 | |     let mut s: *mut screen = &mut (*mtd).screen;
1548 | |     let mut tag: uint64_t = 0;
1549 | |     if !((*mtd).line_list).is_null() {
...    |
1599 | |     mode_tree_check_selected(mtd);
1600 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1558:37
     |
1558 |         (*mtd).children.tqh_first = 0 as *mut mode_tree_item;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1561:33
     |
1561 |     (*mtd).children.tqh_first = 0 as *mut mode_tree_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1569:12
     |
1569 |         == 0 as *mut libc::c_void as *mut mode_tree_item) as libc::c_int;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/mode_tree.rs:1574:60
     |
1574 |             )((*mtd).modedata, (*mtd).sort_type, &mut tag, 0 as *const libc::c_char);
     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1577:30
     |
1577 |     (*mtd).saved.tqh_first = 0 as *mut mode_tree_item;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1608:1
     |
1608 | / pub unsafe extern "C" fn mode_tree_free(mut mtd: *mut mode_tree_data) {
1609 | |     let mut wp: *mut window_pane = (*mtd).wp;
1610 | |     if (*mtd).zoomed == 0 as libc::c_int {
1611 | |         server_unzoom_window((*wp).window);
...    |
1619 | |     mode_tree_remove_ref(mtd);
1620 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1622:1
     |
1622 | / pub unsafe extern "C" fn mode_tree_resize(
1623 | |     mut mtd: *mut mode_tree_data,
1624 | |     mut sx: u_int,
1625 | |     mut sy: u_int,
...    |
1631 | |     (*(*mtd).wp).flags |= 0x1 as libc::c_int;
1632 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1634:1
     |
1634 | / pub unsafe extern "C" fn mode_tree_add(
1635 | |     mut mtd: *mut mode_tree_data,
1636 | |     mut parent: *mut mode_tree_item,
1637 | |     mut itemdata: *mut libc::c_void,
...    |
1686 | |     return mti;
1687 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/mode_tree.rs:1686:5
     |
1686 |     return mti;
     |     ^^^^^^^^^^^ help: remove `return`: `mti`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1643:40
     |
1643 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1644:42
     |
1644 |     let mut saved: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1673:33
     |
1673 |     (*mti).children.tqh_first = 0 as *mut mode_tree_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1676:33
     |
1676 |         (*mti).entry.tqe_next = 0 as *mut mode_tree_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1681:33
     |
1681 |         (*mti).entry.tqe_next = 0 as *mut mode_tree_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1689:1
     |
1689 | / pub unsafe extern "C" fn mode_tree_remove(
1690 | |     mut mtd: *mut mode_tree_data,
1691 | |     mut mti: *mut mode_tree_item,
1692 | | ) {
...    |
1709 | |     mode_tree_free_item(mti);
1710 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:1712:1
     |
1712 | / pub unsafe extern "C" fn mode_tree_draw(mut mtd: *mut mode_tree_data) {
1713 | |     let mut wp: *mut window_pane = (*mtd).wp;
1714 | |     let mut s: *mut screen = &mut (*mtd).screen;
1715 | |     let mut line: *mut mode_tree_line = 0 as *mut mode_tree_line;
...    |
2004 | |     screen_write_stop(&mut ctx);
2005 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/mode_tree.rs:1793:12
     |
1793 |         if !(i < (*mtd).offset) {
     |            ^^^^^^^^^^^^^^^^^^^^ help: try: `i >= (*mtd).offset`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1715:41
     |
1715 |     let mut line: *mut mode_tree_line = 0 as *mut mode_tree_line;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1716:40
     |
1716 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1719:13
     |
1719 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1720:12
     |
1720 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1721:15
     |
1721 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1722:15
     |
1722 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1760:39
     |
1760 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1761:40
     |
1761 |     let mut start: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/mode_tree.rs:1763:40
     |
1763 |     let mut tag: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/mode_tree.rs:1764:43
     |
1764 |     let mut symbol: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:1784:34
     |
1784 |     screen_write_start(&mut ctx, 0 as *mut window_pane, s);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:1858:21
     |
1858 |                     j;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:1921:9
     |
1921 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/mode_tree.rs:2057:5
     |
2057 |     return 0 as *mut mode_tree_item;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut mode_tree_item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2009:40
     |
2009 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2010:41
     |
2010 |     let mut last: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2011:41
     |
2011 |     let mut next: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2013:16
     |
2013 |         return 0 as *mut mode_tree_item;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2057:12
     |
2057 |     return 0 as *mut mode_tree_item;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2060:40
     |
2060 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2061:43
     |
2061 |     let mut loop_0: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/mode_tree.rs:2095:5
     |
2095 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2090:25
     |
2090 |         (*mtd).search = 0 as *mut libc::c_char;
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/mode_tree.rs:2121:5
     |
2121 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2114:25
     |
2114 |         (*mtd).filter = 0 as *mut libc::c_char;
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:2127:1
     |
2127 | / pub unsafe extern "C" fn mode_tree_key(
2128 | |     mut mtd: *mut mode_tree_data,
2129 | |     mut c: *mut client,
2130 | |     mut key: *mut key_code,
...    |
2388 | |     return 0 as libc::c_int;
2389 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/mode_tree.rs:2388:5
     |
2388 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2135:41
     |
2135 |     let mut line: *mut mode_tree_line = 0 as *mut mode_tree_line;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2136:44
     |
2136 |     let mut current: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2137:43
     |
2137 |     let mut parent: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/mode_tree.rs:2232:17
     |
2232 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2245:17
     |
2245 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2283:17
     |
2283 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2297:17
     |
2297 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2302:13
     |
2302 |             (*mtd).sort_type;
     |             ^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2330:13
     |
2330 |             (*mtd).references;
     |             ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/mode_tree.rs:2357:13
     |
2357 |             (*mtd).references;
     |             ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/mode_tree.rs:2391:1
     |
2391 | / pub unsafe extern "C" fn mode_tree_run_command(
2392 | |     mut c: *mut client,
2393 | |     mut fs: *mut cmd_find_state,
2394 | |     mut template: *const libc::c_char,
...    |
2428 | |     free(command as *mut libc::c_void);
2429 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2397:40
     |
2397 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2398:38
     |
2398 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2399:42
     |
2399 |     let mut command: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2400:40
     |
2400 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/mode_tree.rs:2408:9
     |
2408 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/mode_tree.rs:2422:13
     |
2422 |             0 as *mut mouse_event,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/names.rs:994:5
    |
994 |     return (500000 as libc::c_int as __suseconds_t - offset.tv_usec) as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(500000 as libc::c_int as __suseconds_t - offset.tv_usec) as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/names.rs:986:9
    |
986 |         offset.tv_sec;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/names.rs:997:1
     |
997  | / pub unsafe extern "C" fn check_window_name(mut w: *mut window) {
998  | |     let mut tv: timeval = timeval { tv_sec: 0, tv_usec: 0 };
999  | |     let mut next: timeval = timeval { tv_sec: 0, tv_usec: 0 };
1000 | |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
1090 | |     free(name as *mut libc::c_void);
1091 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/names.rs:1000:39
     |
1000 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1020:27
     |
1020 |     gettimeofday(&mut tv, 0 as *mut libc::c_void);
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/names.rs:1023:30
     |
1023 |         if event_initialized(&mut (*w).name_event) == 0 {
     |                              ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_pending` doesn't need a mutable reference
    --> src/names.rs:1040:13
     |
1040 |             &mut (*w).name_event,
     |             ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/names.rs:1042:13
     |
1042 |             0 as *mut timeval,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/names.rs:1053:45
     |
1053 |             event_add(&mut (*w).name_event, &mut next);
     |                                             ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/names.rs:1069:26
     |
1069 |     if event_initialized(&mut (*w).name_event) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/names.rs:1093:1
     |
1093 | / pub unsafe extern "C" fn default_window_name(mut w: *mut window) -> *mut libc::c_char {
1094 | |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
1095 | |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
1096 | |     cmd = cmd_stringify_argv((*(*w).active).argc, (*(*w).active).argv);
...    |
1103 | |     return s;
1104 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/names.rs:1103:5
     |
1103 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/names.rs:1094:38
     |
1094 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1095:36
     |
1095 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/names.rs:1123:5
     |
1123 |     return name;
     |     ^^^^^^^^^^^^ help: remove `return`: `name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/names.rs:1106:36
     |
1106 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/names.rs:1107:40
     |
1107 |     let mut fmt: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1108:39
     |
1108 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1110:9
     |
1110 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1111:9
     |
1111 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/names.rs:1126:1
     |
1126 | / pub unsafe extern "C" fn parse_window_name(
1127 | |     mut in_0: *const libc::c_char,
1128 | | ) -> *mut libc::c_char {
1129 | |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
1175 | |     return name;
1176 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/names.rs:1175:5
     |
1175 |     return name;
     |     ^^^^^^^^^^^^ help: remove `return`: `name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/names.rs:1129:39
     |
1129 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1130:39
     |
1130 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/names.rs:1131:38
     |
1131 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/names.rs:1149:9
     |
1149 |         name;
     |         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/notify.rs:1006:18
     |
1006 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1007:12
     |
1007 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1008:13
     |
1008 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1009:12
     |
1009 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1010:13
     |
1010 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1013:31
     |
1013 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1014:40
     |
1014 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1033:9
     |
1033 |         0 as *mut mouse_event,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/notify.rs:1186:5
     |
1186 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/notify.rs:1196:37
     |
1196 |     let mut ne: *mut notify_entry = 0 as *mut notify_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<notify_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1197:40
     |
1197 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/notify.rs:1213:9
     |
1213 |         (*c).references;
     |         ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/notify.rs:1245:17
     |
1245 |     cmdq_append(0 as *mut client, new_item);
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1248:1
     |
1248 | / pub unsafe extern "C" fn notify_input(
1249 | |     mut wp: *mut window_pane,
1250 | |     mut input: *mut evbuffer,
1251 | | ) {
...    |
1259 | |     }
1260 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1252:30
     |
1252 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1262:1
     |
1262 | / pub unsafe extern "C" fn notify_client(
1263 | |     mut name: *const libc::c_char,
1264 | |     mut c: *mut client,
1265 | | ) {
...    |
1283 | |     );
1284 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1268:18
     |
1268 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1269:12
     |
1269 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1270:13
     |
1270 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1271:12
     |
1271 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1272:13
     |
1272 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1280:9
     |
1280 |         0 as *mut session,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1281:9
     |
1281 |         0 as *mut window,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1282:9
     |
1282 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1286:1
     |
1286 | / pub unsafe extern "C" fn notify_session(
1287 | |     mut name: *const libc::c_char,
1288 | |     mut s: *mut session,
1289 | | ) {
...    |
1311 | |     );
1312 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1292:18
     |
1292 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1293:12
     |
1293 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1294:13
     |
1294 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1295:12
     |
1295 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1296:13
     |
1296 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1307:9
     |
1307 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1309:9
     |
1309 |         0 as *mut window,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1310:9
     |
1310 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1314:1
     |
1314 | / pub unsafe extern "C" fn notify_winlink(
1315 | |     mut name: *const libc::c_char,
1316 | |     mut wl: *mut winlink,
1317 | | ) {
...    |
1335 | |     );
1336 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1320:18
     |
1320 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1321:12
     |
1321 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1322:13
     |
1322 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1323:12
     |
1323 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1324:13
     |
1324 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1331:9
     |
1331 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1334:9
     |
1334 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1338:1
     |
1338 | / pub unsafe extern "C" fn notify_session_window(
1339 | |     mut name: *const libc::c_char,
1340 | |     mut s: *mut session,
1341 | |     mut w: *mut window,
...    |
1353 | |     notify_add(name, &mut fs, 0 as *mut client, s, w, 0 as *mut window_pane);
1354 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1345:18
     |
1345 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1346:12
     |
1346 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1347:13
     |
1347 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1348:12
     |
1348 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1349:13
     |
1349 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1353:31
     |
1353 |     notify_add(name, &mut fs, 0 as *mut client, s, w, 0 as *mut window_pane);
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1353:55
     |
1353 |     notify_add(name, &mut fs, 0 as *mut client, s, w, 0 as *mut window_pane);
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1356:1
     |
1356 | / pub unsafe extern "C" fn notify_window(
1357 | |     mut name: *const libc::c_char,
1358 | |     mut w: *mut window,
1359 | | ) {
...    |
1377 | |     );
1378 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1362:18
     |
1362 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1363:12
     |
1363 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1364:13
     |
1364 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1365:12
     |
1365 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1366:13
     |
1366 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1373:9
     |
1373 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1374:9
     |
1374 |         0 as *mut session,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1376:9
     |
1376 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/notify.rs:1380:1
     |
1380 | / pub unsafe extern "C" fn notify_pane(
1381 | |     mut name: *const libc::c_char,
1382 | |     mut wp: *mut window_pane,
1383 | | ) {
...    |
1394 | |     notify_add(name, &mut fs, 0 as *mut client, 0 as *mut session, 0 as *mut window, wp);
1395 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/notify.rs:1386:18
     |
1386 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1387:12
     |
1387 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1388:13
     |
1388 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1389:12
     |
1389 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1390:13
     |
1390 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1394:31
     |
1394 |     notify_add(name, &mut fs, 0 as *mut client, 0 as *mut session, 0 as *mut window, wp);
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1394:49
     |
1394 |     notify_add(name, &mut fs, 0 as *mut client, 0 as *mut session, 0 as *mut window, wp);
     |                                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/notify.rs:1394:68
     |
1394 |     notify_add(name, &mut fs, 0 as *mut client, 0 as *mut session, 0 as *mut window, wp);
     |                                                                    ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1040:39
     |
1040 |     let mut tmp: *mut options_entry = 0 as *mut options_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/options.rs:1066:17
     |
1066 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/options.rs:1081:57
     |
1081 |                     let mut oleft: *mut options_entry = 0 as *mut options_entry;
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/options.rs:1104:21
     |
1104 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1129:17
     |
1129 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1155:17
     |
1155 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/options.rs:1170:58
     |
1170 |                     let mut oright: *mut options_entry = 0 as *mut options_entry;
     |                                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/options.rs:1193:21
     |
1193 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1218:17
     |
1218 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: this boolean expression can be simplified
    --> src/options.rs:1237:12
     |
1237 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/options.rs:1232:42
     |
1232 |     let mut parent: *mut options_entry = 0 as *mut options_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1233:43
     |
1233 |     let mut gparent: *mut options_entry = 0 as *mut options_entry;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1234:39
     |
1234 |     let mut tmp: *mut options_entry = 0 as *mut options_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/options.rs:1267:21
     |
1267 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1291:17
     |
1291 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1319:21
     |
1319 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/options.rs:1343:17
     |
1343 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/options.rs:1365:5
     |
1365 |     return 0 as *mut options_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut options_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/options.rs:1357:9
     |
1357 | /         if comp < 0 as libc::c_int {
1358 | |             tmp = (*tmp).entry.rbe_left;
1359 | |         } else if comp > 0 as libc::c_int {
1360 | |             tmp = (*tmp).entry.rbe_right;
1361 | |         } else {
1362 | |             return tmp
1363 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/options.rs:1365:12
     |
1365 |     return 0 as *mut options_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/options.rs:1457:5
     |
1457 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1372:41
     |
1372 |     let mut child: *mut options_entry = 0 as *mut options_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1373:42
     |
1373 |     let mut parent: *mut options_entry = 0 as *mut options_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1383:44
     |
1383 |         let mut left: *mut options_entry = 0 as *mut options_entry;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/options.rs:1435:5
     |
1435 | /     match current_block {
1436 | |         7245201122033322888 => {
1437 | |             parent = (*elm).entry.rbe_parent;
1438 | |             color = (*elm).entry.rbe_color;
...    |
1452 | |         _ => {}
1453 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1435 ~     if current_block == 7245201122033322888 {
1436 +         parent = (*elm).entry.rbe_parent;
1437 +         color = (*elm).entry.rbe_color;
1438 +         if !child.is_null() {
1439 +             (*child).entry.rbe_parent = parent;
1440 +         }
1441 +         if !parent.is_null() {
1442 +             if (*parent).entry.rbe_left == elm {
1443 +                 (*parent).entry.rbe_left = child;
1444 +             } else {
1445 +                 (*parent).entry.rbe_right = child;
1446 +             }
1447 +         } else {
1448 +             (*head).rbh_root = child;
1449 +         }
1450 +     }
     |

warning: unneeded `return` statement
    --> src/options.rs:1473:5
     |
1473 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1464:42
     |
1464 |     let mut parent: *mut options_entry = 0 as *mut options_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/options.rs:1508:5
     |
1508 |     return 0 as *mut options_entry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut options_entry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1479:39
     |
1479 |     let mut tmp: *mut options_entry = 0 as *mut options_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1480:42
     |
1480 |     let mut parent: *mut options_entry = 0 as *mut options_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/options.rs:1486:9
     |
1486 | /         if comp < 0 as libc::c_int {
1487 | |             tmp = (*tmp).entry.rbe_left;
1488 | |         } else if comp > 0 as libc::c_int {
1489 | |             tmp = (*tmp).entry.rbe_right;
1490 | |         } else {
1491 | |             return tmp
1492 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/options.rs:1495:30
     |
1495 |     (*elm).entry.rbe_right = 0 as *mut options_entry;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1508:12
     |
1508 |     return 0 as *mut options_entry;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/options.rs:1530:5
     |
1530 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/options.rs:1536:5
     |
1536 |     return strcmp((*lhs).name, (*rhs).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*lhs).name, (*rhs).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1539:1
     |
1539 | / pub unsafe extern "C" fn options_parent_table_entry(
1540 | |     mut oo: *mut options,
1541 | |     mut s: *const libc::c_char,
1542 | | ) -> *const options_table_entry {
...    |
1551 | |     return (*o).tableentry;
1552 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1551:5
     |
1551 |     return (*o).tableentry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*o).tableentry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1543:37
     |
1543 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1554:1
     |
1554 | / pub unsafe extern "C" fn options_create(mut parent: *mut options) -> *mut options {
1555 | |     let mut oo: *mut options = 0 as *mut options;
1556 | |     oo = xcalloc(
1557 | |         1 as libc::c_int as size_t,
...    |
1562 | |     return oo;
1563 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1562:5
     |
1562 |     return oo;
     |     ^^^^^^^^^^ help: remove `return`: `oo`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1555:32
     |
1555 |     let mut oo: *mut options = 0 as *mut options;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1560:27
     |
1560 |     (*oo).tree.rbh_root = 0 as *mut options_entry;
     |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1565:1
     |
1565 | / pub unsafe extern "C" fn options_free(mut oo: *mut options) {
1566 | |     let mut o: *mut options_entry = 0 as *mut options_entry;
1567 | |     let mut tmp: *mut options_entry = 0 as *mut options_entry;
1568 | |     o = options_tree_RB_MINMAX(&mut (*oo).tree, -(1 as libc::c_int));
...    |
1578 | |     free(oo as *mut libc::c_void);
1579 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/options.rs:1566:37
     |
1566 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1567:39
     |
1567 |     let mut tmp: *mut options_entry = 0 as *mut options_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1581:1
     |
1581 | / pub unsafe extern "C" fn options_first(mut oo: *mut options) -> *mut options_entry {
1582 | |     return options_tree_RB_MINMAX(&mut (*oo).tree, -(1 as libc::c_int));
1583 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1582:5
     |
1582 |     return options_tree_RB_MINMAX(&mut (*oo).tree, -(1 as libc::c_int));
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `options_tree_RB_MINMAX(&mut (*oo).tree, -(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1585:1
     |
1585 | / pub unsafe extern "C" fn options_next(mut o: *mut options_entry) -> *mut options_entry {
1586 | |     return options_tree_RB_NEXT(o);
1587 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1586:5
     |
1586 |     return options_tree_RB_NEXT(o);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `options_tree_RB_NEXT(o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1589:1
     |
1589 | / pub unsafe extern "C" fn options_get_only(
1590 | |     mut oo: *mut options,
1591 | |     mut name: *const libc::c_char,
1592 | | ) -> *mut options_entry {
...    |
1608 | |     return options_tree_RB_FIND(&mut (*oo).tree, &mut o);
1609 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1608:5
     |
1608 |     return options_tree_RB_FIND(&mut (*oo).tree, &mut o);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `options_tree_RB_FIND(&mut (*oo).tree, &mut o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1594:16
     |
1594 |         owner: 0 as *mut options,
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:1595:15
     |
1595 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:1596:21
     |
1596 |         tableentry: 0 as *const options_table_entry,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1598:21
     |
1598 |             string: 0 as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1601:23
     |
1601 |             rbe_left: 0 as *mut options_entry,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1602:24
     |
1602 |             rbe_right: 0 as *mut options_entry,
     |                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1603:25
     |
1603 |             rbe_parent: 0 as *mut options_entry,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1611:1
     |
1611 | / pub unsafe extern "C" fn options_get(
1612 | |     mut oo: *mut options,
1613 | |     mut name: *const libc::c_char,
1614 | | ) -> *mut options_entry {
...    |
1624 | |     return o;
1625 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1624:5
     |
1624 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1615:37
     |
1615 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1627:1
     |
1627 | / pub unsafe extern "C" fn options_empty(
1628 | |     mut oo: *mut options,
1629 | |     mut oe: *const options_table_entry,
1630 | | ) -> *mut options_entry {
...    |
1634 | |     return o;
1635 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1634:5
     |
1634 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1631:37
     |
1631 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1637:1
     |
1637 | / pub unsafe extern "C" fn options_default(
1638 | |     mut oo: *mut options,
1639 | |     mut oe: *const options_table_entry,
1640 | | ) -> *mut options_entry {
...    |
1666 | |     return o;
1667 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1666:5
     |
1666 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1641:37
     |
1641 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1669:1
     |
1669 | / pub unsafe extern "C" fn options_add(
1670 | |     mut oo: *mut options,
1671 | |     mut name: *const libc::c_char,
1672 | | ) -> *mut options_entry {
...    |
1685 | |     return o;
1686 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1685:5
     |
1685 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1673:37
     |
1673 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1688:1
     |
1688 | / pub unsafe extern "C" fn options_remove(mut o: *mut options_entry) {
1689 | |     let mut oo: *mut options = (*o).owner;
1690 | |     let mut i: u_int = 0;
1691 | |     if ((*o).tableentry).is_null()
...    |
1712 | |     free(o as *mut libc::c_void);
1713 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/options.rs:1707:13
     |
1707 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1715:1
     |
1715 | / pub unsafe extern "C" fn options_name(mut o: *mut options_entry) -> *const libc::c_char {
1716 | |     return (*o).name;
1717 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1716:5
     |
1716 |     return (*o).name;
     |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `(*o).name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1719:1
     |
1719 | / pub unsafe extern "C" fn options_table_entry(
1720 | |     mut o: *mut options_entry,
1721 | | ) -> *const options_table_entry {
1722 | |     return (*o).tableentry;
1723 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1722:5
     |
1722 |     return (*o).tableentry;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*o).tableentry`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1725:1
     |
1725 | / pub unsafe extern "C" fn options_array_clear(mut o: *mut options_entry) {
1726 | |     if !((*o).tableentry).is_null()
1727 | |         && (*(*o).tableentry).type_0 as libc::c_uint
1728 | |             == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint
...    |
1731 | |     }
1732 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1734:1
     |
1734 | / pub unsafe extern "C" fn options_array_get(
1735 | |     mut o: *mut options_entry,
1736 | |     mut idx: u_int,
1737 | | ) -> *const libc::c_char {
...    |
1747 | |     return *((*o).c2rust_unnamed.c2rust_unnamed.array).offset(idx as isize);
1748 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/options.rs:1738:8
     |
1738 |       if !(!((*o).tableentry).is_null()
     |  ________^
1739 | |         && (*(*o).tableentry).type_0 as libc::c_uint
1740 | |             == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint)
     | |__________________________________________________________________^ help: try: `((*o).tableentry).is_null() || (*(*o).tableentry).type_0 as libc::c_uint != OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/options.rs:1747:5
     |
1747 |     return *((*o).c2rust_unnamed.c2rust_unnamed.array).offset(idx as isize);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `*((*o).c2rust_unnamed.c2rust_unnamed.array).offset(idx as isize)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/options.rs:1742:16
     |
1742 |         return 0 as *const libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:1745:16
     |
1745 |         return 0 as *const libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1750:1
     |
1750 | / pub unsafe extern "C" fn options_array_set(
1751 | |     mut o: *mut options_entry,
1752 | |     mut idx: u_int,
1753 | |     mut value: *const libc::c_char,
...    |
1811 | |     return 0 as libc::c_int;
1812 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/options.rs:1758:8
     |
1758 |       if !(!((*o).tableentry).is_null()
     |  ________^
1759 | |         && (*(*o).tableentry).type_0 as libc::c_uint
1760 | |             == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint)
     | |__________________________________________________________________^ help: try: `((*o).tableentry).is_null() || (*(*o).tableentry).type_0 as libc::c_uint != OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/options.rs:1811:5
     |
1811 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1756:38
     |
1756 |     let mut new: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/options.rs:1778:17
     |
1778 |             let ref mut fresh0 = *((*o).c2rust_unnamed.c2rust_unnamed.array)
     |                 ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
1778 ~             let fresh0 = &mut (*((*o).c2rust_unnamed.c2rust_unnamed.array)
1779 +                 .offset(i as isize));
     |

warning: `0 as *const _` detected
    --> src/options.rs:1780:23
     |
1780 |             *fresh0 = 0 as *const libc::c_char;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/options.rs:1782:13
     |
1782 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/options.rs:1789:11
     |
1789 |     new = 0 as *mut libc::c_char;
     |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/options.rs:1808:9
     |
1808 |     let ref mut fresh1 = *((*o).c2rust_unnamed.c2rust_unnamed.array)
     |         ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
1808 ~     let fresh1 = &mut (*((*o).c2rust_unnamed.c2rust_unnamed.array)
1809 +         .offset(idx as isize));
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1814:1
     |
1814 | / pub unsafe extern "C" fn options_array_size(
1815 | |     mut o: *mut options_entry,
1816 | |     mut size: *mut u_int,
1817 | | ) -> libc::c_int {
...    |
1827 | |     return 0 as libc::c_int;
1828 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/options.rs:1818:8
     |
1818 |       if !(!((*o).tableentry).is_null()
     |  ________^
1819 | |         && (*(*o).tableentry).type_0 as libc::c_uint
1820 | |             == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint)
     | |__________________________________________________________________^ help: try: `((*o).tableentry).is_null() || (*(*o).tableentry).type_0 as libc::c_uint != OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/options.rs:1827:5
     |
1827 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1830:1
     |
1830 | / pub unsafe extern "C" fn options_array_assign(
1831 | |     mut o: *mut options_entry,
1832 | |     mut s: *const libc::c_char,
1833 | | ) {
...    |
1869 | |     free(copy as *mut libc::c_void);
1870 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/options.rs:1834:46
     |
1834 |     let mut separator: *const libc::c_char = 0 as *const libc::c_char;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1835:39
     |
1835 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1836:39
     |
1836 |     let mut next: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1837:41
     |
1837 |     let mut string: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/options.rs:1862:13
     |
1862 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1872:1
     |
1872 | / pub unsafe extern "C" fn options_isstring(mut o: *mut options_entry) -> libc::c_int {
1873 | |     if ((*o).tableentry).is_null() {
1874 | |         return 1 as libc::c_int;
1875 | |     }
...    |
1881 | |                 == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint) as libc::c_int;
1882 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1876:5
     |
1876 | /     return (((*o).tableentry).is_null()
1877 | |         || (*(*o).tableentry).type_0 as libc::c_uint
1878 | |             == OPTIONS_TABLE_STRING as libc::c_int as libc::c_uint
1879 | |         || !((*o).tableentry).is_null()
1880 | |             && (*(*o).tableentry).type_0 as libc::c_uint
1881 | |                 == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint) as libc::c_int;
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1876 ~     (((*o).tableentry).is_null()
1877 +         || (*(*o).tableentry).type_0 as libc::c_uint
1878 +             == OPTIONS_TABLE_STRING as libc::c_int as libc::c_uint
1879 +         || !((*o).tableentry).is_null()
1880 +             && (*(*o).tableentry).type_0 as libc::c_uint
1881 +                 == OPTIONS_TABLE_ARRAY as libc::c_int as libc::c_uint) as libc::c_int
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1884:1
     |
1884 | / pub unsafe extern "C" fn options_tostring(
1885 | |     mut o: *mut options_entry,
1886 | |     mut idx: libc::c_int,
1887 | |     mut numeric: libc::c_int,
...    |
1983 | |     return 0 as *const libc::c_char;
1984 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:1983:5
     |
1983 |     return 0 as *const libc::c_char;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *const libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/options.rs:1890:40
     |
1890 |     let mut tmp: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:1896:20
     |
1896 |             return 0 as *const libc::c_char;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:1926:15
     |
1926 |         tmp = 0 as *const libc::c_char;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/options.rs:1965:13
     |
1965 |             0 | 7 | 8 | _ => {}
     |             ^^^^^^^^^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: `0 as *const _` detected
    --> src/options.rs:1983:12
     |
1983 |     return 0 as *const libc::c_char;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:1986:1
     |
1986 | / pub unsafe extern "C" fn options_parse(
1987 | |     mut name: *const libc::c_char,
1988 | |     mut idx: *mut libc::c_int,
1989 | | ) -> *mut libc::c_char {
...    |
2022 | |     return copy;
2023 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2022:5
     |
2022 |     return copy;
     |     ^^^^^^^^^^^^ help: remove `return`: `copy`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:1990:39
     |
1990 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1991:37
     |
1991 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1992:38
     |
1992 |     let mut end: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:1994:16
     |
1994 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2013:16
     |
2013 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2019:16
     |
2019 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2025:1
     |
2025 | / pub unsafe extern "C" fn options_parse_get(
2026 | |     mut oo: *mut options,
2027 | |     mut s: *const libc::c_char,
2028 | |     mut idx: *mut libc::c_int,
...    |
2043 | |     return o;
2044 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2043:5
     |
2043 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2031:37
     |
2031 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2032:39
     |
2032 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2035:16
     |
2035 |         return 0 as *mut options_entry;
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2046:1
     |
2046 | / pub unsafe extern "C" fn options_match(
2047 | |     mut s: *const libc::c_char,
2048 | |     mut idx: *mut libc::c_int,
2049 | |     mut ambiguous: *mut libc::c_int,
...    |
2088 | |     return xstrdup((*found).name);
2089 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2088:5
     |
2088 |     return xstrdup((*found).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xstrdup((*found).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/options.rs:2051:46
     |
2051 |     let mut oe: *const options_table_entry = 0 as *const options_table_entry;
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:2052:49
     |
2052 |     let mut found: *const options_table_entry = 0 as *const options_table_entry;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2053:39
     |
2053 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2057:16
     |
2057 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/options.rs:2064:13
     |
2064 |     found = 0 as *const options_table_entry;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2075:28
     |
2075 |                     return 0 as *mut libc::c_char;
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/options.rs:2080:13
     |
2080 |             oe;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/options.rs:2086:16
     |
2086 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2091:1
     |
2091 | / pub unsafe extern "C" fn options_match_get(
2092 | |     mut oo: *mut options,
2093 | |     mut s: *const libc::c_char,
2094 | |     mut idx: *mut libc::c_int,
...    |
2111 | |     return o;
2112 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2111:5
     |
2111 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2098:39
     |
2098 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2099:37
     |
2099 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2102:16
     |
2102 |         return 0 as *mut options_entry;
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2114:1
     |
2114 | / pub unsafe extern "C" fn options_get_string(
2115 | |     mut oo: *mut options,
2116 | |     mut name: *const libc::c_char,
2117 | | ) -> *const libc::c_char {
...    |
2129 | |     return (*o).c2rust_unnamed.string;
2130 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2129:5
     |
2129 |     return (*o).c2rust_unnamed.string;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*o).c2rust_unnamed.string`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2118:37
     |
2118 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2132:1
     |
2132 | / pub unsafe extern "C" fn options_get_number(
2133 | |     mut oo: *mut options,
2134 | |     mut name: *const libc::c_char,
2135 | | ) -> libc::c_longlong {
...    |
2157 | |     return (*o).c2rust_unnamed.number;
2158 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2157:5
     |
2157 |     return (*o).c2rust_unnamed.number;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*o).c2rust_unnamed.number`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2136:37
     |
2136 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2160:1
     |
2160 | / pub unsafe extern "C" fn options_get_style(
2161 | |     mut oo: *mut options,
2162 | |     mut name: *const libc::c_char,
2163 | | ) -> *const grid_cell {
...    |
2175 | |     return &mut (*o).c2rust_unnamed.style;
2176 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/options.rs:2169:8
     |
2169 |       if !(!((*o).tableentry).is_null()
     |  ________^
2170 | |         && (*(*o).tableentry).type_0 as libc::c_uint
2171 | |             == OPTIONS_TABLE_STYLE as libc::c_int as libc::c_uint)
     | |__________________________________________________________________^ help: try: `((*o).tableentry).is_null() || (*(*o).tableentry).type_0 as libc::c_uint != OPTIONS_TABLE_STYLE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/options.rs:2175:5
     |
2175 |     return &mut (*o).c2rust_unnamed.style;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `&mut (*o).c2rust_unnamed.style`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2164:37
     |
2164 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2178:1
     |
2178 | / pub unsafe extern "C" fn options_set_number(
2179 | |     mut oo: *mut options,
2180 | |     mut name: *const libc::c_char,
2181 | |     mut value: libc::c_longlong,
...    |
2214 | |     return o;
2215 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2214:5
     |
2214 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2183:37
     |
2183 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2194:20
     |
2194 |             return 0 as *mut options_entry;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2217:1
     |
2217 | / pub unsafe extern "C" fn options_set_style(
2218 | |     mut oo: *mut options,
2219 | |     mut name: *const libc::c_char,
2220 | |     mut append: libc::c_int,
...    |
2280 | |     return o;
2281 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/options.rs:2269:8
     |
2269 |       if !(!((*o).tableentry).is_null()
     |  ________^
2270 | |         && (*(*o).tableentry).type_0 as libc::c_uint
2271 | |             == OPTIONS_TABLE_STYLE as libc::c_int as libc::c_uint)
     | |__________________________________________________________________^ help: try: `((*o).tableentry).is_null() || (*(*o).tableentry).type_0 as libc::c_uint != OPTIONS_TABLE_STYLE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/options.rs:2280:5
     |
2280 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/options.rs:2223:37
     |
2223 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2261:16
     |
2261 |         return 0 as *mut options_entry;
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/options.rs:2266:20
     |
2266 |             return 0 as *mut options_entry;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2283:1
     |
2283 | / pub unsafe extern "C" fn options_scope_from_flags(
2284 | |     mut args: *mut args,
2285 | |     mut window: libc::c_int,
2286 | |     mut fs: *mut cmd_find_state,
...    |
2341 | |     };
2342 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/options.rs:2318:9
     |
2318 |         return OPTIONS_TABLE_WINDOW;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `OPTIONS_TABLE_WINDOW`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/options.rs:2340:9
     |
2340 |         return OPTIONS_TABLE_SESSION;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `OPTIONS_TABLE_SESSION`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2344:1
     |
2344 | / pub unsafe extern "C" fn options_style_update_new(
2345 | |     mut oo: *mut options,
2346 | |     mut o: *mut options_entry,
2347 | | ) {
...    |
2372 | |     }
2373 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/options.rs:2349:39
     |
2349 |     let mut new: *mut options_entry = 0 as *mut options_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/options.rs:2375:1
     |
2375 | / pub unsafe extern "C" fn options_style_update_old(
2376 | |     mut oo: *mut options,
2377 | |     mut o: *mut options_entry,
2378 | | ) {
...    |
2424 | |     }
2425 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:100:13
    |
88  | /             let mut init = options_table_entry {
89  | |                 name: b"buffer-limit\0" as *const u8 as *const libc::c_char,
90  | |                 type_0: OPTIONS_TABLE_NUMBER,
91  | |                 scope: OPTIONS_TABLE_SERVER,
...   |
98  | |                 style: 0 as *const libc::c_char,
99  | |             };
    | |______________- unnecessary `let` binding
100 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
88  ~             
89  ~             options_table_entry {
90  +                 name: b"buffer-limit\0" as *const u8 as *const libc::c_char,
91  +                 type_0: OPTIONS_TABLE_NUMBER,
92  +                 scope: OPTIONS_TABLE_SERVER,
93  +                 minimum: 1 as libc::c_int as u_int,
94  +                 maximum: 2147483647 as libc::c_int as u_int,
95  +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
96  +                 default_str: 0 as *const libc::c_char,
97  +                 default_num: 50 as libc::c_int as libc::c_longlong,
98  +                 separator: 0 as *const libc::c_char,
99  +                 style: 0 as *const libc::c_char,
100 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:116:13
    |
103 | /             let mut init = options_table_entry {
104 | |                 name: b"command-alias\0" as *const u8 as *const libc::c_char,
105 | |                 type_0: OPTIONS_TABLE_ARRAY,
106 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
114 | |                 style: 0 as *const libc::c_char,
115 | |             };
    | |______________- unnecessary `let` binding
116 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
103 ~             
104 ~             options_table_entry {
105 +                 name: b"command-alias\0" as *const u8 as *const libc::c_char,
106 +                 type_0: OPTIONS_TABLE_ARRAY,
107 +                 scope: OPTIONS_TABLE_SERVER,
108 +                 minimum: 0,
109 +                 maximum: 0,
110 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
111 +                 default_str: b"split-pane=split-window,splitp=split-window,server-info=show-messages -JT,info=show-messages -JT,choose-window=choose-tree -w,choose-session=choose-tree -s\0"
112 +                     as *const u8 as *const libc::c_char,
113 +                 default_num: 0,
114 +                 separator: b",\0" as *const u8 as *const libc::c_char,
115 +                 style: 0 as *const libc::c_char,
116 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:131:13
    |
119 | /             let mut init = options_table_entry {
120 | |                 name: b"default-terminal\0" as *const u8 as *const libc::c_char,
121 | |                 type_0: OPTIONS_TABLE_STRING,
122 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
129 | |                 style: 0 as *const libc::c_char,
130 | |             };
    | |______________- unnecessary `let` binding
131 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
119 ~             
120 ~             options_table_entry {
121 +                 name: b"default-terminal\0" as *const u8 as *const libc::c_char,
122 +                 type_0: OPTIONS_TABLE_STRING,
123 +                 scope: OPTIONS_TABLE_SERVER,
124 +                 minimum: 0,
125 +                 maximum: 0,
126 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
127 +                 default_str: b"screen\0" as *const u8 as *const libc::c_char,
128 +                 default_num: 0,
129 +                 separator: 0 as *const libc::c_char,
130 +                 style: 0 as *const libc::c_char,
131 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:146:13
    |
134 | /             let mut init = options_table_entry {
135 | |                 name: b"escape-time\0" as *const u8 as *const libc::c_char,
136 | |                 type_0: OPTIONS_TABLE_NUMBER,
137 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
144 | |                 style: 0 as *const libc::c_char,
145 | |             };
    | |______________- unnecessary `let` binding
146 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
134 ~             
135 ~             options_table_entry {
136 +                 name: b"escape-time\0" as *const u8 as *const libc::c_char,
137 +                 type_0: OPTIONS_TABLE_NUMBER,
138 +                 scope: OPTIONS_TABLE_SERVER,
139 +                 minimum: 0 as libc::c_int as u_int,
140 +                 maximum: 2147483647 as libc::c_int as u_int,
141 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
142 +                 default_str: 0 as *const libc::c_char,
143 +                 default_num: 500 as libc::c_int as libc::c_longlong,
144 +                 separator: 0 as *const libc::c_char,
145 +                 style: 0 as *const libc::c_char,
146 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:161:13
    |
149 | /             let mut init = options_table_entry {
150 | |                 name: b"exit-empty\0" as *const u8 as *const libc::c_char,
151 | |                 type_0: OPTIONS_TABLE_FLAG,
152 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
159 | |                 style: 0 as *const libc::c_char,
160 | |             };
    | |______________- unnecessary `let` binding
161 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
149 ~             
150 ~             options_table_entry {
151 +                 name: b"exit-empty\0" as *const u8 as *const libc::c_char,
152 +                 type_0: OPTIONS_TABLE_FLAG,
153 +                 scope: OPTIONS_TABLE_SERVER,
154 +                 minimum: 0,
155 +                 maximum: 0,
156 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
157 +                 default_str: 0 as *const libc::c_char,
158 +                 default_num: 1 as libc::c_int as libc::c_longlong,
159 +                 separator: 0 as *const libc::c_char,
160 +                 style: 0 as *const libc::c_char,
161 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:176:13
    |
164 | /             let mut init = options_table_entry {
165 | |                 name: b"exit-unattached\0" as *const u8 as *const libc::c_char,
166 | |                 type_0: OPTIONS_TABLE_FLAG,
167 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
174 | |                 style: 0 as *const libc::c_char,
175 | |             };
    | |______________- unnecessary `let` binding
176 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
164 ~             
165 ~             options_table_entry {
166 +                 name: b"exit-unattached\0" as *const u8 as *const libc::c_char,
167 +                 type_0: OPTIONS_TABLE_FLAG,
168 +                 scope: OPTIONS_TABLE_SERVER,
169 +                 minimum: 0,
170 +                 maximum: 0,
171 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
172 +                 default_str: 0 as *const libc::c_char,
173 +                 default_num: 0 as libc::c_int as libc::c_longlong,
174 +                 separator: 0 as *const libc::c_char,
175 +                 style: 0 as *const libc::c_char,
176 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:191:13
    |
179 | /             let mut init = options_table_entry {
180 | |                 name: b"focus-events\0" as *const u8 as *const libc::c_char,
181 | |                 type_0: OPTIONS_TABLE_FLAG,
182 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
189 | |                 style: 0 as *const libc::c_char,
190 | |             };
    | |______________- unnecessary `let` binding
191 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
179 ~             
180 ~             options_table_entry {
181 +                 name: b"focus-events\0" as *const u8 as *const libc::c_char,
182 +                 type_0: OPTIONS_TABLE_FLAG,
183 +                 scope: OPTIONS_TABLE_SERVER,
184 +                 minimum: 0,
185 +                 maximum: 0,
186 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
187 +                 default_str: 0 as *const libc::c_char,
188 +                 default_num: 0 as libc::c_int as libc::c_longlong,
189 +                 separator: 0 as *const libc::c_char,
190 +                 style: 0 as *const libc::c_char,
191 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:206:13
    |
194 | /             let mut init = options_table_entry {
195 | |                 name: b"history-file\0" as *const u8 as *const libc::c_char,
196 | |                 type_0: OPTIONS_TABLE_STRING,
197 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
204 | |                 style: 0 as *const libc::c_char,
205 | |             };
    | |______________- unnecessary `let` binding
206 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
194 ~             
195 ~             options_table_entry {
196 +                 name: b"history-file\0" as *const u8 as *const libc::c_char,
197 +                 type_0: OPTIONS_TABLE_STRING,
198 +                 scope: OPTIONS_TABLE_SERVER,
199 +                 minimum: 0,
200 +                 maximum: 0,
201 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
202 +                 default_str: b"\0" as *const u8 as *const libc::c_char,
203 +                 default_num: 0,
204 +                 separator: 0 as *const libc::c_char,
205 +                 style: 0 as *const libc::c_char,
206 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:221:13
    |
209 | /             let mut init = options_table_entry {
210 | |                 name: b"message-limit\0" as *const u8 as *const libc::c_char,
211 | |                 type_0: OPTIONS_TABLE_NUMBER,
212 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
219 | |                 style: 0 as *const libc::c_char,
220 | |             };
    | |______________- unnecessary `let` binding
221 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
209 ~             
210 ~             options_table_entry {
211 +                 name: b"message-limit\0" as *const u8 as *const libc::c_char,
212 +                 type_0: OPTIONS_TABLE_NUMBER,
213 +                 scope: OPTIONS_TABLE_SERVER,
214 +                 minimum: 0 as libc::c_int as u_int,
215 +                 maximum: 2147483647 as libc::c_int as u_int,
216 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
217 +                 default_str: 0 as *const libc::c_char,
218 +                 default_num: 100 as libc::c_int as libc::c_longlong,
219 +                 separator: 0 as *const libc::c_char,
220 +                 style: 0 as *const libc::c_char,
221 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:236:13
    |
224 | /             let mut init = options_table_entry {
225 | |                 name: b"set-clipboard\0" as *const u8 as *const libc::c_char,
226 | |                 type_0: OPTIONS_TABLE_CHOICE,
227 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
234 | |                 style: 0 as *const libc::c_char,
235 | |             };
    | |______________- unnecessary `let` binding
236 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
224 ~             
225 ~             options_table_entry {
226 +                 name: b"set-clipboard\0" as *const u8 as *const libc::c_char,
227 +                 type_0: OPTIONS_TABLE_CHOICE,
228 +                 scope: OPTIONS_TABLE_SERVER,
229 +                 minimum: 0,
230 +                 maximum: 0,
231 +                 choices: options_table_set_clipboard_list.as_ptr() as *mut _,
232 +                 default_str: 0 as *const libc::c_char,
233 +                 default_num: 1 as libc::c_int as libc::c_longlong,
234 +                 separator: 0 as *const libc::c_char,
235 +                 style: 0 as *const libc::c_char,
236 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:252:13
    |
239 | /             let mut init = options_table_entry {
240 | |                 name: b"terminal-overrides\0" as *const u8 as *const libc::c_char,
241 | |                 type_0: OPTIONS_TABLE_ARRAY,
242 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
250 | |                 style: 0 as *const libc::c_char,
251 | |             };
    | |______________- unnecessary `let` binding
252 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
239 ~             
240 ~             options_table_entry {
241 +                 name: b"terminal-overrides\0" as *const u8 as *const libc::c_char,
242 +                 type_0: OPTIONS_TABLE_ARRAY,
243 +                 scope: OPTIONS_TABLE_SERVER,
244 +                 minimum: 0,
245 +                 maximum: 0,
246 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
247 +                 default_str: b"xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007:Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007:Ss=\\E[%p1%d q:Se=\\E[2 q,screen*:XT\0"
248 +                     as *const u8 as *const libc::c_char,
249 +                 default_num: 0,
250 +                 separator: b",\0" as *const u8 as *const libc::c_char,
251 +                 style: 0 as *const libc::c_char,
252 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:267:13
    |
255 | /             let mut init = options_table_entry {
256 | |                 name: b"user-keys\0" as *const u8 as *const libc::c_char,
257 | |                 type_0: OPTIONS_TABLE_ARRAY,
258 | |                 scope: OPTIONS_TABLE_SERVER,
...   |
265 | |                 style: 0 as *const libc::c_char,
266 | |             };
    | |______________- unnecessary `let` binding
267 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
255 ~             
256 ~             options_table_entry {
257 +                 name: b"user-keys\0" as *const u8 as *const libc::c_char,
258 +                 type_0: OPTIONS_TABLE_ARRAY,
259 +                 scope: OPTIONS_TABLE_SERVER,
260 +                 minimum: 0,
261 +                 maximum: 0,
262 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
263 +                 default_str: b"\0" as *const u8 as *const libc::c_char,
264 +                 default_num: 0,
265 +                 separator: b",\0" as *const u8 as *const libc::c_char,
266 +                 style: 0 as *const libc::c_char,
267 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:282:13
    |
270 | /             let mut init = options_table_entry {
271 | |                 name: b"activity-action\0" as *const u8 as *const libc::c_char,
272 | |                 type_0: OPTIONS_TABLE_CHOICE,
273 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
280 | |                 style: 0 as *const libc::c_char,
281 | |             };
    | |______________- unnecessary `let` binding
282 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
270 ~             
271 ~             options_table_entry {
272 +                 name: b"activity-action\0" as *const u8 as *const libc::c_char,
273 +                 type_0: OPTIONS_TABLE_CHOICE,
274 +                 scope: OPTIONS_TABLE_SESSION,
275 +                 minimum: 0,
276 +                 maximum: 0,
277 +                 choices: options_table_bell_action_list.as_ptr() as *mut _,
278 +                 default_str: 0 as *const libc::c_char,
279 +                 default_num: 3 as libc::c_int as libc::c_longlong,
280 +                 separator: 0 as *const libc::c_char,
281 +                 style: 0 as *const libc::c_char,
282 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:297:13
    |
285 | /             let mut init = options_table_entry {
286 | |                 name: b"assume-paste-time\0" as *const u8 as *const libc::c_char,
287 | |                 type_0: OPTIONS_TABLE_NUMBER,
288 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
295 | |                 style: 0 as *const libc::c_char,
296 | |             };
    | |______________- unnecessary `let` binding
297 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
285 ~             
286 ~             options_table_entry {
287 +                 name: b"assume-paste-time\0" as *const u8 as *const libc::c_char,
288 +                 type_0: OPTIONS_TABLE_NUMBER,
289 +                 scope: OPTIONS_TABLE_SESSION,
290 +                 minimum: 0 as libc::c_int as u_int,
291 +                 maximum: 2147483647 as libc::c_int as u_int,
292 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
293 +                 default_str: 0 as *const libc::c_char,
294 +                 default_num: 1 as libc::c_int as libc::c_longlong,
295 +                 separator: 0 as *const libc::c_char,
296 +                 style: 0 as *const libc::c_char,
297 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:312:13
    |
300 | /             let mut init = options_table_entry {
301 | |                 name: b"base-index\0" as *const u8 as *const libc::c_char,
302 | |                 type_0: OPTIONS_TABLE_NUMBER,
303 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
310 | |                 style: 0 as *const libc::c_char,
311 | |             };
    | |______________- unnecessary `let` binding
312 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
300 ~             
301 ~             options_table_entry {
302 +                 name: b"base-index\0" as *const u8 as *const libc::c_char,
303 +                 type_0: OPTIONS_TABLE_NUMBER,
304 +                 scope: OPTIONS_TABLE_SESSION,
305 +                 minimum: 0 as libc::c_int as u_int,
306 +                 maximum: 2147483647 as libc::c_int as u_int,
307 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
308 +                 default_str: 0 as *const libc::c_char,
309 +                 default_num: 0 as libc::c_int as libc::c_longlong,
310 +                 separator: 0 as *const libc::c_char,
311 +                 style: 0 as *const libc::c_char,
312 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:327:13
    |
315 | /             let mut init = options_table_entry {
316 | |                 name: b"bell-action\0" as *const u8 as *const libc::c_char,
317 | |                 type_0: OPTIONS_TABLE_CHOICE,
318 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
325 | |                 style: 0 as *const libc::c_char,
326 | |             };
    | |______________- unnecessary `let` binding
327 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
315 ~             
316 ~             options_table_entry {
317 +                 name: b"bell-action\0" as *const u8 as *const libc::c_char,
318 +                 type_0: OPTIONS_TABLE_CHOICE,
319 +                 scope: OPTIONS_TABLE_SESSION,
320 +                 minimum: 0,
321 +                 maximum: 0,
322 +                 choices: options_table_bell_action_list.as_ptr() as *mut _,
323 +                 default_str: 0 as *const libc::c_char,
324 +                 default_num: 1 as libc::c_int as libc::c_longlong,
325 +                 separator: 0 as *const libc::c_char,
326 +                 style: 0 as *const libc::c_char,
327 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:342:13
    |
330 | /             let mut init = options_table_entry {
331 | |                 name: b"default-command\0" as *const u8 as *const libc::c_char,
332 | |                 type_0: OPTIONS_TABLE_STRING,
333 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
340 | |                 style: 0 as *const libc::c_char,
341 | |             };
    | |______________- unnecessary `let` binding
342 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
330 ~             
331 ~             options_table_entry {
332 +                 name: b"default-command\0" as *const u8 as *const libc::c_char,
333 +                 type_0: OPTIONS_TABLE_STRING,
334 +                 scope: OPTIONS_TABLE_SESSION,
335 +                 minimum: 0,
336 +                 maximum: 0,
337 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
338 +                 default_str: b"\0" as *const u8 as *const libc::c_char,
339 +                 default_num: 0,
340 +                 separator: 0 as *const libc::c_char,
341 +                 style: 0 as *const libc::c_char,
342 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:357:13
    |
345 | /             let mut init = options_table_entry {
346 | |                 name: b"default-shell\0" as *const u8 as *const libc::c_char,
347 | |                 type_0: OPTIONS_TABLE_STRING,
348 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
355 | |                 style: 0 as *const libc::c_char,
356 | |             };
    | |______________- unnecessary `let` binding
357 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
345 ~             
346 ~             options_table_entry {
347 +                 name: b"default-shell\0" as *const u8 as *const libc::c_char,
348 +                 type_0: OPTIONS_TABLE_STRING,
349 +                 scope: OPTIONS_TABLE_SESSION,
350 +                 minimum: 0,
351 +                 maximum: 0,
352 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
353 +                 default_str: b"/bin/sh\0" as *const u8 as *const libc::c_char,
354 +                 default_num: 0,
355 +                 separator: 0 as *const libc::c_char,
356 +                 style: 0 as *const libc::c_char,
357 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:372:13
    |
360 | /             let mut init = options_table_entry {
361 | |                 name: b"destroy-unattached\0" as *const u8 as *const libc::c_char,
362 | |                 type_0: OPTIONS_TABLE_FLAG,
363 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
370 | |                 style: 0 as *const libc::c_char,
371 | |             };
    | |______________- unnecessary `let` binding
372 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
360 ~             
361 ~             options_table_entry {
362 +                 name: b"destroy-unattached\0" as *const u8 as *const libc::c_char,
363 +                 type_0: OPTIONS_TABLE_FLAG,
364 +                 scope: OPTIONS_TABLE_SESSION,
365 +                 minimum: 0,
366 +                 maximum: 0,
367 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
368 +                 default_str: 0 as *const libc::c_char,
369 +                 default_num: 0 as libc::c_int as libc::c_longlong,
370 +                 separator: 0 as *const libc::c_char,
371 +                 style: 0 as *const libc::c_char,
372 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:387:13
    |
375 | /             let mut init = options_table_entry {
376 | |                 name: b"detach-on-destroy\0" as *const u8 as *const libc::c_char,
377 | |                 type_0: OPTIONS_TABLE_FLAG,
378 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
385 | |                 style: 0 as *const libc::c_char,
386 | |             };
    | |______________- unnecessary `let` binding
387 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
375 ~             
376 ~             options_table_entry {
377 +                 name: b"detach-on-destroy\0" as *const u8 as *const libc::c_char,
378 +                 type_0: OPTIONS_TABLE_FLAG,
379 +                 scope: OPTIONS_TABLE_SESSION,
380 +                 minimum: 0,
381 +                 maximum: 0,
382 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
383 +                 default_str: 0 as *const libc::c_char,
384 +                 default_num: 1 as libc::c_int as libc::c_longlong,
385 +                 separator: 0 as *const libc::c_char,
386 +                 style: 0 as *const libc::c_char,
387 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:403:13
    |
390 | /             let mut init = options_table_entry {
391 | |                 name: b"display-panes-active-colour\0" as *const u8
392 | |                     as *const libc::c_char,
393 | |                 type_0: OPTIONS_TABLE_COLOUR,
...   |
401 | |                 style: 0 as *const libc::c_char,
402 | |             };
    | |______________- unnecessary `let` binding
403 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
390 ~             
391 ~             options_table_entry {
392 +                 name: b"display-panes-active-colour\0" as *const u8
393 +                     as *const libc::c_char,
394 +                 type_0: OPTIONS_TABLE_COLOUR,
395 +                 scope: OPTIONS_TABLE_SESSION,
396 +                 minimum: 0,
397 +                 maximum: 0,
398 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
399 +                 default_str: 0 as *const libc::c_char,
400 +                 default_num: 1 as libc::c_int as libc::c_longlong,
401 +                 separator: 0 as *const libc::c_char,
402 +                 style: 0 as *const libc::c_char,
403 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:418:13
    |
406 | /             let mut init = options_table_entry {
407 | |                 name: b"display-panes-colour\0" as *const u8 as *const libc::c_char,
408 | |                 type_0: OPTIONS_TABLE_COLOUR,
409 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
416 | |                 style: 0 as *const libc::c_char,
417 | |             };
    | |______________- unnecessary `let` binding
418 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
406 ~             
407 ~             options_table_entry {
408 +                 name: b"display-panes-colour\0" as *const u8 as *const libc::c_char,
409 +                 type_0: OPTIONS_TABLE_COLOUR,
410 +                 scope: OPTIONS_TABLE_SESSION,
411 +                 minimum: 0,
412 +                 maximum: 0,
413 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
414 +                 default_str: 0 as *const libc::c_char,
415 +                 default_num: 4 as libc::c_int as libc::c_longlong,
416 +                 separator: 0 as *const libc::c_char,
417 +                 style: 0 as *const libc::c_char,
418 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:433:13
    |
421 | /             let mut init = options_table_entry {
422 | |                 name: b"display-panes-time\0" as *const u8 as *const libc::c_char,
423 | |                 type_0: OPTIONS_TABLE_NUMBER,
424 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
431 | |                 style: 0 as *const libc::c_char,
432 | |             };
    | |______________- unnecessary `let` binding
433 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
421 ~             
422 ~             options_table_entry {
423 +                 name: b"display-panes-time\0" as *const u8 as *const libc::c_char,
424 +                 type_0: OPTIONS_TABLE_NUMBER,
425 +                 scope: OPTIONS_TABLE_SESSION,
426 +                 minimum: 1 as libc::c_int as u_int,
427 +                 maximum: 2147483647 as libc::c_int as u_int,
428 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
429 +                 default_str: 0 as *const libc::c_char,
430 +                 default_num: 1000 as libc::c_int as libc::c_longlong,
431 +                 separator: 0 as *const libc::c_char,
432 +                 style: 0 as *const libc::c_char,
433 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:448:13
    |
436 | /             let mut init = options_table_entry {
437 | |                 name: b"display-time\0" as *const u8 as *const libc::c_char,
438 | |                 type_0: OPTIONS_TABLE_NUMBER,
439 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
446 | |                 style: 0 as *const libc::c_char,
447 | |             };
    | |______________- unnecessary `let` binding
448 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
436 ~             
437 ~             options_table_entry {
438 +                 name: b"display-time\0" as *const u8 as *const libc::c_char,
439 +                 type_0: OPTIONS_TABLE_NUMBER,
440 +                 scope: OPTIONS_TABLE_SESSION,
441 +                 minimum: 0 as libc::c_int as u_int,
442 +                 maximum: 2147483647 as libc::c_int as u_int,
443 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
444 +                 default_str: 0 as *const libc::c_char,
445 +                 default_num: 750 as libc::c_int as libc::c_longlong,
446 +                 separator: 0 as *const libc::c_char,
447 +                 style: 0 as *const libc::c_char,
448 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:463:13
    |
451 | /             let mut init = options_table_entry {
452 | |                 name: b"history-limit\0" as *const u8 as *const libc::c_char,
453 | |                 type_0: OPTIONS_TABLE_NUMBER,
454 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
461 | |                 style: 0 as *const libc::c_char,
462 | |             };
    | |______________- unnecessary `let` binding
463 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
451 ~             
452 ~             options_table_entry {
453 +                 name: b"history-limit\0" as *const u8 as *const libc::c_char,
454 +                 type_0: OPTIONS_TABLE_NUMBER,
455 +                 scope: OPTIONS_TABLE_SESSION,
456 +                 minimum: 0 as libc::c_int as u_int,
457 +                 maximum: 2147483647 as libc::c_int as u_int,
458 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
459 +                 default_str: 0 as *const libc::c_char,
460 +                 default_num: 2000 as libc::c_int as libc::c_longlong,
461 +                 separator: 0 as *const libc::c_char,
462 +                 style: 0 as *const libc::c_char,
463 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:478:13
    |
466 | /             let mut init = options_table_entry {
467 | |                 name: b"key-table\0" as *const u8 as *const libc::c_char,
468 | |                 type_0: OPTIONS_TABLE_STRING,
469 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
476 | |                 style: 0 as *const libc::c_char,
477 | |             };
    | |______________- unnecessary `let` binding
478 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
466 ~             
467 ~             options_table_entry {
468 +                 name: b"key-table\0" as *const u8 as *const libc::c_char,
469 +                 type_0: OPTIONS_TABLE_STRING,
470 +                 scope: OPTIONS_TABLE_SESSION,
471 +                 minimum: 0,
472 +                 maximum: 0,
473 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
474 +                 default_str: b"root\0" as *const u8 as *const libc::c_char,
475 +                 default_num: 0,
476 +                 separator: 0 as *const libc::c_char,
477 +                 style: 0 as *const libc::c_char,
478 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:493:13
    |
481 | /             let mut init = options_table_entry {
482 | |                 name: b"lock-after-time\0" as *const u8 as *const libc::c_char,
483 | |                 type_0: OPTIONS_TABLE_NUMBER,
484 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
491 | |                 style: 0 as *const libc::c_char,
492 | |             };
    | |______________- unnecessary `let` binding
493 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
481 ~             
482 ~             options_table_entry {
483 +                 name: b"lock-after-time\0" as *const u8 as *const libc::c_char,
484 +                 type_0: OPTIONS_TABLE_NUMBER,
485 +                 scope: OPTIONS_TABLE_SESSION,
486 +                 minimum: 0 as libc::c_int as u_int,
487 +                 maximum: 2147483647 as libc::c_int as u_int,
488 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
489 +                 default_str: 0 as *const libc::c_char,
490 +                 default_num: 0 as libc::c_int as libc::c_longlong,
491 +                 separator: 0 as *const libc::c_char,
492 +                 style: 0 as *const libc::c_char,
493 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:508:13
    |
496 | /             let mut init = options_table_entry {
497 | |                 name: b"lock-command\0" as *const u8 as *const libc::c_char,
498 | |                 type_0: OPTIONS_TABLE_STRING,
499 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
506 | |                 style: 0 as *const libc::c_char,
507 | |             };
    | |______________- unnecessary `let` binding
508 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
496 ~             
497 ~             options_table_entry {
498 +                 name: b"lock-command\0" as *const u8 as *const libc::c_char,
499 +                 type_0: OPTIONS_TABLE_STRING,
500 +                 scope: OPTIONS_TABLE_SESSION,
501 +                 minimum: 0,
502 +                 maximum: 0,
503 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
504 +                 default_str: b"lock -np\0" as *const u8 as *const libc::c_char,
505 +                 default_num: 0,
506 +                 separator: 0 as *const libc::c_char,
507 +                 style: 0 as *const libc::c_char,
508 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:523:13
    |
511 | /             let mut init = options_table_entry {
512 | |                 name: b"message-attr\0" as *const u8 as *const libc::c_char,
513 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
514 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
521 | |                 style: b"message-style\0" as *const u8 as *const libc::c_char,
522 | |             };
    | |______________- unnecessary `let` binding
523 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
511 ~             
512 ~             options_table_entry {
513 +                 name: b"message-attr\0" as *const u8 as *const libc::c_char,
514 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
515 +                 scope: OPTIONS_TABLE_SESSION,
516 +                 minimum: 0,
517 +                 maximum: 0,
518 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
519 +                 default_str: 0 as *const libc::c_char,
520 +                 default_num: 0 as libc::c_int as libc::c_longlong,
521 +                 separator: 0 as *const libc::c_char,
522 +                 style: b"message-style\0" as *const u8 as *const libc::c_char,
523 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:538:13
    |
526 | /             let mut init = options_table_entry {
527 | |                 name: b"message-bg\0" as *const u8 as *const libc::c_char,
528 | |                 type_0: OPTIONS_TABLE_COLOUR,
529 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
536 | |                 style: b"message-style\0" as *const u8 as *const libc::c_char,
537 | |             };
    | |______________- unnecessary `let` binding
538 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
526 ~             
527 ~             options_table_entry {
528 +                 name: b"message-bg\0" as *const u8 as *const libc::c_char,
529 +                 type_0: OPTIONS_TABLE_COLOUR,
530 +                 scope: OPTIONS_TABLE_SESSION,
531 +                 minimum: 0,
532 +                 maximum: 0,
533 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
534 +                 default_str: 0 as *const libc::c_char,
535 +                 default_num: 3 as libc::c_int as libc::c_longlong,
536 +                 separator: 0 as *const libc::c_char,
537 +                 style: b"message-style\0" as *const u8 as *const libc::c_char,
538 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:553:13
    |
541 | /             let mut init = options_table_entry {
542 | |                 name: b"message-command-attr\0" as *const u8 as *const libc::c_char,
543 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
544 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
551 | |                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
552 | |             };
    | |______________- unnecessary `let` binding
553 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
541 ~             
542 ~             options_table_entry {
543 +                 name: b"message-command-attr\0" as *const u8 as *const libc::c_char,
544 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
545 +                 scope: OPTIONS_TABLE_SESSION,
546 +                 minimum: 0,
547 +                 maximum: 0,
548 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
549 +                 default_str: 0 as *const libc::c_char,
550 +                 default_num: 0 as libc::c_int as libc::c_longlong,
551 +                 separator: 0 as *const libc::c_char,
552 +                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
553 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:568:13
    |
556 | /             let mut init = options_table_entry {
557 | |                 name: b"message-command-bg\0" as *const u8 as *const libc::c_char,
558 | |                 type_0: OPTIONS_TABLE_COLOUR,
559 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
566 | |                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
567 | |             };
    | |______________- unnecessary `let` binding
568 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
556 ~             
557 ~             options_table_entry {
558 +                 name: b"message-command-bg\0" as *const u8 as *const libc::c_char,
559 +                 type_0: OPTIONS_TABLE_COLOUR,
560 +                 scope: OPTIONS_TABLE_SESSION,
561 +                 minimum: 0,
562 +                 maximum: 0,
563 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
564 +                 default_str: 0 as *const libc::c_char,
565 +                 default_num: 0 as libc::c_int as libc::c_longlong,
566 +                 separator: 0 as *const libc::c_char,
567 +                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
568 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:583:13
    |
571 | /             let mut init = options_table_entry {
572 | |                 name: b"message-command-fg\0" as *const u8 as *const libc::c_char,
573 | |                 type_0: OPTIONS_TABLE_COLOUR,
574 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
581 | |                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
582 | |             };
    | |______________- unnecessary `let` binding
583 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
571 ~             
572 ~             options_table_entry {
573 +                 name: b"message-command-fg\0" as *const u8 as *const libc::c_char,
574 +                 type_0: OPTIONS_TABLE_COLOUR,
575 +                 scope: OPTIONS_TABLE_SESSION,
576 +                 minimum: 0,
577 +                 maximum: 0,
578 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
579 +                 default_str: 0 as *const libc::c_char,
580 +                 default_num: 3 as libc::c_int as libc::c_longlong,
581 +                 separator: 0 as *const libc::c_char,
582 +                 style: b"message-command-style\0" as *const u8 as *const libc::c_char,
583 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:598:13
    |
586 | /             let mut init = options_table_entry {
587 | |                 name: b"message-command-style\0" as *const u8 as *const libc::c_char,
588 | |                 type_0: OPTIONS_TABLE_STYLE,
589 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
596 | |                 style: 0 as *const libc::c_char,
597 | |             };
    | |______________- unnecessary `let` binding
598 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
586 ~             
587 ~             options_table_entry {
588 +                 name: b"message-command-style\0" as *const u8 as *const libc::c_char,
589 +                 type_0: OPTIONS_TABLE_STYLE,
590 +                 scope: OPTIONS_TABLE_SESSION,
591 +                 minimum: 0,
592 +                 maximum: 0,
593 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
594 +                 default_str: b"bg=black,fg=yellow\0" as *const u8 as *const libc::c_char,
595 +                 default_num: 0,
596 +                 separator: 0 as *const libc::c_char,
597 +                 style: 0 as *const libc::c_char,
598 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:613:13
    |
601 | /             let mut init = options_table_entry {
602 | |                 name: b"message-fg\0" as *const u8 as *const libc::c_char,
603 | |                 type_0: OPTIONS_TABLE_COLOUR,
604 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
611 | |                 style: b"message-style\0" as *const u8 as *const libc::c_char,
612 | |             };
    | |______________- unnecessary `let` binding
613 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
601 ~             
602 ~             options_table_entry {
603 +                 name: b"message-fg\0" as *const u8 as *const libc::c_char,
604 +                 type_0: OPTIONS_TABLE_COLOUR,
605 +                 scope: OPTIONS_TABLE_SESSION,
606 +                 minimum: 0,
607 +                 maximum: 0,
608 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
609 +                 default_str: 0 as *const libc::c_char,
610 +                 default_num: 0 as libc::c_int as libc::c_longlong,
611 +                 separator: 0 as *const libc::c_char,
612 +                 style: b"message-style\0" as *const u8 as *const libc::c_char,
613 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:628:13
    |
616 | /             let mut init = options_table_entry {
617 | |                 name: b"message-style\0" as *const u8 as *const libc::c_char,
618 | |                 type_0: OPTIONS_TABLE_STYLE,
619 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
626 | |                 style: 0 as *const libc::c_char,
627 | |             };
    | |______________- unnecessary `let` binding
628 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
616 ~             
617 ~             options_table_entry {
618 +                 name: b"message-style\0" as *const u8 as *const libc::c_char,
619 +                 type_0: OPTIONS_TABLE_STYLE,
620 +                 scope: OPTIONS_TABLE_SESSION,
621 +                 minimum: 0,
622 +                 maximum: 0,
623 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
624 +                 default_str: b"bg=yellow,fg=black\0" as *const u8 as *const libc::c_char,
625 +                 default_num: 0,
626 +                 separator: 0 as *const libc::c_char,
627 +                 style: 0 as *const libc::c_char,
628 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:643:13
    |
631 | /             let mut init = options_table_entry {
632 | |                 name: b"mouse\0" as *const u8 as *const libc::c_char,
633 | |                 type_0: OPTIONS_TABLE_FLAG,
634 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
641 | |                 style: 0 as *const libc::c_char,
642 | |             };
    | |______________- unnecessary `let` binding
643 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
631 ~             
632 ~             options_table_entry {
633 +                 name: b"mouse\0" as *const u8 as *const libc::c_char,
634 +                 type_0: OPTIONS_TABLE_FLAG,
635 +                 scope: OPTIONS_TABLE_SESSION,
636 +                 minimum: 0,
637 +                 maximum: 0,
638 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
639 +                 default_str: 0 as *const libc::c_char,
640 +                 default_num: 0 as libc::c_int as libc::c_longlong,
641 +                 separator: 0 as *const libc::c_char,
642 +                 style: 0 as *const libc::c_char,
643 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:658:13
    |
646 | /             let mut init = options_table_entry {
647 | |                 name: b"prefix\0" as *const u8 as *const libc::c_char,
648 | |                 type_0: OPTIONS_TABLE_KEY,
649 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
656 | |                 style: 0 as *const libc::c_char,
657 | |             };
    | |______________- unnecessary `let` binding
658 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
646 ~             
647 ~             options_table_entry {
648 +                 name: b"prefix\0" as *const u8 as *const libc::c_char,
649 +                 type_0: OPTIONS_TABLE_KEY,
650 +                 scope: OPTIONS_TABLE_SESSION,
651 +                 minimum: 0,
652 +                 maximum: 0,
653 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
654 +                 default_str: 0 as *const libc::c_char,
655 +                 default_num: '\u{2}' as i32 as libc::c_longlong,
656 +                 separator: 0 as *const libc::c_char,
657 +                 style: 0 as *const libc::c_char,
658 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:673:13
    |
661 | /             let mut init = options_table_entry {
662 | |                 name: b"prefix2\0" as *const u8 as *const libc::c_char,
663 | |                 type_0: OPTIONS_TABLE_KEY,
664 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
671 | |                 style: 0 as *const libc::c_char,
672 | |             };
    | |______________- unnecessary `let` binding
673 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
661 ~             
662 ~             options_table_entry {
663 +                 name: b"prefix2\0" as *const u8 as *const libc::c_char,
664 +                 type_0: OPTIONS_TABLE_KEY,
665 +                 scope: OPTIONS_TABLE_SESSION,
666 +                 minimum: 0,
667 +                 maximum: 0,
668 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
669 +                 default_str: 0 as *const libc::c_char,
670 +                 default_num: 0xffff00000000 as libc::c_ulonglong as libc::c_longlong,
671 +                 separator: 0 as *const libc::c_char,
672 +                 style: 0 as *const libc::c_char,
673 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:688:13
    |
676 | /             let mut init = options_table_entry {
677 | |                 name: b"renumber-windows\0" as *const u8 as *const libc::c_char,
678 | |                 type_0: OPTIONS_TABLE_FLAG,
679 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
686 | |                 style: 0 as *const libc::c_char,
687 | |             };
    | |______________- unnecessary `let` binding
688 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
676 ~             
677 ~             options_table_entry {
678 +                 name: b"renumber-windows\0" as *const u8 as *const libc::c_char,
679 +                 type_0: OPTIONS_TABLE_FLAG,
680 +                 scope: OPTIONS_TABLE_SESSION,
681 +                 minimum: 0,
682 +                 maximum: 0,
683 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
684 +                 default_str: 0 as *const libc::c_char,
685 +                 default_num: 0 as libc::c_int as libc::c_longlong,
686 +                 separator: 0 as *const libc::c_char,
687 +                 style: 0 as *const libc::c_char,
688 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:703:13
    |
691 | /             let mut init = options_table_entry {
692 | |                 name: b"repeat-time\0" as *const u8 as *const libc::c_char,
693 | |                 type_0: OPTIONS_TABLE_NUMBER,
694 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
701 | |                 style: 0 as *const libc::c_char,
702 | |             };
    | |______________- unnecessary `let` binding
703 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
691 ~             
692 ~             options_table_entry {
693 +                 name: b"repeat-time\0" as *const u8 as *const libc::c_char,
694 +                 type_0: OPTIONS_TABLE_NUMBER,
695 +                 scope: OPTIONS_TABLE_SESSION,
696 +                 minimum: 0 as libc::c_int as u_int,
697 +                 maximum: 32767 as libc::c_int as u_int,
698 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
699 +                 default_str: 0 as *const libc::c_char,
700 +                 default_num: 500 as libc::c_int as libc::c_longlong,
701 +                 separator: 0 as *const libc::c_char,
702 +                 style: 0 as *const libc::c_char,
703 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:718:13
    |
706 | /             let mut init = options_table_entry {
707 | |                 name: b"set-titles\0" as *const u8 as *const libc::c_char,
708 | |                 type_0: OPTIONS_TABLE_FLAG,
709 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
716 | |                 style: 0 as *const libc::c_char,
717 | |             };
    | |______________- unnecessary `let` binding
718 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
706 ~             
707 ~             options_table_entry {
708 +                 name: b"set-titles\0" as *const u8 as *const libc::c_char,
709 +                 type_0: OPTIONS_TABLE_FLAG,
710 +                 scope: OPTIONS_TABLE_SESSION,
711 +                 minimum: 0,
712 +                 maximum: 0,
713 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
714 +                 default_str: 0 as *const libc::c_char,
715 +                 default_num: 0 as libc::c_int as libc::c_longlong,
716 +                 separator: 0 as *const libc::c_char,
717 +                 style: 0 as *const libc::c_char,
718 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:734:13
    |
721 | /             let mut init = options_table_entry {
722 | |                 name: b"set-titles-string\0" as *const u8 as *const libc::c_char,
723 | |                 type_0: OPTIONS_TABLE_STRING,
724 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
732 | |                 style: 0 as *const libc::c_char,
733 | |             };
    | |______________- unnecessary `let` binding
734 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
721 ~             
722 ~             options_table_entry {
723 +                 name: b"set-titles-string\0" as *const u8 as *const libc::c_char,
724 +                 type_0: OPTIONS_TABLE_STRING,
725 +                 scope: OPTIONS_TABLE_SESSION,
726 +                 minimum: 0,
727 +                 maximum: 0,
728 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
729 +                 default_str: b"#S:#I:#W - \"#T\" #{session_alerts}\0" as *const u8
730 +                     as *const libc::c_char,
731 +                 default_num: 0,
732 +                 separator: 0 as *const libc::c_char,
733 +                 style: 0 as *const libc::c_char,
734 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:749:13
    |
737 | /             let mut init = options_table_entry {
738 | |                 name: b"silence-action\0" as *const u8 as *const libc::c_char,
739 | |                 type_0: OPTIONS_TABLE_CHOICE,
740 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
747 | |                 style: 0 as *const libc::c_char,
748 | |             };
    | |______________- unnecessary `let` binding
749 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
737 ~             
738 ~             options_table_entry {
739 +                 name: b"silence-action\0" as *const u8 as *const libc::c_char,
740 +                 type_0: OPTIONS_TABLE_CHOICE,
741 +                 scope: OPTIONS_TABLE_SESSION,
742 +                 minimum: 0,
743 +                 maximum: 0,
744 +                 choices: options_table_bell_action_list.as_ptr() as *mut _,
745 +                 default_str: 0 as *const libc::c_char,
746 +                 default_num: 3 as libc::c_int as libc::c_longlong,
747 +                 separator: 0 as *const libc::c_char,
748 +                 style: 0 as *const libc::c_char,
749 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:764:13
    |
752 | /             let mut init = options_table_entry {
753 | |                 name: b"status\0" as *const u8 as *const libc::c_char,
754 | |                 type_0: OPTIONS_TABLE_FLAG,
755 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
762 | |                 style: 0 as *const libc::c_char,
763 | |             };
    | |______________- unnecessary `let` binding
764 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
752 ~             
753 ~             options_table_entry {
754 +                 name: b"status\0" as *const u8 as *const libc::c_char,
755 +                 type_0: OPTIONS_TABLE_FLAG,
756 +                 scope: OPTIONS_TABLE_SESSION,
757 +                 minimum: 0,
758 +                 maximum: 0,
759 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
760 +                 default_str: 0 as *const libc::c_char,
761 +                 default_num: 1 as libc::c_int as libc::c_longlong,
762 +                 separator: 0 as *const libc::c_char,
763 +                 style: 0 as *const libc::c_char,
764 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:779:13
    |
767 | /             let mut init = options_table_entry {
768 | |                 name: b"status-attr\0" as *const u8 as *const libc::c_char,
769 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
770 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
777 | |                 style: b"status-style\0" as *const u8 as *const libc::c_char,
778 | |             };
    | |______________- unnecessary `let` binding
779 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
767 ~             
768 ~             options_table_entry {
769 +                 name: b"status-attr\0" as *const u8 as *const libc::c_char,
770 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
771 +                 scope: OPTIONS_TABLE_SESSION,
772 +                 minimum: 0,
773 +                 maximum: 0,
774 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
775 +                 default_str: 0 as *const libc::c_char,
776 +                 default_num: 0 as libc::c_int as libc::c_longlong,
777 +                 separator: 0 as *const libc::c_char,
778 +                 style: b"status-style\0" as *const u8 as *const libc::c_char,
779 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:794:13
    |
782 | /             let mut init = options_table_entry {
783 | |                 name: b"status-bg\0" as *const u8 as *const libc::c_char,
784 | |                 type_0: OPTIONS_TABLE_COLOUR,
785 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
792 | |                 style: b"status-style\0" as *const u8 as *const libc::c_char,
793 | |             };
    | |______________- unnecessary `let` binding
794 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
782 ~             
783 ~             options_table_entry {
784 +                 name: b"status-bg\0" as *const u8 as *const libc::c_char,
785 +                 type_0: OPTIONS_TABLE_COLOUR,
786 +                 scope: OPTIONS_TABLE_SESSION,
787 +                 minimum: 0,
788 +                 maximum: 0,
789 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
790 +                 default_str: 0 as *const libc::c_char,
791 +                 default_num: 2 as libc::c_int as libc::c_longlong,
792 +                 separator: 0 as *const libc::c_char,
793 +                 style: b"status-style\0" as *const u8 as *const libc::c_char,
794 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:809:13
    |
797 | /             let mut init = options_table_entry {
798 | |                 name: b"status-fg\0" as *const u8 as *const libc::c_char,
799 | |                 type_0: OPTIONS_TABLE_COLOUR,
800 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
807 | |                 style: b"status-style\0" as *const u8 as *const libc::c_char,
808 | |             };
    | |______________- unnecessary `let` binding
809 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
797 ~             
798 ~             options_table_entry {
799 +                 name: b"status-fg\0" as *const u8 as *const libc::c_char,
800 +                 type_0: OPTIONS_TABLE_COLOUR,
801 +                 scope: OPTIONS_TABLE_SESSION,
802 +                 minimum: 0,
803 +                 maximum: 0,
804 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
805 +                 default_str: 0 as *const libc::c_char,
806 +                 default_num: 0 as libc::c_int as libc::c_longlong,
807 +                 separator: 0 as *const libc::c_char,
808 +                 style: b"status-style\0" as *const u8 as *const libc::c_char,
809 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:824:13
    |
812 | /             let mut init = options_table_entry {
813 | |                 name: b"status-interval\0" as *const u8 as *const libc::c_char,
814 | |                 type_0: OPTIONS_TABLE_NUMBER,
815 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
822 | |                 style: 0 as *const libc::c_char,
823 | |             };
    | |______________- unnecessary `let` binding
824 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
812 ~             
813 ~             options_table_entry {
814 +                 name: b"status-interval\0" as *const u8 as *const libc::c_char,
815 +                 type_0: OPTIONS_TABLE_NUMBER,
816 +                 scope: OPTIONS_TABLE_SESSION,
817 +                 minimum: 0 as libc::c_int as u_int,
818 +                 maximum: 2147483647 as libc::c_int as u_int,
819 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
820 +                 default_str: 0 as *const libc::c_char,
821 +                 default_num: 15 as libc::c_int as libc::c_longlong,
822 +                 separator: 0 as *const libc::c_char,
823 +                 style: 0 as *const libc::c_char,
824 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:839:13
    |
827 | /             let mut init = options_table_entry {
828 | |                 name: b"status-justify\0" as *const u8 as *const libc::c_char,
829 | |                 type_0: OPTIONS_TABLE_CHOICE,
830 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
837 | |                 style: 0 as *const libc::c_char,
838 | |             };
    | |______________- unnecessary `let` binding
839 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
827 ~             
828 ~             options_table_entry {
829 +                 name: b"status-justify\0" as *const u8 as *const libc::c_char,
830 +                 type_0: OPTIONS_TABLE_CHOICE,
831 +                 scope: OPTIONS_TABLE_SESSION,
832 +                 minimum: 0,
833 +                 maximum: 0,
834 +                 choices: options_table_status_justify_list.as_ptr() as *mut _,
835 +                 default_str: 0 as *const libc::c_char,
836 +                 default_num: 0 as libc::c_int as libc::c_longlong,
837 +                 separator: 0 as *const libc::c_char,
838 +                 style: 0 as *const libc::c_char,
839 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:854:13
    |
842 | /             let mut init = options_table_entry {
843 | |                 name: b"status-keys\0" as *const u8 as *const libc::c_char,
844 | |                 type_0: OPTIONS_TABLE_CHOICE,
845 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
852 | |                 style: 0 as *const libc::c_char,
853 | |             };
    | |______________- unnecessary `let` binding
854 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
842 ~             
843 ~             options_table_entry {
844 +                 name: b"status-keys\0" as *const u8 as *const libc::c_char,
845 +                 type_0: OPTIONS_TABLE_CHOICE,
846 +                 scope: OPTIONS_TABLE_SESSION,
847 +                 minimum: 0,
848 +                 maximum: 0,
849 +                 choices: options_table_status_keys_list.as_ptr() as *mut _,
850 +                 default_str: 0 as *const libc::c_char,
851 +                 default_num: 0 as libc::c_int as libc::c_longlong,
852 +                 separator: 0 as *const libc::c_char,
853 +                 style: 0 as *const libc::c_char,
854 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:869:13
    |
857 | /             let mut init = options_table_entry {
858 | |                 name: b"status-left\0" as *const u8 as *const libc::c_char,
859 | |                 type_0: OPTIONS_TABLE_STRING,
860 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
867 | |                 style: 0 as *const libc::c_char,
868 | |             };
    | |______________- unnecessary `let` binding
869 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
857 ~             
858 ~             options_table_entry {
859 +                 name: b"status-left\0" as *const u8 as *const libc::c_char,
860 +                 type_0: OPTIONS_TABLE_STRING,
861 +                 scope: OPTIONS_TABLE_SESSION,
862 +                 minimum: 0,
863 +                 maximum: 0,
864 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
865 +                 default_str: b"[#S] \0" as *const u8 as *const libc::c_char,
866 +                 default_num: 0,
867 +                 separator: 0 as *const libc::c_char,
868 +                 style: 0 as *const libc::c_char,
869 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:884:13
    |
872 | /             let mut init = options_table_entry {
873 | |                 name: b"status-left-attr\0" as *const u8 as *const libc::c_char,
874 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
875 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
882 | |                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
883 | |             };
    | |______________- unnecessary `let` binding
884 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
872 ~             
873 ~             options_table_entry {
874 +                 name: b"status-left-attr\0" as *const u8 as *const libc::c_char,
875 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
876 +                 scope: OPTIONS_TABLE_SESSION,
877 +                 minimum: 0,
878 +                 maximum: 0,
879 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
880 +                 default_str: 0 as *const libc::c_char,
881 +                 default_num: 0 as libc::c_int as libc::c_longlong,
882 +                 separator: 0 as *const libc::c_char,
883 +                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
884 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:899:13
    |
887 | /             let mut init = options_table_entry {
888 | |                 name: b"status-left-bg\0" as *const u8 as *const libc::c_char,
889 | |                 type_0: OPTIONS_TABLE_COLOUR,
890 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
897 | |                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
898 | |             };
    | |______________- unnecessary `let` binding
899 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
887 ~             
888 ~             options_table_entry {
889 +                 name: b"status-left-bg\0" as *const u8 as *const libc::c_char,
890 +                 type_0: OPTIONS_TABLE_COLOUR,
891 +                 scope: OPTIONS_TABLE_SESSION,
892 +                 minimum: 0,
893 +                 maximum: 0,
894 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
895 +                 default_str: 0 as *const libc::c_char,
896 +                 default_num: 8 as libc::c_int as libc::c_longlong,
897 +                 separator: 0 as *const libc::c_char,
898 +                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
899 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:914:13
    |
902 | /             let mut init = options_table_entry {
903 | |                 name: b"status-left-fg\0" as *const u8 as *const libc::c_char,
904 | |                 type_0: OPTIONS_TABLE_COLOUR,
905 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
912 | |                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
913 | |             };
    | |______________- unnecessary `let` binding
914 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
902 ~             
903 ~             options_table_entry {
904 +                 name: b"status-left-fg\0" as *const u8 as *const libc::c_char,
905 +                 type_0: OPTIONS_TABLE_COLOUR,
906 +                 scope: OPTIONS_TABLE_SESSION,
907 +                 minimum: 0,
908 +                 maximum: 0,
909 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
910 +                 default_str: 0 as *const libc::c_char,
911 +                 default_num: 8 as libc::c_int as libc::c_longlong,
912 +                 separator: 0 as *const libc::c_char,
913 +                 style: b"status-left-style\0" as *const u8 as *const libc::c_char,
914 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:929:13
    |
917 | /             let mut init = options_table_entry {
918 | |                 name: b"status-left-length\0" as *const u8 as *const libc::c_char,
919 | |                 type_0: OPTIONS_TABLE_NUMBER,
920 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
927 | |                 style: 0 as *const libc::c_char,
928 | |             };
    | |______________- unnecessary `let` binding
929 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
917 ~             
918 ~             options_table_entry {
919 +                 name: b"status-left-length\0" as *const u8 as *const libc::c_char,
920 +                 type_0: OPTIONS_TABLE_NUMBER,
921 +                 scope: OPTIONS_TABLE_SESSION,
922 +                 minimum: 0 as libc::c_int as u_int,
923 +                 maximum: 32767 as libc::c_int as u_int,
924 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
925 +                 default_str: 0 as *const libc::c_char,
926 +                 default_num: 10 as libc::c_int as libc::c_longlong,
927 +                 separator: 0 as *const libc::c_char,
928 +                 style: 0 as *const libc::c_char,
929 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:944:13
    |
932 | /             let mut init = options_table_entry {
933 | |                 name: b"status-left-style\0" as *const u8 as *const libc::c_char,
934 | |                 type_0: OPTIONS_TABLE_STYLE,
935 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
942 | |                 style: 0 as *const libc::c_char,
943 | |             };
    | |______________- unnecessary `let` binding
944 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
932 ~             
933 ~             options_table_entry {
934 +                 name: b"status-left-style\0" as *const u8 as *const libc::c_char,
935 +                 type_0: OPTIONS_TABLE_STYLE,
936 +                 scope: OPTIONS_TABLE_SESSION,
937 +                 minimum: 0,
938 +                 maximum: 0,
939 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
940 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
941 +                 default_num: 0,
942 +                 separator: 0 as *const libc::c_char,
943 +                 style: 0 as *const libc::c_char,
944 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:959:13
    |
947 | /             let mut init = options_table_entry {
948 | |                 name: b"status-position\0" as *const u8 as *const libc::c_char,
949 | |                 type_0: OPTIONS_TABLE_CHOICE,
950 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
957 | |                 style: 0 as *const libc::c_char,
958 | |             };
    | |______________- unnecessary `let` binding
959 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
947 ~             
948 ~             options_table_entry {
949 +                 name: b"status-position\0" as *const u8 as *const libc::c_char,
950 +                 type_0: OPTIONS_TABLE_CHOICE,
951 +                 scope: OPTIONS_TABLE_SESSION,
952 +                 minimum: 0,
953 +                 maximum: 0,
954 +                 choices: options_table_status_position_list.as_ptr() as *mut _,
955 +                 default_str: 0 as *const libc::c_char,
956 +                 default_num: 1 as libc::c_int as libc::c_longlong,
957 +                 separator: 0 as *const libc::c_char,
958 +                 style: 0 as *const libc::c_char,
959 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:975:13
    |
962 | /             let mut init = options_table_entry {
963 | |                 name: b"status-right\0" as *const u8 as *const libc::c_char,
964 | |                 type_0: OPTIONS_TABLE_STRING,
965 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
973 | |                 style: 0 as *const libc::c_char,
974 | |             };
    | |______________- unnecessary `let` binding
975 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
962 ~             
963 ~             options_table_entry {
964 +                 name: b"status-right\0" as *const u8 as *const libc::c_char,
965 +                 type_0: OPTIONS_TABLE_STRING,
966 +                 scope: OPTIONS_TABLE_SESSION,
967 +                 minimum: 0,
968 +                 maximum: 0,
969 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
970 +                 default_str: b" \"#{=21:pane_title}\" %H:%M %d-%b-%y\0" as *const u8
971 +                     as *const libc::c_char,
972 +                 default_num: 0,
973 +                 separator: 0 as *const libc::c_char,
974 +                 style: 0 as *const libc::c_char,
975 +             }
    |

warning: returning the result of a `let` binding from a block
   --> src/options_table.rs:990:13
    |
978 | /             let mut init = options_table_entry {
979 | |                 name: b"status-right-attr\0" as *const u8 as *const libc::c_char,
980 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
981 | |                 scope: OPTIONS_TABLE_SESSION,
...   |
988 | |                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
989 | |             };
    | |______________- unnecessary `let` binding
990 |               init
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
978 ~             
979 ~             options_table_entry {
980 +                 name: b"status-right-attr\0" as *const u8 as *const libc::c_char,
981 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
982 +                 scope: OPTIONS_TABLE_SESSION,
983 +                 minimum: 0,
984 +                 maximum: 0,
985 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
986 +                 default_str: 0 as *const libc::c_char,
987 +                 default_num: 0 as libc::c_int as libc::c_longlong,
988 +                 separator: 0 as *const libc::c_char,
989 +                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
990 +             }
    |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1005:13
     |
993  | /             let mut init = options_table_entry {
994  | |                 name: b"status-right-bg\0" as *const u8 as *const libc::c_char,
995  | |                 type_0: OPTIONS_TABLE_COLOUR,
996  | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1003 | |                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
1004 | |             };
     | |______________- unnecessary `let` binding
1005 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
993  ~             
994  ~             options_table_entry {
995  +                 name: b"status-right-bg\0" as *const u8 as *const libc::c_char,
996  +                 type_0: OPTIONS_TABLE_COLOUR,
997  +                 scope: OPTIONS_TABLE_SESSION,
998  +                 minimum: 0,
999  +                 maximum: 0,
1000 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1001 +                 default_str: 0 as *const libc::c_char,
1002 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1003 +                 separator: 0 as *const libc::c_char,
1004 +                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
1005 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1020:13
     |
1008 | /             let mut init = options_table_entry {
1009 | |                 name: b"status-right-fg\0" as *const u8 as *const libc::c_char,
1010 | |                 type_0: OPTIONS_TABLE_COLOUR,
1011 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1018 | |                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
1019 | |             };
     | |______________- unnecessary `let` binding
1020 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1008 ~             
1009 ~             options_table_entry {
1010 +                 name: b"status-right-fg\0" as *const u8 as *const libc::c_char,
1011 +                 type_0: OPTIONS_TABLE_COLOUR,
1012 +                 scope: OPTIONS_TABLE_SESSION,
1013 +                 minimum: 0,
1014 +                 maximum: 0,
1015 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1016 +                 default_str: 0 as *const libc::c_char,
1017 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1018 +                 separator: 0 as *const libc::c_char,
1019 +                 style: b"status-right-style\0" as *const u8 as *const libc::c_char,
1020 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1035:13
     |
1023 | /             let mut init = options_table_entry {
1024 | |                 name: b"status-right-length\0" as *const u8 as *const libc::c_char,
1025 | |                 type_0: OPTIONS_TABLE_NUMBER,
1026 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1033 | |                 style: 0 as *const libc::c_char,
1034 | |             };
     | |______________- unnecessary `let` binding
1035 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1023 ~             
1024 ~             options_table_entry {
1025 +                 name: b"status-right-length\0" as *const u8 as *const libc::c_char,
1026 +                 type_0: OPTIONS_TABLE_NUMBER,
1027 +                 scope: OPTIONS_TABLE_SESSION,
1028 +                 minimum: 0 as libc::c_int as u_int,
1029 +                 maximum: 32767 as libc::c_int as u_int,
1030 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1031 +                 default_str: 0 as *const libc::c_char,
1032 +                 default_num: 40 as libc::c_int as libc::c_longlong,
1033 +                 separator: 0 as *const libc::c_char,
1034 +                 style: 0 as *const libc::c_char,
1035 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1050:13
     |
1038 | /             let mut init = options_table_entry {
1039 | |                 name: b"status-right-style\0" as *const u8 as *const libc::c_char,
1040 | |                 type_0: OPTIONS_TABLE_STYLE,
1041 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1048 | |                 style: 0 as *const libc::c_char,
1049 | |             };
     | |______________- unnecessary `let` binding
1050 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1038 ~             
1039 ~             options_table_entry {
1040 +                 name: b"status-right-style\0" as *const u8 as *const libc::c_char,
1041 +                 type_0: OPTIONS_TABLE_STYLE,
1042 +                 scope: OPTIONS_TABLE_SESSION,
1043 +                 minimum: 0,
1044 +                 maximum: 0,
1045 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1046 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1047 +                 default_num: 0,
1048 +                 separator: 0 as *const libc::c_char,
1049 +                 style: 0 as *const libc::c_char,
1050 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1065:13
     |
1053 | /             let mut init = options_table_entry {
1054 | |                 name: b"status-style\0" as *const u8 as *const libc::c_char,
1055 | |                 type_0: OPTIONS_TABLE_STYLE,
1056 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1063 | |                 style: 0 as *const libc::c_char,
1064 | |             };
     | |______________- unnecessary `let` binding
1065 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1053 ~             
1054 ~             options_table_entry {
1055 +                 name: b"status-style\0" as *const u8 as *const libc::c_char,
1056 +                 type_0: OPTIONS_TABLE_STYLE,
1057 +                 scope: OPTIONS_TABLE_SESSION,
1058 +                 minimum: 0,
1059 +                 maximum: 0,
1060 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1061 +                 default_str: b"bg=green,fg=black\0" as *const u8 as *const libc::c_char,
1062 +                 default_num: 0,
1063 +                 separator: 0 as *const libc::c_char,
1064 +                 style: 0 as *const libc::c_char,
1065 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1081:13
     |
1068 | /             let mut init = options_table_entry {
1069 | |                 name: b"update-environment\0" as *const u8 as *const libc::c_char,
1070 | |                 type_0: OPTIONS_TABLE_ARRAY,
1071 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1079 | |                 style: 0 as *const libc::c_char,
1080 | |             };
     | |______________- unnecessary `let` binding
1081 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1068 ~             
1069 ~             options_table_entry {
1070 +                 name: b"update-environment\0" as *const u8 as *const libc::c_char,
1071 +                 type_0: OPTIONS_TABLE_ARRAY,
1072 +                 scope: OPTIONS_TABLE_SESSION,
1073 +                 minimum: 0,
1074 +                 maximum: 0,
1075 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1076 +                 default_str: b"DISPLAY KRB5CCNAME SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY\0"
1077 +                     as *const u8 as *const libc::c_char,
1078 +                 default_num: 0,
1079 +                 separator: 0 as *const libc::c_char,
1080 +                 style: 0 as *const libc::c_char,
1081 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1096:13
     |
1084 | /             let mut init = options_table_entry {
1085 | |                 name: b"visual-activity\0" as *const u8 as *const libc::c_char,
1086 | |                 type_0: OPTIONS_TABLE_CHOICE,
1087 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1094 | |                 style: 0 as *const libc::c_char,
1095 | |             };
     | |______________- unnecessary `let` binding
1096 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1084 ~             
1085 ~             options_table_entry {
1086 +                 name: b"visual-activity\0" as *const u8 as *const libc::c_char,
1087 +                 type_0: OPTIONS_TABLE_CHOICE,
1088 +                 scope: OPTIONS_TABLE_SESSION,
1089 +                 minimum: 0,
1090 +                 maximum: 0,
1091 +                 choices: options_table_visual_bell_list.as_ptr() as *mut _,
1092 +                 default_str: 0 as *const libc::c_char,
1093 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1094 +                 separator: 0 as *const libc::c_char,
1095 +                 style: 0 as *const libc::c_char,
1096 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1111:13
     |
1099 | /             let mut init = options_table_entry {
1100 | |                 name: b"visual-bell\0" as *const u8 as *const libc::c_char,
1101 | |                 type_0: OPTIONS_TABLE_CHOICE,
1102 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1109 | |                 style: 0 as *const libc::c_char,
1110 | |             };
     | |______________- unnecessary `let` binding
1111 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1099 ~             
1100 ~             options_table_entry {
1101 +                 name: b"visual-bell\0" as *const u8 as *const libc::c_char,
1102 +                 type_0: OPTIONS_TABLE_CHOICE,
1103 +                 scope: OPTIONS_TABLE_SESSION,
1104 +                 minimum: 0,
1105 +                 maximum: 0,
1106 +                 choices: options_table_visual_bell_list.as_ptr() as *mut _,
1107 +                 default_str: 0 as *const libc::c_char,
1108 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1109 +                 separator: 0 as *const libc::c_char,
1110 +                 style: 0 as *const libc::c_char,
1111 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1126:13
     |
1114 | /             let mut init = options_table_entry {
1115 | |                 name: b"visual-silence\0" as *const u8 as *const libc::c_char,
1116 | |                 type_0: OPTIONS_TABLE_CHOICE,
1117 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1124 | |                 style: 0 as *const libc::c_char,
1125 | |             };
     | |______________- unnecessary `let` binding
1126 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1114 ~             
1115 ~             options_table_entry {
1116 +                 name: b"visual-silence\0" as *const u8 as *const libc::c_char,
1117 +                 type_0: OPTIONS_TABLE_CHOICE,
1118 +                 scope: OPTIONS_TABLE_SESSION,
1119 +                 minimum: 0,
1120 +                 maximum: 0,
1121 +                 choices: options_table_visual_bell_list.as_ptr() as *mut _,
1122 +                 default_str: 0 as *const libc::c_char,
1123 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1124 +                 separator: 0 as *const libc::c_char,
1125 +                 style: 0 as *const libc::c_char,
1126 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1141:13
     |
1129 | /             let mut init = options_table_entry {
1130 | |                 name: b"word-separators\0" as *const u8 as *const libc::c_char,
1131 | |                 type_0: OPTIONS_TABLE_STRING,
1132 | |                 scope: OPTIONS_TABLE_SESSION,
...    |
1139 | |                 style: 0 as *const libc::c_char,
1140 | |             };
     | |______________- unnecessary `let` binding
1141 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1129 ~             
1130 ~             options_table_entry {
1131 +                 name: b"word-separators\0" as *const u8 as *const libc::c_char,
1132 +                 type_0: OPTIONS_TABLE_STRING,
1133 +                 scope: OPTIONS_TABLE_SESSION,
1134 +                 minimum: 0,
1135 +                 maximum: 0,
1136 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1137 +                 default_str: b" -_@\0" as *const u8 as *const libc::c_char,
1138 +                 default_num: 0,
1139 +                 separator: 0 as *const libc::c_char,
1140 +                 style: 0 as *const libc::c_char,
1141 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1156:13
     |
1144 | /             let mut init = options_table_entry {
1145 | |                 name: b"aggressive-resize\0" as *const u8 as *const libc::c_char,
1146 | |                 type_0: OPTIONS_TABLE_FLAG,
1147 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1154 | |                 style: 0 as *const libc::c_char,
1155 | |             };
     | |______________- unnecessary `let` binding
1156 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1144 ~             
1145 ~             options_table_entry {
1146 +                 name: b"aggressive-resize\0" as *const u8 as *const libc::c_char,
1147 +                 type_0: OPTIONS_TABLE_FLAG,
1148 +                 scope: OPTIONS_TABLE_WINDOW,
1149 +                 minimum: 0,
1150 +                 maximum: 0,
1151 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1152 +                 default_str: 0 as *const libc::c_char,
1153 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1154 +                 separator: 0 as *const libc::c_char,
1155 +                 style: 0 as *const libc::c_char,
1156 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1171:13
     |
1159 | /             let mut init = options_table_entry {
1160 | |                 name: b"allow-rename\0" as *const u8 as *const libc::c_char,
1161 | |                 type_0: OPTIONS_TABLE_FLAG,
1162 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1169 | |                 style: 0 as *const libc::c_char,
1170 | |             };
     | |______________- unnecessary `let` binding
1171 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1159 ~             
1160 ~             options_table_entry {
1161 +                 name: b"allow-rename\0" as *const u8 as *const libc::c_char,
1162 +                 type_0: OPTIONS_TABLE_FLAG,
1163 +                 scope: OPTIONS_TABLE_WINDOW,
1164 +                 minimum: 0,
1165 +                 maximum: 0,
1166 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1167 +                 default_str: 0 as *const libc::c_char,
1168 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1169 +                 separator: 0 as *const libc::c_char,
1170 +                 style: 0 as *const libc::c_char,
1171 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1186:13
     |
1174 | /             let mut init = options_table_entry {
1175 | |                 name: b"alternate-screen\0" as *const u8 as *const libc::c_char,
1176 | |                 type_0: OPTIONS_TABLE_FLAG,
1177 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1184 | |                 style: 0 as *const libc::c_char,
1185 | |             };
     | |______________- unnecessary `let` binding
1186 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1174 ~             
1175 ~             options_table_entry {
1176 +                 name: b"alternate-screen\0" as *const u8 as *const libc::c_char,
1177 +                 type_0: OPTIONS_TABLE_FLAG,
1178 +                 scope: OPTIONS_TABLE_WINDOW,
1179 +                 minimum: 0,
1180 +                 maximum: 0,
1181 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1182 +                 default_str: 0 as *const libc::c_char,
1183 +                 default_num: 1 as libc::c_int as libc::c_longlong,
1184 +                 separator: 0 as *const libc::c_char,
1185 +                 style: 0 as *const libc::c_char,
1186 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1201:13
     |
1189 | /             let mut init = options_table_entry {
1190 | |                 name: b"automatic-rename\0" as *const u8 as *const libc::c_char,
1191 | |                 type_0: OPTIONS_TABLE_FLAG,
1192 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1199 | |                 style: 0 as *const libc::c_char,
1200 | |             };
     | |______________- unnecessary `let` binding
1201 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1189 ~             
1190 ~             options_table_entry {
1191 +                 name: b"automatic-rename\0" as *const u8 as *const libc::c_char,
1192 +                 type_0: OPTIONS_TABLE_FLAG,
1193 +                 scope: OPTIONS_TABLE_WINDOW,
1194 +                 minimum: 0,
1195 +                 maximum: 0,
1196 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1197 +                 default_str: 0 as *const libc::c_char,
1198 +                 default_num: 1 as libc::c_int as libc::c_longlong,
1199 +                 separator: 0 as *const libc::c_char,
1200 +                 style: 0 as *const libc::c_char,
1201 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1217:13
     |
1204 | /             let mut init = options_table_entry {
1205 | |                 name: b"automatic-rename-format\0" as *const u8 as *const libc::c_char,
1206 | |                 type_0: OPTIONS_TABLE_STRING,
1207 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1215 | |                 style: 0 as *const libc::c_char,
1216 | |             };
     | |______________- unnecessary `let` binding
1217 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1204 ~             
1205 ~             options_table_entry {
1206 +                 name: b"automatic-rename-format\0" as *const u8 as *const libc::c_char,
1207 +                 type_0: OPTIONS_TABLE_STRING,
1208 +                 scope: OPTIONS_TABLE_WINDOW,
1209 +                 minimum: 0,
1210 +                 maximum: 0,
1211 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1212 +                 default_str: b"#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}\0"
1213 +                     as *const u8 as *const libc::c_char,
1214 +                 default_num: 0,
1215 +                 separator: 0 as *const libc::c_char,
1216 +                 style: 0 as *const libc::c_char,
1217 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1232:13
     |
1220 | /             let mut init = options_table_entry {
1221 | |                 name: b"clock-mode-colour\0" as *const u8 as *const libc::c_char,
1222 | |                 type_0: OPTIONS_TABLE_COLOUR,
1223 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1230 | |                 style: 0 as *const libc::c_char,
1231 | |             };
     | |______________- unnecessary `let` binding
1232 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1220 ~             
1221 ~             options_table_entry {
1222 +                 name: b"clock-mode-colour\0" as *const u8 as *const libc::c_char,
1223 +                 type_0: OPTIONS_TABLE_COLOUR,
1224 +                 scope: OPTIONS_TABLE_WINDOW,
1225 +                 minimum: 0,
1226 +                 maximum: 0,
1227 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1228 +                 default_str: 0 as *const libc::c_char,
1229 +                 default_num: 4 as libc::c_int as libc::c_longlong,
1230 +                 separator: 0 as *const libc::c_char,
1231 +                 style: 0 as *const libc::c_char,
1232 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1247:13
     |
1235 | /             let mut init = options_table_entry {
1236 | |                 name: b"clock-mode-style\0" as *const u8 as *const libc::c_char,
1237 | |                 type_0: OPTIONS_TABLE_CHOICE,
1238 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1245 | |                 style: 0 as *const libc::c_char,
1246 | |             };
     | |______________- unnecessary `let` binding
1247 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1235 ~             
1236 ~             options_table_entry {
1237 +                 name: b"clock-mode-style\0" as *const u8 as *const libc::c_char,
1238 +                 type_0: OPTIONS_TABLE_CHOICE,
1239 +                 scope: OPTIONS_TABLE_WINDOW,
1240 +                 minimum: 0,
1241 +                 maximum: 0,
1242 +                 choices: options_table_clock_mode_style_list.as_ptr() as *mut _,
1243 +                 default_str: 0 as *const libc::c_char,
1244 +                 default_num: 1 as libc::c_int as libc::c_longlong,
1245 +                 separator: 0 as *const libc::c_char,
1246 +                 style: 0 as *const libc::c_char,
1247 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1262:13
     |
1250 | /             let mut init = options_table_entry {
1251 | |                 name: b"force-height\0" as *const u8 as *const libc::c_char,
1252 | |                 type_0: OPTIONS_TABLE_NUMBER,
1253 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1260 | |                 style: 0 as *const libc::c_char,
1261 | |             };
     | |______________- unnecessary `let` binding
1262 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1250 ~             
1251 ~             options_table_entry {
1252 +                 name: b"force-height\0" as *const u8 as *const libc::c_char,
1253 +                 type_0: OPTIONS_TABLE_NUMBER,
1254 +                 scope: OPTIONS_TABLE_WINDOW,
1255 +                 minimum: 0 as libc::c_int as u_int,
1256 +                 maximum: 2147483647 as libc::c_int as u_int,
1257 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1258 +                 default_str: 0 as *const libc::c_char,
1259 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1260 +                 separator: 0 as *const libc::c_char,
1261 +                 style: 0 as *const libc::c_char,
1262 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1277:13
     |
1265 | /             let mut init = options_table_entry {
1266 | |                 name: b"force-width\0" as *const u8 as *const libc::c_char,
1267 | |                 type_0: OPTIONS_TABLE_NUMBER,
1268 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1275 | |                 style: 0 as *const libc::c_char,
1276 | |             };
     | |______________- unnecessary `let` binding
1277 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1265 ~             
1266 ~             options_table_entry {
1267 +                 name: b"force-width\0" as *const u8 as *const libc::c_char,
1268 +                 type_0: OPTIONS_TABLE_NUMBER,
1269 +                 scope: OPTIONS_TABLE_WINDOW,
1270 +                 minimum: 0 as libc::c_int as u_int,
1271 +                 maximum: 2147483647 as libc::c_int as u_int,
1272 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1273 +                 default_str: 0 as *const libc::c_char,
1274 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1275 +                 separator: 0 as *const libc::c_char,
1276 +                 style: 0 as *const libc::c_char,
1277 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1292:13
     |
1280 | /             let mut init = options_table_entry {
1281 | |                 name: b"main-pane-height\0" as *const u8 as *const libc::c_char,
1282 | |                 type_0: OPTIONS_TABLE_NUMBER,
1283 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1290 | |                 style: 0 as *const libc::c_char,
1291 | |             };
     | |______________- unnecessary `let` binding
1292 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1280 ~             
1281 ~             options_table_entry {
1282 +                 name: b"main-pane-height\0" as *const u8 as *const libc::c_char,
1283 +                 type_0: OPTIONS_TABLE_NUMBER,
1284 +                 scope: OPTIONS_TABLE_WINDOW,
1285 +                 minimum: 1 as libc::c_int as u_int,
1286 +                 maximum: 2147483647 as libc::c_int as u_int,
1287 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1288 +                 default_str: 0 as *const libc::c_char,
1289 +                 default_num: 24 as libc::c_int as libc::c_longlong,
1290 +                 separator: 0 as *const libc::c_char,
1291 +                 style: 0 as *const libc::c_char,
1292 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1307:13
     |
1295 | /             let mut init = options_table_entry {
1296 | |                 name: b"main-pane-width\0" as *const u8 as *const libc::c_char,
1297 | |                 type_0: OPTIONS_TABLE_NUMBER,
1298 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1305 | |                 style: 0 as *const libc::c_char,
1306 | |             };
     | |______________- unnecessary `let` binding
1307 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1295 ~             
1296 ~             options_table_entry {
1297 +                 name: b"main-pane-width\0" as *const u8 as *const libc::c_char,
1298 +                 type_0: OPTIONS_TABLE_NUMBER,
1299 +                 scope: OPTIONS_TABLE_WINDOW,
1300 +                 minimum: 1 as libc::c_int as u_int,
1301 +                 maximum: 2147483647 as libc::c_int as u_int,
1302 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1303 +                 default_str: 0 as *const libc::c_char,
1304 +                 default_num: 80 as libc::c_int as libc::c_longlong,
1305 +                 separator: 0 as *const libc::c_char,
1306 +                 style: 0 as *const libc::c_char,
1307 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1322:13
     |
1310 | /             let mut init = options_table_entry {
1311 | |                 name: b"mode-attr\0" as *const u8 as *const libc::c_char,
1312 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1313 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1320 | |                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1321 | |             };
     | |______________- unnecessary `let` binding
1322 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1310 ~             
1311 ~             options_table_entry {
1312 +                 name: b"mode-attr\0" as *const u8 as *const libc::c_char,
1313 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1314 +                 scope: OPTIONS_TABLE_WINDOW,
1315 +                 minimum: 0,
1316 +                 maximum: 0,
1317 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1318 +                 default_str: 0 as *const libc::c_char,
1319 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1320 +                 separator: 0 as *const libc::c_char,
1321 +                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1322 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1337:13
     |
1325 | /             let mut init = options_table_entry {
1326 | |                 name: b"mode-bg\0" as *const u8 as *const libc::c_char,
1327 | |                 type_0: OPTIONS_TABLE_COLOUR,
1328 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1335 | |                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1336 | |             };
     | |______________- unnecessary `let` binding
1337 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1325 ~             
1326 ~             options_table_entry {
1327 +                 name: b"mode-bg\0" as *const u8 as *const libc::c_char,
1328 +                 type_0: OPTIONS_TABLE_COLOUR,
1329 +                 scope: OPTIONS_TABLE_WINDOW,
1330 +                 minimum: 0,
1331 +                 maximum: 0,
1332 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1333 +                 default_str: 0 as *const libc::c_char,
1334 +                 default_num: 3 as libc::c_int as libc::c_longlong,
1335 +                 separator: 0 as *const libc::c_char,
1336 +                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1337 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1352:13
     |
1340 | /             let mut init = options_table_entry {
1341 | |                 name: b"mode-fg\0" as *const u8 as *const libc::c_char,
1342 | |                 type_0: OPTIONS_TABLE_COLOUR,
1343 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1350 | |                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1351 | |             };
     | |______________- unnecessary `let` binding
1352 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1340 ~             
1341 ~             options_table_entry {
1342 +                 name: b"mode-fg\0" as *const u8 as *const libc::c_char,
1343 +                 type_0: OPTIONS_TABLE_COLOUR,
1344 +                 scope: OPTIONS_TABLE_WINDOW,
1345 +                 minimum: 0,
1346 +                 maximum: 0,
1347 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1348 +                 default_str: 0 as *const libc::c_char,
1349 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1350 +                 separator: 0 as *const libc::c_char,
1351 +                 style: b"mode-style\0" as *const u8 as *const libc::c_char,
1352 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1367:13
     |
1355 | /             let mut init = options_table_entry {
1356 | |                 name: b"mode-keys\0" as *const u8 as *const libc::c_char,
1357 | |                 type_0: OPTIONS_TABLE_CHOICE,
1358 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1365 | |                 style: 0 as *const libc::c_char,
1366 | |             };
     | |______________- unnecessary `let` binding
1367 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1355 ~             
1356 ~             options_table_entry {
1357 +                 name: b"mode-keys\0" as *const u8 as *const libc::c_char,
1358 +                 type_0: OPTIONS_TABLE_CHOICE,
1359 +                 scope: OPTIONS_TABLE_WINDOW,
1360 +                 minimum: 0,
1361 +                 maximum: 0,
1362 +                 choices: options_table_mode_keys_list.as_ptr() as *mut _,
1363 +                 default_str: 0 as *const libc::c_char,
1364 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1365 +                 separator: 0 as *const libc::c_char,
1366 +                 style: 0 as *const libc::c_char,
1367 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1382:13
     |
1370 | /             let mut init = options_table_entry {
1371 | |                 name: b"mode-style\0" as *const u8 as *const libc::c_char,
1372 | |                 type_0: OPTIONS_TABLE_STYLE,
1373 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1380 | |                 style: 0 as *const libc::c_char,
1381 | |             };
     | |______________- unnecessary `let` binding
1382 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1370 ~             
1371 ~             options_table_entry {
1372 +                 name: b"mode-style\0" as *const u8 as *const libc::c_char,
1373 +                 type_0: OPTIONS_TABLE_STYLE,
1374 +                 scope: OPTIONS_TABLE_WINDOW,
1375 +                 minimum: 0,
1376 +                 maximum: 0,
1377 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1378 +                 default_str: b"bg=yellow,fg=black\0" as *const u8 as *const libc::c_char,
1379 +                 default_num: 0,
1380 +                 separator: 0 as *const libc::c_char,
1381 +                 style: 0 as *const libc::c_char,
1382 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1397:13
     |
1385 | /             let mut init = options_table_entry {
1386 | |                 name: b"monitor-activity\0" as *const u8 as *const libc::c_char,
1387 | |                 type_0: OPTIONS_TABLE_FLAG,
1388 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1395 | |                 style: 0 as *const libc::c_char,
1396 | |             };
     | |______________- unnecessary `let` binding
1397 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1385 ~             
1386 ~             options_table_entry {
1387 +                 name: b"monitor-activity\0" as *const u8 as *const libc::c_char,
1388 +                 type_0: OPTIONS_TABLE_FLAG,
1389 +                 scope: OPTIONS_TABLE_WINDOW,
1390 +                 minimum: 0,
1391 +                 maximum: 0,
1392 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1393 +                 default_str: 0 as *const libc::c_char,
1394 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1395 +                 separator: 0 as *const libc::c_char,
1396 +                 style: 0 as *const libc::c_char,
1397 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1412:13
     |
1400 | /             let mut init = options_table_entry {
1401 | |                 name: b"monitor-bell\0" as *const u8 as *const libc::c_char,
1402 | |                 type_0: OPTIONS_TABLE_FLAG,
1403 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1410 | |                 style: 0 as *const libc::c_char,
1411 | |             };
     | |______________- unnecessary `let` binding
1412 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1400 ~             
1401 ~             options_table_entry {
1402 +                 name: b"monitor-bell\0" as *const u8 as *const libc::c_char,
1403 +                 type_0: OPTIONS_TABLE_FLAG,
1404 +                 scope: OPTIONS_TABLE_WINDOW,
1405 +                 minimum: 0,
1406 +                 maximum: 0,
1407 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1408 +                 default_str: 0 as *const libc::c_char,
1409 +                 default_num: 1 as libc::c_int as libc::c_longlong,
1410 +                 separator: 0 as *const libc::c_char,
1411 +                 style: 0 as *const libc::c_char,
1412 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1427:13
     |
1415 | /             let mut init = options_table_entry {
1416 | |                 name: b"monitor-silence\0" as *const u8 as *const libc::c_char,
1417 | |                 type_0: OPTIONS_TABLE_NUMBER,
1418 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1425 | |                 style: 0 as *const libc::c_char,
1426 | |             };
     | |______________- unnecessary `let` binding
1427 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1415 ~             
1416 ~             options_table_entry {
1417 +                 name: b"monitor-silence\0" as *const u8 as *const libc::c_char,
1418 +                 type_0: OPTIONS_TABLE_NUMBER,
1419 +                 scope: OPTIONS_TABLE_WINDOW,
1420 +                 minimum: 0 as libc::c_int as u_int,
1421 +                 maximum: 2147483647 as libc::c_int as u_int,
1422 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1423 +                 default_str: 0 as *const libc::c_char,
1424 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1425 +                 separator: 0 as *const libc::c_char,
1426 +                 style: 0 as *const libc::c_char,
1427 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1442:13
     |
1430 | /             let mut init = options_table_entry {
1431 | |                 name: b"other-pane-height\0" as *const u8 as *const libc::c_char,
1432 | |                 type_0: OPTIONS_TABLE_NUMBER,
1433 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1440 | |                 style: 0 as *const libc::c_char,
1441 | |             };
     | |______________- unnecessary `let` binding
1442 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1430 ~             
1431 ~             options_table_entry {
1432 +                 name: b"other-pane-height\0" as *const u8 as *const libc::c_char,
1433 +                 type_0: OPTIONS_TABLE_NUMBER,
1434 +                 scope: OPTIONS_TABLE_WINDOW,
1435 +                 minimum: 0 as libc::c_int as u_int,
1436 +                 maximum: 2147483647 as libc::c_int as u_int,
1437 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1438 +                 default_str: 0 as *const libc::c_char,
1439 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1440 +                 separator: 0 as *const libc::c_char,
1441 +                 style: 0 as *const libc::c_char,
1442 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1457:13
     |
1445 | /             let mut init = options_table_entry {
1446 | |                 name: b"other-pane-width\0" as *const u8 as *const libc::c_char,
1447 | |                 type_0: OPTIONS_TABLE_NUMBER,
1448 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1455 | |                 style: 0 as *const libc::c_char,
1456 | |             };
     | |______________- unnecessary `let` binding
1457 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1445 ~             
1446 ~             options_table_entry {
1447 +                 name: b"other-pane-width\0" as *const u8 as *const libc::c_char,
1448 +                 type_0: OPTIONS_TABLE_NUMBER,
1449 +                 scope: OPTIONS_TABLE_WINDOW,
1450 +                 minimum: 0 as libc::c_int as u_int,
1451 +                 maximum: 2147483647 as libc::c_int as u_int,
1452 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1453 +                 default_str: 0 as *const libc::c_char,
1454 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1455 +                 separator: 0 as *const libc::c_char,
1456 +                 style: 0 as *const libc::c_char,
1457 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1472:13
     |
1460 | /             let mut init = options_table_entry {
1461 | |                 name: b"pane-active-border-bg\0" as *const u8 as *const libc::c_char,
1462 | |                 type_0: OPTIONS_TABLE_COLOUR,
1463 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1470 | |                 style: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1471 | |             };
     | |______________- unnecessary `let` binding
1472 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1460 ~             
1461 ~             options_table_entry {
1462 +                 name: b"pane-active-border-bg\0" as *const u8 as *const libc::c_char,
1463 +                 type_0: OPTIONS_TABLE_COLOUR,
1464 +                 scope: OPTIONS_TABLE_WINDOW,
1465 +                 minimum: 0,
1466 +                 maximum: 0,
1467 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1468 +                 default_str: 0 as *const libc::c_char,
1469 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1470 +                 separator: 0 as *const libc::c_char,
1471 +                 style: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1472 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1487:13
     |
1475 | /             let mut init = options_table_entry {
1476 | |                 name: b"pane-active-border-fg\0" as *const u8 as *const libc::c_char,
1477 | |                 type_0: OPTIONS_TABLE_COLOUR,
1478 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1485 | |                 style: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1486 | |             };
     | |______________- unnecessary `let` binding
1487 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1475 ~             
1476 ~             options_table_entry {
1477 +                 name: b"pane-active-border-fg\0" as *const u8 as *const libc::c_char,
1478 +                 type_0: OPTIONS_TABLE_COLOUR,
1479 +                 scope: OPTIONS_TABLE_WINDOW,
1480 +                 minimum: 0,
1481 +                 maximum: 0,
1482 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1483 +                 default_str: 0 as *const libc::c_char,
1484 +                 default_num: 2 as libc::c_int as libc::c_longlong,
1485 +                 separator: 0 as *const libc::c_char,
1486 +                 style: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1487 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1502:13
     |
1490 | /             let mut init = options_table_entry {
1491 | |                 name: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1492 | |                 type_0: OPTIONS_TABLE_STYLE,
1493 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1500 | |                 style: 0 as *const libc::c_char,
1501 | |             };
     | |______________- unnecessary `let` binding
1502 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1490 ~             
1491 ~             options_table_entry {
1492 +                 name: b"pane-active-border-style\0" as *const u8 as *const libc::c_char,
1493 +                 type_0: OPTIONS_TABLE_STYLE,
1494 +                 scope: OPTIONS_TABLE_WINDOW,
1495 +                 minimum: 0,
1496 +                 maximum: 0,
1497 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1498 +                 default_str: b"fg=green\0" as *const u8 as *const libc::c_char,
1499 +                 default_num: 0,
1500 +                 separator: 0 as *const libc::c_char,
1501 +                 style: 0 as *const libc::c_char,
1502 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1518:13
     |
1505 | /             let mut init = options_table_entry {
1506 | |                 name: b"pane-base-index\0" as *const u8 as *const libc::c_char,
1507 | |                 type_0: OPTIONS_TABLE_NUMBER,
1508 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1516 | |                 style: 0 as *const libc::c_char,
1517 | |             };
     | |______________- unnecessary `let` binding
1518 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1505 ~             
1506 ~             options_table_entry {
1507 +                 name: b"pane-base-index\0" as *const u8 as *const libc::c_char,
1508 +                 type_0: OPTIONS_TABLE_NUMBER,
1509 +                 scope: OPTIONS_TABLE_WINDOW,
1510 +                 minimum: 0 as libc::c_int as u_int,
1511 +                 maximum: (32767 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int)
1512 +                     as u_int,
1513 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1514 +                 default_str: 0 as *const libc::c_char,
1515 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1516 +                 separator: 0 as *const libc::c_char,
1517 +                 style: 0 as *const libc::c_char,
1518 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1533:13
     |
1521 | /             let mut init = options_table_entry {
1522 | |                 name: b"pane-border-bg\0" as *const u8 as *const libc::c_char,
1523 | |                 type_0: OPTIONS_TABLE_COLOUR,
1524 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1531 | |                 style: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1532 | |             };
     | |______________- unnecessary `let` binding
1533 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1521 ~             
1522 ~             options_table_entry {
1523 +                 name: b"pane-border-bg\0" as *const u8 as *const libc::c_char,
1524 +                 type_0: OPTIONS_TABLE_COLOUR,
1525 +                 scope: OPTIONS_TABLE_WINDOW,
1526 +                 minimum: 0,
1527 +                 maximum: 0,
1528 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1529 +                 default_str: 0 as *const libc::c_char,
1530 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1531 +                 separator: 0 as *const libc::c_char,
1532 +                 style: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1533 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1548:13
     |
1536 | /             let mut init = options_table_entry {
1537 | |                 name: b"pane-border-fg\0" as *const u8 as *const libc::c_char,
1538 | |                 type_0: OPTIONS_TABLE_COLOUR,
1539 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1546 | |                 style: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1547 | |             };
     | |______________- unnecessary `let` binding
1548 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1536 ~             
1537 ~             options_table_entry {
1538 +                 name: b"pane-border-fg\0" as *const u8 as *const libc::c_char,
1539 +                 type_0: OPTIONS_TABLE_COLOUR,
1540 +                 scope: OPTIONS_TABLE_WINDOW,
1541 +                 minimum: 0,
1542 +                 maximum: 0,
1543 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1544 +                 default_str: 0 as *const libc::c_char,
1545 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1546 +                 separator: 0 as *const libc::c_char,
1547 +                 style: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1548 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1564:13
     |
1551 | /             let mut init = options_table_entry {
1552 | |                 name: b"pane-border-format\0" as *const u8 as *const libc::c_char,
1553 | |                 type_0: OPTIONS_TABLE_STRING,
1554 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1562 | |                 style: 0 as *const libc::c_char,
1563 | |             };
     | |______________- unnecessary `let` binding
1564 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1551 ~             
1552 ~             options_table_entry {
1553 +                 name: b"pane-border-format\0" as *const u8 as *const libc::c_char,
1554 +                 type_0: OPTIONS_TABLE_STRING,
1555 +                 scope: OPTIONS_TABLE_WINDOW,
1556 +                 minimum: 0,
1557 +                 maximum: 0,
1558 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1559 +                 default_str: b"#{?pane_active,#[reverse],}#{pane_index}#[default] \"#{pane_title}\"\0"
1560 +                     as *const u8 as *const libc::c_char,
1561 +                 default_num: 0,
1562 +                 separator: 0 as *const libc::c_char,
1563 +                 style: 0 as *const libc::c_char,
1564 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1579:13
     |
1567 | /             let mut init = options_table_entry {
1568 | |                 name: b"pane-border-status\0" as *const u8 as *const libc::c_char,
1569 | |                 type_0: OPTIONS_TABLE_CHOICE,
1570 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1577 | |                 style: 0 as *const libc::c_char,
1578 | |             };
     | |______________- unnecessary `let` binding
1579 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1567 ~             
1568 ~             options_table_entry {
1569 +                 name: b"pane-border-status\0" as *const u8 as *const libc::c_char,
1570 +                 type_0: OPTIONS_TABLE_CHOICE,
1571 +                 scope: OPTIONS_TABLE_WINDOW,
1572 +                 minimum: 0,
1573 +                 maximum: 0,
1574 +                 choices: options_table_pane_status_list.as_ptr() as *mut _,
1575 +                 default_str: 0 as *const libc::c_char,
1576 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1577 +                 separator: 0 as *const libc::c_char,
1578 +                 style: 0 as *const libc::c_char,
1579 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1594:13
     |
1582 | /             let mut init = options_table_entry {
1583 | |                 name: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1584 | |                 type_0: OPTIONS_TABLE_STYLE,
1585 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1592 | |                 style: 0 as *const libc::c_char,
1593 | |             };
     | |______________- unnecessary `let` binding
1594 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1582 ~             
1583 ~             options_table_entry {
1584 +                 name: b"pane-border-style\0" as *const u8 as *const libc::c_char,
1585 +                 type_0: OPTIONS_TABLE_STYLE,
1586 +                 scope: OPTIONS_TABLE_WINDOW,
1587 +                 minimum: 0,
1588 +                 maximum: 0,
1589 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1590 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1591 +                 default_num: 0,
1592 +                 separator: 0 as *const libc::c_char,
1593 +                 style: 0 as *const libc::c_char,
1594 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1609:13
     |
1597 | /             let mut init = options_table_entry {
1598 | |                 name: b"remain-on-exit\0" as *const u8 as *const libc::c_char,
1599 | |                 type_0: OPTIONS_TABLE_FLAG,
1600 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1607 | |                 style: 0 as *const libc::c_char,
1608 | |             };
     | |______________- unnecessary `let` binding
1609 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1597 ~             
1598 ~             options_table_entry {
1599 +                 name: b"remain-on-exit\0" as *const u8 as *const libc::c_char,
1600 +                 type_0: OPTIONS_TABLE_FLAG,
1601 +                 scope: OPTIONS_TABLE_WINDOW,
1602 +                 minimum: 0,
1603 +                 maximum: 0,
1604 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1605 +                 default_str: 0 as *const libc::c_char,
1606 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1607 +                 separator: 0 as *const libc::c_char,
1608 +                 style: 0 as *const libc::c_char,
1609 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1624:13
     |
1612 | /             let mut init = options_table_entry {
1613 | |                 name: b"synchronize-panes\0" as *const u8 as *const libc::c_char,
1614 | |                 type_0: OPTIONS_TABLE_FLAG,
1615 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1622 | |                 style: 0 as *const libc::c_char,
1623 | |             };
     | |______________- unnecessary `let` binding
1624 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1612 ~             
1613 ~             options_table_entry {
1614 +                 name: b"synchronize-panes\0" as *const u8 as *const libc::c_char,
1615 +                 type_0: OPTIONS_TABLE_FLAG,
1616 +                 scope: OPTIONS_TABLE_WINDOW,
1617 +                 minimum: 0,
1618 +                 maximum: 0,
1619 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1620 +                 default_str: 0 as *const libc::c_char,
1621 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1622 +                 separator: 0 as *const libc::c_char,
1623 +                 style: 0 as *const libc::c_char,
1624 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1639:13
     |
1627 | /             let mut init = options_table_entry {
1628 | |                 name: b"window-active-style\0" as *const u8 as *const libc::c_char,
1629 | |                 type_0: OPTIONS_TABLE_STYLE,
1630 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1637 | |                 style: 0 as *const libc::c_char,
1638 | |             };
     | |______________- unnecessary `let` binding
1639 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1627 ~             
1628 ~             options_table_entry {
1629 +                 name: b"window-active-style\0" as *const u8 as *const libc::c_char,
1630 +                 type_0: OPTIONS_TABLE_STYLE,
1631 +                 scope: OPTIONS_TABLE_WINDOW,
1632 +                 minimum: 0,
1633 +                 maximum: 0,
1634 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1635 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1636 +                 default_num: 0,
1637 +                 separator: 0 as *const libc::c_char,
1638 +                 style: 0 as *const libc::c_char,
1639 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1654:13
     |
1642 | /             let mut init = options_table_entry {
1643 | |                 name: b"window-style\0" as *const u8 as *const libc::c_char,
1644 | |                 type_0: OPTIONS_TABLE_STYLE,
1645 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1652 | |                 style: 0 as *const libc::c_char,
1653 | |             };
     | |______________- unnecessary `let` binding
1654 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1642 ~             
1643 ~             options_table_entry {
1644 +                 name: b"window-style\0" as *const u8 as *const libc::c_char,
1645 +                 type_0: OPTIONS_TABLE_STYLE,
1646 +                 scope: OPTIONS_TABLE_WINDOW,
1647 +                 minimum: 0,
1648 +                 maximum: 0,
1649 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1650 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1651 +                 default_num: 0,
1652 +                 separator: 0 as *const libc::c_char,
1653 +                 style: 0 as *const libc::c_char,
1654 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1671:13
     |
1657 | /             let mut init = options_table_entry {
1658 | |                 name: b"window-status-activity-attr\0" as *const u8
1659 | |                     as *const libc::c_char,
1660 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
...    |
1669 | |                     as *const libc::c_char,
1670 | |             };
     | |______________- unnecessary `let` binding
1671 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1657 ~             
1658 ~             options_table_entry {
1659 +                 name: b"window-status-activity-attr\0" as *const u8
1660 +                     as *const libc::c_char,
1661 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1662 +                 scope: OPTIONS_TABLE_WINDOW,
1663 +                 minimum: 0,
1664 +                 maximum: 0,
1665 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1666 +                 default_str: 0 as *const libc::c_char,
1667 +                 default_num: 0x10 as libc::c_int as libc::c_longlong,
1668 +                 separator: 0 as *const libc::c_char,
1669 +                 style: b"window-status-activity-style\0" as *const u8
1670 +                     as *const libc::c_char,
1671 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1687:13
     |
1674 | /             let mut init = options_table_entry {
1675 | |                 name: b"window-status-activity-bg\0" as *const u8 as *const libc::c_char,
1676 | |                 type_0: OPTIONS_TABLE_COLOUR,
1677 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1685 | |                     as *const libc::c_char,
1686 | |             };
     | |______________- unnecessary `let` binding
1687 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1674 ~             
1675 ~             options_table_entry {
1676 +                 name: b"window-status-activity-bg\0" as *const u8 as *const libc::c_char,
1677 +                 type_0: OPTIONS_TABLE_COLOUR,
1678 +                 scope: OPTIONS_TABLE_WINDOW,
1679 +                 minimum: 0,
1680 +                 maximum: 0,
1681 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1682 +                 default_str: 0 as *const libc::c_char,
1683 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1684 +                 separator: 0 as *const libc::c_char,
1685 +                 style: b"window-status-activity-style\0" as *const u8
1686 +                     as *const libc::c_char,
1687 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1703:13
     |
1690 | /             let mut init = options_table_entry {
1691 | |                 name: b"window-status-activity-fg\0" as *const u8 as *const libc::c_char,
1692 | |                 type_0: OPTIONS_TABLE_COLOUR,
1693 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1701 | |                     as *const libc::c_char,
1702 | |             };
     | |______________- unnecessary `let` binding
1703 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1690 ~             
1691 ~             options_table_entry {
1692 +                 name: b"window-status-activity-fg\0" as *const u8 as *const libc::c_char,
1693 +                 type_0: OPTIONS_TABLE_COLOUR,
1694 +                 scope: OPTIONS_TABLE_WINDOW,
1695 +                 minimum: 0,
1696 +                 maximum: 0,
1697 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1698 +                 default_str: 0 as *const libc::c_char,
1699 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1700 +                 separator: 0 as *const libc::c_char,
1701 +                 style: b"window-status-activity-style\0" as *const u8
1702 +                     as *const libc::c_char,
1703 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1719:13
     |
1706 | /             let mut init = options_table_entry {
1707 | |                 name: b"window-status-activity-style\0" as *const u8
1708 | |                     as *const libc::c_char,
1709 | |                 type_0: OPTIONS_TABLE_STYLE,
...    |
1717 | |                 style: 0 as *const libc::c_char,
1718 | |             };
     | |______________- unnecessary `let` binding
1719 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1706 ~             
1707 ~             options_table_entry {
1708 +                 name: b"window-status-activity-style\0" as *const u8
1709 +                     as *const libc::c_char,
1710 +                 type_0: OPTIONS_TABLE_STYLE,
1711 +                 scope: OPTIONS_TABLE_WINDOW,
1712 +                 minimum: 0,
1713 +                 maximum: 0,
1714 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1715 +                 default_str: b"reverse\0" as *const u8 as *const libc::c_char,
1716 +                 default_num: 0,
1717 +                 separator: 0 as *const libc::c_char,
1718 +                 style: 0 as *const libc::c_char,
1719 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1734:13
     |
1722 | /             let mut init = options_table_entry {
1723 | |                 name: b"window-status-attr\0" as *const u8 as *const libc::c_char,
1724 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1725 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1732 | |                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1733 | |             };
     | |______________- unnecessary `let` binding
1734 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1722 ~             
1723 ~             options_table_entry {
1724 +                 name: b"window-status-attr\0" as *const u8 as *const libc::c_char,
1725 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1726 +                 scope: OPTIONS_TABLE_WINDOW,
1727 +                 minimum: 0,
1728 +                 maximum: 0,
1729 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1730 +                 default_str: 0 as *const libc::c_char,
1731 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1732 +                 separator: 0 as *const libc::c_char,
1733 +                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1734 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1749:13
     |
1737 | /             let mut init = options_table_entry {
1738 | |                 name: b"window-status-bell-attr\0" as *const u8 as *const libc::c_char,
1739 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1740 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1747 | |                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1748 | |             };
     | |______________- unnecessary `let` binding
1749 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1737 ~             
1738 ~             options_table_entry {
1739 +                 name: b"window-status-bell-attr\0" as *const u8 as *const libc::c_char,
1740 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1741 +                 scope: OPTIONS_TABLE_WINDOW,
1742 +                 minimum: 0,
1743 +                 maximum: 0,
1744 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1745 +                 default_str: 0 as *const libc::c_char,
1746 +                 default_num: 0x10 as libc::c_int as libc::c_longlong,
1747 +                 separator: 0 as *const libc::c_char,
1748 +                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1749 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1764:13
     |
1752 | /             let mut init = options_table_entry {
1753 | |                 name: b"window-status-bell-bg\0" as *const u8 as *const libc::c_char,
1754 | |                 type_0: OPTIONS_TABLE_COLOUR,
1755 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1762 | |                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1763 | |             };
     | |______________- unnecessary `let` binding
1764 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1752 ~             
1753 ~             options_table_entry {
1754 +                 name: b"window-status-bell-bg\0" as *const u8 as *const libc::c_char,
1755 +                 type_0: OPTIONS_TABLE_COLOUR,
1756 +                 scope: OPTIONS_TABLE_WINDOW,
1757 +                 minimum: 0,
1758 +                 maximum: 0,
1759 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1760 +                 default_str: 0 as *const libc::c_char,
1761 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1762 +                 separator: 0 as *const libc::c_char,
1763 +                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1764 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1779:13
     |
1767 | /             let mut init = options_table_entry {
1768 | |                 name: b"window-status-bell-fg\0" as *const u8 as *const libc::c_char,
1769 | |                 type_0: OPTIONS_TABLE_COLOUR,
1770 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1777 | |                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1778 | |             };
     | |______________- unnecessary `let` binding
1779 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1767 ~             
1768 ~             options_table_entry {
1769 +                 name: b"window-status-bell-fg\0" as *const u8 as *const libc::c_char,
1770 +                 type_0: OPTIONS_TABLE_COLOUR,
1771 +                 scope: OPTIONS_TABLE_WINDOW,
1772 +                 minimum: 0,
1773 +                 maximum: 0,
1774 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1775 +                 default_str: 0 as *const libc::c_char,
1776 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1777 +                 separator: 0 as *const libc::c_char,
1778 +                 style: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1779 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1794:13
     |
1782 | /             let mut init = options_table_entry {
1783 | |                 name: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1784 | |                 type_0: OPTIONS_TABLE_STYLE,
1785 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1792 | |                 style: 0 as *const libc::c_char,
1793 | |             };
     | |______________- unnecessary `let` binding
1794 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1782 ~             
1783 ~             options_table_entry {
1784 +                 name: b"window-status-bell-style\0" as *const u8 as *const libc::c_char,
1785 +                 type_0: OPTIONS_TABLE_STYLE,
1786 +                 scope: OPTIONS_TABLE_WINDOW,
1787 +                 minimum: 0,
1788 +                 maximum: 0,
1789 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1790 +                 default_str: b"reverse\0" as *const u8 as *const libc::c_char,
1791 +                 default_num: 0,
1792 +                 separator: 0 as *const libc::c_char,
1793 +                 style: 0 as *const libc::c_char,
1794 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1809:13
     |
1797 | /             let mut init = options_table_entry {
1798 | |                 name: b"window-status-bg\0" as *const u8 as *const libc::c_char,
1799 | |                 type_0: OPTIONS_TABLE_COLOUR,
1800 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1807 | |                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1808 | |             };
     | |______________- unnecessary `let` binding
1809 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1797 ~             
1798 ~             options_table_entry {
1799 +                 name: b"window-status-bg\0" as *const u8 as *const libc::c_char,
1800 +                 type_0: OPTIONS_TABLE_COLOUR,
1801 +                 scope: OPTIONS_TABLE_WINDOW,
1802 +                 minimum: 0,
1803 +                 maximum: 0,
1804 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1805 +                 default_str: 0 as *const libc::c_char,
1806 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1807 +                 separator: 0 as *const libc::c_char,
1808 +                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1809 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1826:13
     |
1812 | /             let mut init = options_table_entry {
1813 | |                 name: b"window-status-current-attr\0" as *const u8
1814 | |                     as *const libc::c_char,
1815 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
...    |
1824 | |                     as *const libc::c_char,
1825 | |             };
     | |______________- unnecessary `let` binding
1826 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1812 ~             
1813 ~             options_table_entry {
1814 +                 name: b"window-status-current-attr\0" as *const u8
1815 +                     as *const libc::c_char,
1816 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1817 +                 scope: OPTIONS_TABLE_WINDOW,
1818 +                 minimum: 0,
1819 +                 maximum: 0,
1820 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1821 +                 default_str: 0 as *const libc::c_char,
1822 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1823 +                 separator: 0 as *const libc::c_char,
1824 +                 style: b"window-status-current-style\0" as *const u8
1825 +                     as *const libc::c_char,
1826 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1842:13
     |
1829 | /             let mut init = options_table_entry {
1830 | |                 name: b"window-status-current-bg\0" as *const u8 as *const libc::c_char,
1831 | |                 type_0: OPTIONS_TABLE_COLOUR,
1832 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1840 | |                     as *const libc::c_char,
1841 | |             };
     | |______________- unnecessary `let` binding
1842 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1829 ~             
1830 ~             options_table_entry {
1831 +                 name: b"window-status-current-bg\0" as *const u8 as *const libc::c_char,
1832 +                 type_0: OPTIONS_TABLE_COLOUR,
1833 +                 scope: OPTIONS_TABLE_WINDOW,
1834 +                 minimum: 0,
1835 +                 maximum: 0,
1836 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1837 +                 default_str: 0 as *const libc::c_char,
1838 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1839 +                 separator: 0 as *const libc::c_char,
1840 +                 style: b"window-status-current-style\0" as *const u8
1841 +                     as *const libc::c_char,
1842 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1858:13
     |
1845 | /             let mut init = options_table_entry {
1846 | |                 name: b"window-status-current-fg\0" as *const u8 as *const libc::c_char,
1847 | |                 type_0: OPTIONS_TABLE_COLOUR,
1848 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1856 | |                     as *const libc::c_char,
1857 | |             };
     | |______________- unnecessary `let` binding
1858 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1845 ~             
1846 ~             options_table_entry {
1847 +                 name: b"window-status-current-fg\0" as *const u8 as *const libc::c_char,
1848 +                 type_0: OPTIONS_TABLE_COLOUR,
1849 +                 scope: OPTIONS_TABLE_WINDOW,
1850 +                 minimum: 0,
1851 +                 maximum: 0,
1852 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1853 +                 default_str: 0 as *const libc::c_char,
1854 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1855 +                 separator: 0 as *const libc::c_char,
1856 +                 style: b"window-status-current-style\0" as *const u8
1857 +                     as *const libc::c_char,
1858 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1875:13
     |
1861 | /             let mut init = options_table_entry {
1862 | |                 name: b"window-status-current-format\0" as *const u8
1863 | |                     as *const libc::c_char,
1864 | |                 type_0: OPTIONS_TABLE_STRING,
...    |
1873 | |                 style: 0 as *const libc::c_char,
1874 | |             };
     | |______________- unnecessary `let` binding
1875 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1861 ~             
1862 ~             options_table_entry {
1863 +                 name: b"window-status-current-format\0" as *const u8
1864 +                     as *const libc::c_char,
1865 +                 type_0: OPTIONS_TABLE_STRING,
1866 +                 scope: OPTIONS_TABLE_WINDOW,
1867 +                 minimum: 0,
1868 +                 maximum: 0,
1869 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1870 +                 default_str: b"#I:#W#{?window_flags,#{window_flags}, }\0" as *const u8
1871 +                     as *const libc::c_char,
1872 +                 default_num: 0,
1873 +                 separator: 0 as *const libc::c_char,
1874 +                 style: 0 as *const libc::c_char,
1875 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1891:13
     |
1878 | /             let mut init = options_table_entry {
1879 | |                 name: b"window-status-current-style\0" as *const u8
1880 | |                     as *const libc::c_char,
1881 | |                 type_0: OPTIONS_TABLE_STYLE,
...    |
1889 | |                 style: 0 as *const libc::c_char,
1890 | |             };
     | |______________- unnecessary `let` binding
1891 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1878 ~             
1879 ~             options_table_entry {
1880 +                 name: b"window-status-current-style\0" as *const u8
1881 +                     as *const libc::c_char,
1882 +                 type_0: OPTIONS_TABLE_STYLE,
1883 +                 scope: OPTIONS_TABLE_WINDOW,
1884 +                 minimum: 0,
1885 +                 maximum: 0,
1886 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1887 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1888 +                 default_num: 0,
1889 +                 separator: 0 as *const libc::c_char,
1890 +                 style: 0 as *const libc::c_char,
1891 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1906:13
     |
1894 | /             let mut init = options_table_entry {
1895 | |                 name: b"window-status-fg\0" as *const u8 as *const libc::c_char,
1896 | |                 type_0: OPTIONS_TABLE_COLOUR,
1897 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1904 | |                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1905 | |             };
     | |______________- unnecessary `let` binding
1906 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1894 ~             
1895 ~             options_table_entry {
1896 +                 name: b"window-status-fg\0" as *const u8 as *const libc::c_char,
1897 +                 type_0: OPTIONS_TABLE_COLOUR,
1898 +                 scope: OPTIONS_TABLE_WINDOW,
1899 +                 minimum: 0,
1900 +                 maximum: 0,
1901 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1902 +                 default_str: 0 as *const libc::c_char,
1903 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1904 +                 separator: 0 as *const libc::c_char,
1905 +                 style: b"window-status-style\0" as *const u8 as *const libc::c_char,
1906 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1922:13
     |
1909 | /             let mut init = options_table_entry {
1910 | |                 name: b"window-status-format\0" as *const u8 as *const libc::c_char,
1911 | |                 type_0: OPTIONS_TABLE_STRING,
1912 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1920 | |                 style: 0 as *const libc::c_char,
1921 | |             };
     | |______________- unnecessary `let` binding
1922 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1909 ~             
1910 ~             options_table_entry {
1911 +                 name: b"window-status-format\0" as *const u8 as *const libc::c_char,
1912 +                 type_0: OPTIONS_TABLE_STRING,
1913 +                 scope: OPTIONS_TABLE_WINDOW,
1914 +                 minimum: 0,
1915 +                 maximum: 0,
1916 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1917 +                 default_str: b"#I:#W#{?window_flags,#{window_flags}, }\0" as *const u8
1918 +                     as *const libc::c_char,
1919 +                 default_num: 0,
1920 +                 separator: 0 as *const libc::c_char,
1921 +                 style: 0 as *const libc::c_char,
1922 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1937:13
     |
1925 | /             let mut init = options_table_entry {
1926 | |                 name: b"window-status-last-attr\0" as *const u8 as *const libc::c_char,
1927 | |                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1928 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1935 | |                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1936 | |             };
     | |______________- unnecessary `let` binding
1937 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1925 ~             
1926 ~             options_table_entry {
1927 +                 name: b"window-status-last-attr\0" as *const u8 as *const libc::c_char,
1928 +                 type_0: OPTIONS_TABLE_ATTRIBUTES,
1929 +                 scope: OPTIONS_TABLE_WINDOW,
1930 +                 minimum: 0,
1931 +                 maximum: 0,
1932 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1933 +                 default_str: 0 as *const libc::c_char,
1934 +                 default_num: 0 as libc::c_int as libc::c_longlong,
1935 +                 separator: 0 as *const libc::c_char,
1936 +                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1937 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1952:13
     |
1940 | /             let mut init = options_table_entry {
1941 | |                 name: b"window-status-last-bg\0" as *const u8 as *const libc::c_char,
1942 | |                 type_0: OPTIONS_TABLE_COLOUR,
1943 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1950 | |                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1951 | |             };
     | |______________- unnecessary `let` binding
1952 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1940 ~             
1941 ~             options_table_entry {
1942 +                 name: b"window-status-last-bg\0" as *const u8 as *const libc::c_char,
1943 +                 type_0: OPTIONS_TABLE_COLOUR,
1944 +                 scope: OPTIONS_TABLE_WINDOW,
1945 +                 minimum: 0,
1946 +                 maximum: 0,
1947 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1948 +                 default_str: 0 as *const libc::c_char,
1949 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1950 +                 separator: 0 as *const libc::c_char,
1951 +                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1952 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1967:13
     |
1955 | /             let mut init = options_table_entry {
1956 | |                 name: b"window-status-last-fg\0" as *const u8 as *const libc::c_char,
1957 | |                 type_0: OPTIONS_TABLE_COLOUR,
1958 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1965 | |                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1966 | |             };
     | |______________- unnecessary `let` binding
1967 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1955 ~             
1956 ~             options_table_entry {
1957 +                 name: b"window-status-last-fg\0" as *const u8 as *const libc::c_char,
1958 +                 type_0: OPTIONS_TABLE_COLOUR,
1959 +                 scope: OPTIONS_TABLE_WINDOW,
1960 +                 minimum: 0,
1961 +                 maximum: 0,
1962 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1963 +                 default_str: 0 as *const libc::c_char,
1964 +                 default_num: 8 as libc::c_int as libc::c_longlong,
1965 +                 separator: 0 as *const libc::c_char,
1966 +                 style: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1967 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1982:13
     |
1970 | /             let mut init = options_table_entry {
1971 | |                 name: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1972 | |                 type_0: OPTIONS_TABLE_STYLE,
1973 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1980 | |                 style: 0 as *const libc::c_char,
1981 | |             };
     | |______________- unnecessary `let` binding
1982 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1970 ~             
1971 ~             options_table_entry {
1972 +                 name: b"window-status-last-style\0" as *const u8 as *const libc::c_char,
1973 +                 type_0: OPTIONS_TABLE_STYLE,
1974 +                 scope: OPTIONS_TABLE_WINDOW,
1975 +                 minimum: 0,
1976 +                 maximum: 0,
1977 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1978 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
1979 +                 default_num: 0,
1980 +                 separator: 0 as *const libc::c_char,
1981 +                 style: 0 as *const libc::c_char,
1982 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:1997:13
     |
1985 | /             let mut init = options_table_entry {
1986 | |                 name: b"window-status-separator\0" as *const u8 as *const libc::c_char,
1987 | |                 type_0: OPTIONS_TABLE_STRING,
1988 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
1995 | |                 style: 0 as *const libc::c_char,
1996 | |             };
     | |______________- unnecessary `let` binding
1997 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1985 ~             
1986 ~             options_table_entry {
1987 +                 name: b"window-status-separator\0" as *const u8 as *const libc::c_char,
1988 +                 type_0: OPTIONS_TABLE_STRING,
1989 +                 scope: OPTIONS_TABLE_WINDOW,
1990 +                 minimum: 0,
1991 +                 maximum: 0,
1992 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
1993 +                 default_str: b" \0" as *const u8 as *const libc::c_char,
1994 +                 default_num: 0,
1995 +                 separator: 0 as *const libc::c_char,
1996 +                 style: 0 as *const libc::c_char,
1997 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:2012:13
     |
2000 | /             let mut init = options_table_entry {
2001 | |                 name: b"window-status-style\0" as *const u8 as *const libc::c_char,
2002 | |                 type_0: OPTIONS_TABLE_STYLE,
2003 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
2010 | |                 style: 0 as *const libc::c_char,
2011 | |             };
     | |______________- unnecessary `let` binding
2012 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2000 ~             
2001 ~             options_table_entry {
2002 +                 name: b"window-status-style\0" as *const u8 as *const libc::c_char,
2003 +                 type_0: OPTIONS_TABLE_STYLE,
2004 +                 scope: OPTIONS_TABLE_WINDOW,
2005 +                 minimum: 0,
2006 +                 maximum: 0,
2007 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
2008 +                 default_str: b"default\0" as *const u8 as *const libc::c_char,
2009 +                 default_num: 0,
2010 +                 separator: 0 as *const libc::c_char,
2011 +                 style: 0 as *const libc::c_char,
2012 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:2027:13
     |
2015 | /             let mut init = options_table_entry {
2016 | |                 name: b"wrap-search\0" as *const u8 as *const libc::c_char,
2017 | |                 type_0: OPTIONS_TABLE_FLAG,
2018 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
2025 | |                 style: 0 as *const libc::c_char,
2026 | |             };
     | |______________- unnecessary `let` binding
2027 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2015 ~             
2016 ~             options_table_entry {
2017 +                 name: b"wrap-search\0" as *const u8 as *const libc::c_char,
2018 +                 type_0: OPTIONS_TABLE_FLAG,
2019 +                 scope: OPTIONS_TABLE_WINDOW,
2020 +                 minimum: 0,
2021 +                 maximum: 0,
2022 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
2023 +                 default_str: 0 as *const libc::c_char,
2024 +                 default_num: 1 as libc::c_int as libc::c_longlong,
2025 +                 separator: 0 as *const libc::c_char,
2026 +                 style: 0 as *const libc::c_char,
2027 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:2042:13
     |
2030 | /             let mut init = options_table_entry {
2031 | |                 name: b"xterm-keys\0" as *const u8 as *const libc::c_char,
2032 | |                 type_0: OPTIONS_TABLE_FLAG,
2033 | |                 scope: OPTIONS_TABLE_WINDOW,
...    |
2040 | |                 style: 0 as *const libc::c_char,
2041 | |             };
     | |______________- unnecessary `let` binding
2042 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2030 ~             
2031 ~             options_table_entry {
2032 +                 name: b"xterm-keys\0" as *const u8 as *const libc::c_char,
2033 +                 type_0: OPTIONS_TABLE_FLAG,
2034 +                 scope: OPTIONS_TABLE_WINDOW,
2035 +                 minimum: 0,
2036 +                 maximum: 0,
2037 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
2038 +                 default_str: 0 as *const libc::c_char,
2039 +                 default_num: 1 as libc::c_int as libc::c_longlong,
2040 +                 separator: 0 as *const libc::c_char,
2041 +                 style: 0 as *const libc::c_char,
2042 +             }
     |

warning: returning the result of a `let` binding from a block
    --> src/options_table.rs:2057:13
     |
2045 | /             let mut init = options_table_entry {
2046 | |                 name: 0 as *const libc::c_char,
2047 | |                 type_0: OPTIONS_TABLE_STRING,
2048 | |                 scope: OPTIONS_TABLE_NONE,
...    |
2055 | |                 style: 0 as *const libc::c_char,
2056 | |             };
     | |______________- unnecessary `let` binding
2057 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2045 ~             
2046 ~             options_table_entry {
2047 +                 name: 0 as *const libc::c_char,
2048 +                 type_0: OPTIONS_TABLE_STRING,
2049 +                 scope: OPTIONS_TABLE_NONE,
2050 +                 minimum: 0,
2051 +                 maximum: 0,
2052 +                 choices: 0 as *const *const libc::c_char as *mut *const libc::c_char,
2053 +                 default_str: 0 as *const libc::c_char,
2054 +                 default_num: 0,
2055 +                 separator: 0 as *const libc::c_char,
2056 +                 style: 0 as *const libc::c_char,
2057 +             }
     |

warning: unsafe function's docs miss `# Safety` section
   --> src/osdep_linux.rs:75:1
    |
75  | / pub unsafe extern "C" fn osdep_get_name(
76  | |     mut fd: libc::c_int,
77  | |     mut tty: *mut libc::c_char,
78  | | ) -> *mut libc::c_char {
...   |
122 | |     return buf;
123 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/osdep_linux.rs:104:12
    |
104 |         if !(ch != -(1 as libc::c_int)) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ch == -(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/osdep_linux.rs:122:5
    |
122 |     return buf;
    |     ^^^^^^^^^^^ help: remove `return`: `buf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/osdep_linux.rs:79:28
   |
79 |     let mut f: *mut FILE = 0 as *mut FILE;
   |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/osdep_linux.rs:80:39
   |
80 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/osdep_linux.rs:81:38
   |
81 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/osdep_linux.rs:87:16
   |
87 |         return 0 as *mut libc::c_char;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
  --> src/osdep_linux.rs:97:16
   |
97 |         return 0 as *mut libc::c_char;
   |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/osdep_linux.rs:101:11
    |
101 |     buf = 0 as *mut libc::c_char;
    |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/osdep_linux.rs:125:1
    |
125 | / pub unsafe extern "C" fn osdep_get_cwd(mut fd: libc::c_int) -> *mut libc::c_char {
126 | |     static mut target: [libc::c_char; 4097] = [0; 4097];
127 | |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
128 | |     let mut pgrp: pid_t = 0;
...   |
158 | |     return 0 as *mut libc::c_char;
159 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/osdep_linux.rs:158:5
    |
158 |     return 0 as *mut libc::c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/osdep_linux.rs:127:39
    |
127 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/osdep_linux.rs:133:16
    |
133 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/osdep_linux.rs:158:12
    |
158 |     return 0 as *mut libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/osdep_linux.rs:161:1
    |
161 | / pub unsafe extern "C" fn osdep_event_init() -> *mut event_base {
162 | |     let mut base: *mut event_base = 0 as *mut event_base;
163 | |     setenv(
164 | |         b"EVENT_NOEPOLL\0" as *const u8 as *const libc::c_char,
...   |
170 | |     return base;
171 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/osdep_linux.rs:170:5
    |
170 |     return base;
    |     ^^^^^^^^^^^^ help: remove `return`: `base`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/osdep_linux.rs:162:37
    |
162 |     let mut base: *mut event_base = 0 as *mut event_base;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
  --> src/paste.rs:97:5
   |
97 |     return 0 as *mut paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut paste_buffer`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
  --> src/paste.rs:89:9
   |
89 | /         if comp < 0 as libc::c_int {
90 | |             tmp = (*tmp).name_entry.rbe_left;
91 | |         } else if comp > 0 as libc::c_int {
92 | |             tmp = (*tmp).name_entry.rbe_right;
93 | |         } else {
94 | |             return tmp
95 | |         }
   | |_________^
   |
   = help: consider rewriting the `if` chain to use `cmp` and `match`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
  --> src/paste.rs:97:12
   |
97 |     return 0 as *mut paste_buffer;
   |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:104:38
    |
104 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:130:17
    |
130 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/paste.rs:148:56
    |
148 |                     let mut oleft: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:171:21
    |
171 |                     !((*oleft).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:198:17
    |
198 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:224:17
    |
224 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/paste.rs:242:57
    |
242 |                     let mut oright: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:267:21
    |
267 |                     !((*oright).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:294:17
    |
294 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
   --> src/paste.rs:337:5
    |
337 |     return 0 as *mut paste_buffer;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut paste_buffer`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/paste.rs:308:38
    |
308 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:309:41
    |
309 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
   --> src/paste.rs:315:9
    |
315 | /         if comp < 0 as libc::c_int {
316 | |             tmp = (*tmp).name_entry.rbe_left;
317 | |         } else if comp > 0 as libc::c_int {
318 | |             tmp = (*tmp).name_entry.rbe_right;
319 | |         } else {
320 | |             return tmp
321 | |         }
    | |_________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
   --> src/paste.rs:324:35
    |
324 |     (*elm).name_entry.rbe_right = 0 as *mut paste_buffer;
    |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:337:12
    |
337 |     return 0 as *mut paste_buffer;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/paste.rs:429:5
    |
429 |     return old;
    |     ^^^^^^^^^^^ help: remove `return`: `old`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/paste.rs:344:40
    |
344 |     let mut child: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:345:41
    |
345 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:355:43
    |
355 |         let mut left: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/paste.rs:407:5
    |
407 | /     match current_block {
408 | |         7245201122033322888 => {
409 | |             parent = (*elm).name_entry.rbe_parent;
410 | |             color = (*elm).name_entry.rbe_color;
...   |
424 | |         _ => {}
425 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
407 ~     if current_block == 7245201122033322888 {
408 +         parent = (*elm).name_entry.rbe_parent;
409 +         color = (*elm).name_entry.rbe_color;
410 +         if !child.is_null() {
411 +             (*child).name_entry.rbe_parent = parent;
412 +         }
413 +         if !parent.is_null() {
414 +             if (*parent).name_entry.rbe_left == elm {
415 +                 (*parent).name_entry.rbe_left = child;
416 +             } else {
417 +                 (*parent).name_entry.rbe_right = child;
418 +             }
419 +         } else {
420 +             (*head).rbh_root = child;
421 +         }
422 +     }
    |

warning: this boolean expression can be simplified
   --> src/paste.rs:440:12
    |
440 |         if !(!parent.is_null() && (*parent).name_entry.rbe_color == 1 as libc::c_int) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).name_entry.rbe_color != 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/paste.rs:435:41
    |
435 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:436:42
    |
436 |     let mut gparent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:437:38
    |
437 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:474:21
    |
474 |                     !((*tmp).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:499:17
    |
499 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:531:21
    |
531 |                     !((*tmp).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:556:17
    |
556 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).name_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
   --> src/paste.rs:582:5
    |
582 |     return elm;
    |     ^^^^^^^^^^^ help: remove `return`: `elm`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/paste.rs:604:5
    |
604 |     return elm;
    |     ^^^^^^^^^^^ help: remove `return`: `elm`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/paste.rs:620:5
    |
620 |     return parent;
    |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/paste.rs:611:41
    |
611 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
   --> src/paste.rs:631:12
    |
631 |         if !(!parent.is_null() && (*parent).time_entry.rbe_color == 1 as libc::c_int) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).time_entry.rbe_color != 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/paste.rs:626:41
    |
626 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:627:42
    |
627 |     let mut gparent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:628:38
    |
628 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:665:21
    |
665 |                     !((*tmp).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:690:17
    |
690 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:722:21
    |
722 |                     !((*tmp).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:747:17
    |
747 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
   --> src/paste.rs:786:5
    |
786 |     return 0 as *mut paste_buffer;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut paste_buffer`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/paste.rs:757:38
    |
757 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:758:41
    |
758 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
   --> src/paste.rs:764:9
    |
764 | /         if comp < 0 as libc::c_int {
765 | |             tmp = (*tmp).time_entry.rbe_left;
766 | |         } else if comp > 0 as libc::c_int {
767 | |             tmp = (*tmp).time_entry.rbe_right;
768 | |         } else {
769 | |             return tmp
770 | |         }
    | |_________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
   --> src/paste.rs:773:35
    |
773 |     (*elm).time_entry.rbe_right = 0 as *mut paste_buffer;
    |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:786:12
    |
786 |     return 0 as *mut paste_buffer;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/paste.rs:878:5
    |
878 |     return old;
    |     ^^^^^^^^^^^ help: remove `return`: `old`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/paste.rs:793:40
    |
793 |     let mut child: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:794:41
    |
794 |     let mut parent: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/paste.rs:804:43
    |
804 |         let mut left: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/paste.rs:856:5
    |
856 | /     match current_block {
857 | |         7245201122033322888 => {
858 | |             parent = (*elm).time_entry.rbe_parent;
859 | |             color = (*elm).time_entry.rbe_color;
...   |
873 | |         _ => {}
874 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
856 ~     if current_block == 7245201122033322888 {
857 +         parent = (*elm).time_entry.rbe_parent;
858 +         color = (*elm).time_entry.rbe_color;
859 +         if !child.is_null() {
860 +             (*child).time_entry.rbe_parent = parent;
861 +         }
862 +         if !parent.is_null() {
863 +             if (*parent).time_entry.rbe_left == elm {
864 +                 (*parent).time_entry.rbe_left = child;
865 +             } else {
866 +                 (*parent).time_entry.rbe_right = child;
867 +             }
868 +         } else {
869 +             (*head).rbh_root = child;
870 +         }
871 +     }
    |

warning: `0 as *mut _` detected
   --> src/paste.rs:885:38
    |
885 |     let mut tmp: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:911:17
    |
911 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
   --> src/paste.rs:929:56
    |
929 |                     let mut oleft: *mut paste_buffer = 0 as *mut paste_buffer;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
   --> src/paste.rs:952:21
    |
952 |                     !((*oleft).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
   --> src/paste.rs:979:17
    |
979 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/paste.rs:1005:17
     |
1005 |                 !((*tmp).time_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/paste.rs:1023:57
     |
1023 |                     let mut oright: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/paste.rs:1048:21
     |
1048 |                     !((*oright).time_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).time_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/paste.rs:1075:17
     |
1075 |                 !((*tmp).time_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).time_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unneeded `return` statement
    --> src/paste.rs:1089:5
     |
1089 |     return strcmp((*a).name, (*b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*a).name, (*b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/paste.rs:1101:5
     |
1101 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1104:1
     |
1104 | / pub unsafe extern "C" fn paste_buffer_name(
1105 | |     mut pb: *mut paste_buffer,
1106 | | ) -> *const libc::c_char {
1107 | |     return (*pb).name;
1108 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1107:5
     |
1107 |     return (*pb).name;
     |     ^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*pb).name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1110:1
     |
1110 | / pub unsafe extern "C" fn paste_buffer_order(mut pb: *mut paste_buffer) -> u_int {
1111 | |     return (*pb).order;
1112 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1111:5
     |
1111 |     return (*pb).order;
     |     ^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*pb).order`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1114:1
     |
1114 | / pub unsafe extern "C" fn paste_buffer_created(mut pb: *mut paste_buffer) -> time_t {
1115 | |     return (*pb).created;
1116 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1115:5
     |
1115 |     return (*pb).created;
     |     ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*pb).created`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1118:1
     |
1118 | / pub unsafe extern "C" fn paste_buffer_data(
1119 | |     mut pb: *mut paste_buffer,
1120 | |     mut size: *mut size_t,
1121 | | ) -> *const libc::c_char {
...    |
1125 | |     return (*pb).data;
1126 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1125:5
     |
1125 |     return (*pb).data;
     |     ^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*pb).data`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1128:1
     |
1128 | / pub unsafe extern "C" fn paste_walk(mut pb: *mut paste_buffer) -> *mut paste_buffer {
1129 | |     if pb.is_null() {
1130 | |         return paste_time_tree_RB_MINMAX(&mut paste_by_time, -(1 as libc::c_int));
1131 | |     }
1132 | |     return paste_time_tree_RB_NEXT(pb);
1133 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1132:5
     |
1132 |     return paste_time_tree_RB_NEXT(pb);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `paste_time_tree_RB_NEXT(pb)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1135:1
     |
1135 | / pub unsafe extern "C" fn paste_get_top(
1136 | |     mut name: *mut *const libc::c_char,
1137 | | ) -> *mut paste_buffer {
1138 | |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
...    |
1146 | |     return pb;
1147 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1146:5
     |
1146 |     return pb;
     |     ^^^^^^^^^^ help: remove `return`: `pb`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/paste.rs:1138:37
     |
1138 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1141:16
     |
1141 |         return 0 as *mut paste_buffer;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1149:1
     |
1149 | / pub unsafe extern "C" fn paste_get_name(
1150 | |     mut name: *const libc::c_char,
1151 | | ) -> *mut paste_buffer {
1152 | |     let mut pbfind: paste_buffer = paste_buffer {
...    |
1176 | |     return paste_name_tree_RB_FIND(&mut paste_by_name, &mut pbfind);
1177 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1176:5
     |
1176 |     return paste_name_tree_RB_FIND(&mut paste_by_name, &mut pbfind);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `paste_name_tree_RB_FIND(&mut paste_by_name, &mut pbfind)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/paste.rs:1153:15
     |
1153 |         data: 0 as *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1155:15
     |
1155 |         name: 0 as *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1160:23
     |
1160 |             rbe_left: 0 as *mut paste_buffer,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1161:24
     |
1161 |             rbe_right: 0 as *mut paste_buffer,
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1162:25
     |
1162 |             rbe_parent: 0 as *mut paste_buffer,
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1166:23
     |
1166 |             rbe_left: 0 as *mut paste_buffer,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1167:24
     |
1167 |             rbe_right: 0 as *mut paste_buffer,
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1168:25
     |
1168 |             rbe_parent: 0 as *mut paste_buffer,
     |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1173:16
     |
1173 |         return 0 as *mut paste_buffer;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1179:1
     |
1179 | / pub unsafe extern "C" fn paste_free(mut pb: *mut paste_buffer) {
1180 | |     paste_name_tree_RB_REMOVE(&mut paste_by_name, pb);
1181 | |     paste_time_tree_RB_REMOVE(&mut paste_by_time, pb);
1182 | |     if (*pb).automatic != 0 {
...    |
1188 | |     free(pb as *mut libc::c_void);
1189 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/paste.rs:1184:9
     |
1184 |         paste_num_automatic;
     |         ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1191:1
     |
1191 | / pub unsafe extern "C" fn paste_add(mut data: *mut libc::c_char, mut size: size_t) {
1192 | |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
1193 | |     let mut pb1: *mut paste_buffer = 0 as *mut paste_buffer;
1194 | |     let mut limit: u_int = 0;
...    |
1244 | |     paste_time_tree_RB_INSERT(&mut paste_by_time, pb);
1245 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/paste.rs:1192:37
     |
1192 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1193:38
     |
1193 |     let mut pb1: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1220:18
     |
1220 |     (*pb).name = 0 as *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/paste.rs:1229:9
     |
1229 |         paste_next_index;
     |         ^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/paste.rs:1238:5
     |
1238 |     paste_num_automatic;
     |     ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/paste.rs:1239:26
     |
1239 |     (*pb).created = time(0 as *mut time_t);
     |                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1247:1
     |
1247 | / pub unsafe extern "C" fn paste_rename(
1248 | |     mut oldname: *const libc::c_char,
1249 | |     mut newname: *const libc::c_char,
1250 | |     mut cause: *mut *mut libc::c_char,
...    |
1300 | |     return 0 as libc::c_int;
1301 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1300:5
     |
1300 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/paste.rs:1252:37
     |
1252 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1253:41
     |
1253 |     let mut pb_new: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1255:18
     |
1255 |         *cause = 0 as *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/paste.rs:1296:9
     |
1296 |         paste_num_automatic;
     |         ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1303:1
     |
1303 | / pub unsafe extern "C" fn paste_set(
1304 | |     mut data: *mut libc::c_char,
1305 | |     mut size: size_t,
1306 | |     mut name: *const libc::c_char,
...    |
1344 | |     return 0 as libc::c_int;
1345 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1344:5
     |
1344 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/paste.rs:1309:37
     |
1309 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1310:38
     |
1310 |     let mut old: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1312:18
     |
1312 |         *cause = 0 as *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1337:26
     |
1337 |     (*pb).created = time(0 as *mut time_t);
     |                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/paste.rs:1347:1
     |
1347 | / pub unsafe extern "C" fn paste_make_sample(
1348 | |     mut pb: *mut paste_buffer,
1349 | | ) -> *mut libc::c_char {
1350 | |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
1373 | |     return buf;
1374 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/paste.rs:1373:5
     |
1373 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/paste.rs:1350:38
     |
1350 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/paste.rs:1361:9
     |
1361 |         0 as *mut libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/proc.rs:438:15
    |
438 |         data: 0 as *mut libc::c_void,
    |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/proc.rs:449:54
    |
449 |                 .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
    |                                                      ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/proc.rs:456:58
    |
456 |                     .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
    |                                                          ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/proc.rs:485:54
    |
485 |                 .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
    |                                                      ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/proc.rs:493:50
    |
493 |             .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
    |                                                  ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<imsg>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/proc.rs:530:5
    |
530 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/proc.rs:524:13
    |
524 |             0 as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:553:35
    |
553 |     event_add(&mut (*peer).event, 0 as *const timeval);
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:556:1
    |
556 | / pub unsafe extern "C" fn proc_send(
557 | |     mut peer: *mut tmuxpeer,
558 | |     mut type_0: msgtype,
559 | |     mut fd: libc::c_int,
...   |
589 | |     return 0 as libc::c_int;
590 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/proc.rs:589:5
    |
589 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:592:1
    |
592 | / pub unsafe extern "C" fn proc_start(mut name: *const libc::c_char) -> *mut tmuxproc {
593 | |     let mut tp: *mut tmuxproc = 0 as *mut tmuxproc;
594 | |     let mut u: utsname = utsname {
595 | |         sysname: [0; 65],
...   |
633 | |     return tp;
634 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/proc.rs:633:5
    |
633 |     return tp;
    |     ^^^^^^^^^^ help: remove `return`: `tp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/proc.rs:593:33
    |
593 |     let mut tp: *mut tmuxproc = 0 as *mut tmuxproc;
    |                                 ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tmuxproc>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:636:1
    |
636 | / pub unsafe extern "C" fn proc_loop(
637 | |     mut tp: *mut tmuxproc,
638 | |     mut loopcb: Option::<unsafe extern "C" fn() -> libc::c_int>,
639 | | ) {
...   |
649 | |     log_debug(b"%s loop exit\0" as *const u8 as *const libc::c_char, (*tp).name);
650 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:652:1
    |
652 | / pub unsafe extern "C" fn proc_exit(mut tp: *mut tmuxproc) {
653 | |     (*tp).exit = 1 as libc::c_int;
654 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:656:1
    |
656 | / pub unsafe extern "C" fn proc_set_signals(
657 | |     mut tp: *mut tmuxproc,
658 | |     mut signalcb: Option::<unsafe extern "C" fn(libc::c_int) -> ()>,
659 | | ) {
...   |
789 | |     event_add(&mut (*tp).ev_sigwinch, 0 as *const timeval);
790 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:682:33
    |
682 |     sigaction(2 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                 ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:682:42
    |
682 |     sigaction(2 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:683:34
    |
683 |     sigaction(13 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:683:43
    |
683 |     sigaction(13 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:684:34
    |
684 |     sigaction(20 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:684:43
    |
684 |     sigaction(20 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:699:37
    |
699 |     event_add(&mut (*tp).ev_sighup, 0 as *const timeval);
    |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:714:38
    |
714 |     event_add(&mut (*tp).ev_sigchld, 0 as *const timeval);
    |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:729:38
    |
729 |     event_add(&mut (*tp).ev_sigcont, 0 as *const timeval);
    |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:744:38
    |
744 |     event_add(&mut (*tp).ev_sigterm, 0 as *const timeval);
    |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:759:38
    |
759 |     event_add(&mut (*tp).ev_sigusr1, 0 as *const timeval);
    |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:774:38
    |
774 |     event_add(&mut (*tp).ev_sigusr2, 0 as *const timeval);
    |                                      ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/proc.rs:789:39
    |
789 |     event_add(&mut (*tp).ev_sigwinch, 0 as *const timeval);
    |                                       ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:792:1
    |
792 | / pub unsafe extern "C" fn proc_clear_signals(
793 | |     mut tp: *mut tmuxproc,
794 | |     mut defaults: libc::c_int,
795 | | ) {
...   |
830 | |     }
831 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:812:33
    |
812 |     sigaction(2 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                 ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:812:42
    |
812 |     sigaction(2 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:813:34
    |
813 |     sigaction(13 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:813:43
    |
813 |     sigaction(13 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:814:34
    |
814 |     sigaction(20 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:814:43
    |
814 |     sigaction(20 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:823:37
    |
823 |         sigaction(1 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:823:46
    |
823 |         sigaction(1 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                              ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:824:38
    |
824 |         sigaction(17 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:824:47
    |
824 |         sigaction(17 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:825:38
    |
825 |         sigaction(18 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:825:47
    |
825 |         sigaction(18 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:826:38
    |
826 |         sigaction(15 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:826:47
    |
826 |         sigaction(15 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:827:38
    |
827 |         sigaction(10 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:827:47
    |
827 |         sigaction(10 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:828:38
    |
828 |         sigaction(12 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:828:47
    |
828 |         sigaction(12 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigaction` doesn't need a mutable reference
   --> src/proc.rs:829:38
    |
829 |         sigaction(28 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/proc.rs:829:47
    |
829 |         sigaction(28 as libc::c_int, &mut sa, 0 as *mut sigaction);
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigaction>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:833:1
    |
833 | / pub unsafe extern "C" fn proc_add_peer(
834 | |     mut tp: *mut tmuxproc,
835 | |     mut fd: libc::c_int,
836 | |     mut dispatchcb: Option::<unsafe extern "C" fn(*mut imsg, *mut libc::c_void) -> ()>,
...   |
869 | |     return peer;
870 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/proc.rs:869:5
    |
869 |     return peer;
    |     ^^^^^^^^^^^^ help: remove `return`: `peer`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/proc.rs:839:35
    |
839 |     let mut peer: *mut tmuxpeer = 0 as *mut tmuxpeer;
    |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tmuxpeer>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:872:1
    |
872 | / pub unsafe extern "C" fn proc_remove_peer(mut peer: *mut tmuxpeer) {
873 | |     log_debug(b"remove peer %p\0" as *const u8 as *const libc::c_char, peer);
874 | |     event_del(&mut (*peer).event);
875 | |     imsg_clear(&mut (*peer).ibuf);
876 | |     close((*peer).ibuf.fd);
877 | |     free(peer as *mut libc::c_void);
878 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:880:1
    |
880 | / pub unsafe extern "C" fn proc_kill_peer(mut peer: *mut tmuxpeer) {
881 | |     (*peer).flags |= 0x1 as libc::c_int;
882 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/proc.rs:884:1
    |
884 | / pub unsafe extern "C" fn proc_toggle_log(mut tp: *mut tmuxproc) {
885 | |     log_toggle((*tp).name);
886 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/resize.rs:935:1
     |
935  | / pub unsafe extern "C" fn recalculate_sizes() {
936  | |     let mut s: *mut session = 0 as *mut session;
937  | |     let mut c: *mut client = 0 as *mut client;
938  | |     let mut w: *mut window = 0 as *mut window;
...    |
1125 | |     }
1126 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/resize.rs:958:16
    |
958 |             if !((*c).flags & 0x40 as libc::c_int != 0) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).flags & 0x40 as libc::c_int == 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
   --> src/resize.rs:959:20
    |
959 |                   if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
    |  ____________________^
960 | |                     == 0x2000 as libc::c_int)
    | |_____________________________________________^ help: try: `(*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int) != 0x2000 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/resize.rs:1034:20
     |
1034 |                 if !((*s).flags & 0x1 as libc::c_int != 0) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*s).flags & 0x1 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/resize.rs:936:31
    |
936 |     let mut s: *mut session = 0 as *mut session;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/resize.rs:937:30
    |
937 |     let mut c: *mut client = 0 as *mut client;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/resize.rs:938:30
    |
938 |     let mut w: *mut window = 0 as *mut window;
    |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/resize.rs:939:36
    |
939 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
    |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/resize.rs:983:25
    |
983 |                         (*s).attached;
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/resize.rs:1114:37
     |
1114 |                         (*w).last = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/screen.rs:151:52
    |
151 |     let mut title_entry: *mut screen_title_entry = 0 as *mut screen_title_entry;
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_title_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/screen.rs:172:19
    |
172 |     (*s).titles = 0 as *mut screen_titles;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:175:1
    |
175 | / pub unsafe extern "C" fn screen_init(
176 | |     mut s: *mut screen,
177 | |     mut sx: u_int,
178 | |     mut sy: u_int,
...   |
187 | |     screen_reinit(s);
188 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/screen.rs:183:19
    |
183 |     (*s).titles = 0 as *mut screen_titles;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/screen.rs:186:17
    |
186 |     (*s).tabs = 0 as *mut bitstr_t;
    |                 ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:190:1
    |
190 | / pub unsafe extern "C" fn screen_reinit(mut s: *mut screen) {
191 | |     (*s).cx = 0 as libc::c_int as u_int;
192 | |     (*s).cy = 0 as libc::c_int as u_int;
193 | |     (*s).rupper = 0 as libc::c_int as u_int;
...   |
204 | |     screen_free_titles(s);
205 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:207:1
    |
207 | / pub unsafe extern "C" fn screen_free(mut s: *mut screen) {
208 | |     free((*s).tabs as *mut libc::c_void);
209 | |     free((*s).title as *mut libc::c_void);
210 | |     free((*s).ccolour as *mut libc::c_void);
211 | |     grid_destroy((*s).grid);
212 | |     screen_free_titles(s);
213 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:215:1
    |
215 | / pub unsafe extern "C" fn screen_reset_tabs(mut s: *mut screen) {
216 | |     let mut i: u_int = 0;
217 | |     free((*s).tabs as *mut libc::c_void);
218 | |     (*s)
...   |
233 | |     }
234 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
   --> src/screen.rs:229:13
    |
229 |         let ref mut fresh0 = *((*s).tabs).offset((i >> 3 as libc::c_int) as isize);
    |         ----^^^^^^^^^^^^^^--------------------------------------------------------- help: try: `let fresh0 = &mut (*((*s).tabs).offset((i >> 3 as libc::c_int) as isize));`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:236:1
    |
236 | / pub unsafe extern "C" fn screen_set_cursor_style(mut s: *mut screen, mut style: u_int) {
237 | |     if style <= 6 as libc::c_int as u_int {
238 | |         (*s).cstyle = style;
239 | |     }
240 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:242:1
    |
242 | / pub unsafe extern "C" fn screen_set_cursor_colour(
243 | |     mut s: *mut screen,
244 | |     mut colour: *const libc::c_char,
245 | | ) {
246 | |     free((*s).ccolour as *mut libc::c_void);
247 | |     (*s).ccolour = xstrdup(colour);
248 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:250:1
    |
250 | / pub unsafe extern "C" fn screen_set_title(
251 | |     mut s: *mut screen,
252 | |     mut title: *const libc::c_char,
253 | | ) {
...   |
260 | |     );
261 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:263:1
    |
263 | / pub unsafe extern "C" fn screen_push_title(mut s: *mut screen) {
264 | |     let mut title_entry: *mut screen_title_entry = 0 as *mut screen_title_entry;
265 | |     if ((*s).titles).is_null() {
266 | |         (*s)
...   |
282 | |     (*title_entry).entry.tqe_prev = &mut (*(*s).titles).tqh_first;
283 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/screen.rs:264:52
    |
264 |     let mut title_entry: *mut screen_title_entry = 0 as *mut screen_title_entry;
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_title_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/screen.rs:269:36
    |
269 |         (*(*s).titles).tqh_first = 0 as *mut screen_title_entry;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_title_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:285:1
    |
285 | / pub unsafe extern "C" fn screen_pop_title(mut s: *mut screen) {
286 | |     let mut title_entry: *mut screen_title_entry = 0 as *mut screen_title_entry;
287 | |     if ((*s).titles).is_null() {
288 | |         return;
...   |
303 | |     }
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/screen.rs:286:52
    |
286 |     let mut title_entry: *mut screen_title_entry = 0 as *mut screen_title_entry;
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_title_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:306:1
    |
306 | / pub unsafe extern "C" fn screen_resize(
307 | |     mut s: *mut screen,
308 | |     mut sx: u_int,
309 | |     mut sy: u_int,
...   |
329 | |     }
330 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/screen.rs:415:13
    |
415 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:423:1
    |
423 | / pub unsafe extern "C" fn screen_set_selection(
424 | |     mut s: *mut screen,
425 | |     mut sx: u_int,
426 | |     mut sy: u_int,
...   |
444 | |     (*sel).ey = ey;
445 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:447:1
    |
447 | / pub unsafe extern "C" fn screen_clear_selection(mut s: *mut screen) {
448 | |     let mut sel: *mut screen_sel = &mut (*s).sel;
449 | |     (*sel).flag = 0 as libc::c_int;
450 | |     (*sel).hidden = 0 as libc::c_int;
451 | |     (*sel).lineflag = LINE_SEL_NONE;
452 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:454:1
    |
454 | / pub unsafe extern "C" fn screen_hide_selection(mut s: *mut screen) {
455 | |     let mut sel: *mut screen_sel = &mut (*s).sel;
456 | |     (*sel).hidden = 1 as libc::c_int;
457 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:459:1
    |
459 | / pub unsafe extern "C" fn screen_check_selection(
460 | |     mut s: *mut screen,
461 | |     mut px: u_int,
462 | |     mut py: u_int,
...   |
538 | |     return 1 as libc::c_int;
539 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/screen.rs:538:5
    |
538 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/screen.rs:541:1
    |
541 | / pub unsafe extern "C" fn screen_select_cell(
542 | |     mut s: *mut screen,
543 | |     mut dst: *mut grid_cell,
544 | |     mut src: *const grid_cell,
...   |
559 | |     (*dst).flags = (*src).flags;
560 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/screen_redraw.rs:1034:5
     |
1034 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1046:12
     |
1046 |         if !(window_pane_visible(wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/screen_redraw.rs:1054:5
     |
1054 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1042:36
     |
1042 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1075:16
     |
1075 |             if !(window_pane_visible(wp) == 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1096:12
     |
1096 |         if !(window_pane_visible(wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/screen_redraw.rs:1173:5
     |
1173 |     return 12 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `12 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1064:36
     |
1064 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1068:12
     |
1068 |     *wpp = 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/screen_redraw.rs:1222:5
     |
1222 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/screen_redraw.rs:1362:5
     |
1362 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1241:40
     |
1241 |     let mut fmt: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1242:36
     |
1242 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1243:38
     |
1243 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1246:13
     |
1246 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1247:12
     |
1247 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1248:15
     |
1248 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1249:15
     |
1249 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1257:16
     |
1257 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1258:17
     |
1258 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1259:15
     |
1259 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1263:18
     |
1263 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1267:15
     |
1267 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1311:9
     |
1311 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1315:28
     |
1315 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, wp);
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1315:47
     |
1315 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, wp);
     |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1339:34
     |
1339 |     screen_write_start(&mut ctx, 0 as *mut window_pane, &mut (*wp).status_screen);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1380:12
     |
1380 |         if !(window_pane_visible(wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1371:36
     |
1371 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1391:17
     |
1391 |                 0 as *const window_pane,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_redraw.rs:1403:1
     |
1403 | / pub unsafe extern "C" fn screen_redraw_update(mut c: *mut client) {
1404 | |     let mut w: *mut window = (*(*(*c).session).curw).window;
1405 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
1406 | |     let mut wo: *mut options = (*w).options;
...    |
1434 | |     }
1435 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1405:36
     |
1405 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_redraw.rs:1437:1
     |
1437 | / pub unsafe extern "C" fn screen_redraw_screen(
1438 | |     mut c: *mut client,
1439 | |     mut draw_panes: libc::c_int,
1440 | |     mut draw_status: libc::c_int,
...    |
1494 | |     tty_reset(tty);
1495 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_redraw.rs:1497:1
     |
1497 | / pub unsafe extern "C" fn screen_redraw_pane(
1498 | |     mut c: *mut client,
1499 | |     mut wp: *mut window_pane,
1500 | | ) {
...    |
1523 | |     tty_reset(&mut (*c).tty);
1524 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/screen_redraw.rs:1521:9
     |
1521 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1676:16
     |
1676 |             if !(type_0 == 0 as libc::c_int as u_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `type_0 != 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1535:36
     |
1535 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1605:40
     |
1605 |     let mut tmp: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1703:33
     |
1703 | ...                   &mut m_active_gc,
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1704:33
     |
1704 | ...                   0 as *const window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1709:33
     |
1709 | ...                   &mut m_other_gc,
     |                       ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1710:33
     |
1710 | ...                   0 as *const window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1714:45
     |
1714 |                         tty_attributes(tty, &mut active_gc, 0 as *const window_pane);
     |                                             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1714:61
     |
1714 |                         tty_attributes(tty, &mut active_gc, 0 as *const window_pane);
     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1716:45
     |
1716 |                         tty_attributes(tty, &mut other_gc, 0 as *const window_pane);
     |                                             ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1716:60
     |
1716 |                         tty_attributes(tty, &mut other_gc, 0 as *const window_pane);
     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_redraw.rs:1733:13
     |
1733 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_redraw.rs:1736:9
     |
1736 |         j;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1744:29
     |
1744 |         tty_attributes(tty, &mut msg_gc, 0 as *const window_pane);
     |                             ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1744:42
     |
1744 |         tty_attributes(tty, &mut msg_gc, 0 as *const window_pane);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/screen_redraw.rs:1766:12
     |
1766 |         if !(window_pane_visible(wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1756:36
     |
1756 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_redraw.rs:1771:17
     |
1771 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/screen_redraw.rs:1797:13
     |
1797 |             0 as *const window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_redraw.rs:1804:9
     |
1804 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/screen_redraw.rs:1839:38
     |
1839 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1892:29
     |
1892 |         tty_attributes(tty, &mut gc, wp);
     |                             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_redraw.rs:1913:25
     |
1913 |                         i;
     |                         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_redraw.rs:1916:21
     |
1916 |                     j;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_redraw.rs:1921:13
     |
1921 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/screen_redraw.rs:1950:25
     |
1950 |     tty_attributes(tty, &mut gc, wp);
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: returning the result of a `let` binding from a block
    --> src/screen_write.rs:1075:5
     |
1060 | /     let mut init = grid_cell {
1061 | |         flags: 0x4 as libc::c_int as u_char,
1062 | |         attr: 0 as libc::c_int as u_short,
1063 | |         fg: 8 as libc::c_int,
...    |
1073 | |         },
1074 | |     };
     | |______- unnecessary `let` binding
1075 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1060 ~     
1061 ~     grid_cell {
1062 +         flags: 0x4 as libc::c_int as u_char,
1063 +         attr: 0 as libc::c_int as u_short,
1064 +         fg: 8 as libc::c_int,
1065 +         bg: 8 as libc::c_int,
1066 +         data: {
1067 +             let mut init = utf8_data {
1068 +                 data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
1069 +                 have: 0 as libc::c_int as u_char,
1070 +                 size: 0 as libc::c_int as u_char,
1071 +                 width: 0 as libc::c_int as u_char,
1072 +             };
1073 +             init
1074 +         },
1075 +     }
     |

warning: returning the result of a `let` binding from a block
    --> src/screen_write.rs:1072:13
     |
1066 | /             let mut init = utf8_data {
1067 | |                 data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
1068 | |                 have: 0 as libc::c_int as u_char,
1069 | |                 size: 0 as libc::c_int as u_char,
1070 | |                 width: 0 as libc::c_int as u_char,
1071 | |             };
     | |______________- unnecessary `let` binding
1072 |               init
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1066 ~             
1067 ~             utf8_data {
1068 +                 data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
1069 +                 have: 0 as libc::c_int as u_char,
1070 +                 size: 0 as libc::c_int as u_char,
1071 +                 width: 0 as libc::c_int as u_char,
1072 +             }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1078:1
     |
1078 | / pub unsafe extern "C" fn screen_write_start(
1079 | |     mut ctx: *mut screen_write_ctx,
1080 | |     mut wp: *mut window_pane,
1081 | |     mut s: *mut screen,
...    |
1139 | |     );
1140 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:1103:13
     |
1103 |         let ref mut fresh0 = (*((*ctx).list).offset(y as isize)).items.tqh_first;
     |         ----^^^^^^^^^^^^^^------------------------------------------------------- help: try: `let fresh0 = &mut (*((*ctx).list).offset(y as isize)).items.tqh_first;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1104:19
     |
1104 |         *fresh0 = 0 as *mut screen_write_collect_item;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:1105:13
     |
1105 |         let ref mut fresh1 = (*((*ctx).list).offset(y as isize)).items.tqh_last;
     |         ----^^^^^^^^^^^^^^------------------------------------------------------ help: try: `let fresh1 = &mut (*((*ctx).list).offset(y as isize)).items.tqh_last;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/screen_write.rs:1108:9
     |
1108 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1142:1
     |
1142 | / pub unsafe extern "C" fn screen_write_stop(mut ctx: *mut screen_write_ctx) {
1143 | |     screen_write_collect_end(ctx);
1144 | |     screen_write_collect_flush(ctx, 0 as libc::c_int);
1145 | |     log_debug(
...    |
1157 | |     free((*ctx).list as *mut libc::c_void);
1158 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1160:1
     |
1160 | / pub unsafe extern "C" fn screen_write_reset(mut ctx: *mut screen_write_ctx) {
1161 | |     let mut s: *mut screen = (*ctx).s;
1162 | |     screen_reset_tabs(s);
1163 | |     screen_write_scrollregion(
...    |
1175 | |     screen_write_cursormove(ctx, 0 as libc::c_int as u_int, 0 as libc::c_int as u_int);
1176 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1178:1
     |
1178 | / pub unsafe extern "C" fn screen_write_putc(
1179 | |     mut ctx: *mut screen_write_ctx,
1180 | |     mut gcp: *const grid_cell,
1181 | |     mut ch: u_char,
...    |
1201 | |     screen_write_cell(ctx, &mut gc);
1202 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1201:28
     |
1201 |     screen_write_cell(ctx, &mut gc);
     |                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1204:1
     |
1204 | / pub unsafe extern "C" fn screen_write_vnputs(
1205 | |     mut ctx: *mut screen_write_ctx,
1206 | |     mut maxlen: ssize_t,
1207 | |     mut gcp: *const grid_cell,
...    |
1292 | |     free(msg as *mut libc::c_void);
1293 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/screen_write.rs:1249:20
     |
1249 |                 if !(more as libc::c_uint == UTF8_MORE as libc::c_int as libc::c_uint) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `more as libc::c_uint != UTF8_MORE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1224:38
     |
1224 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1225:32
     |
1225 |     let mut ptr: *mut u_char = 0 as *mut u_char;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:1242:13
     |
1242 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1253:17
     |
1253 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1256:13
     |
1256 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1264:44
     |
1264 |                     screen_write_putc(ctx, &mut gc, ' ' as i32 as u_char);
     |                                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1266:21
     |
1266 |                     size;
     |                     ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1271:40
     |
1271 |                 screen_write_cell(ctx, &mut gc);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1285:17
     |
1285 |                 size;
     |                 ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1286:40
     |
1286 |                 screen_write_putc(ctx, &mut gc, *ptr);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1289:13
     |
1289 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1295:1
     |
1295 | / pub unsafe extern "C" fn screen_write_copy(
1296 | |     mut ctx: *mut screen_write_ctx,
1297 | |     mut src: *mut screen,
1298 | |     mut px: u_int,
...    |
1355 | |     }
1356 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1345:40
     |
1345 |                 screen_write_cell(ctx, &mut gc);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1348:13
     |
1348 |             xx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1351:9
     |
1351 |         cy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1354:9
     |
1354 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1358:1
     |
1358 | / pub unsafe extern "C" fn screen_write_fast_copy(
1359 | |     mut ctx: *mut screen_write_ctx,
1360 | |     mut src: *mut screen,
1361 | |     mut px: u_int,
...    |
1415 | |     }
1416 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `grid_cells_equal` doesn't need a mutable reference
    --> src/screen_write.rs:1403:33
     |
1403 |             if grid_cells_equal(&mut gc, &grid_default_cell) == 0 {
     |                                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `grid_view_set_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1404:62
     |
1404 |                 grid_view_set_cell((*(*ctx).s).grid, cx, cy, &mut gc);
     |                                                              ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1407:13
     |
1407 |             cx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1409:13
     |
1409 |             xx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1412:9
     |
1412 |         cy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1414:9
     |
1414 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1418:1
     |
1418 | / pub unsafe extern "C" fn screen_write_hline(
1419 | |     mut ctx: *mut screen_write_ctx,
1420 | |     mut nx: u_int,
1421 | |     mut left: libc::c_int,
...    |
1464 | |     screen_write_cursormove(ctx, cx, cy);
1465 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1450:9
     |
1450 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1455:32
     |
1455 |         screen_write_putc(ctx, &mut gc, 'q' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1457:9
     |
1457 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1461:9
     |
1461 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1467:1
     |
1467 | / pub unsafe extern "C" fn screen_write_vline(
1468 | |     mut ctx: *mut screen_write_ctx,
1469 | |     mut ny: u_int,
1470 | |     mut top: libc::c_int,
...    |
1519 | |     screen_write_cursormove(ctx, cx, cy);
1520 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1499:9
     |
1499 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1505:32
     |
1505 |         screen_write_putc(ctx, &mut gc, 'x' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1507:9
     |
1507 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1516:9
     |
1516 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1522:1
     |
1522 | / pub unsafe extern "C" fn screen_write_box(
1523 | |     mut ctx: *mut screen_write_ctx,
1524 | |     mut nx: u_int,
1525 | |     mut ny: u_int,
...    |
1590 | |     screen_write_cursormove(ctx, cx, cy);
1591 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1551:28
     |
1551 |     screen_write_putc(ctx, &mut gc, 'l' as i32 as u_char);
     |                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1554:32
     |
1554 |         screen_write_putc(ctx, &mut gc, 'q' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1556:9
     |
1556 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1558:28
     |
1558 |     screen_write_putc(ctx, &mut gc, 'k' as i32 as u_char);
     |                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1564:28
     |
1564 |     screen_write_putc(ctx, &mut gc, 'm' as i32 as u_char);
     |                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1567:32
     |
1567 |         screen_write_putc(ctx, &mut gc, 'q' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1569:9
     |
1569 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1571:28
     |
1571 |     screen_write_putc(ctx, &mut gc, 'j' as i32 as u_char);
     |                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1575:32
     |
1575 |         screen_write_putc(ctx, &mut gc, 'x' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1577:9
     |
1577 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/screen_write.rs:1586:32
     |
1586 |         screen_write_putc(ctx, &mut gc, 'x' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1588:9
     |
1588 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1593:1
     |
1593 | / pub unsafe extern "C" fn screen_write_preview(
1594 | |     mut ctx: *mut screen_write_ctx,
1595 | |     mut src: *mut screen,
1596 | |     mut nx: u_int,
...    |
1666 | |     }
1667 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1665:32
     |
1665 |         screen_write_cell(ctx, &mut gc);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1685:1
     |
1685 | / pub unsafe extern "C" fn screen_write_mode_set(
1686 | |     mut ctx: *mut screen_write_ctx,
1687 | |     mut mode: libc::c_int,
1688 | | ) {
1689 | |     let mut s: *mut screen = (*ctx).s;
1690 | |     (*s).mode |= mode;
1691 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1693:1
     |
1693 | / pub unsafe extern "C" fn screen_write_mode_clear(
1694 | |     mut ctx: *mut screen_write_ctx,
1695 | |     mut mode: libc::c_int,
1696 | | ) {
1697 | |     let mut s: *mut screen = (*ctx).s;
1698 | |     (*s).mode &= !mode;
1699 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1701:1
     |
1701 | / pub unsafe extern "C" fn screen_write_cursorup(
1702 | |     mut ctx: *mut screen_write_ctx,
1703 | |     mut ny: u_int,
1704 | | ) {
...    |
1723 | |     (*s).cy = ((*s).cy).wrapping_sub(ny);
1724 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/screen_write.rs:1718:9
     |
1718 |         (*s).cx;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1726:1
     |
1726 | / pub unsafe extern "C" fn screen_write_cursordown(
1727 | |     mut ctx: *mut screen_write_ctx,
1728 | |     mut ny: u_int,
1729 | | ) {
...    |
1754 | |     (*s).cy = ((*s).cy).wrapping_add(ny);
1755 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/screen_write.rs:1749:9
     |
1749 |         (*s).cx;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1757:1
     |
1757 | / pub unsafe extern "C" fn screen_write_cursorright(
1758 | |     mut ctx: *mut screen_write_ctx,
1759 | |     mut nx: u_int,
1760 | | ) {
...    |
1775 | |     (*s).cx = ((*s).cx).wrapping_add(nx);
1776 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1778:1
     |
1778 | / pub unsafe extern "C" fn screen_write_cursorleft(
1779 | |     mut ctx: *mut screen_write_ctx,
1780 | |     mut nx: u_int,
1781 | | ) {
...    |
1792 | |     (*s).cx = ((*s).cx).wrapping_sub(nx);
1793 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1795:1
     |
1795 | / pub unsafe extern "C" fn screen_write_backspace(mut ctx: *mut screen_write_ctx) {
1796 | |     let mut s: *mut screen = (*ctx).s;
1797 | |     let mut gl: *mut grid_line = 0 as *mut grid_line;
1798 | |     if (*s).cx == 0 as libc::c_int as u_int {
...    |
1816 | |     };
1817 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1797:34
     |
1797 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:1810:13
     |
1810 |             (*s).cy;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1815:9
     |
1815 |         (*s).cx;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1819:1
     |
1819 | / pub unsafe extern "C" fn screen_write_alignmenttest(mut ctx: *mut screen_write_ctx) {
1820 | |     let mut s: *mut screen = (*ctx).s;
1821 | |     let mut ttyctx: tty_ctx = tty_ctx {
1822 | |         wp: 0 as *mut window_pane,
...    |
1881 | |     );
1882 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1822:13
     |
1822 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:1823:15
     |
1823 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1826:14
     |
1826 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `grid_view_set_cell` doesn't need a mutable reference
    --> src/screen_write.rs:1860:51
     |
1860 |             grid_view_set_cell((*s).grid, xx, yy, &mut gc);
     |                                                   ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:1862:13
     |
1862 |             xx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:1865:9
     |
1865 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1884:1
     |
1884 | / pub unsafe extern "C" fn screen_write_insertcharacter(
1885 | |     mut ctx: *mut screen_write_ctx,
1886 | |     mut nx: u_int,
1887 | |     mut bg: u_int,
...    |
1927 | |     );
1928 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1891:13
     |
1891 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:1892:15
     |
1892 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1895:14
     |
1895 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1930:1
     |
1930 | / pub unsafe extern "C" fn screen_write_deletecharacter(
1931 | |     mut ctx: *mut screen_write_ctx,
1932 | |     mut nx: u_int,
1933 | |     mut bg: u_int,
...    |
1973 | |     );
1974 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1937:13
     |
1937 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:1938:15
     |
1938 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1941:14
     |
1941 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:1976:1
     |
1976 | / pub unsafe extern "C" fn screen_write_clearcharacter(
1977 | |     mut ctx: *mut screen_write_ctx,
1978 | |     mut nx: u_int,
1979 | |     mut bg: u_int,
...    |
2019 | |     );
2020 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1983:13
     |
1983 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:1984:15
     |
1984 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:1987:14
     |
1987 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2022:1
     |
2022 | / pub unsafe extern "C" fn screen_write_insertline(
2023 | |     mut ctx: *mut screen_write_ctx,
2024 | |     mut ny: u_int,
2025 | |     mut bg: u_int,
...    |
2085 | |     );
2086 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2030:13
     |
2030 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2031:15
     |
2031 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2034:14
     |
2034 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2088:1
     |
2088 | / pub unsafe extern "C" fn screen_write_deleteline(
2089 | |     mut ctx: *mut screen_write_ctx,
2090 | |     mut ny: u_int,
2091 | |     mut bg: u_int,
...    |
2151 | |     );
2152 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2096:13
     |
2096 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2097:15
     |
2097 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2100:14
     |
2100 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2154:1
     |
2154 | / pub unsafe extern "C" fn screen_write_clearline(
2155 | |     mut ctx: *mut screen_write_ctx,
2156 | |     mut bg: u_int,
2157 | | ) {
...    |
2195 | |     );
2196 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2159:34
     |
2159 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2161:13
     |
2161 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2162:15
     |
2162 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2165:14
     |
2165 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2198:1
     |
2198 | / pub unsafe extern "C" fn screen_write_clearendofline(
2199 | |     mut ctx: *mut screen_write_ctx,
2200 | |     mut bg: u_int,
2201 | | ) {
...    |
2246 | |     );
2247 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2203:34
     |
2203 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2205:13
     |
2205 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2206:15
     |
2206 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2209:14
     |
2209 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2249:1
     |
2249 | / pub unsafe extern "C" fn screen_write_clearstartofline(
2250 | |     mut ctx: *mut screen_write_ctx,
2251 | |     mut bg: u_int,
2252 | | ) {
...    |
2300 | |     );
2301 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2255:13
     |
2255 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2256:15
     |
2256 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2259:14
     |
2259 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2303:1
     |
2303 | / pub unsafe extern "C" fn screen_write_cursormove(
2304 | |     mut ctx: *mut screen_write_ctx,
2305 | |     mut px: u_int,
2306 | |     mut py: u_int,
...    |
2316 | |     (*s).cy = py;
2317 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2319:1
     |
2319 | / pub unsafe extern "C" fn screen_write_reverseindex(
2320 | |     mut ctx: *mut screen_write_ctx,
2321 | |     mut bg: u_int,
2322 | | ) {
...    |
2352 | |     );
2353 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2325:13
     |
2325 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2326:15
     |
2326 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2329:14
     |
2329 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:2344:9
     |
2344 |         (*s).cy;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2355:1
     |
2355 | / pub unsafe extern "C" fn screen_write_scrollregion(
2356 | |     mut ctx: *mut screen_write_ctx,
2357 | |     mut rupper: u_int,
2358 | |     mut rlower: u_int,
...    |
2374 | |     (*s).rlower = rlower;
2375 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2377:1
     |
2377 | / pub unsafe extern "C" fn screen_write_linefeed(
2378 | |     mut ctx: *mut screen_write_ctx,
2379 | |     mut wrapped: libc::c_int,
2380 | |     mut bg: u_int,
...    |
2416 | |     }
2417 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2384:34
     |
2384 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:2412:9
     |
2412 |         (*ctx).scrolled;
     |         ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:2415:9
     |
2415 |         (*s).cy;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2419:1
     |
2419 | / pub unsafe extern "C" fn screen_write_scrollup(
2420 | |     mut ctx: *mut screen_write_ctx,
2421 | |     mut lines: u_int,
2422 | |     mut bg: u_int,
...    |
2447 | |     (*ctx).scrolled = ((*ctx).scrolled).wrapping_add(lines);
2448 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/screen_write.rs:2445:9
     |
2445 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2450:1
     |
2450 | / pub unsafe extern "C" fn screen_write_carriagereturn(mut ctx: *mut screen_write_ctx) {
2451 | |     let mut s: *mut screen = (*ctx).s;
2452 | |     (*s).cx = 0 as libc::c_int as u_int;
2453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2455:1
     |
2455 | / pub unsafe extern "C" fn screen_write_clearendofscreen(
2456 | |     mut ctx: *mut screen_write_ctx,
2457 | |     mut bg: u_int,
2458 | | ) {
...    |
2515 | |     );
2516 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2462:13
     |
2462 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2463:15
     |
2463 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2466:14
     |
2466 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2518:1
     |
2518 | / pub unsafe extern "C" fn screen_write_clearstartofscreen(
2519 | |     mut ctx: *mut screen_write_ctx,
2520 | |     mut bg: u_int,
2521 | | ) {
...    |
2577 | |     );
2578 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2524:13
     |
2524 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2525:15
     |
2525 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2528:14
     |
2528 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2580:1
     |
2580 | / pub unsafe extern "C" fn screen_write_clearscreen(
2581 | |     mut ctx: *mut screen_write_ctx,
2582 | |     mut bg: u_int,
2583 | | ) {
...    |
2621 | |     );
2622 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2586:13
     |
2586 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2587:15
     |
2587 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2590:14
     |
2590 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2624:1
     |
2624 | / pub unsafe extern "C" fn screen_write_clearhistory(mut ctx: *mut screen_write_ctx) {
2625 | |     let mut s: *mut screen = (*ctx).s;
2626 | |     let mut gd: *mut grid = (*s).grid;
2627 | |     grid_move_lines(
...    |
2635 | |     (*gd).hscrolled = (*gd).hsize;
2636 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2642:50
     |
2642 |     let mut ci: *mut screen_write_collect_item = 0 as *mut screen_write_collect_item;
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2643:51
     |
2643 |     let mut tmp: *mut screen_write_collect_item = 0 as *mut screen_write_collect_item;
     |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2661:25
     |
2661 |                     let ref mut fresh2 = (*((*ctx).list).offset(i as isize))
     |                         ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
2661 ~                     let fresh2 = &mut (*((*ctx).list).offset(i as isize))
2662 +                         .items
2663 +                         .tqh_last;
     |

warning: statement with no effect
    --> src/screen_write.rs:2685:9
     |
2685 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2690:50
     |
2690 |     let mut cl: *mut screen_write_collect_line = 0 as *mut screen_write_collect_line;
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2711:17
     |
2711 |             let ref mut fresh3 = *(*((*ctx).list).offset(y as isize)).items.tqh_last;
     |             ----^^^^^^^^^^^^^^------------------------------------------------------- help: try: `let fresh3 = &mut (*(*((*ctx).list).offset(y as isize)).items.tqh_last);`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2716:17
     |
2716 |             let ref mut fresh4 = (*((*ctx).list).offset(y as isize)).items.tqh_last;
     |             ----^^^^^^^^^^^^^^------------------------------------------------------ help: try: `let fresh4 = &mut (*((*ctx).list).offset(y as isize)).items.tqh_last;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2718:37
     |
2718 |             (*cl).items.tqh_first = 0 as *mut screen_write_collect_item;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2721:33
     |
2721 |         (*cl).items.tqh_first = 0 as *mut screen_write_collect_item;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:2724:9
     |
2724 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2732:50
     |
2732 |     let mut ci: *mut screen_write_collect_item = 0 as *mut screen_write_collect_item;
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2733:51
     |
2733 |     let mut tmp: *mut screen_write_collect_item = 0 as *mut screen_write_collect_item;
     |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2739:13
     |
2739 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:2740:15
     |
2740 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2743:14
     |
2743 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:2814:13
     |
2814 |             items;
     |             ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2819:21
     |
2819 |                 let ref mut fresh5 = (*((*ctx).list).offset(y as isize)).items.tqh_last;
     |                 ----^^^^^^^^^^^^^^------------------------------------------------------ help: try: `let fresh5 = &mut (*((*ctx).list).offset(y as isize)).items.tqh_last;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/screen_write.rs:2827:9
     |
2827 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2844:1
     |
2844 | / pub unsafe extern "C" fn screen_write_collect_end(mut ctx: *mut screen_write_ctx) {
2845 | |     let mut s: *mut screen = (*ctx).s;
2846 | |     let mut ci: *mut screen_write_collect_item = (*ctx).item;
2847 | |     let mut gc: grid_cell = grid_cell {
...    |
2926 | |     }
2927 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2865:28
     |
2865 |     (*ci).entry.tqe_next = 0 as *mut screen_write_collect_item;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2867:9
     |
2867 |     let ref mut fresh6 = *(*((*ctx).list).offset((*s).cy as isize)).items.tqh_last;
     |     ----^^^^^^^^^^^^^^------------------------------------------------------------- help: try: `let fresh6 = &mut (*(*((*ctx).list).offset((*s).cy as isize)).items.tqh_last);`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/screen_write.rs:2869:9
     |
2869 |     let ref mut fresh7 = (*((*ctx).list).offset((*s).cy as isize)).items.tqh_last;
     |     ----^^^^^^^^^^^^^^------------------------------------------------------------ help: try: `let fresh7 = &mut (*((*ctx).list).offset((*s).cy as isize)).items.tqh_last;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
    --> src/screen_write.rs:2897:13
     |
2897 |             xx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `grid_view_set_cells` doesn't need a mutable reference
    --> src/screen_write.rs:2912:9
     |
2912 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:2925:9
     |
2925 |         xx;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2929:1
     |
2929 | / pub unsafe extern "C" fn screen_write_collect_add(
2930 | |     mut ctx: *mut screen_write_ctx,
2931 | |     mut gc: *const grid_cell,
2932 | | ) {
...    |
2995 | |     }
2996 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:2934:50
     |
2934 |     let mut ci: *mut screen_write_collect_item = 0 as *mut screen_write_collect_item;
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:2955:5
     |
2955 |     (*ctx).cells;
     |     ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:2998:1
     |
2998 | / pub unsafe extern "C" fn screen_write_cell(
2999 | |     mut ctx: *mut screen_write_ctx,
3000 | |     mut gc: *const grid_cell,
3001 | | ) {
...    |
3217 | |     };
3218 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3004:34
     |
3004 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3005:41
     |
3005 |     let mut gce: *mut grid_cell_entry = 0 as *mut grid_cell_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_cell_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3031:13
     |
3031 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:3032:15
     |
3032 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3035:14
     |
3035 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:3057:5
     |
3057 |     (*ctx).cells;
     |     ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:3138:9
     |
3138 |         xx;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `grid_view_set_cell` doesn't need a mutable reference
    --> src/screen_write.rs:3169:50
     |
3169 |         grid_view_set_cell(gd, (*s).cx, (*s).cy, &mut tmp_gc);
     |                                                  ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `grid_view_set_cell` doesn't need a mutable reference
    --> src/screen_write.rs:3177:50
     |
3177 |         grid_view_set_cell(gd, (*s).cx, (*s).cy, &mut tmp_gc);
     |                                                  ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/screen_write.rs:3213:9
     |
3213 |         (*ctx).written;
     |         ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/screen_write.rs:3216:9
     |
3216 |         (*ctx).skipped;
     |         ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/screen_write.rs:3285:5
     |
3285 |     return &mut gc;
     |     ^^^^^^^^^^^^^^^ help: remove `return`: `&mut gc`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/screen_write.rs:3240:16
     |
3240 |         return 0 as *const grid_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/screen_write.rs:3252:9
     |
3252 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/screen_write.rs:3255:16
     |
3255 |         return 0 as *const grid_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:3261:16
     |
3261 |         return 0 as *const grid_cell;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `grid_view_set_cell` doesn't need a mutable reference
    --> src/screen_write.rs:3284:42
     |
3284 |     grid_view_set_cell(gd, *xx, (*s).cy, &mut gc);
     |                                          ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: this boolean expression can be simplified
    --> src/screen_write.rs:3312:16
     |
3312 |             if !(xx > 0 as libc::c_int as u_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `xx <= 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/screen_write.rs:3351:16
     |
3351 |             if !(xx < (*(*s).grid).sx) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `xx >= (*(*s).grid).sx`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/screen_write.rs:3372:5
     |
3372 |     return done;
     |     ^^^^^^^^^^^^ help: remove `return`: `done`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:3375:1
     |
3375 | / pub unsafe extern "C" fn screen_write_setselection(
3376 | |     mut ctx: *mut screen_write_ctx,
3377 | |     mut str: *mut u_char,
3378 | |     mut len: u_int,
...    |
3402 | |     );
3403 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3381:13
     |
3381 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:3382:15
     |
3382 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3385:14
     |
3385 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/screen_write.rs:3405:1
     |
3405 | / pub unsafe extern "C" fn screen_write_rawstring(
3406 | |     mut ctx: *mut screen_write_ctx,
3407 | |     mut str: *mut u_char,
3408 | |     mut len: u_int,
...    |
3430 | |     );
3431 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3411:13
     |
3411 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/screen_write.rs:3412:15
     |
3412 |         cell: 0 as *const grid_cell,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/screen_write.rs:3415:14
     |
3415 |         ptr: 0 as *mut libc::c_void,
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1354:1
     |
1354 | / pub unsafe extern "C" fn server_set_marked(
1355 | |     mut s: *mut session,
1356 | |     mut wl: *mut winlink,
1357 | |     mut wp: *mut window_pane,
...    |
1363 | |     marked_pane.wp = wp;
1364 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1366:1
     |
1366 | / pub unsafe extern "C" fn server_clear_marked() {
1367 | |     cmd_find_clear_state(&mut marked_pane, 0 as libc::c_int);
1368 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1370:1
     |
1370 | / pub unsafe extern "C" fn server_is_marked(
1371 | |     mut s: *mut session,
1372 | |     mut wl: *mut winlink,
1373 | |     mut wp: *mut window_pane,
...    |
1384 | |     return server_check_marked();
1385 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server.rs:1384:5
     |
1384 |     return server_check_marked();
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `server_check_marked()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1387:1
     |
1387 | / pub unsafe extern "C" fn server_check_marked() -> libc::c_int {
1388 | |     return cmd_find_valid_state(&mut marked_pane);
1389 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server.rs:1388:5
     |
1388 |     return cmd_find_valid_state(&mut marked_pane);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `cmd_find_valid_state(&mut marked_pane)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this boolean expression can be simplified
    --> src/server.rs:1417:12
     |
1417 |         if !(fd == -(1 as libc::c_int)) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `fd != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/server.rs:1456:5
     |
1456 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/server.rs:1465:5
     |
1465 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1468:1
     |
1468 | / pub unsafe extern "C" fn server_start(
1469 | |     mut client: *mut tmuxproc,
1470 | |     mut base: *mut event_base,
1471 | |     mut lockfd: libc::c_int,
...    |
1568 | |     exit(0 as libc::c_int);
1569 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server.rs:1475:29
     |
1475 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1478:30
     |
1478 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1479:40
     |
1479 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/server.rs:1490:35
     |
1490 |     sigprocmask(0 as libc::c_int, &mut set, &mut oldset);
     |                                   ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/server.rs:1497:43
     |
1497 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server.rs:1497:56
     |
1497 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/server.rs:1515:35
     |
1515 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                   ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server.rs:1515:48
     |
1515 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1522:24
     |
1522 |     windows.rbh_root = 0 as *mut window;
     |                        ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1523:33
     |
1523 |     all_window_panes.rbh_root = 0 as *mut window_pane;
     |                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1524:25
     |
1524 |     clients.tqh_first = 0 as *mut client;
     |                         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1526:25
     |
1526 |     sessions.rbh_root = 0 as *mut session;
     |                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1527:31
     |
1527 |     session_groups.rbh_root = 0 as *mut session_group;
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1529:35
     |
1529 |     gettimeofday(&mut start_time, 0 as *mut libc::c_void);
     |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/server.rs:1583:12
     |
1583 |         if !(items != 0 as libc::c_int as u_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `items == 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/server.rs:1624:5
     |
1624 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server.rs:1571:30
     |
1571 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1573:29
     |
1573 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1575:27
     |
1575 |         items = cmdq_next(0 as *mut client);
     |                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1627:30
     |
1627 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1628:31
     |
1628 |     let mut c1: *mut client = 0 as *mut client;
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1629:31
     |
1629 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1630:32
     |
1630 |     let mut s1: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server.rs:1652:17
     |
1652 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1656:24
     |
1656 |         (*c).session = 0 as *mut session;
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1678:1
     |
1678 | / pub unsafe extern "C" fn server_update_socket() {
1679 | |     let mut s: *mut session = 0 as *mut session;
1680 | |     static mut last: libc::c_int = -(1 as libc::c_int);
1681 | |     let mut n: libc::c_int = 0;
...    |
1738 | |     }
1739 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server.rs:1679:31
     |
1679 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/server.rs:1705:13
     |
1705 |             n;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/server.rs:1786:1
     |
1786 | / pub unsafe extern "C" fn server_add_accept(mut timeout: libc::c_int) {
1787 | |     let mut tv: timeval = {
1788 | |         let mut init = timeval {
1789 | |             tv_sec: timeout as __time_t,
...    |
1829 | |     };
1830 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: returning the result of a `let` binding from a block
    --> src/server.rs:1792:9
     |
1788 | /         let mut init = timeval {
1789 | |             tv_sec: timeout as __time_t,
1790 | |             tv_usec: 0 as libc::c_int as __suseconds_t,
1791 | |         };
     | |__________- unnecessary `let` binding
1792 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1788 ~         
1789 ~         timeval {
1790 +             tv_sec: timeout as __time_t,
1791 +             tv_usec: 0 as libc::c_int as __suseconds_t,
1792 +         }
     |

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server.rs:1794:26
     |
1794 |     if event_initialized(&mut server_ev_accept) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server.rs:1810:13
     |
1810 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server.rs:1812:42
     |
1812 |         event_add(&mut server_ev_accept, 0 as *const timeval);
     |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1826:13
     |
1826 |             0 as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/server.rs:1828:42
     |
1828 |         event_add(&mut server_ev_accept, &mut tv);
     |                                          ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server.rs:1849:39
     |
1849 |             fd = server_create_socket(0 as *mut *mut libc::c_char);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1893:30
     |
1893 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1894:31
     |
1894 |     let mut w1: *mut window = 0 as *mut window;
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1895:36
     |
1895 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1896:29
     |
1896 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1935:30
     |
1935 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server.rs:1936:36
     |
1936 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1380:1
     |
1380 | / pub unsafe extern "C" fn server_client_how_many() -> u_int {
1381 | |     let mut c: *mut client = 0 as *mut client;
1382 | |     let mut n: u_int = 0;
1383 | |     n = 0 as libc::c_int as u_int;
...    |
1392 | |     return n;
1393 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:1392:5
     |
1392 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:1381:30
     |
1381 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/server_client.rs:1388:13
     |
1388 |             n;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/server_client.rs:1399:55
     |
1399 |     server_client_clear_identify(data as *mut client, 0 as *mut window_pane);
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1402:1
     |
1402 | / pub unsafe extern "C" fn server_client_set_identify(
1403 | |     mut c: *mut client,
1404 | |     mut delay: u_int,
1405 | | ) {
...    |
1433 | |     server_redraw_client(c);
1434 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:1411:26
     |
1411 |     if event_initialized(&mut (*c).identify_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:1429:45
     |
1429 |         event_add(&mut (*c).identify_timer, &mut tv);
     |                                             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1436:1
     |
1436 | / pub unsafe extern "C" fn server_client_clear_identify(
1437 | |     mut c: *mut client,
1438 | |     mut wp: *mut window_pane,
1439 | | ) {
...    |
1448 | |     server_redraw_client(c);
1449 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1451:1
     |
1451 | / pub unsafe extern "C" fn server_client_check_nested(mut c: *mut client) -> libc::c_int {
1452 | |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
1453 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
1454 | |     envent = environ_find((*c).environ, b"TMUX\0" as *const u8 as *const libc::c_char);
...    |
1465 | |     return 0 as libc::c_int;
1466 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:1465:5
     |
1465 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:1452:42
     |
1452 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1453:36
     |
1453 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1468:1
     |
1468 | / pub unsafe extern "C" fn server_client_set_key_table(
1469 | |     mut c: *mut client,
1470 | |     mut name: *const libc::c_char,
1471 | | ) {
...    |
1478 | |     (*(*c).keytable).references;
1479 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/server_client.rs:1478:5
     |
1478 |     (*(*c).keytable).references;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1481:1
     |
1481 | / pub unsafe extern "C" fn server_client_get_key_table(
1482 | |     mut c: *mut client,
1483 | | ) -> *const libc::c_char {
1484 | |     let mut s: *mut session = (*c).session;
...    |
1496 | |     return name;
1497 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:1496:5
     |
1496 |     return name;
     |     ^^^^^^^^^^^^ help: remove `return`: `name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/server_client.rs:1485:41
     |
1485 |     let mut name: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/server_client.rs:1502:5
     |
1502 | /     return (strcmp((*table).name, server_client_get_key_table(c)) == 0 as libc::c_int)
1503 | |         as libc::c_int;
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1502 ~     (strcmp((*table).name, server_client_get_key_table(c)) == 0 as libc::c_int)
1503 +         as libc::c_int
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1506:1
     |
1506 | / pub unsafe extern "C" fn server_client_create(mut fd: libc::c_int) -> *mut client {
1507 | |     let mut c: *mut client = 0 as *mut client;
1508 | |     setblocking(fd, 0 as libc::c_int);
1509 | |     c = xcalloc(
...    |
1600 | |     return c;
1601 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:1600:5
     |
1600 |     return c;
     |     ^^^^^^^^^ help: remove `return`: `c`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:1507:30
     |
1507 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1524:46
     |
1524 |     if gettimeofday(&mut (*c).creation_time, 0 as *mut libc::c_void) != 0 as libc::c_int
     |                                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:1535:16
     |
1535 |     (*c).cwd = 0 as *const libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1536:28
     |
1536 |     (*c).queue.tqh_first = 0 as *mut cmdq_item;
     |                            ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1542:18
     |
1542 |     (*c).title = 0 as *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1543:20
     |
1543 |     (*c).session = 0 as *mut session;
     |                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1544:25
     |
1544 |     (*c).last_session = 0 as *mut session;
     |                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1553:27
     |
1553 |     (*c).message_string = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1554:34
     |
1554 |     (*c).message_log.tqh_first = 0 as *mut message_entry;
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1556:26
     |
1556 |     (*c).prompt_string = 0 as *mut libc::c_char;
     |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1557:26
     |
1557 |     (*c).prompt_buffer = 0 as *mut utf8_data;
     |                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/server_client.rs:1566:5
     |
1566 |     (*(*c).keytable).references;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/server_client.rs:1595:27
     |
1595 |     (*c).entry.tqe_next = 0 as *mut client;
     |                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1603:1
     |
1603 | / pub unsafe extern "C" fn server_client_open(
1604 | |     mut c: *mut client,
1605 | |     mut cause: *mut *mut libc::c_char,
1606 | | ) -> libc::c_int {
...    |
1623 | |     return 0 as libc::c_int;
1624 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:1623:5
     |
1623 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1626:1
     |
1626 | / pub unsafe extern "C" fn server_client_lost(mut c: *mut client) {
1627 | |     let mut msg: *mut message_entry = 0 as *mut message_entry;
1628 | |     let mut msg1: *mut message_entry = 0 as *mut message_entry;
1629 | |     (*c).flags |= 0x200 as libc::c_int;
...    |
1703 | |     server_update_socket();
1704 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_client.rs:1627:39
     |
1627 |     let mut msg: *mut message_entry = 0 as *mut message_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1628:40
     |
1628 |     let mut msg1: *mut message_entry = 0 as *mut message_entry;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1630:37
     |
1630 |     server_client_clear_identify(c, 0 as *mut window_pane);
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:1656:26
     |
1656 |     if event_initialized(&mut (*c).status.timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:1669:26
     |
1669 |     if event_initialized(&mut (*c).identify_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:1673:26
     |
1673 |     if event_initialized(&mut (*c).message_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:1698:17
     |
1698 |     (*c).peer = 0 as *mut tmuxpeer;
     |                 ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tmuxpeer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1706:1
     |
1706 | / pub unsafe extern "C" fn server_client_unref(mut c: *mut client) {
1707 | |     log_debug(
1708 | |         b"unref client %p (%d references)\0" as *const u8 as *const libc::c_char,
1709 | |         c,
...    |
1729 | |     }
1730 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/server_client.rs:1713:5
     |
1713 |     (*c).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/server_client.rs:1727:13
     |
1727 |             0 as *const timeval,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1751:1
     |
1751 | / pub unsafe extern "C" fn server_client_suspend(mut c: *mut client) {
1752 | |     let mut s: *mut session = (*c).session;
1753 | |     if s.is_null() || (*c).flags & 0x1000 as libc::c_int != 0 {
1754 | |         return;
...    |
1764 | |     );
1765 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/server_client.rs:1762:9
     |
1762 |         0 as *const libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1767:1
     |
1767 | / pub unsafe extern "C" fn server_client_detach(mut c: *mut client, mut msgtype: msgtype) {
1768 | |     let mut s: *mut session = (*c).session;
1769 | |     if s.is_null() || (*c).flags & 0x1000 as libc::c_int != 0 {
1770 | |         return;
...    |
1780 | |     );
1781 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:1783:1
     |
1783 | / pub unsafe extern "C" fn server_client_exec(
1784 | |     mut c: *mut client,
1785 | |     mut cmd: *const libc::c_char,
1786 | | ) {
...    |
1822 | |     free(msg as *mut libc::c_void);
1823 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_client.rs:1788:38
     |
1788 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:1789:42
     |
1789 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/server_client.rs:2336:5
     |
2336 |     return key;
     |     ^^^^^^^^^^^ help: remove `return`: `key`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:1828:30
     |
1828 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:1829:36
     |
1829 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/server_client.rs:1937:17
     |
1937 | /                 match current_block {
1938 | |                     7333393191927787629 => {
1939 | |                         type_0 = DOWN;
1940 | |                         x = (*m).x;
...    |
1950 | |                     _ => {}
1951 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1937 ~                 if current_block == 7333393191927787629 {
1938 +                     type_0 = DOWN;
1939 +                     x = (*m).x;
1940 +                     y = (*m).y;
1941 +                     b = (*m).b;
1942 +                     log_debug(
1943 +                         b"down at %u,%u\0" as *const u8 as *const libc::c_char,
1944 +                         x,
1945 +                         y,
1946 +                     );
1947 +                     flag = 0x100000 as libc::c_int;
1948 +                 }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:1960:54
     |
1960 |                     event_add(&mut (*c).click_timer, &mut tv);
     |                                                      ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/server_client.rs:1983:13
     |
1983 |             y;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/server_client.rs:2322:9
     |
2322 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unneeded `return` statement
    --> src/server_client.rs:2374:5
     |
2374 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/server_client.rs:2352:9
     |
2352 |         tv.tv_sec;
     |         ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:2377:1
     |
2377 | / pub unsafe extern "C" fn server_client_handle_key(
2378 | |     mut c: *mut client,
2379 | |     mut key: key_code,
2380 | | ) {
...    |
2633 | |     }
2634 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_client.rs:2383:30
     |
2383 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2384:36
     |
2384 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2386:37
     |
2386 |     let mut table: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2387:37
     |
2387 |     let mut first: *mut key_table = 0 as *mut key_table;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_table>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2390:18
     |
2390 |         cmdlist: 0 as *mut cmd_list,
     |                  ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2393:23
     |
2393 |             rbe_left: 0 as *mut key_binding,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2394:24
     |
2394 |             rbe_right: 0 as *mut key_binding,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2395:25
     |
2395 |             rbe_parent: 0 as *mut key_binding,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2399:36
     |
2399 |     let mut bd: *mut key_binding = 0 as *mut key_binding;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<key_binding>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2404:18
     |
2404 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2405:12
     |
2405 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2406:13
     |
2406 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2407:12
     |
2407 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2408:13
     |
2408 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2418:46
     |
2418 |     if gettimeofday(&mut (*c).activity_time, 0 as *mut libc::c_void) != 0 as libc::c_int
     |                                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2432:18
     |
2432 |             wp = 0 as *mut window_pane;
     |                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2439:41
     |
2439 |         server_client_clear_identify(c, 0 as *mut window_pane);
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:2568:56
     |
2568 |                         server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/server_client.rs:2579:25
     |
2579 |                         (*table).references;
     |                         ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:2593:63
     |
2593 | ...                   event_add(&mut (*c).repeat_timer, &mut tv);
     |                                                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/server_client.rs:2596:60
     |
2596 | ...                   server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2599:51
     |
2599 |                         key_bindings_dispatch(bd, 0 as *mut cmdq_item, c, m, &mut fs);
     |                                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:2612:56
     |
2612 |                         server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:2618:60
     |
2618 | ...                   server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:2636:1
     |
2636 | / pub unsafe extern "C" fn server_client_loop() {
2637 | |     let mut c: *mut client = 0 as *mut client;
2638 | |     let mut w: *mut window = 0 as *mut window;
2639 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
...    |
2669 | |     }
2670 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_client.rs:2637:30
     |
2637 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2638:30
     |
2638 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2639:36
     |
2639 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/server_client.rs:2723:5
     |
2723 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/server_client.rs:2679:9
     |
2675 | /         let mut init = timeval {
2676 | |             tv_sec: 0,
2677 | |             tv_usec: 100000 as libc::c_int as __suseconds_t,
2678 | |         };
     | |__________- unnecessary `let` binding
2679 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2675 ~         
2676 ~         timeval {
2677 +             tv_sec: 0,
2678 +             tv_usec: 100000 as libc::c_int as __suseconds_t,
2679 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:2721:40
     |
2721 |     event_add(&mut (*wp).resize_timer, &mut tv);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: returning the result of a `let` binding from a block
    --> src/server_client.rs:2781:9
     |
2777 | /         let mut init = timeval {
2778 | |             tv_sec: 0,
2779 | |             tv_usec: 250000 as libc::c_int as __suseconds_t,
2780 | |         };
     | |__________- unnecessary `let` binding
2781 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2777 ~         
2778 ~         timeval {
2779 +             tv_sec: 0,
2780 +             tv_usec: 250000 as libc::c_int as __suseconds_t,
2781 +         }
     |

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:2797:26
     |
2797 |     if event_initialized(&mut (*wp).resize_timer) == 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_pending` doesn't need a mutable reference
    --> src/server_client.rs:2814:9
     |
2814 |         &mut (*wp).resize_timer,
     |         ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:2816:9
     |
2816 |         0 as *mut timeval,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_pending` doesn't need a mutable reference
    --> src/server_client.rs:2827:13
     |
2827 |             &mut (*wp).resize_timer,
     |             ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:2829:13
     |
2829 |             0 as *mut timeval,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:2835:40
     |
2835 |     event_add(&mut (*wp).resize_timer, &mut tv);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: this boolean expression can be simplified
    --> src/server_client.rs:2846:8
     |
2846 |     if !((*(*wp).window).active != wp) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*(*wp).window).active == wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/server_client.rs:2847:12
     |
2847 |         if !((*wp).screen != &mut (*wp).base as *mut screen) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*wp).screen == &mut (*wp).base as *mut screen`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/server_client.rs:2856:24
     |
2856 |                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*(*c).session).flags & 0x1 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/server_client.rs:2839:30
     |
2839 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2894:40
     |
2894 |     let mut loop_0: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:2948:40
     |
2948 |         server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:2996:36
     |
2996 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/server_client.rs:3005:9
     |
3001 | /         let mut init = timeval {
3002 | |             tv_sec: 0,
3003 | |             tv_usec: 1000 as libc::c_int as __suseconds_t,
3004 | |         };
     | |__________- unnecessary `let` binding
3005 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3001 ~         
3002 ~         timeval {
3003 +             tv_sec: 0,
3004 +             tv_usec: 1000 as libc::c_int as __suseconds_t,
3005 +         }
     |

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/server_client.rs:3071:30
     |
3071 |         if event_initialized(&mut ev) == 0 {
     |                              ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:3084:17
     |
3084 |                 0 as *mut libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_pending` doesn't need a mutable reference
    --> src/server_client.rs:3087:26
     |
3087 |         if event_pending(&mut ev, 0x1 as libc::c_int as libc::c_short, 0 as *mut timeval)
     |                          ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:3087:72
     |
3087 |         if event_pending(&mut ev, 0x1 as libc::c_int as libc::c_short, 0 as *mut timeval)
     |                                                                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/server_client.rs:3091:32
     |
3091 |             event_add(&mut ev, &mut tv);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_client.rs:3114:43
     |
3114 |         tty_update_mode(tty, (*tty).mode, 0 as *mut screen);
     |                                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3121:51
     |
3121 |                 tty_update_mode(tty, (*tty).mode, 0 as *mut screen);
     |                                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3129:43
     |
3129 |         tty_update_mode(tty, (*tty).mode, 0 as *mut screen);
     |                                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3139:39
     |
3139 |     tty_update_mode(tty, (*tty).mode, 0 as *mut screen);
     |                                       ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3154:45
     |
3154 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3155:40
     |
3155 |     let mut title: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3156:36
     |
3156 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3161:27
     |
3161 |     ft = format_create(c, 0 as *mut cmdq_item, 0 as libc::c_int, 0 as libc::c_int);
     |                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3162:28
     |
3162 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3162:47
     |
3162 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3162:66
     |
3162 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3163:51
     |
3163 |     title = format_expand_time(ft, template, time(0 as *mut time_t));
     |                                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/server_client.rs:3212:16
     |
3212 |             if !((*c).stdin_callback).is_none() {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `((*c).stdin_callback).is_some()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/server_client.rs:3232:16
     |
3232 |             if !((*c).flags & 0x2000 as libc::c_int != 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).flags & 0x2000 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/server_client.rs:3262:16
     |
3262 |             if !((*c).flags & 0x40 as libc::c_int == 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).flags & 0x40 as libc::c_int != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/server_client.rs:3264:20
     |
3264 |                 if !((*c).tty.fd == -(1 as libc::c_int)) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).tty.fd != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *const _` detected
    --> src/server_client.rs:3181:41
     |
3181 |     let mut data: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3183:31
     |
3183 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3248:28
     |
3248 |             (*c).session = 0 as *mut session;
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3254:17
     |
3254 |                 0 as *const libc::c_void,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3266:62
     |
3266 |                     if gettimeofday(&mut (*c).activity_time, 0 as *mut libc::c_void)
     |                                                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/server_client.rs:3299:5
     |
3299 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/server_client.rs:3308:5
     |
3308 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:3315:38
     |
3315 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3317:38
     |
3317 |     let mut cmdlist: *mut cmd_list = 0 as *mut cmd_list;
     |                                      ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_list>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3319:44
     |
3319 |     let mut argv: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3320:40
     |
3320 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3361:13
     |
3361 |             0 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3373:21
     |
3373 |                     0 as *mut cmd_find_state,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3374:21
     |
3374 |                     0 as *mut mouse_event,
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3389:21
     |
3389 |                     0 as *mut libc::c_void,
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3419:41
     |
3419 |     let mut data: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3420:41
     |
3420 |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_client.rs:3423:39
     |
3423 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3605:13
     |
3605 |             0 as *const libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_client.rs:3633:42
     |
3633 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:3662:1
     |
3662 | / pub unsafe extern "C" fn server_client_push_stdout(mut c: *mut client) {
3663 | |     let mut data: msg_stdout_data = msg_stdout_data {
3664 | |         size: 0,
3665 | |         data: [0; 8192],
...    |
3732 | |     }
3733 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/server_client.rs:3708:9
     |
3708 |         (*c).references;
     |         ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/server_client.rs:3721:13
     |
3721 |             0 as *const timeval,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:3746:1
     |
3746 | / pub unsafe extern "C" fn server_client_push_stderr(mut c: *mut client) {
3747 | |     let mut data: msg_stderr_data = msg_stderr_data {
3748 | |         size: 0,
3749 | |         data: [0; 8192],
...    |
3820 | |     }
3821 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/server_client.rs:3796:9
     |
3796 |         (*c).references;
     |         ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/server_client.rs:3809:13
     |
3809 |             0 as *const timeval,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:3823:1
     |
3823 | / pub unsafe extern "C" fn server_client_get_cwd(
3824 | |     mut c: *mut client,
3825 | | ) -> *const libc::c_char {
3826 | |     let mut s: *mut session = 0 as *mut session;
...    |
3838 | |     return b".\0" as *const u8 as *const libc::c_char;
3839 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:3838:5
     |
3838 |     return b".\0" as *const u8 as *const libc::c_char;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `b".\0" as *const u8 as *const libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:3826:31
     |
3826 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_client.rs:3841:1
     |
3841 | / pub unsafe extern "C" fn server_client_get_path(
3842 | |     mut c: *mut client,
3843 | |     mut file: *const libc::c_char,
3844 | | ) -> *mut libc::c_char {
...    |
3861 | |     return xstrdup(resolved.as_mut_ptr());
3862 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_client.rs:3861:5
     |
3861 |     return xstrdup(resolved.as_mut_ptr());
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xstrdup(resolved.as_mut_ptr())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_client.rs:3845:39
     |
3845 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1277:1
     |
1277 | / pub unsafe extern "C" fn server_redraw_client(mut c: *mut client) {
1278 | |     (*c).flags |= 0x8 as libc::c_int;
1279 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1281:1
     |
1281 | / pub unsafe extern "C" fn server_status_client(mut c: *mut client) {
1282 | |     (*c).flags |= 0x10 as libc::c_int;
1283 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1285:1
     |
1285 | / pub unsafe extern "C" fn server_redraw_session(mut s: *mut session) {
1286 | |     let mut c: *mut client = 0 as *mut client;
1287 | |     c = clients.tqh_first;
1288 | |     while !c.is_null() {
...    |
1293 | |     }
1294 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1286:30
     |
1286 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1296:1
     |
1296 | / pub unsafe extern "C" fn server_redraw_session_group(mut s: *mut session) {
1297 | |     let mut sg: *mut session_group = 0 as *mut session_group;
1298 | |     sg = session_group_contains(s);
1299 | |     if sg.is_null() {
...    |
1307 | |     };
1308 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1297:38
     |
1297 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1310:1
     |
1310 | / pub unsafe extern "C" fn server_status_session(mut s: *mut session) {
1311 | |     let mut c: *mut client = 0 as *mut client;
1312 | |     c = clients.tqh_first;
1313 | |     while !c.is_null() {
...    |
1318 | |     }
1319 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1311:30
     |
1311 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1321:1
     |
1321 | / pub unsafe extern "C" fn server_status_session_group(mut s: *mut session) {
1322 | |     let mut sg: *mut session_group = 0 as *mut session_group;
1323 | |     sg = session_group_contains(s);
1324 | |     if sg.is_null() {
...    |
1332 | |     };
1333 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1322:38
     |
1322 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1335:1
     |
1335 | / pub unsafe extern "C" fn server_redraw_window(mut w: *mut window) {
1336 | |     let mut c: *mut client = 0 as *mut client;
1337 | |     c = clients.tqh_first;
1338 | |     while !c.is_null() {
...    |
1343 | |     }
1344 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1336:30
     |
1336 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1346:1
     |
1346 | / pub unsafe extern "C" fn server_redraw_window_borders(mut w: *mut window) {
1347 | |     let mut c: *mut client = 0 as *mut client;
1348 | |     c = clients.tqh_first;
1349 | |     while !c.is_null() {
...    |
1354 | |     }
1355 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1347:30
     |
1347 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1357:1
     |
1357 | / pub unsafe extern "C" fn server_status_window(mut w: *mut window) {
1358 | |     let mut s: *mut session = 0 as *mut session;
1359 | |     s = sessions_RB_MINMAX(&mut sessions, -(1 as libc::c_int));
1360 | |     while !s.is_null() {
...    |
1365 | |     }
1366 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1358:31
     |
1358 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1368:1
     |
1368 | / pub unsafe extern "C" fn server_lock() {
1369 | |     let mut c: *mut client = 0 as *mut client;
1370 | |     c = clients.tqh_first;
1371 | |     while !c.is_null() {
...    |
1376 | |     }
1377 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1369:30
     |
1369 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1379:1
     |
1379 | / pub unsafe extern "C" fn server_lock_session(mut s: *mut session) {
1380 | |     let mut c: *mut client = 0 as *mut client;
1381 | |     c = clients.tqh_first;
1382 | |     while !c.is_null() {
...    |
1387 | |     }
1388 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1380:30
     |
1380 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1390:1
     |
1390 | / pub unsafe extern "C" fn server_lock_client(mut c: *mut client) {
1391 | |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
1392 | |     if (*c).flags & 0x2000 as libc::c_int != 0 {
1393 | |         return;
...    |
1420 | |     );
1421 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/server_fn.rs:1391:40
     |
1391 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1423:1
     |
1423 | / pub unsafe extern "C" fn server_kill_pane(mut wp: *mut window_pane) {
1424 | |     let mut w: *mut window = (*wp).window;
1425 | |     if window_count_panes(w) == 1 as libc::c_int as u_int {
1426 | |         server_kill_window(w);
...    |
1433 | |     };
1434 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1436:1
     |
1436 | / pub unsafe extern "C" fn server_kill_window(mut w: *mut window) {
1437 | |     let mut s: *mut session = 0 as *mut session;
1438 | |     let mut next_s: *mut session = 0 as *mut session;
1439 | |     let mut target_s: *mut session = 0 as *mut session;
...    |
1479 | |     recalculate_sizes();
1480 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1437:31
     |
1437 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1438:36
     |
1438 |     let mut next_s: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1439:38
     |
1439 |     let mut target_s: *mut session = 0 as *mut session;
     |                                      ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1440:38
     |
1440 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1441:32
     |
1441 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1482:1
     |
1482 | / pub unsafe extern "C" fn server_link_window(
1483 | |     mut src: *mut session,
1484 | |     mut srcwl: *mut winlink,
1485 | |     mut dst: *mut session,
...    |
1544 | |     return 0 as libc::c_int;
1545 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_fn.rs:1544:5
     |
1544 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1491:35
     |
1491 |     let mut dstwl: *mut winlink = 0 as *mut winlink;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1492:41
     |
1492 |     let mut srcsg: *mut session_group = 0 as *mut session_group;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1493:41
     |
1493 |     let mut dstsg: *mut session_group = 0 as *mut session_group;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1500:13
     |
1500 |     dstwl = 0 as *mut winlink;
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1525:31
     |
1525 |                 (*dst).curw = 0 as *mut winlink;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1547:1
     |
1547 | / pub unsafe extern "C" fn server_unlink_window(
1548 | |     mut s: *mut session,
1549 | |     mut wl: *mut winlink,
1550 | | ) {
...    |
1555 | |     };
1556 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1558:1
     |
1558 | / pub unsafe extern "C" fn server_destroy_pane(
1559 | |     mut wp: *mut window_pane,
1560 | |     mut notify: libc::c_int,
1561 | | ) {
...    |
1662 | |     };
1663 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1564:13
     |
1564 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1565:12
     |
1565 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1566:15
     |
1566 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1567:15
     |
1567 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `ctime_r` doesn't need a mutable reference
    --> src/server_fn.rs:1626:17
     |
1626 |         ctime_r(&mut t, tim.as_mut_ptr());
     |                 ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1665:38
     |
1665 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1666:32
     |
1666 |     let mut s1: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/server_fn.rs:1697:12
     |
1697 |         if !(s_loop == s) {
     |            ^^^^^^^^^^^^^^ help: try: `s_loop != s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/server_fn.rs:1712:5
     |
1712 |     return s_out;
     |     ^^^^^^^^^^^^^ help: remove `return`: `s_out`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1692:36
     |
1692 |     let mut s_loop: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1693:35
     |
1693 |     let mut s_out: *mut session = 0 as *mut session;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1694:13
     |
1694 |     s_out = 0 as *mut session;
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1715:1
     |
1715 | / pub unsafe extern "C" fn server_destroy_session(mut s: *mut session) {
1716 | |     let mut c: *mut client = 0 as *mut client;
1717 | |     let mut s_new: *mut session = 0 as *mut session;
1718 | |     if options_get_number(
...    |
1750 | |     recalculate_sizes();
1751 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/server_fn.rs:1729:12
     |
1729 |         if !((*c).session != s) {
     |            ^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).session == s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1716:30
     |
1716 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1717:35
     |
1717 |     let mut s_new: *mut session = 0 as *mut session;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1725:17
     |
1725 |         s_new = 0 as *mut session;
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1731:32
     |
1731 |                 (*c).session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1734:37
     |
1734 |                 (*c).last_session = 0 as *mut session;
     |                                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/server_fn.rs:1736:48
     |
1736 |                 server_client_set_key_table(c, 0 as *const libc::c_char);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1742:48
     |
1742 |                 session_update_activity(s_new, 0 as *mut timeval);
     |                                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1743:64
     |
1743 |                 gettimeofday(&mut (*s_new).last_attached_time, 0 as *mut libc::c_void);
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1753:1
     |
1753 | / pub unsafe extern "C" fn server_check_unattached() {
1754 | |     let mut s: *mut session = 0 as *mut session;
1755 | |     s = sessions_RB_MINMAX(&mut sessions, -(1 as libc::c_int));
1756 | |     while !s.is_null() {
...    |
1774 | |     }
1775 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/server_fn.rs:1757:12
     |
1757 |         if !((*s).flags & 0x1 as libc::c_int == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*s).flags & 0x1 as libc::c_int != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/server_fn.rs:1754:31
     |
1754 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1777:1
     |
1777 | / pub unsafe extern "C" fn server_set_stdin_callback(
1778 | |     mut c: *mut client,
1779 | |     mut cb: Option::<
1780 | |         unsafe extern "C" fn(*mut client, libc::c_int, *mut libc::c_void) -> (),
...    |
1814 | |     return 0 as libc::c_int;
1815 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/server_fn.rs:1814:5
     |
1814 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/server_fn.rs:1800:5
     |
1800 |     (*c).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/server_fn.rs:1811:9
     |
1811 |         0 as *const libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/server_fn.rs:1817:1
     |
1817 | / pub unsafe extern "C" fn server_unzoom_window(mut w: *mut window) {
1818 | |     if window_unzoom(w) == 0 as libc::c_int {
1819 | |         server_redraw_window(w);
1820 | |     }
1821 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1035:1
     |
1035 | / pub unsafe extern "C" fn sessions_RB_REMOVE_COLOR(
1036 | |     mut head: *mut sessions,
1037 | |     mut parent: *mut session,
1038 | |     mut elm: *mut session,
...    |
1226 | |     }
1227 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:1040:33
     |
1040 |     let mut tmp: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1066:17
     |
1066 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/session.rs:1081:51
     |
1081 |                     let mut oleft: *mut session = 0 as *mut session;
     |                                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1104:21
     |
1104 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1129:17
     |
1129 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1155:17
     |
1155 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/session.rs:1170:52
     |
1170 |                     let mut oright: *mut session = 0 as *mut session;
     |                                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1193:21
     |
1193 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1218:17
     |
1218 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1229:1
     |
1229 | / pub unsafe extern "C" fn sessions_RB_INSERT(
1230 | |     mut head: *mut sessions,
1231 | |     mut elm: *mut session,
1232 | | ) -> *mut session {
...    |
1262 | |     return 0 as *mut session;
1263 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1262:5
     |
1262 |     return 0 as *mut session;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1233:33
     |
1233 |     let mut tmp: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1234:36
     |
1234 |     let mut parent: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:1240:9
     |
1240 | /         if comp < 0 as libc::c_int {
1241 | |             tmp = (*tmp).entry.rbe_left;
1242 | |         } else if comp > 0 as libc::c_int {
1243 | |             tmp = (*tmp).entry.rbe_right;
1244 | |         } else {
1245 | |             return tmp
1246 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/session.rs:1249:30
     |
1249 |     (*elm).entry.rbe_right = 0 as *mut session;
     |                              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1262:12
     |
1262 |     return 0 as *mut session;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1265:1
     |
1265 | / pub unsafe extern "C" fn sessions_RB_INSERT_COLOR(
1266 | |     mut head: *mut sessions,
1267 | |     mut elm: *mut session,
1268 | | ) {
...    |
1384 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1385 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/session.rs:1274:12
     |
1274 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/session.rs:1269:36
     |
1269 |     let mut parent: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1270:37
     |
1270 |     let mut gparent: *mut session = 0 as *mut session;
     |                                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1271:33
     |
1271 |     let mut tmp: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1304:21
     |
1304 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1328:17
     |
1328 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1356:21
     |
1356 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1380:17
     |
1380 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1387:1
     |
1387 | / pub unsafe extern "C" fn sessions_RB_MINMAX(
1388 | |     mut head: *mut sessions,
1389 | |     mut val: libc::c_int,
1390 | | ) -> *mut session {
...    |
1401 | |     return parent;
1402 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1401:5
     |
1401 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1392:36
     |
1392 |     let mut parent: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1404:1
     |
1404 | / pub unsafe extern "C" fn sessions_RB_REMOVE(
1405 | |     mut head: *mut sessions,
1406 | |     mut elm: *mut session,
1407 | | ) -> *mut session {
...    |
1494 | |     return old;
1495 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1494:5
     |
1494 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1409:35
     |
1409 |     let mut child: *mut session = 0 as *mut session;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1410:36
     |
1410 |     let mut parent: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1420:38
     |
1420 |         let mut left: *mut session = 0 as *mut session;
     |                                      ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/session.rs:1472:5
     |
1472 | /     match current_block {
1473 | |         7245201122033322888 => {
1474 | |             parent = (*elm).entry.rbe_parent;
1475 | |             color = (*elm).entry.rbe_color;
...    |
1489 | |         _ => {}
1490 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1472 ~     if current_block == 7245201122033322888 {
1473 +         parent = (*elm).entry.rbe_parent;
1474 +         color = (*elm).entry.rbe_color;
1475 +         if !child.is_null() {
1476 +             (*child).entry.rbe_parent = parent;
1477 +         }
1478 +         if !parent.is_null() {
1479 +             if (*parent).entry.rbe_left == elm {
1480 +                 (*parent).entry.rbe_left = child;
1481 +             } else {
1482 +                 (*parent).entry.rbe_right = child;
1483 +             }
1484 +         } else {
1485 +             (*head).rbh_root = child;
1486 +         }
1487 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1497:1
     |
1497 | / pub unsafe extern "C" fn sessions_RB_PREV(mut elm: *mut session) -> *mut session {
1498 | |     if !((*elm).entry.rbe_left).is_null() {
1499 | |         elm = (*elm).entry.rbe_left;
1500 | |         while !((*elm).entry.rbe_right).is_null() {
...    |
1515 | |     return elm;
1516 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1515:5
     |
1515 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1518:1
     |
1518 | / pub unsafe extern "C" fn sessions_RB_NEXT(mut elm: *mut session) -> *mut session {
1519 | |     if !((*elm).entry.rbe_right).is_null() {
1520 | |         elm = (*elm).entry.rbe_right;
1521 | |         while !((*elm).entry.rbe_left).is_null() {
...    |
1536 | |     return elm;
1537 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1536:5
     |
1536 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1539:1
     |
1539 | / pub unsafe extern "C" fn sessions_RB_NFIND(
1540 | |     mut head: *mut sessions,
1541 | |     mut elm: *mut session,
1542 | | ) -> *mut session {
...    |
1557 | |     return res;
1558 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1557:5
     |
1557 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1544:33
     |
1544 |     let mut res: *mut session = 0 as *mut session;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:1548:9
     |
1548 | /         if comp < 0 as libc::c_int {
1549 | |             res = tmp;
1550 | |             tmp = (*tmp).entry.rbe_left;
1551 | |         } else if comp > 0 as libc::c_int {
...    |
1554 | |             return tmp
1555 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1560:1
     |
1560 | / pub unsafe extern "C" fn sessions_RB_FIND(
1561 | |     mut head: *mut sessions,
1562 | |     mut elm: *mut session,
1563 | | ) -> *mut session {
...    |
1576 | |     return 0 as *mut session;
1577 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1576:5
     |
1576 |     return 0 as *mut session;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:1568:9
     |
1568 | /         if comp < 0 as libc::c_int {
1569 | |             tmp = (*tmp).entry.rbe_left;
1570 | |         } else if comp > 0 as libc::c_int {
1571 | |             tmp = (*tmp).entry.rbe_right;
1572 | |         } else {
1573 | |             return tmp
1574 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/session.rs:1576:12
     |
1576 |     return 0 as *mut session;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1579:1
     |
1579 | / pub unsafe extern "C" fn session_cmp(
1580 | |     mut s1: *mut session,
1581 | |     mut s2: *mut session,
1582 | | ) -> libc::c_int {
1583 | |     return strcmp((*s1).name, (*s2).name);
1584 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1583:5
     |
1583 |     return strcmp((*s1).name, (*s2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*s1).name, (*s2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1586:1
     |
1586 | / pub unsafe extern "C" fn session_groups_RB_NFIND(
1587 | |     mut head: *mut session_groups,
1588 | |     mut elm: *mut session_group,
1589 | | ) -> *mut session_group {
...    |
1604 | |     return res;
1605 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1604:5
     |
1604 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1591:39
     |
1591 |     let mut res: *mut session_group = 0 as *mut session_group;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:1595:9
     |
1595 | /         if comp < 0 as libc::c_int {
1596 | |             res = tmp;
1597 | |             tmp = (*tmp).entry.rbe_left;
1598 | |         } else if comp > 0 as libc::c_int {
...    |
1601 | |             return tmp
1602 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1607:1
     |
1607 | / pub unsafe extern "C" fn session_groups_RB_REMOVE(
1608 | |     mut head: *mut session_groups,
1609 | |     mut elm: *mut session_group,
1610 | | ) -> *mut session_group {
...    |
1697 | |     return old;
1698 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1697:5
     |
1697 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:1612:41
     |
1612 |     let mut child: *mut session_group = 0 as *mut session_group;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1613:42
     |
1613 |     let mut parent: *mut session_group = 0 as *mut session_group;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1623:44
     |
1623 |         let mut left: *mut session_group = 0 as *mut session_group;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/session.rs:1675:5
     |
1675 | /     match current_block {
1676 | |         7245201122033322888 => {
1677 | |             parent = (*elm).entry.rbe_parent;
1678 | |             color = (*elm).entry.rbe_color;
...    |
1692 | |         _ => {}
1693 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1675 ~     if current_block == 7245201122033322888 {
1676 +         parent = (*elm).entry.rbe_parent;
1677 +         color = (*elm).entry.rbe_color;
1678 +         if !child.is_null() {
1679 +             (*child).entry.rbe_parent = parent;
1680 +         }
1681 +         if !parent.is_null() {
1682 +             if (*parent).entry.rbe_left == elm {
1683 +                 (*parent).entry.rbe_left = child;
1684 +             } else {
1685 +                 (*parent).entry.rbe_right = child;
1686 +             }
1687 +         } else {
1688 +             (*head).rbh_root = child;
1689 +         }
1690 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1700:1
     |
1700 | / pub unsafe extern "C" fn session_groups_RB_FIND(
1701 | |     mut head: *mut session_groups,
1702 | |     mut elm: *mut session_group,
1703 | | ) -> *mut session_group {
...    |
1716 | |     return 0 as *mut session_group;
1717 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:1716:5
     |
1716 |     return 0 as *mut session_group;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session_group`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:1708:9
     |
1708 | /         if comp < 0 as libc::c_int {
1709 | |             tmp = (*tmp).entry.rbe_left;
1710 | |         } else if comp > 0 as libc::c_int {
1711 | |             tmp = (*tmp).entry.rbe_right;
1712 | |         } else {
1713 | |             return tmp
1714 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/session.rs:1716:12
     |
1716 |     return 0 as *mut session_group;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1719:1
     |
1719 | / pub unsafe extern "C" fn session_groups_RB_INSERT_COLOR(
1720 | |     mut head: *mut session_groups,
1721 | |     mut elm: *mut session_group,
1722 | | ) {
...    |
1838 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1839 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/session.rs:1728:12
     |
1728 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/session.rs:1723:42
     |
1723 |     let mut parent: *mut session_group = 0 as *mut session_group;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1724:43
     |
1724 |     let mut gparent: *mut session_group = 0 as *mut session_group;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:1725:39
     |
1725 |     let mut tmp: *mut session_group = 0 as *mut session_group;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1758:21
     |
1758 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1782:17
     |
1782 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1810:21
     |
1810 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1834:17
     |
1834 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:1841:1
     |
1841 | / pub unsafe extern "C" fn session_groups_RB_REMOVE_COLOR(
1842 | |     mut head: *mut session_groups,
1843 | |     mut parent: *mut session_group,
1844 | |     mut elm: *mut session_group,
...    |
2032 | |     }
2033 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:1846:39
     |
1846 |     let mut tmp: *mut session_group = 0 as *mut session_group;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1872:17
     |
1872 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/session.rs:1887:57
     |
1887 |                     let mut oleft: *mut session_group = 0 as *mut session_group;
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1910:21
     |
1910 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1935:17
     |
1935 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:1961:17
     |
1961 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/session.rs:1976:58
     |
1976 |                     let mut oright: *mut session_group = 0 as *mut session_group;
     |                                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/session.rs:1999:21
     |
1999 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/session.rs:2024:17
     |
2024 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2035:1
     |
2035 | / pub unsafe extern "C" fn session_groups_RB_NEXT(
2036 | |     mut elm: *mut session_group,
2037 | | ) -> *mut session_group {
2038 | |     if !((*elm).entry.rbe_right).is_null() {
...    |
2055 | |     return elm;
2056 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2055:5
     |
2055 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2058:1
     |
2058 | / pub unsafe extern "C" fn session_groups_RB_INSERT(
2059 | |     mut head: *mut session_groups,
2060 | |     mut elm: *mut session_group,
2061 | | ) -> *mut session_group {
...    |
2091 | |     return 0 as *mut session_group;
2092 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2091:5
     |
2091 |     return 0 as *mut session_group;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session_group`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2062:39
     |
2062 |     let mut tmp: *mut session_group = 0 as *mut session_group;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2063:42
     |
2063 |     let mut parent: *mut session_group = 0 as *mut session_group;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/session.rs:2069:9
     |
2069 | /         if comp < 0 as libc::c_int {
2070 | |             tmp = (*tmp).entry.rbe_left;
2071 | |         } else if comp > 0 as libc::c_int {
2072 | |             tmp = (*tmp).entry.rbe_right;
2073 | |         } else {
2074 | |             return tmp
2075 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/session.rs:2078:30
     |
2078 |     (*elm).entry.rbe_right = 0 as *mut session_group;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2091:12
     |
2091 |     return 0 as *mut session_group;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2094:1
     |
2094 | / pub unsafe extern "C" fn session_groups_RB_MINMAX(
2095 | |     mut head: *mut session_groups,
2096 | |     mut val: libc::c_int,
2097 | | ) -> *mut session_group {
...    |
2108 | |     return parent;
2109 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2108:5
     |
2108 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2099:42
     |
2099 |     let mut parent: *mut session_group = 0 as *mut session_group;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2111:1
     |
2111 | / pub unsafe extern "C" fn session_groups_RB_PREV(
2112 | |     mut elm: *mut session_group,
2113 | | ) -> *mut session_group {
2114 | |     if !((*elm).entry.rbe_left).is_null() {
...    |
2131 | |     return elm;
2132 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2131:5
     |
2131 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2134:1
     |
2134 | / pub unsafe extern "C" fn session_group_cmp(
2135 | |     mut s1: *mut session_group,
2136 | |     mut s2: *mut session_group,
2137 | | ) -> libc::c_int {
2138 | |     return strcmp((*s1).name, (*s2).name);
2139 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2138:5
     |
2138 |     return strcmp((*s1).name, (*s2).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*s1).name, (*s2).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2141:1
     |
2141 | / pub unsafe extern "C" fn session_alive(mut s: *mut session) -> libc::c_int {
2142 | |     let mut s_loop: *mut session = 0 as *mut session;
2143 | |     s_loop = sessions_RB_MINMAX(&mut sessions, -(1 as libc::c_int));
2144 | |     while !s_loop.is_null() {
...    |
2150 | |     return 0 as libc::c_int;
2151 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2150:5
     |
2150 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2142:36
     |
2142 |     let mut s_loop: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2153:1
     |
2153 | / pub unsafe extern "C" fn session_find(mut name: *const libc::c_char) -> *mut session {
2154 | |     let mut s: session = session {
2155 | |         id: 0,
2156 | |         name: 0 as *mut libc::c_char,
...    |
2227 | |     return sessions_RB_FIND(&mut sessions, &mut s);
2228 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2227:5
     |
2227 |     return sessions_RB_FIND(&mut sessions, &mut s);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `sessions_RB_FIND(&mut sessions, &mut s)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2156:15
     |
2156 |         name: 0 as *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/session.rs:2157:14
     |
2157 |         cwd: 0 as *const libc::c_char,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2165:31
     |
2165 |                     tqe_next: 0 as *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2166:31
     |
2166 |                     tqe_prev: 0 as *mut *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2174:27
     |
2174 |                 evcb_arg: 0 as *mut libc::c_void,
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2178:31
     |
2178 |                     tqe_next: 0 as *mut event,
     |                               ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2179:31
     |
2179 |                     tqe_prev: 0 as *mut *mut event,
     |                               ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2183:22
     |
2183 |             ev_base: 0 as *mut event_base,
     |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2187:34
     |
2187 |                         le_next: 0 as *mut event,
     |                                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2188:34
     |
2188 |                         le_prev: 0 as *mut *mut event,
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2199:15
     |
2199 |         curw: 0 as *mut winlink,
     |               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2201:24
     |
2201 |             tqh_first: 0 as *mut winlink,
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2202:23
     |
2202 |             tqh_last: 0 as *mut *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2205:23
     |
2205 |             rbh_root: 0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2208:16
     |
2208 |         hooks: 0 as *mut hooks,
     |                ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hooks>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2209:18
     |
2209 |         options: 0 as *mut options,
     |                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2212:14
     |
2212 |         tio: 0 as *mut termios,
     |              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<termios>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2213:18
     |
2213 |         environ: 0 as *mut environ,
     |                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2216:23
     |
2216 |             tqe_next: 0 as *mut session,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2217:23
     |
2217 |             tqe_prev: 0 as *mut *mut session,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2220:23
     |
2220 |             rbe_left: 0 as *mut session,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2221:24
     |
2221 |             rbe_right: 0 as *mut session,
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2222:25
     |
2222 |             rbe_parent: 0 as *mut session,
     |                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2230:1
     |
2230 | / pub unsafe extern "C" fn session_find_by_id_str(
2231 | |     mut s: *const libc::c_char,
2232 | | ) -> *mut session {
2233 | |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
...    |
2249 | |     return session_find_by_id(id);
2250 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2249:5
     |
2249 |     return session_find_by_id(id);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_find_by_id(id)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/session.rs:2233:43
     |
2233 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2236:16
     |
2236 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2247:16
     |
2247 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2252:1
     |
2252 | / pub unsafe extern "C" fn session_find_by_id(mut id: u_int) -> *mut session {
2253 | |     let mut s: *mut session = 0 as *mut session;
2254 | |     s = sessions_RB_MINMAX(&mut sessions, -(1 as libc::c_int));
2255 | |     while !s.is_null() {
...    |
2261 | |     return 0 as *mut session;
2262 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2261:5
     |
2261 |     return 0 as *mut session;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2253:31
     |
2253 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2261:12
     |
2261 |     return 0 as *mut session;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2264:1
     |
2264 | / pub unsafe extern "C" fn session_create(
2265 | |     mut prefix: *const libc::c_char,
2266 | |     mut name: *const libc::c_char,
2267 | |     mut argc: libc::c_int,
...    |
2369 | |     return s;
2370 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2369:5
     |
2369 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2278:31
     |
2278 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2279:32
     |
2279 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2287:17
     |
2287 |     (*s).curw = 0 as *mut winlink;
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2288:28
     |
2288 |     (*s).lastw.tqh_first = 0 as *mut winlink;
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2290:29
     |
2290 |     (*s).windows.rbh_root = 0 as *mut winlink;
     |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2298:16
     |
2298 |     (*s).tio = 0 as *mut termios;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<termios>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2317:21
     |
2317 |         (*s).name = 0 as *mut libc::c_char;
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2348:46
     |
2348 |     if gettimeofday(&mut (*s).creation_time, 0 as *mut libc::c_void) != 0 as libc::c_int
     |                                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/session.rs:2354:29
     |
2354 |         wl = session_new(s, 0 as *const libc::c_char, argc, argv, path, cwd, idx, cause);
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2364:20
     |
2364 |             return 0 as *mut session;
     |                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2372:1
     |
2372 | / pub unsafe extern "C" fn session_add_ref(
2373 | |     mut s: *mut session,
2374 | |     mut from: *const libc::c_char,
2375 | | ) {
...    |
2385 | |     );
2386 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/session.rs:2377:5
     |
2377 |     (*s).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2388:1
     |
2388 | / pub unsafe extern "C" fn session_remove_ref(
2389 | |     mut s: *mut session,
2390 | |     mut from: *const libc::c_char,
2391 | | ) {
...    |
2420 | |     }
2421 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/session.rs:2393:5
     |
2393 |     (*s).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/session.rs:2418:13
     |
2418 |             0 as *const timeval,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2442:1
     |
2442 | / pub unsafe extern "C" fn session_destroy(
2443 | |     mut s: *mut session,
2444 | |     mut from: *const libc::c_char,
2445 | | ) {
...    |
2477 | |     );
2478 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:2446:32
     |
2446 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2452:17
     |
2452 |     (*s).curw = 0 as *mut winlink;
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/session.rs:2456:26
     |
2456 |     if event_initialized(&mut (*s).lock_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2480:1
     |
2480 | / pub unsafe extern "C" fn session_check_name(
2481 | |     mut name: *const libc::c_char,
2482 | | ) -> libc::c_int {
2483 | |     return (*name as libc::c_int != '\0' as i32
...    |
2486 | |             as libc::c_int == '\0' as i32) as libc::c_int;
2487 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2483:5
     |
2483 | /     return (*name as libc::c_int != '\0' as i32
2484 | |         && *name
2485 | |             .offset(strcspn(name, b":.\0" as *const u8 as *const libc::c_char) as isize)
2486 | |             as libc::c_int == '\0' as i32) as libc::c_int;
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2483 ~     (*name as libc::c_int != '\0' as i32
2484 +         && *name
2485 +             .offset(strcspn(name, b":.\0" as *const u8 as *const libc::c_char) as isize)
2486 +             as libc::c_int == '\0' as i32) as libc::c_int
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2506:1
     |
2506 | / pub unsafe extern "C" fn session_update_activity(
2507 | |     mut s: *mut session,
2508 | |     mut from: *mut timeval,
2509 | | ) {
...    |
2564 | |     }
2565 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:2518:47
     |
2518 |         gettimeofday(&mut (*s).activity_time, 0 as *mut libc::c_void);
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/session.rs:2535:26
     |
2535 |     if event_initialized(&mut (*s).lock_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_add` doesn't need a mutable reference
    --> src/session.rs:2562:45
     |
2562 |             event_add(&mut (*s).lock_timer, &mut tv);
     |                                             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2567:1
     |
2567 | / pub unsafe extern "C" fn session_next_session(mut s: *mut session) -> *mut session {
2568 | |     let mut s2: *mut session = 0 as *mut session;
2569 | |     if (sessions.rbh_root).is_null() || session_alive(s) == 0 {
2570 | |         return 0 as *mut session;
...    |
2579 | |     return s2;
2580 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2579:5
     |
2579 |     return s2;
     |     ^^^^^^^^^^ help: remove `return`: `s2`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2568:32
     |
2568 |     let mut s2: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2570:16
     |
2570 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2577:16
     |
2577 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2582:1
     |
2582 | / pub unsafe extern "C" fn session_previous_session(mut s: *mut session) -> *mut session {
2583 | |     let mut s2: *mut session = 0 as *mut session;
2584 | |     if (sessions.rbh_root).is_null() || session_alive(s) == 0 {
2585 | |         return 0 as *mut session;
...    |
2594 | |     return s2;
2595 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2594:5
     |
2594 |     return s2;
     |     ^^^^^^^^^^ help: remove `return`: `s2`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2583:32
     |
2583 |     let mut s2: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2585:16
     |
2585 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2592:16
     |
2592 |         return 0 as *mut session;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2597:1
     |
2597 | / pub unsafe extern "C" fn session_new(
2598 | |     mut s: *mut session,
2599 | |     mut name: *const libc::c_char,
2600 | |     mut argc: libc::c_int,
...    |
2653 | |     return wl;
2654 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2653:5
     |
2653 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2607:30
     |
2607 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2608:32
     |
2608 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2609:33
     |
2609 |     let mut env: *mut environ = 0 as *mut environ;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/session.rs:2610:42
     |
2610 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2615:16
     |
2615 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2647:16
     |
2647 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2656:1
     |
2656 | / pub unsafe extern "C" fn session_attach(
2657 | |     mut s: *mut session,
2658 | |     mut w: *mut window,
2659 | |     mut idx: libc::c_int,
...    |
2672 | |     return wl;
2673 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2672:5
     |
2672 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2662:32
     |
2662 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2666:16
     |
2666 |         return 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2675:1
     |
2675 | / pub unsafe extern "C" fn session_detach(
2676 | |     mut s: *mut session,
2677 | |     mut wl: *mut winlink,
2678 | | ) -> libc::c_int {
...    |
2704 | |     return 0 as libc::c_int;
2705 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2704:5
     |
2704 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2707:1
     |
2707 | / pub unsafe extern "C" fn session_has(
2708 | |     mut s: *mut session,
2709 | |     mut w: *mut window,
2710 | | ) -> libc::c_int {
...    |
2719 | |     return 0 as libc::c_int;
2720 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2719:5
     |
2719 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2711:32
     |
2711 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2722:1
     |
2722 | / pub unsafe extern "C" fn session_is_linked(
2723 | |     mut s: *mut session,
2724 | |     mut w: *mut window,
2725 | | ) -> libc::c_int {
...    |
2731 | |     return ((*w).references != 1 as libc::c_int as u_int) as libc::c_int;
2732 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2731:5
     |
2731 |     return ((*w).references != 1 as libc::c_int as u_int) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*w).references != 1 as libc::c_int as u_int) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2726:38
     |
2726 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/session.rs:2742:5
     |
2742 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2745:1
     |
2745 | / pub unsafe extern "C" fn session_next(
2746 | |     mut s: *mut session,
2747 | |     mut alert: libc::c_int,
2748 | | ) -> libc::c_int {
...    |
2768 | |     return session_set_current(s, wl);
2769 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2768:5
     |
2768 |     return session_set_current(s, wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_set_current(s, wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2749:32
     |
2749 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/session.rs:2779:5
     |
2779 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2782:1
     |
2782 | / pub unsafe extern "C" fn session_previous(
2783 | |     mut s: *mut session,
2784 | |     mut alert: libc::c_int,
2785 | | ) -> libc::c_int {
...    |
2805 | |     return session_set_current(s, wl);
2806 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2805:5
     |
2805 |     return session_set_current(s, wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_set_current(s, wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2786:32
     |
2786 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2808:1
     |
2808 | / pub unsafe extern "C" fn session_select(
2809 | |     mut s: *mut session,
2810 | |     mut idx: libc::c_int,
2811 | | ) -> libc::c_int {
...    |
2814 | |     return session_set_current(s, wl);
2815 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2814:5
     |
2814 |     return session_set_current(s, wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_set_current(s, wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2812:32
     |
2812 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2817:1
     |
2817 | / pub unsafe extern "C" fn session_last(mut s: *mut session) -> libc::c_int {
2818 | |     let mut wl: *mut winlink = 0 as *mut winlink;
2819 | |     wl = (*s).lastw.tqh_first;
2820 | |     if wl.is_null() {
...    |
2826 | |     return session_set_current(s, wl);
2827 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2826:5
     |
2826 |     return session_set_current(s, wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_set_current(s, wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2818:32
     |
2818 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2829:1
     |
2829 | / pub unsafe extern "C" fn session_set_current(
2830 | |     mut s: *mut session,
2831 | |     mut wl: *mut winlink,
2832 | | ) -> libc::c_int {
...    |
2845 | |     return 0 as libc::c_int;
2846 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2845:5
     |
2845 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2848:1
     |
2848 | / pub unsafe extern "C" fn session_group_contains(
2849 | |     mut target: *mut session,
2850 | | ) -> *mut session_group {
2851 | |     let mut sg: *mut session_group = 0 as *mut session_group;
...    |
2864 | |     return 0 as *mut session_group;
2865 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2864:5
     |
2864 |     return 0 as *mut session_group;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut session_group`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2851:38
     |
2851 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2852:31
     |
2852 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2864:12
     |
2864 |     return 0 as *mut session_group;
     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2867:1
     |
2867 | / pub unsafe extern "C" fn session_group_find(
2868 | |     mut name: *const libc::c_char,
2869 | | ) -> *mut session_group {
2870 | |     let mut sg: session_group = session_group {
...    |
2884 | |     return session_groups_RB_FIND(&mut session_groups, &mut sg);
2885 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2884:5
     |
2884 |     return session_groups_RB_FIND(&mut session_groups, &mut sg);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `session_groups_RB_FIND(&mut session_groups, &mut sg)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/session.rs:2871:15
     |
2871 |         name: 0 as *const libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2873:24
     |
2873 |             tqh_first: 0 as *mut session,
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2874:23
     |
2874 |             tqh_last: 0 as *mut *mut session,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2877:23
     |
2877 |             rbe_left: 0 as *mut session_group,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2878:24
     |
2878 |             rbe_right: 0 as *mut session_group,
     |                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2879:25
     |
2879 |             rbe_parent: 0 as *mut session_group,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2887:1
     |
2887 | / pub unsafe extern "C" fn session_group_new(
2888 | |     mut name: *const libc::c_char,
2889 | | ) -> *mut session_group {
2890 | |     let mut sg: *mut session_group = 0 as *mut session_group;
...    |
2903 | |     return sg;
2904 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2903:5
     |
2903 |     return sg;
     |     ^^^^^^^^^^ help: remove `return`: `sg`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2890:38
     |
2890 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2900:32
     |
2900 |     (*sg).sessions.tqh_first = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2906:1
     |
2906 | / pub unsafe extern "C" fn session_group_add(
2907 | |     mut sg: *mut session_group,
2908 | |     mut s: *mut session,
2909 | | ) {
...    |
2915 | |     }
2916 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:2911:32
     |
2911 |         (*s).gentry.tqe_next = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2918:38
     |
2918 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2935:1
     |
2935 | / pub unsafe extern "C" fn session_group_count(mut sg: *mut session_group) -> u_int {
2936 | |     let mut s: *mut session = 0 as *mut session;
2937 | |     let mut n: u_int = 0;
2938 | |     n = 0 as libc::c_int as u_int;
...    |
2945 | |     return n;
2946 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/session.rs:2945:5
     |
2945 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/session.rs:2936:31
     |
2936 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/session.rs:2942:9
     |
2942 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2948:1
     |
2948 | / pub unsafe extern "C" fn session_group_synchronize_to(mut s: *mut session) {
2949 | |     let mut sg: *mut session_group = 0 as *mut session_group;
2950 | |     let mut target: *mut session = 0 as *mut session;
2951 | |     sg = session_group_contains(s);
...    |
2965 | |     }
2966 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:2949:38
     |
2949 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2950:36
     |
2950 |     let mut target: *mut session = 0 as *mut session;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2955:14
     |
2955 |     target = 0 as *mut session;
     |              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:2968:1
     |
2968 | / pub unsafe extern "C" fn session_group_synchronize_from(mut target: *mut session) {
2969 | |     let mut sg: *mut session_group = 0 as *mut session_group;
2970 | |     let mut s: *mut session = 0 as *mut session;
2971 | |     sg = session_group_contains(target);
...    |
2981 | |     }
2982 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:2969:38
     |
2969 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2970:31
     |
2970 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2988:19
     |
2988 |         rbh_root: 0 as *mut winlink,
     |                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2990:33
     |
2990 |     let mut ww: *mut winlinks = 0 as *mut winlinks;
     |                                 ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlinks>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2992:20
     |
2992 |         tqh_first: 0 as *mut winlink,
     |                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2993:19
     |
2993 |         tqh_last: 0 as *mut *mut winlink,
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2995:32
     |
2995 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:2996:33
     |
2996 |     let mut wl2: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3012:29
     |
3012 |     (*s).windows.rbh_root = 0 as *mut winlink;
     |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3038:28
     |
3038 |     (*s).lastw.tqh_first = 0 as *mut winlink;
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3044:38
     |
3044 |             (*wl2).sentry.tqe_next = 0 as *mut winlink;
     |                                      ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/session.rs:3065:1
     |
3065 | / pub unsafe extern "C" fn session_renumber_windows(mut s: *mut session) {
3066 | |     let mut wl: *mut winlink = 0 as *mut winlink;
3067 | |     let mut wl1: *mut winlink = 0 as *mut winlink;
3068 | |     let mut wl_new: *mut winlink = 0 as *mut winlink;
...    |
3132 | |     }
3133 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/session.rs:3066:32
     |
3066 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3067:33
     |
3067 |     let mut wl1: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3068:36
     |
3068 |     let mut wl_new: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3070:19
     |
3070 |         rbh_root: 0 as *mut winlink,
     |                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3073:20
     |
3073 |         tqh_first: 0 as *mut winlink,
     |                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3074:19
     |
3074 |         tqh_last: 0 as *mut *mut winlink,
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3083:29
     |
3083 |     (*s).windows.rbh_root = 0 as *mut winlink;
     |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/session.rs:3101:9
     |
3101 |         new_idx;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/session.rs:3109:28
     |
3109 |     (*s).lastw.tqh_first = 0 as *mut winlink;
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/session.rs:3115:41
     |
3115 |             (*wl_new).sentry.tqe_next = 0 as *mut winlink;
     |                                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/status.rs:1276:5
     |
1276 |     return path;
     |     ^^^^^^^^^^^^ help: remove `return`: `path`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/status.rs:1248:41
     |
1248 |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:1249:49
     |
1249 |     let mut history_file: *const libc::c_char = 0 as *const libc::c_char;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1250:39
     |
1250 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1256:16
     |
1256 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1264:16
     |
1264 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1268:16
     |
1268 |         return 0 as *mut libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1279:1
     |
1279 | / pub unsafe extern "C" fn status_prompt_load_history() {
1280 | |     let mut f: *mut FILE = 0 as *mut FILE;
1281 | |     let mut history_file: *mut libc::c_char = 0 as *mut libc::c_char;
1282 | |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
1328 | |     fclose(f);
1329 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:1280:28
     |
1280 |     let mut f: *mut FILE = 0 as *mut FILE;
     |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1281:47
     |
1281 |     let mut history_file: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1282:39
     |
1282 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1283:38
     |
1283 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1331:1
     |
1331 | / pub unsafe extern "C" fn status_prompt_save_history() {
1332 | |     let mut f: *mut FILE = 0 as *mut FILE;
1333 | |     let mut i: u_int = 0;
1334 | |     let mut history_file: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
1361 | |     fclose(f);
1362 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:1332:28
     |
1332 |     let mut f: *mut FILE = 0 as *mut FILE;
     |                            ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<FILE>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1334:47
     |
1334 |     let mut history_file: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:1359:9
     |
1359 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `event_add` doesn't need a mutable reference
    --> src/status.rs:1386:43
     |
1386 |         event_add(&mut (*c).status.timer, &mut tv);
     |                                           ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1395:1
     |
1395 | / pub unsafe extern "C" fn status_timer_start(mut c: *mut client) {
1396 | |     let mut s: *mut session = (*c).session;
1397 | |     if event_initialized(&mut (*c).status.timer) != 0 {
1398 | |         event_del(&mut (*c).status.timer);
...    |
1426 | |     }
1427 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/status.rs:1397:26
     |
1397 |     if event_initialized(&mut (*c).status.timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1429:1
     |
1429 | / pub unsafe extern "C" fn status_timer_start_all() {
1430 | |     let mut c: *mut client = 0 as *mut client;
1431 | |     c = clients.tqh_first;
1432 | |     while !c.is_null() {
...    |
1435 | |     }
1436 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:1430:30
     |
1430 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1438:1
     |
1438 | / pub unsafe extern "C" fn status_update_saved(mut s: *mut session) {
1439 | |     if options_get_number((*s).options, b"status\0" as *const u8 as *const libc::c_char)
1440 | |         == 0
1441 | |     {
...    |
1451 | |     };
1452 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1454:1
     |
1454 | / pub unsafe extern "C" fn status_at_line(mut c: *mut client) -> libc::c_int {
1455 | |     let mut s: *mut session = (*c).session;
1456 | |     if (*c).flags & 0x800000 as libc::c_int != 0 {
1457 | |         return -(1 as libc::c_int);
...    |
1462 | |     return ((*c).tty.sy).wrapping_sub(status_line_size(s)) as libc::c_int;
1463 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/status.rs:1462:5
     |
1462 |     return ((*c).tty.sy).wrapping_sub(status_line_size(s)) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*c).tty.sy).wrapping_sub(status_line_size(s)) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1465:1
     |
1465 | / pub unsafe extern "C" fn status_line_size(mut s: *mut session) -> u_int {
1466 | |     if (*s).statusat == -(1 as libc::c_int) {
1467 | |         return 0 as libc::c_int as u_int;
1468 | |     }
1469 | |     return 1 as libc::c_int as u_int;
1470 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/status.rs:1469:5
     |
1469 |     return 1 as libc::c_int as u_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/status.rs:1499:5
     |
1499 |     return left;
     |     ^^^^^^^^^^^^ help: remove `return`: `left`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/status.rs:1478:45
     |
1478 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1479:39
     |
1479 |     let mut left: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1490:30
     |
1490 |     left = status_replace(c, 0 as *mut winlink, template, t);
     |                              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/status.rs:1529:5
     |
1529 |     return right;
     |     ^^^^^^^^^^^^^ help: remove `return`: `right`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/status.rs:1508:45
     |
1508 |     let mut template: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1509:40
     |
1509 |     let mut right: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1520:31
     |
1520 |     right = status_replace(c, 0 as *mut winlink, template, t);
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1532:1
     |
1532 | / pub unsafe extern "C" fn status_get_window_at(
1533 | |     mut c: *mut client,
1534 | |     mut x: u_int,
1535 | | ) -> *mut window {
...    |
1557 | |     return 0 as *mut window;
1558 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/status.rs:1557:5
     |
1557 |     return 0 as *mut window;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:1537:32
     |
1537 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1538:32
     |
1538 |     let mut oo: *mut options = 0 as *mut options;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:1539:40
     |
1539 |     let mut sep: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1557:12
     |
1557 |     return 0 as *mut window;
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:1560:1
     |
1560 | / pub unsafe extern "C" fn status_redraw(mut c: *mut client) -> libc::c_int {
1561 | |     let mut current_block: u64;
1562 | |     let mut ctx: screen_write_ctx = screen_write_ctx {
1563 | |         wp: 0 as *mut window_pane,
...    |
2022 | |     return 1 as libc::c_int;
2023 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/status.rs:1746:8
     |
1746 |     if !((*c).tty.sy < lines) {
     |        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*c).tty.sy >= lines`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/status.rs:2022:5
     |
2022 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:1563:13
     |
1563 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1564:12
     |
1564 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1565:15
     |
1565 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1566:15
     |
1566 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1574:32
     |
1574 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1576:16
     |
1576 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1577:17
     |
1577 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1578:15
     |
1578 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1582:18
     |
1582 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1586:15
     |
1586 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1612:16
     |
1612 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1613:17
     |
1613 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1614:15
     |
1614 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1618:18
     |
1618 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1622:15
     |
1622 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1695:32
     |
1695 |     let mut oo: *mut options = 0 as *mut options;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1697:39
     |
1697 |     let mut left: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1698:40
     |
1698 |     let mut right: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:1699:40
     |
1699 |     let mut sep: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1716:34
     |
1716 |         (*c).status.old_status = 0 as *mut screen;
     |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1722:13
     |
1722 |     right = 0 as *mut libc::c_char;
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1726:14
     |
1726 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:1738:34
     |
1738 |     screen_write_start(&mut ctx, 0 as *mut window_pane, &mut (*c).status.status);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:1741:37
     |
1741 |         screen_write_putc(&mut ctx, &mut stdgc, ' ' as i32 as u_char);
     |                                     ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:1743:9
     |
1743 |         offset;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/status.rs:1808:42
     |
1808 |             screen_write_start(&mut ctx, 0 as *mut window_pane, &mut window_list);
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:1841:25
     |
1841 |                         wlavailable;
     |                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:1848:25
     |
1848 |                         wlavailable;
     |                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:1859:25
     |
1859 |                         wlstart;
     |                         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:1861:25
     |
1861 |                         wlavailable;
     |                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/status.rs:1900:25
     |
1900 |                         0 as *mut window_pane,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:1928:53
     |
1928 |                         screen_write_putc(&mut ctx, &mut gc, '<' as i32 as u_char);
     |                                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:1948:53
     |
1948 |                         screen_write_putc(&mut ctx, &mut gc, '>' as i32 as u_char);
     |                                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:1991:25
     |
1991 |                         wloffset;
     |                         ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/status.rs:2059:5
     |
2059 |     return expanded;
     |     ^^^^^^^^^^^^^^^^ help: remove `return`: `expanded`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:2030:36
     |
2030 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2031:43
     |
2031 |     let mut expanded: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2044:13
     |
2044 |             0 as *mut cmdq_item,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2051:13
     |
2051 |             0 as *mut cmdq_item,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2056:28
     |
2056 |     format_defaults(ft, c, 0 as *mut session, wl, 0 as *mut window_pane);
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2056:51
     |
2056 |     format_defaults(ft, c, 0 as *mut session, wl, 0 as *mut window_pane);
     |                                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/status.rs:2112:5
     |
2112 |     return text;
     |     ^^^^^^^^^^^^ help: remove `return`: `text`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/status.rs:2069:40
     |
2069 |     let mut fmt: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2070:39
     |
2070 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2115:1
     |
2115 | / pub unsafe extern "C" fn status_message_clear(mut c: *mut client) {
2116 | |     if ((*c).message_string).is_null() {
2117 | |         return;
2118 | |     }
...    |
2125 | |     screen_reinit(&mut (*c).status.status);
2126 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:2120:27
     |
2120 |     (*c).message_string = 0 as *mut libc::c_char;
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2128:1
     |
2128 | / pub unsafe extern "C" fn status_message_callback(
2129 | |     mut fd: libc::c_int,
2130 | |     mut event: libc::c_short,
2131 | |     mut data: *mut libc::c_void,
...    |
2134 | |     status_message_clear(c);
2135 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2137:1
     |
2137 | / pub unsafe extern "C" fn status_message_redraw(mut c: *mut client) -> libc::c_int {
2138 | |     let mut ctx: screen_write_ctx = screen_write_ctx {
2139 | |         wp: 0 as *mut window_pane,
2140 | |         s: 0 as *mut screen,
...    |
2270 | |     return 1 as libc::c_int;
2271 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/status.rs:2270:5
     |
2270 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:2139:13
     |
2139 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2140:12
     |
2140 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2141:15
     |
2141 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2142:15
     |
2142 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2151:16
     |
2151 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2152:17
     |
2152 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2153:15
     |
2153 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2157:18
     |
2157 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2161:15
     |
2161 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2240:34
     |
2240 |     screen_write_start(&mut ctx, 0 as *mut window_pane, &mut (*c).status.status);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:2248:37
     |
2248 |         screen_write_putc(&mut ctx, &mut gc, ' ' as i32 as u_char);
     |                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:2250:9
     |
2250 |         offset;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2273:1
     |
2273 | / pub unsafe extern "C" fn status_prompt_set(
2274 | |     mut c: *mut client,
2275 | |     mut msg: *const libc::c_char,
2276 | |     mut input: *const libc::c_char,
...    |
2342 | |     format_free(ft);
2343 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:2282:36
     |
2282 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2284:38
     |
2284 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2285:37
     |
2285 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2286:27
     |
2286 |     ft = format_create(c, 0 as *mut cmdq_item, 0 as libc::c_int, 0 as libc::c_int);
     |                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2287:28
     |
2287 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2287:47
     |
2287 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2287:66
     |
2287 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2288:14
     |
2288 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2345:1
     |
2345 | / pub unsafe extern "C" fn status_prompt_clear(mut c: *mut client) {
2346 | |     if ((*c).prompt_string).is_null() {
2347 | |         return;
2348 | |     }
...    |
2358 | |     screen_reinit(&mut (*c).status.status);
2359 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:2353:26
     |
2353 |     (*c).prompt_string = 0 as *mut libc::c_char;
     |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2355:26
     |
2355 |     (*c).prompt_buffer = 0 as *mut utf8_data;
     |                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2361:1
     |
2361 | / pub unsafe extern "C" fn status_prompt_update(
2362 | |     mut c: *mut client,
2363 | |     mut msg: *const libc::c_char,
2364 | |     mut input: *const libc::c_char,
...    |
2381 | |     format_free(ft);
2382 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/status.rs:2366:36
     |
2366 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2368:38
     |
2368 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2369:27
     |
2369 |     ft = format_create(c, 0 as *mut cmdq_item, 0 as libc::c_int, 0 as libc::c_int);
     |                           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2370:28
     |
2370 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2370:47
     |
2370 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2370:66
     |
2370 |     format_defaults(ft, c, 0 as *mut session, 0 as *mut winlink, 0 as *mut window_pane);
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2371:14
     |
2371 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/status.rs:2384:1
     |
2384 | / pub unsafe extern "C" fn status_prompt_redraw(mut c: *mut client) -> libc::c_int {
2385 | |     let mut ctx: screen_write_ctx = screen_write_ctx {
2386 | |         wp: 0 as *mut window_pane,
2387 | |         s: 0 as *mut screen,
...    |
2607 | |     return 1 as libc::c_int;
2608 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/status.rs:2545:8
     |
2545 |     if !(left == 0 as libc::c_int as u_int) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `left != 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/status.rs:2607:5
     |
2607 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:2386:13
     |
2386 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2387:12
     |
2387 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2388:15
     |
2388 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2389:15
     |
2389 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2398:16
     |
2398 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2399:17
     |
2399 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2400:15
     |
2400 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2404:18
     |
2404 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2408:15
     |
2408 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2519:34
     |
2519 |     screen_write_start(&mut ctx, 0 as *mut window_pane, &mut (*c).status.status);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:2527:37
     |
2527 |         screen_write_putc(&mut ctx, &mut gc, ' ' as i32 as u_char);
     |                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:2529:9
     |
2529 |         offset;
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:2581:25
     |
2581 |                         &mut *((*c).prompt_buffer).offset(i as isize),
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/status.rs:2583:49
     |
2583 |                     screen_write_cell(&mut ctx, &mut gc);
     |                                                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:2587:25
     |
2587 |                         &mut *((*c).prompt_buffer).offset(i as isize),
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/status.rs:2589:49
     |
2589 |                     screen_write_cell(&mut ctx, &mut cursorgc);
     |                                                 ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:2593:13
     |
2593 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/status.rs:2598:41
     |
2598 |             screen_write_putc(&mut ctx, &mut cursorgc, ' ' as i32 as u_char);
     |                                         ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/status.rs:2618:5
     |
2618 | /     return (strchr(ws, *((*ud).data).as_ptr() as libc::c_int)
2619 | |         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int;
     | |_______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2618 ~     (strchr(ws, *((*ud).data).as_ptr() as libc::c_int)
2619 +         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int
     |

warning: `0 as *mut _` detected
    --> src/status.rs:2619:12
     |
2619 |         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/status.rs:2627:5
     |
2627 |     return (*((*ud).data).as_ptr() as libc::c_int == ' ' as i32) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*((*ud).data).as_ptr() as libc::c_int == ' ' as i32) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/status.rs:2767:5
     |
2767 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:2663:13
     |
2663 | /             match current_block_4 {
2664 | |                 900269801797573450 => {
2665 | |                     current_block_4 = 402291076735761312;
2666 | |                 }
2667 | |                 _ => {}
2668 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2663 ~             if current_block_4 == 900269801797573450 {
2664 +                 current_block_4 = 402291076735761312;
2665 +             }
     |

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:2669:13
     |
2669 | /             match current_block_4 {
2670 | |                 402291076735761312 => {
2671 | |                     current_block_4 = 5458313747564545892;
2672 | |                 }
2673 | |                 _ => {}
2674 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2669 ~             if current_block_4 == 402291076735761312 {
2670 +                 current_block_4 = 5458313747564545892;
2671 +             }
     |

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:2675:13
     |
2675 | /             match current_block_4 {
2676 | |                 5458313747564545892 => {}
2677 | |                 _ => {}
2678 | |             }
     | |_____________^ help: try this: `if current_block_4 == 5458313747564545892 {}`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match

warning: unsafe function's docs miss `# Safety` section
     --> src/status.rs:2770:1
      |
2770  | / pub unsafe extern "C" fn status_prompt_key(
2771  | |     mut c: *mut client,
2772  | |     mut key: key_code,
2773  | | ) -> libc::c_int {
...     |
14410 | |     return 0 as libc::c_int;
14411 | | }
      | |_^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/status.rs:3010:40
     |
3010 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
3011 | | ...                       ws,
3012 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
3013 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
3010 ~                                     if status_prompt_in_list(
3011 +                                         ws,
3012 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
3013 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:3081:40
     |
3081 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
3082 | | ...                       ws,
3083 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
3084 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
3081 ~                                     if status_prompt_in_list(
3082 +                                         ws,
3083 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
3084 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:3557:40
     |
3557 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
3558 | | ...                       ws,
3559 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
3560 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
3557 ~                                     if status_prompt_in_list(
3558 +                                         ws,
3559 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
3560 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:3628:40
     |
3628 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
3629 | | ...                       ws,
3630 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
3631 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
3628 ~                                     if status_prompt_in_list(
3629 +                                         ws,
3630 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
3631 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:4104:40
     |
4104 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
4105 | | ...                       ws,
4106 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
4107 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
4104 ~                                     if status_prompt_in_list(
4105 +                                         ws,
4106 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
4107 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:4175:40
     |
4175 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
4176 | | ...                       ws,
4177 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
4178 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
4175 ~                                     if status_prompt_in_list(
4176 +                                         ws,
4177 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
4178 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:4651:40
     |
4651 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
4652 | | ...                       ws,
4653 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
4654 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
4651 ~                                     if status_prompt_in_list(
4652 +                                         ws,
4653 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
4654 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:4722:40
     |
4722 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
4723 | | ...                       ws,
4724 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
4725 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
4722 ~                                     if status_prompt_in_list(
4723 +                                         ws,
4724 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
4725 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:5198:40
     |
5198 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
5199 | | ...                       ws,
5200 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
5201 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5198 ~                                     if status_prompt_in_list(
5199 +                                         ws,
5200 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
5201 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:5269:40
     |
5269 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
5270 | | ...                       ws,
5271 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
5272 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5269 ~                                     if status_prompt_in_list(
5270 +                                         ws,
5271 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
5272 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:5745:40
     |
5745 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
5746 | | ...                       ws,
5747 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
5748 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5745 ~                                     if status_prompt_in_list(
5746 +                                         ws,
5747 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
5748 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:5816:40
     |
5816 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
5817 | | ...                       ws,
5818 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
5819 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5816 ~                                     if status_prompt_in_list(
5817 +                                         ws,
5818 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
5819 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:6292:40
     |
6292 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
6293 | | ...                       ws,
6294 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
6295 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
6292 ~                                     if status_prompt_in_list(
6293 +                                         ws,
6294 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
6295 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:6363:40
     |
6363 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
6364 | | ...                       ws,
6365 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
6366 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
6363 ~                                     if status_prompt_in_list(
6364 +                                         ws,
6365 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
6366 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:6839:40
     |
6839 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
6840 | | ...                       ws,
6841 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
6842 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
6839 ~                                     if status_prompt_in_list(
6840 +                                         ws,
6841 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
6842 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:6910:40
     |
6910 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
6911 | | ...                       ws,
6912 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
6913 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
6910 ~                                     if status_prompt_in_list(
6911 +                                         ws,
6912 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
6913 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:7386:40
     |
7386 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
7387 | | ...                       ws,
7388 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
7389 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
7386 ~                                     if status_prompt_in_list(
7387 +                                         ws,
7388 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
7389 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:7457:40
     |
7457 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
7458 | | ...                       ws,
7459 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
7460 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
7457 ~                                     if status_prompt_in_list(
7458 +                                         ws,
7459 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
7460 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:7933:40
     |
7933 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
7934 | | ...                       ws,
7935 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
7936 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
7933 ~                                     if status_prompt_in_list(
7934 +                                         ws,
7935 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
7936 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:8004:40
     |
8004 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
8005 | | ...                       ws,
8006 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
8007 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
8004 ~                                     if status_prompt_in_list(
8005 +                                         ws,
8006 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
8007 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:8480:40
     |
8480 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
8481 | | ...                       ws,
8482 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
8483 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
8480 ~                                     if status_prompt_in_list(
8481 +                                         ws,
8482 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
8483 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:8551:40
     |
8551 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
8552 | | ...                       ws,
8553 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
8554 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
8551 ~                                     if status_prompt_in_list(
8552 +                                         ws,
8553 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
8554 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:9027:40
     |
9027 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
9028 | | ...                       ws,
9029 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
9030 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
9027 ~                                     if status_prompt_in_list(
9028 +                                         ws,
9029 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
9030 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:9098:40
     |
9098 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
9099 | | ...                       ws,
9100 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
9101 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
9098 ~                                     if status_prompt_in_list(
9099 +                                         ws,
9100 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
9101 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:9574:40
     |
9574 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
9575 | | ...                       ws,
9576 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
9577 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
9574 ~                                     if status_prompt_in_list(
9575 +                                         ws,
9576 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
9577 +                                     ) == 0
     |

warning: this boolean expression can be simplified
    --> src/status.rs:9645:40
     |
9645 |   ...                   if !(status_prompt_in_list(
     |  __________________________^
9646 | | ...                       ws,
9647 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
9648 | | ...                   ) != 0)
     | |_____________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
9645 ~                                     if status_prompt_in_list(
9646 +                                         ws,
9647 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
9648 +                                     ) == 0
     |

warning: this boolean expression can be simplified
     --> src/status.rs:10121:40
      |
10121 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
10122 | | ...                       ws,
10123 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
10124 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
10121 ~                                     if status_prompt_in_list(
10122 +                                         ws,
10123 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
10124 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:10192:40
      |
10192 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
10193 | | ...                       ws,
10194 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
10195 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
10192 ~                                     if status_prompt_in_list(
10193 +                                         ws,
10194 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
10195 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:10668:40
      |
10668 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
10669 | | ...                       ws,
10670 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
10671 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
10668 ~                                     if status_prompt_in_list(
10669 +                                         ws,
10670 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
10671 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:10739:40
      |
10739 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
10740 | | ...                       ws,
10741 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
10742 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
10739 ~                                     if status_prompt_in_list(
10740 +                                         ws,
10741 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
10742 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:11215:40
      |
11215 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
11216 | | ...                       ws,
11217 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
11218 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
11215 ~                                     if status_prompt_in_list(
11216 +                                         ws,
11217 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
11218 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:11286:40
      |
11286 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
11287 | | ...                       ws,
11288 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
11289 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
11286 ~                                     if status_prompt_in_list(
11287 +                                         ws,
11288 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
11289 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:11762:40
      |
11762 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
11763 | | ...                       ws,
11764 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
11765 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
11762 ~                                     if status_prompt_in_list(
11763 +                                         ws,
11764 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
11765 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:11833:40
      |
11833 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
11834 | | ...                       ws,
11835 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
11836 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
11833 ~                                     if status_prompt_in_list(
11834 +                                         ws,
11835 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
11836 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:12309:40
      |
12309 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
12310 | | ...                       ws,
12311 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
12312 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
12309 ~                                     if status_prompt_in_list(
12310 +                                         ws,
12311 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
12312 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:12380:40
      |
12380 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
12381 | | ...                       ws,
12382 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
12383 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
12380 ~                                     if status_prompt_in_list(
12381 +                                         ws,
12382 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
12383 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:12856:40
      |
12856 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
12857 | | ...                       ws,
12858 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
12859 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
12856 ~                                     if status_prompt_in_list(
12857 +                                         ws,
12858 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
12859 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:12927:40
      |
12927 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
12928 | | ...                       ws,
12929 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
12930 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
12927 ~                                     if status_prompt_in_list(
12928 +                                         ws,
12929 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
12930 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:13403:40
      |
13403 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
13404 | | ...                       ws,
13405 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
13406 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
13403 ~                                     if status_prompt_in_list(
13404 +                                         ws,
13405 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
13406 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:13474:40
      |
13474 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
13475 | | ...                       ws,
13476 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
13477 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
13474 ~                                     if status_prompt_in_list(
13475 +                                         ws,
13476 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
13477 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:13950:40
      |
13950 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
13951 | | ...                       ws,
13952 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
13953 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
13950 ~                                     if status_prompt_in_list(
13951 +                                         ws,
13952 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
13953 +                                     ) == 0
      |

warning: this boolean expression can be simplified
     --> src/status.rs:14021:40
      |
14021 |   ...                   if !(status_prompt_in_list(
      |  __________________________^
14022 | | ...                       ws,
14023 | | ...                       &mut *((*c).prompt_buffer).offset(idx as isize),
14024 | | ...                   ) != 0)
      | |_____________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
      |
14021 ~                                     if status_prompt_in_list(
14022 +                                         ws,
14023 +                                         &mut *((*c).prompt_buffer).offset(idx as isize),
14024 +                                     ) == 0
      |

warning: unneeded `return` statement
     --> src/status.rs:14410:5
      |
14410 |     return 0 as libc::c_int;
      |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/status.rs:2776:37
     |
2776 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2777:36
     |
2777 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2778:37
     |
2778 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:2781:44
     |
2781 |     let mut histstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:2782:44
     |
2782 |     let mut bufdata: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/status.rs:2783:39
     |
2783 |     let mut ws: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2797:37
     |
2797 |     let mut first: *mut utf8_data = 0 as *mut utf8_data;
     |                                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2798:36
     |
2798 |     let mut last: *mut utf8_data = 0 as *mut utf8_data;
     |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/status.rs:2799:34
     |
2799 |     let mut ud: *mut utf8_data = 0 as *mut utf8_data;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:2868:37
     |
2868 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:2873:41
     |
2873 | / ...                   &mut *((*c).prompt_buffer)
2874 | | ...                       .offset(
2875 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
2876 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:2883:41
     |
2883 | / ...                   &mut *((*c).prompt_buffer)
2884 | | ...                       .offset(
2885 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
2886 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:2893:41
     |
2893 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:2902:52
     |
2902 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:2916:41
     |
2916 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:2934:45
     |
2934 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:2960:45
     |
2960 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3001:41
     |
3001 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3012:41
     |
3012 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3018:37
     |
3018 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3033:41
     |
3033 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3044:41
     |
3044 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3057:37
     |
3057 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3069:37
     |
3069 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3072:41
     |
3072 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3080:37
     |
3080 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3083:41
     |
3083 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3089:37
     |
3089 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3175:41
     |
3175 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3191:41
     |
3191 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3199:41
     |
3199 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3205:41
     |
3205 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3213:41
     |
3213 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3219:41
     |
3219 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3223:41
     |
3223 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3245:45
     |
3245 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3299:53
     |
3299 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3331:37
     |
3331 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3340:37
     |
3340 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:3362:33
     |
3362 | / ...                   match current_block {
3363 | | ...                       2035738867698081325 => {
3364 | | ...                           if ((*c).prompt_inputcb)
3365 | | ...                               .expect(
...    |
3377 | | ...                       _ => {}
3378 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
3362 ~                                 if current_block == 2035738867698081325 {
3363 +                                     if ((*c).prompt_inputcb)
3364 +                                         .expect(
3365 +                                             "non-null function pointer",
3366 +                                         )(
3367 +                                         c,
3368 +                                         (*c).prompt_data,
3369 +                                         0 as *const libc::c_char,
3370 +                                         1 as libc::c_int,
3371 +                                     ) == 0 as libc::c_int
3372 +                                     {
3373 +                                         status_prompt_clear(c);
3374 +                                     }
3375 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:3370:45
     |
3370 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:3415:37
     |
3415 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3420:41
     |
3420 | / ...                   &mut *((*c).prompt_buffer)
3421 | | ...                       .offset(
3422 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
3423 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3430:41
     |
3430 | / ...                   &mut *((*c).prompt_buffer)
3431 | | ...                       .offset(
3432 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
3433 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3440:41
     |
3440 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:3449:52
     |
3449 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:3463:41
     |
3463 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3481:45
     |
3481 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3507:45
     |
3507 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3548:41
     |
3548 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3559:41
     |
3559 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3565:37
     |
3565 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3580:41
     |
3580 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3591:41
     |
3591 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3604:37
     |
3604 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3616:37
     |
3616 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3619:41
     |
3619 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3627:37
     |
3627 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:3630:41
     |
3630 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:3636:37
     |
3636 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3722:41
     |
3722 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3738:41
     |
3738 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3746:41
     |
3746 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3752:41
     |
3752 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3760:41
     |
3760 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3766:41
     |
3766 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3770:41
     |
3770 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3792:45
     |
3792 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3846:53
     |
3846 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3878:37
     |
3878 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:3887:37
     |
3887 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:3909:33
     |
3909 | / ...                   match current_block {
3910 | | ...                       2035738867698081325 => {
3911 | | ...                           if ((*c).prompt_inputcb)
3912 | | ...                               .expect(
...    |
3924 | | ...                       _ => {}
3925 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
3909 ~                                 if current_block == 2035738867698081325 {
3910 +                                     if ((*c).prompt_inputcb)
3911 +                                         .expect(
3912 +                                             "non-null function pointer",
3913 +                                         )(
3914 +                                         c,
3915 +                                         (*c).prompt_data,
3916 +                                         0 as *const libc::c_char,
3917 +                                         1 as libc::c_int,
3918 +                                     ) == 0 as libc::c_int
3919 +                                     {
3920 +                                         status_prompt_clear(c);
3921 +                                     }
3922 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:3917:45
     |
3917 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:3962:37
     |
3962 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3967:41
     |
3967 | / ...                   &mut *((*c).prompt_buffer)
3968 | | ...                       .offset(
3969 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
3970 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3977:41
     |
3977 | / ...                   &mut *((*c).prompt_buffer)
3978 | | ...                       .offset(
3979 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
3980 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:3987:41
     |
3987 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:3996:52
     |
3996 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:4010:41
     |
4010 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4028:45
     |
4028 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4054:45
     |
4054 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4095:41
     |
4095 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4106:41
     |
4106 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4112:37
     |
4112 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4127:41
     |
4127 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4138:41
     |
4138 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4151:37
     |
4151 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4163:37
     |
4163 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4166:41
     |
4166 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4174:37
     |
4174 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4177:41
     |
4177 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4183:37
     |
4183 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4269:41
     |
4269 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4285:41
     |
4285 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4293:41
     |
4293 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4299:41
     |
4299 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4307:41
     |
4307 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4313:41
     |
4313 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4317:41
     |
4317 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4339:45
     |
4339 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4393:53
     |
4393 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4425:37
     |
4425 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4434:37
     |
4434 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:4456:33
     |
4456 | / ...                   match current_block {
4457 | | ...                       2035738867698081325 => {
4458 | | ...                           if ((*c).prompt_inputcb)
4459 | | ...                               .expect(
...    |
4471 | | ...                       _ => {}
4472 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
4456 ~                                 if current_block == 2035738867698081325 {
4457 +                                     if ((*c).prompt_inputcb)
4458 +                                         .expect(
4459 +                                             "non-null function pointer",
4460 +                                         )(
4461 +                                         c,
4462 +                                         (*c).prompt_data,
4463 +                                         0 as *const libc::c_char,
4464 +                                         1 as libc::c_int,
4465 +                                     ) == 0 as libc::c_int
4466 +                                     {
4467 +                                         status_prompt_clear(c);
4468 +                                     }
4469 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:4464:45
     |
4464 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:4509:37
     |
4509 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:4514:41
     |
4514 | / ...                   &mut *((*c).prompt_buffer)
4515 | | ...                       .offset(
4516 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
4517 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:4524:41
     |
4524 | / ...                   &mut *((*c).prompt_buffer)
4525 | | ...                       .offset(
4526 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
4527 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:4534:41
     |
4534 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:4543:52
     |
4543 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:4557:41
     |
4557 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4575:45
     |
4575 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4601:45
     |
4601 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4642:41
     |
4642 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4653:41
     |
4653 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4659:37
     |
4659 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4674:41
     |
4674 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4685:41
     |
4685 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4698:37
     |
4698 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4710:37
     |
4710 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4713:41
     |
4713 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4721:37
     |
4721 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:4724:41
     |
4724 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:4730:37
     |
4730 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4816:41
     |
4816 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4832:41
     |
4832 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4840:41
     |
4840 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4846:41
     |
4846 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4854:41
     |
4854 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4860:41
     |
4860 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4864:41
     |
4864 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4886:45
     |
4886 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4940:53
     |
4940 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4972:37
     |
4972 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:4981:37
     |
4981 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:5003:33
     |
5003 | / ...                   match current_block {
5004 | | ...                       2035738867698081325 => {
5005 | | ...                           if ((*c).prompt_inputcb)
5006 | | ...                               .expect(
...    |
5018 | | ...                       _ => {}
5019 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
5003 ~                                 if current_block == 2035738867698081325 {
5004 +                                     if ((*c).prompt_inputcb)
5005 +                                         .expect(
5006 +                                             "non-null function pointer",
5007 +                                         )(
5008 +                                         c,
5009 +                                         (*c).prompt_data,
5010 +                                         0 as *const libc::c_char,
5011 +                                         1 as libc::c_int,
5012 +                                     ) == 0 as libc::c_int
5013 +                                     {
5014 +                                         status_prompt_clear(c);
5015 +                                     }
5016 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:5011:45
     |
5011 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:5056:37
     |
5056 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5061:41
     |
5061 | / ...                   &mut *((*c).prompt_buffer)
5062 | | ...                       .offset(
5063 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
5064 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5071:41
     |
5071 | / ...                   &mut *((*c).prompt_buffer)
5072 | | ...                       .offset(
5073 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
5074 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5081:41
     |
5081 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:5090:52
     |
5090 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:5104:41
     |
5104 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5122:45
     |
5122 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5148:45
     |
5148 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5189:41
     |
5189 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5200:41
     |
5200 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5206:37
     |
5206 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5221:41
     |
5221 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5232:41
     |
5232 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5245:37
     |
5245 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5257:37
     |
5257 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5260:41
     |
5260 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5268:37
     |
5268 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5271:41
     |
5271 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5277:37
     |
5277 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5363:41
     |
5363 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5379:41
     |
5379 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5387:41
     |
5387 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5393:41
     |
5393 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5401:41
     |
5401 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5407:41
     |
5407 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5411:41
     |
5411 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5433:45
     |
5433 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5487:53
     |
5487 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5519:37
     |
5519 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5528:37
     |
5528 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:5550:33
     |
5550 | / ...                   match current_block {
5551 | | ...                       2035738867698081325 => {
5552 | | ...                           if ((*c).prompt_inputcb)
5553 | | ...                               .expect(
...    |
5565 | | ...                       _ => {}
5566 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
5550 ~                                 if current_block == 2035738867698081325 {
5551 +                                     if ((*c).prompt_inputcb)
5552 +                                         .expect(
5553 +                                             "non-null function pointer",
5554 +                                         )(
5555 +                                         c,
5556 +                                         (*c).prompt_data,
5557 +                                         0 as *const libc::c_char,
5558 +                                         1 as libc::c_int,
5559 +                                     ) == 0 as libc::c_int
5560 +                                     {
5561 +                                         status_prompt_clear(c);
5562 +                                     }
5563 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:5558:45
     |
5558 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:5603:37
     |
5603 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5608:41
     |
5608 | / ...                   &mut *((*c).prompt_buffer)
5609 | | ...                       .offset(
5610 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
5611 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5618:41
     |
5618 | / ...                   &mut *((*c).prompt_buffer)
5619 | | ...                       .offset(
5620 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
5621 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:5628:41
     |
5628 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:5637:52
     |
5637 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:5651:41
     |
5651 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5669:45
     |
5669 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5695:45
     |
5695 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5736:41
     |
5736 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5747:41
     |
5747 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5753:37
     |
5753 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5768:41
     |
5768 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5779:41
     |
5779 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5792:37
     |
5792 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5804:37
     |
5804 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5807:41
     |
5807 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5815:37
     |
5815 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:5818:41
     |
5818 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:5824:37
     |
5824 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5910:41
     |
5910 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5926:41
     |
5926 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5934:41
     |
5934 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5940:41
     |
5940 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5948:41
     |
5948 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5954:41
     |
5954 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5958:41
     |
5958 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:5980:45
     |
5980 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6034:53
     |
6034 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6066:37
     |
6066 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6075:37
     |
6075 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:6097:33
     |
6097 | / ...                   match current_block {
6098 | | ...                       2035738867698081325 => {
6099 | | ...                           if ((*c).prompt_inputcb)
6100 | | ...                               .expect(
...    |
6112 | | ...                       _ => {}
6113 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
6097 ~                                 if current_block == 2035738867698081325 {
6098 +                                     if ((*c).prompt_inputcb)
6099 +                                         .expect(
6100 +                                             "non-null function pointer",
6101 +                                         )(
6102 +                                         c,
6103 +                                         (*c).prompt_data,
6104 +                                         0 as *const libc::c_char,
6105 +                                         1 as libc::c_int,
6106 +                                     ) == 0 as libc::c_int
6107 +                                     {
6108 +                                         status_prompt_clear(c);
6109 +                                     }
6110 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:6105:45
     |
6105 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:6150:37
     |
6150 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6155:41
     |
6155 | / ...                   &mut *((*c).prompt_buffer)
6156 | | ...                       .offset(
6157 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
6158 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6165:41
     |
6165 | / ...                   &mut *((*c).prompt_buffer)
6166 | | ...                       .offset(
6167 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
6168 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6175:41
     |
6175 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:6184:52
     |
6184 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:6198:41
     |
6198 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6216:45
     |
6216 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6242:45
     |
6242 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6283:41
     |
6283 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6294:41
     |
6294 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6300:37
     |
6300 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6315:41
     |
6315 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6326:41
     |
6326 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6339:37
     |
6339 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6351:37
     |
6351 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6354:41
     |
6354 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6362:37
     |
6362 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6365:41
     |
6365 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6371:37
     |
6371 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6457:41
     |
6457 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6473:41
     |
6473 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6481:41
     |
6481 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6487:41
     |
6487 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6495:41
     |
6495 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6501:41
     |
6501 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6505:41
     |
6505 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6527:45
     |
6527 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6581:53
     |
6581 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6613:37
     |
6613 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6622:37
     |
6622 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:6644:33
     |
6644 | / ...                   match current_block {
6645 | | ...                       2035738867698081325 => {
6646 | | ...                           if ((*c).prompt_inputcb)
6647 | | ...                               .expect(
...    |
6659 | | ...                       _ => {}
6660 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
6644 ~                                 if current_block == 2035738867698081325 {
6645 +                                     if ((*c).prompt_inputcb)
6646 +                                         .expect(
6647 +                                             "non-null function pointer",
6648 +                                         )(
6649 +                                         c,
6650 +                                         (*c).prompt_data,
6651 +                                         0 as *const libc::c_char,
6652 +                                         1 as libc::c_int,
6653 +                                     ) == 0 as libc::c_int
6654 +                                     {
6655 +                                         status_prompt_clear(c);
6656 +                                     }
6657 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:6652:45
     |
6652 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:6697:37
     |
6697 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6702:41
     |
6702 | / ...                   &mut *((*c).prompt_buffer)
6703 | | ...                       .offset(
6704 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
6705 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6712:41
     |
6712 | / ...                   &mut *((*c).prompt_buffer)
6713 | | ...                       .offset(
6714 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
6715 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:6722:41
     |
6722 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:6731:52
     |
6731 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:6745:41
     |
6745 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6763:45
     |
6763 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6789:45
     |
6789 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6830:41
     |
6830 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6841:41
     |
6841 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6847:37
     |
6847 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6862:41
     |
6862 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6873:41
     |
6873 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6886:37
     |
6886 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:6898:37
     |
6898 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6901:41
     |
6901 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6909:37
     |
6909 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:6912:41
     |
6912 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:6918:37
     |
6918 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7004:41
     |
7004 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7020:41
     |
7020 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7028:41
     |
7028 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7034:41
     |
7034 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7042:41
     |
7042 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7048:41
     |
7048 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7052:41
     |
7052 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7074:45
     |
7074 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7128:53
     |
7128 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7160:37
     |
7160 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7169:37
     |
7169 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:7191:33
     |
7191 | / ...                   match current_block {
7192 | | ...                       2035738867698081325 => {
7193 | | ...                           if ((*c).prompt_inputcb)
7194 | | ...                               .expect(
...    |
7206 | | ...                       _ => {}
7207 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
7191 ~                                 if current_block == 2035738867698081325 {
7192 +                                     if ((*c).prompt_inputcb)
7193 +                                         .expect(
7194 +                                             "non-null function pointer",
7195 +                                         )(
7196 +                                         c,
7197 +                                         (*c).prompt_data,
7198 +                                         0 as *const libc::c_char,
7199 +                                         1 as libc::c_int,
7200 +                                     ) == 0 as libc::c_int
7201 +                                     {
7202 +                                         status_prompt_clear(c);
7203 +                                     }
7204 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:7199:45
     |
7199 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:7244:37
     |
7244 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7249:41
     |
7249 | / ...                   &mut *((*c).prompt_buffer)
7250 | | ...                       .offset(
7251 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
7252 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7259:41
     |
7259 | / ...                   &mut *((*c).prompt_buffer)
7260 | | ...                       .offset(
7261 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
7262 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7269:41
     |
7269 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:7278:52
     |
7278 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:7292:41
     |
7292 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7310:45
     |
7310 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7336:45
     |
7336 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7377:41
     |
7377 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7388:41
     |
7388 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7394:37
     |
7394 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7409:41
     |
7409 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7420:41
     |
7420 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7433:37
     |
7433 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7445:37
     |
7445 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7448:41
     |
7448 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7456:37
     |
7456 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7459:41
     |
7459 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7465:37
     |
7465 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7551:41
     |
7551 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7567:41
     |
7567 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7575:41
     |
7575 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7581:41
     |
7581 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7589:41
     |
7589 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7595:41
     |
7595 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7599:41
     |
7599 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7621:45
     |
7621 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7675:53
     |
7675 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7707:37
     |
7707 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7716:37
     |
7716 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:7738:33
     |
7738 | / ...                   match current_block {
7739 | | ...                       2035738867698081325 => {
7740 | | ...                           if ((*c).prompt_inputcb)
7741 | | ...                               .expect(
...    |
7753 | | ...                       _ => {}
7754 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
7738 ~                                 if current_block == 2035738867698081325 {
7739 +                                     if ((*c).prompt_inputcb)
7740 +                                         .expect(
7741 +                                             "non-null function pointer",
7742 +                                         )(
7743 +                                         c,
7744 +                                         (*c).prompt_data,
7745 +                                         0 as *const libc::c_char,
7746 +                                         1 as libc::c_int,
7747 +                                     ) == 0 as libc::c_int
7748 +                                     {
7749 +                                         status_prompt_clear(c);
7750 +                                     }
7751 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:7746:45
     |
7746 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:7791:37
     |
7791 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7796:41
     |
7796 | / ...                   &mut *((*c).prompt_buffer)
7797 | | ...                       .offset(
7798 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
7799 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7806:41
     |
7806 | / ...                   &mut *((*c).prompt_buffer)
7807 | | ...                       .offset(
7808 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
7809 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:7816:41
     |
7816 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:7825:52
     |
7825 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:7839:41
     |
7839 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7857:45
     |
7857 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7883:45
     |
7883 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7924:41
     |
7924 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7935:41
     |
7935 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7941:37
     |
7941 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7956:41
     |
7956 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7967:41
     |
7967 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:7980:37
     |
7980 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:7992:37
     |
7992 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:7995:41
     |
7995 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8003:37
     |
8003 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8006:41
     |
8006 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8012:37
     |
8012 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8098:41
     |
8098 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8114:41
     |
8114 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8122:41
     |
8122 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8128:41
     |
8128 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8136:41
     |
8136 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8142:41
     |
8142 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8146:41
     |
8146 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8168:45
     |
8168 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8222:53
     |
8222 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8254:37
     |
8254 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8263:37
     |
8263 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:8285:33
     |
8285 | / ...                   match current_block {
8286 | | ...                       2035738867698081325 => {
8287 | | ...                           if ((*c).prompt_inputcb)
8288 | | ...                               .expect(
...    |
8300 | | ...                       _ => {}
8301 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
8285 ~                                 if current_block == 2035738867698081325 {
8286 +                                     if ((*c).prompt_inputcb)
8287 +                                         .expect(
8288 +                                             "non-null function pointer",
8289 +                                         )(
8290 +                                         c,
8291 +                                         (*c).prompt_data,
8292 +                                         0 as *const libc::c_char,
8293 +                                         1 as libc::c_int,
8294 +                                     ) == 0 as libc::c_int
8295 +                                     {
8296 +                                         status_prompt_clear(c);
8297 +                                     }
8298 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:8293:45
     |
8293 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:8338:37
     |
8338 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8343:41
     |
8343 | / ...                   &mut *((*c).prompt_buffer)
8344 | | ...                       .offset(
8345 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
8346 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8353:41
     |
8353 | / ...                   &mut *((*c).prompt_buffer)
8354 | | ...                       .offset(
8355 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
8356 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8363:41
     |
8363 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:8372:52
     |
8372 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:8386:41
     |
8386 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8404:45
     |
8404 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8430:45
     |
8430 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8471:41
     |
8471 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8482:41
     |
8482 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8488:37
     |
8488 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8503:41
     |
8503 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8514:41
     |
8514 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8527:37
     |
8527 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8539:37
     |
8539 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8542:41
     |
8542 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8550:37
     |
8550 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:8553:41
     |
8553 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:8559:37
     |
8559 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8645:41
     |
8645 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8661:41
     |
8661 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8669:41
     |
8669 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8675:41
     |
8675 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8683:41
     |
8683 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8689:41
     |
8689 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8693:41
     |
8693 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8715:45
     |
8715 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8769:53
     |
8769 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8801:37
     |
8801 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8810:37
     |
8810 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:8832:33
     |
8832 | / ...                   match current_block {
8833 | | ...                       2035738867698081325 => {
8834 | | ...                           if ((*c).prompt_inputcb)
8835 | | ...                               .expect(
...    |
8847 | | ...                       _ => {}
8848 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
8832 ~                                 if current_block == 2035738867698081325 {
8833 +                                     if ((*c).prompt_inputcb)
8834 +                                         .expect(
8835 +                                             "non-null function pointer",
8836 +                                         )(
8837 +                                         c,
8838 +                                         (*c).prompt_data,
8839 +                                         0 as *const libc::c_char,
8840 +                                         1 as libc::c_int,
8841 +                                     ) == 0 as libc::c_int
8842 +                                     {
8843 +                                         status_prompt_clear(c);
8844 +                                     }
8845 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:8840:45
     |
8840 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:8885:37
     |
8885 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8890:41
     |
8890 | / ...                   &mut *((*c).prompt_buffer)
8891 | | ...                       .offset(
8892 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
8893 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8900:41
     |
8900 | / ...                   &mut *((*c).prompt_buffer)
8901 | | ...                       .offset(
8902 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
8903 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:8910:41
     |
8910 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:8919:52
     |
8919 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:8933:41
     |
8933 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8951:45
     |
8951 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:8977:45
     |
8977 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9018:41
     |
9018 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9029:41
     |
9029 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9035:37
     |
9035 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9050:41
     |
9050 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9061:41
     |
9061 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9074:37
     |
9074 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9086:37
     |
9086 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9089:41
     |
9089 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9097:37
     |
9097 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9100:41
     |
9100 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9106:37
     |
9106 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9192:41
     |
9192 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9208:41
     |
9208 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9216:41
     |
9216 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9222:41
     |
9222 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9230:41
     |
9230 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9236:41
     |
9236 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9240:41
     |
9240 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9262:45
     |
9262 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9316:53
     |
9316 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9348:37
     |
9348 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9357:37
     |
9357 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:9379:33
     |
9379 | / ...                   match current_block {
9380 | | ...                       2035738867698081325 => {
9381 | | ...                           if ((*c).prompt_inputcb)
9382 | | ...                               .expect(
...    |
9394 | | ...                       _ => {}
9395 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
9379 ~                                 if current_block == 2035738867698081325 {
9380 +                                     if ((*c).prompt_inputcb)
9381 +                                         .expect(
9382 +                                             "non-null function pointer",
9383 +                                         )(
9384 +                                         c,
9385 +                                         (*c).prompt_data,
9386 +                                         0 as *const libc::c_char,
9387 +                                         1 as libc::c_int,
9388 +                                     ) == 0 as libc::c_int
9389 +                                     {
9390 +                                         status_prompt_clear(c);
9391 +                                     }
9392 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:9387:45
     |
9387 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:9432:37
     |
9432 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:9437:41
     |
9437 | / ...                   &mut *((*c).prompt_buffer)
9438 | | ...                       .offset(
9439 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
9440 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:9447:41
     |
9447 | / ...                   &mut *((*c).prompt_buffer)
9448 | | ...                       .offset(
9449 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
9450 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:9457:41
     |
9457 | ...                   &mut tmp,
     |                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/status.rs:9466:52
     |
9466 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:9480:41
     |
9480 | ...                   n;
     |                       ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9498:45
     |
9498 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9524:45
     |
9524 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9565:41
     |
9565 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9576:41
     |
9576 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9582:37
     |
9582 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9597:41
     |
9597 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9608:41
     |
9608 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9621:37
     |
9621 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9633:37
     |
9633 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9636:41
     |
9636 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9644:37
     |
9644 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
    --> src/status.rs:9647:41
     |
9647 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/status.rs:9653:37
     |
9653 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9739:41
     |
9739 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9755:41
     |
9755 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9763:41
     |
9763 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9769:41
     |
9769 | ...                   first;
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9777:41
     |
9777 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9783:41
     |
9783 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9787:41
     |
9787 | ...                   last;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9809:45
     |
9809 | ...                   ud;
     |                       ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9863:53
     |
9863 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9895:37
     |
9895 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/status.rs:9904:37
     |
9904 | ...                   (*c).prompt_index;
     |                       ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/status.rs:9926:33
     |
9926 | / ...                   match current_block {
9927 | | ...                       2035738867698081325 => {
9928 | | ...                           if ((*c).prompt_inputcb)
9929 | | ...                               .expect(
...    |
9941 | | ...                       _ => {}
9942 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
9926 ~                                 if current_block == 2035738867698081325 {
9927 +                                     if ((*c).prompt_inputcb)
9928 +                                         .expect(
9929 +                                             "non-null function pointer",
9930 +                                         )(
9931 +                                         c,
9932 +                                         (*c).prompt_data,
9933 +                                         0 as *const libc::c_char,
9934 +                                         1 as libc::c_int,
9935 +                                     ) == 0 as libc::c_int
9936 +                                     {
9937 +                                         status_prompt_clear(c);
9938 +                                     }
9939 +                                 }
     |

warning: `0 as *const _` detected
    --> src/status.rs:9934:45
     |
9934 | ...                   0 as *const libc::c_char,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/status.rs:9979:37
     |
9979 | ...                   idx;
     |                       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:9984:41
     |
9984 | / ...                   &mut *((*c).prompt_buffer)
9985 | | ...                       .offset(
9986 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
9987 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/status.rs:9994:41
     |
9994 | / ...                   &mut *((*c).prompt_buffer)
9995 | | ...                       .offset(
9996 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
9997 | | ...                       ),
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:10004:41
      |
10004 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:10013:52
      |
10013 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:10027:41
      |
10027 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10045:45
      |
10045 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10071:45
      |
10071 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10112:41
      |
10112 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10123:41
      |
10123 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10129:37
      |
10129 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10144:41
      |
10144 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10155:41
      |
10155 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10168:37
      |
10168 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10180:37
      |
10180 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10183:41
      |
10183 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10191:37
      |
10191 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10194:41
      |
10194 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10200:37
      |
10200 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10286:41
      |
10286 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10302:41
      |
10302 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10310:41
      |
10310 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10316:41
      |
10316 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10324:41
      |
10324 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10330:41
      |
10330 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10334:41
      |
10334 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10356:45
      |
10356 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10410:53
      |
10410 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10442:37
      |
10442 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10451:37
      |
10451 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:10473:33
      |
10473 | / ...                   match current_block {
10474 | | ...                       2035738867698081325 => {
10475 | | ...                           if ((*c).prompt_inputcb)
10476 | | ...                               .expect(
...     |
10488 | | ...                       _ => {}
10489 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
10473 ~                                 if current_block == 2035738867698081325 {
10474 +                                     if ((*c).prompt_inputcb)
10475 +                                         .expect(
10476 +                                             "non-null function pointer",
10477 +                                         )(
10478 +                                         c,
10479 +                                         (*c).prompt_data,
10480 +                                         0 as *const libc::c_char,
10481 +                                         1 as libc::c_int,
10482 +                                     ) == 0 as libc::c_int
10483 +                                     {
10484 +                                         status_prompt_clear(c);
10485 +                                     }
10486 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:10481:45
      |
10481 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:10526:37
      |
10526 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:10531:41
      |
10531 | / ...                   &mut *((*c).prompt_buffer)
10532 | | ...                       .offset(
10533 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
10534 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:10541:41
      |
10541 | / ...                   &mut *((*c).prompt_buffer)
10542 | | ...                       .offset(
10543 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
10544 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:10551:41
      |
10551 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:10560:52
      |
10560 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:10574:41
      |
10574 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10592:45
      |
10592 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10618:45
      |
10618 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10659:41
      |
10659 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10670:41
      |
10670 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10676:37
      |
10676 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10691:41
      |
10691 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10702:41
      |
10702 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10715:37
      |
10715 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10727:37
      |
10727 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10730:41
      |
10730 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10738:37
      |
10738 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:10741:41
      |
10741 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:10747:37
      |
10747 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10833:41
      |
10833 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10849:41
      |
10849 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10857:41
      |
10857 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10863:41
      |
10863 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10871:41
      |
10871 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10877:41
      |
10877 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10881:41
      |
10881 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10903:45
      |
10903 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10957:53
      |
10957 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10989:37
      |
10989 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:10998:37
      |
10998 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:11020:33
      |
11020 | / ...                   match current_block {
11021 | | ...                       2035738867698081325 => {
11022 | | ...                           if ((*c).prompt_inputcb)
11023 | | ...                               .expect(
...     |
11035 | | ...                       _ => {}
11036 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
11020 ~                                 if current_block == 2035738867698081325 {
11021 +                                     if ((*c).prompt_inputcb)
11022 +                                         .expect(
11023 +                                             "non-null function pointer",
11024 +                                         )(
11025 +                                         c,
11026 +                                         (*c).prompt_data,
11027 +                                         0 as *const libc::c_char,
11028 +                                         1 as libc::c_int,
11029 +                                     ) == 0 as libc::c_int
11030 +                                     {
11031 +                                         status_prompt_clear(c);
11032 +                                     }
11033 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:11028:45
      |
11028 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:11073:37
      |
11073 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11078:41
      |
11078 | / ...                   &mut *((*c).prompt_buffer)
11079 | | ...                       .offset(
11080 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
11081 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11088:41
      |
11088 | / ...                   &mut *((*c).prompt_buffer)
11089 | | ...                       .offset(
11090 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
11091 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11098:41
      |
11098 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:11107:52
      |
11107 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:11121:41
      |
11121 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11139:45
      |
11139 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11165:45
      |
11165 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11206:41
      |
11206 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11217:41
      |
11217 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11223:37
      |
11223 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11238:41
      |
11238 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11249:41
      |
11249 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11262:37
      |
11262 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11274:37
      |
11274 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11277:41
      |
11277 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11285:37
      |
11285 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11288:41
      |
11288 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11294:37
      |
11294 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11380:41
      |
11380 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11396:41
      |
11396 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11404:41
      |
11404 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11410:41
      |
11410 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11418:41
      |
11418 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11424:41
      |
11424 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11428:41
      |
11428 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11450:45
      |
11450 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11504:53
      |
11504 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11536:37
      |
11536 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11545:37
      |
11545 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:11567:33
      |
11567 | / ...                   match current_block {
11568 | | ...                       2035738867698081325 => {
11569 | | ...                           if ((*c).prompt_inputcb)
11570 | | ...                               .expect(
...     |
11582 | | ...                       _ => {}
11583 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
11567 ~                                 if current_block == 2035738867698081325 {
11568 +                                     if ((*c).prompt_inputcb)
11569 +                                         .expect(
11570 +                                             "non-null function pointer",
11571 +                                         )(
11572 +                                         c,
11573 +                                         (*c).prompt_data,
11574 +                                         0 as *const libc::c_char,
11575 +                                         1 as libc::c_int,
11576 +                                     ) == 0 as libc::c_int
11577 +                                     {
11578 +                                         status_prompt_clear(c);
11579 +                                     }
11580 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:11575:45
      |
11575 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:11620:37
      |
11620 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11625:41
      |
11625 | / ...                   &mut *((*c).prompt_buffer)
11626 | | ...                       .offset(
11627 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
11628 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11635:41
      |
11635 | / ...                   &mut *((*c).prompt_buffer)
11636 | | ...                       .offset(
11637 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
11638 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:11645:41
      |
11645 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:11654:52
      |
11654 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:11668:41
      |
11668 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11686:45
      |
11686 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11712:45
      |
11712 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11753:41
      |
11753 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11764:41
      |
11764 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11770:37
      |
11770 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11785:41
      |
11785 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11796:41
      |
11796 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11809:37
      |
11809 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11821:37
      |
11821 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11824:41
      |
11824 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11832:37
      |
11832 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:11835:41
      |
11835 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:11841:37
      |
11841 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11927:41
      |
11927 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11943:41
      |
11943 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11951:41
      |
11951 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11957:41
      |
11957 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11965:41
      |
11965 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11971:41
      |
11971 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11975:41
      |
11975 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:11997:45
      |
11997 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12051:53
      |
12051 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12083:37
      |
12083 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12092:37
      |
12092 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:12114:33
      |
12114 | / ...                   match current_block {
12115 | | ...                       2035738867698081325 => {
12116 | | ...                           if ((*c).prompt_inputcb)
12117 | | ...                               .expect(
...     |
12129 | | ...                       _ => {}
12130 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
12114 ~                                 if current_block == 2035738867698081325 {
12115 +                                     if ((*c).prompt_inputcb)
12116 +                                         .expect(
12117 +                                             "non-null function pointer",
12118 +                                         )(
12119 +                                         c,
12120 +                                         (*c).prompt_data,
12121 +                                         0 as *const libc::c_char,
12122 +                                         1 as libc::c_int,
12123 +                                     ) == 0 as libc::c_int
12124 +                                     {
12125 +                                         status_prompt_clear(c);
12126 +                                     }
12127 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:12122:45
      |
12122 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:12167:37
      |
12167 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12172:41
      |
12172 | / ...                   &mut *((*c).prompt_buffer)
12173 | | ...                       .offset(
12174 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
12175 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12182:41
      |
12182 | / ...                   &mut *((*c).prompt_buffer)
12183 | | ...                       .offset(
12184 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
12185 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12192:41
      |
12192 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:12201:52
      |
12201 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:12215:41
      |
12215 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12233:45
      |
12233 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12259:45
      |
12259 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12300:41
      |
12300 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12311:41
      |
12311 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12317:37
      |
12317 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12332:41
      |
12332 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12343:41
      |
12343 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12356:37
      |
12356 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12368:37
      |
12368 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12371:41
      |
12371 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12379:37
      |
12379 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12382:41
      |
12382 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12388:37
      |
12388 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12474:41
      |
12474 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12490:41
      |
12490 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12498:41
      |
12498 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12504:41
      |
12504 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12512:41
      |
12512 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12518:41
      |
12518 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12522:41
      |
12522 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12544:45
      |
12544 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12598:53
      |
12598 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12630:37
      |
12630 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12639:37
      |
12639 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:12661:33
      |
12661 | / ...                   match current_block {
12662 | | ...                       2035738867698081325 => {
12663 | | ...                           if ((*c).prompt_inputcb)
12664 | | ...                               .expect(
...     |
12676 | | ...                       _ => {}
12677 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
12661 ~                                 if current_block == 2035738867698081325 {
12662 +                                     if ((*c).prompt_inputcb)
12663 +                                         .expect(
12664 +                                             "non-null function pointer",
12665 +                                         )(
12666 +                                         c,
12667 +                                         (*c).prompt_data,
12668 +                                         0 as *const libc::c_char,
12669 +                                         1 as libc::c_int,
12670 +                                     ) == 0 as libc::c_int
12671 +                                     {
12672 +                                         status_prompt_clear(c);
12673 +                                     }
12674 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:12669:45
      |
12669 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:12714:37
      |
12714 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12719:41
      |
12719 | / ...                   &mut *((*c).prompt_buffer)
12720 | | ...                       .offset(
12721 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
12722 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12729:41
      |
12729 | / ...                   &mut *((*c).prompt_buffer)
12730 | | ...                       .offset(
12731 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
12732 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:12739:41
      |
12739 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:12748:52
      |
12748 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:12762:41
      |
12762 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12780:45
      |
12780 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12806:45
      |
12806 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12847:41
      |
12847 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12858:41
      |
12858 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12864:37
      |
12864 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12879:41
      |
12879 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12890:41
      |
12890 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12903:37
      |
12903 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:12915:37
      |
12915 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12918:41
      |
12918 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12926:37
      |
12926 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:12929:41
      |
12929 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:12935:37
      |
12935 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13021:41
      |
13021 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13037:41
      |
13037 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13045:41
      |
13045 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13051:41
      |
13051 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13059:41
      |
13059 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13065:41
      |
13065 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13069:41
      |
13069 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13091:45
      |
13091 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13145:53
      |
13145 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13177:37
      |
13177 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13186:37
      |
13186 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:13208:33
      |
13208 | / ...                   match current_block {
13209 | | ...                       2035738867698081325 => {
13210 | | ...                           if ((*c).prompt_inputcb)
13211 | | ...                               .expect(
...     |
13223 | | ...                       _ => {}
13224 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
13208 ~                                 if current_block == 2035738867698081325 {
13209 +                                     if ((*c).prompt_inputcb)
13210 +                                         .expect(
13211 +                                             "non-null function pointer",
13212 +                                         )(
13213 +                                         c,
13214 +                                         (*c).prompt_data,
13215 +                                         0 as *const libc::c_char,
13216 +                                         1 as libc::c_int,
13217 +                                     ) == 0 as libc::c_int
13218 +                                     {
13219 +                                         status_prompt_clear(c);
13220 +                                     }
13221 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:13216:45
      |
13216 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:13261:37
      |
13261 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13266:41
      |
13266 | / ...                   &mut *((*c).prompt_buffer)
13267 | | ...                       .offset(
13268 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
13269 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13276:41
      |
13276 | / ...                   &mut *((*c).prompt_buffer)
13277 | | ...                       .offset(
13278 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
13279 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13286:41
      |
13286 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:13295:52
      |
13295 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:13309:41
      |
13309 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13327:45
      |
13327 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13353:45
      |
13353 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13394:41
      |
13394 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13405:41
      |
13405 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13411:37
      |
13411 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13426:41
      |
13426 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13437:41
      |
13437 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13450:37
      |
13450 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13462:37
      |
13462 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13465:41
      |
13465 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13473:37
      |
13473 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13476:41
      |
13476 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13482:37
      |
13482 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13568:41
      |
13568 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13584:41
      |
13584 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13592:41
      |
13592 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13598:41
      |
13598 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13606:41
      |
13606 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13612:41
      |
13612 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13616:41
      |
13616 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13638:45
      |
13638 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13692:53
      |
13692 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13724:37
      |
13724 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13733:37
      |
13733 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:13755:33
      |
13755 | / ...                   match current_block {
13756 | | ...                       2035738867698081325 => {
13757 | | ...                           if ((*c).prompt_inputcb)
13758 | | ...                               .expect(
...     |
13770 | | ...                       _ => {}
13771 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
13755 ~                                 if current_block == 2035738867698081325 {
13756 +                                     if ((*c).prompt_inputcb)
13757 +                                         .expect(
13758 +                                             "non-null function pointer",
13759 +                                         )(
13760 +                                         c,
13761 +                                         (*c).prompt_data,
13762 +                                         0 as *const libc::c_char,
13763 +                                         1 as libc::c_int,
13764 +                                     ) == 0 as libc::c_int
13765 +                                     {
13766 +                                         status_prompt_clear(c);
13767 +                                     }
13768 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:13763:45
      |
13763 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:13808:37
      |
13808 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13813:41
      |
13813 | / ...                   &mut *((*c).prompt_buffer)
13814 | | ...                       .offset(
13815 | | ...                           idx.wrapping_sub(2 as libc::c_int as size_t) as isize,
13816 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13823:41
      |
13823 | / ...                   &mut *((*c).prompt_buffer)
13824 | | ...                       .offset(
13825 | | ...                           idx.wrapping_sub(1 as libc::c_int as size_t) as isize,
13826 | | ...                       ),
      | |___________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:13833:41
      |
13833 | ...                   &mut tmp,
      |                       ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
     --> src/status.rs:13842:52
      |
13842 | ...                   pb = paste_get_top(0 as *mut *const libc::c_char);
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:13856:41
      |
13856 | ...                   n;
      |                       ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13874:45
      |
13874 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:13900:45
      |
13900 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13941:41
      |
13941 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13952:41
      |
13952 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13958:37
      |
13958 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13973:41
      |
13973 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:13984:41
      |
13984 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:13997:37
      |
13997 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14009:37
      |
14009 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:14012:41
      |
14012 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:14020:37
      |
14020 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `status_prompt_in_list` doesn't need a mutable reference
     --> src/status.rs:14023:41
      |
14023 | ...                   &mut *((*c).prompt_buffer).offset(idx as isize),
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:14029:37
      |
14029 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14115:41
      |
14115 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14131:41
      |
14131 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14139:41
      |
14139 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14145:41
      |
14145 | ...                   first;
      |                       ^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14153:41
      |
14153 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14159:41
      |
14159 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14163:41
      |
14163 | ...                   last;
      |                       ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14185:45
      |
14185 | ...                   ud;
      |                       ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14239:53
      |
14239 | ...                   idx;
      |                       ^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14271:37
      |
14271 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14280:37
      |
14280 | ...                   (*c).prompt_index;
      |                       ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:14302:33
      |
14302 | / ...                   match current_block {
14303 | | ...                       2035738867698081325 => {
14304 | | ...                           if ((*c).prompt_inputcb)
14305 | | ...                               .expect(
...     |
14317 | | ...                       _ => {}
14318 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
14302 ~                                 if current_block == 2035738867698081325 {
14303 +                                     if ((*c).prompt_inputcb)
14304 +                                         .expect(
14305 +                                             "non-null function pointer",
14306 +                                         )(
14307 +                                         c,
14308 +                                         (*c).prompt_data,
14309 +                                         0 as *const libc::c_char,
14310 +                                         1 as libc::c_int,
14311 +                                     ) == 0 as libc::c_int
14312 +                                     {
14313 +                                         status_prompt_clear(c);
14314 +                                     }
14315 +                                 }
      |

warning: `0 as *const _` detected
     --> src/status.rs:14310:45
      |
14310 | ...                   0 as *const libc::c_char,
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
     --> src/status.rs:14331:5
      |
14331 | /     match current_block {
14332 | |         12621319171214187923 => {
14333 | |             if key <= 0x1f as libc::c_int as key_code
14334 | |                 || key >= 0x10000000 as libc::c_ulonglong
...     |
14392 | |         _ => {}
14393 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
      |
14331 ~     if current_block == 12621319171214187923 {
14332 +         if key <= 0x1f as libc::c_int as key_code
14333 +             || key >= 0x10000000 as libc::c_ulonglong
14334 +         {
14335 +             return 0 as libc::c_int;
14336 +         }
14337 +         if utf8_split(key as wchar_t, &mut tmp) as libc::c_uint
14338 +             != UTF8_DONE as libc::c_int as libc::c_uint
14339 +         {
14340 +             return 0 as libc::c_int;
14341 +         }
14342 +         (*c)
14343 +             .prompt_buffer = xreallocarray(
14344 +             (*c).prompt_buffer as *mut libc::c_void,
14345 +             size.wrapping_add(2 as libc::c_int as size_t),
14346 +             ::core::mem::size_of::<utf8_data>() as libc::c_ulong,
14347 +         ) as *mut utf8_data;
14348 +         if (*c).prompt_index == size {
14349 +             utf8_copy(
14350 +                 &mut *((*c).prompt_buffer).offset((*c).prompt_index as isize),
14351 +                 &mut tmp,
14352 +             );
14353 +             (*c).prompt_index = ((*c).prompt_index).wrapping_add(1);
14354 +             (*c).prompt_index;
14355 +             (*((*c).prompt_buffer).offset((*c).prompt_index as isize))
14356 +                 .size = 0 as libc::c_int as u_char;
14357 +         } else {
14358 +             memmove(
14359 +                 ((*c).prompt_buffer)
14360 +                     .offset((*c).prompt_index as isize)
14361 +                     .offset(1 as libc::c_int as isize) as *mut libc::c_void,
14362 +                 ((*c).prompt_buffer).offset((*c).prompt_index as isize)
14363 +                     as *const libc::c_void,
14364 +                 size
14365 +                     .wrapping_add(1 as libc::c_int as size_t)
14366 +                     .wrapping_sub((*c).prompt_index)
14367 +                     .wrapping_mul(
14368 +                         ::core::mem::size_of::<utf8_data>() as libc::c_ulong,
14369 +                     ),
14370 +             );
14371 +             utf8_copy(
14372 +                 &mut *((*c).prompt_buffer).offset((*c).prompt_index as isize),
14373 +                 &mut tmp,
14374 +             );
14375 +             (*c).prompt_index = ((*c).prompt_index).wrapping_add(1);
14376 +             (*c).prompt_index;
14377 +         }
14378 +         if (*c).prompt_flags & 0x1 as libc::c_int != 0 {
14379 +             s = utf8_tocstr((*c).prompt_buffer);
14380 +             if strlen(s) != 1 as libc::c_int as libc::c_ulong 
14381 +             || (((*c).prompt_inputcb)
14382 +             .expect(
14383 +                 "non-null function pointer",
14384 +             )(c, (*c).prompt_data, s, 1 as libc::c_int) == 0 as libc::c_int)
14385 +             {
14386 +                 status_prompt_clear(c);
14387 +             }
14388 +             free(s as *mut libc::c_void);
14389 +         }
14390 +     }
      |

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:14352:21
      |
14352 |                     &mut tmp,
      |                     ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:14355:17
      |
14355 |                 (*c).prompt_index;
      |                 ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_copy` doesn't need a mutable reference
     --> src/status.rs:14374:21
      |
14374 |                     &mut tmp,
      |                     ^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
     --> src/status.rs:14377:17
      |
14377 |                 (*c).prompt_index;
      |                 ^^^^^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
     --> src/status.rs:14420:5
      |
14420 |     return *status_prompt_hlist.offset(status_prompt_hsize.wrapping_sub(*idx) as isize);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `*status_prompt_hlist.offset(status_prompt_hsize.wrapping_sub(*idx) as isize)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
     --> src/status.rs:14416:16
      |
14416 |         return 0 as *const libc::c_char;
      |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:14419:5
      |
14419 |     *idx;
      |     ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
     --> src/status.rs:14435:5
      |
14435 |     return *status_prompt_hlist.offset(status_prompt_hsize.wrapping_sub(*idx) as isize);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `*status_prompt_hlist.offset(status_prompt_hsize.wrapping_sub(*idx) as isize)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
     --> src/status.rs:14431:5
      |
14431 |     *idx;
      |     ^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14463:13
      |
14463 |         let ref mut fresh0 = *status_prompt_hlist
      |             ^^^^^^^^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
      |
14463 ~         let fresh0 = &mut (*status_prompt_hlist
14464 +             .offset(
14465 +                 status_prompt_hsize.wrapping_sub(1 as libc::c_int as u_int) as isize,
14466 +             ));
      |

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14477:9
      |
14477 |     let ref mut fresh2 = *status_prompt_hlist.offset(fresh1 as isize);
      |     ----^^^^^^^^^^^^^^------------------------------------------------ help: try: `let fresh2 = &mut (*status_prompt_hlist.offset(fresh1 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unneeded `return` statement
     --> src/status.rs:14545:5
      |
14545 |     return list;
      |     ^^^^^^^^^^^^ help: remove `return`: `list`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
     --> src/status.rs:14484:46
      |
14484 |     let mut list: *mut *const libc::c_char = 0 as *mut *const libc::c_char;
      |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14485:48
      |
14485 |     let mut layout: *mut *const libc::c_char = 0 as *mut *const libc::c_char;
      |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14486:45
      |
14486 |     let mut cmdent: *mut *const cmd_entry = 0 as *mut *const cmd_entry;
      |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const cmd_entry>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
     --> src/status.rs:14487:46
      |
14487 |     let mut oe: *const options_table_entry = 0 as *const options_table_entry;
      |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
     --> src/status.rs:14494:9
      |
14494 |         0 as *const libc::c_char,
      |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14507:17
      |
14507 |             let ref mut fresh4 = *list.offset(fresh3 as isize);
      |             ----^^^^^^^^^^^^^^--------------------------------- help: try: `let fresh4 = &mut (*list.offset(fresh3 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
     --> src/status.rs:14511:9
      |
14511 |         cmdent;
      |         ^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14523:17
      |
14523 |             let ref mut fresh6 = *list.offset(fresh5 as isize);
      |             ----^^^^^^^^^^^^^^--------------------------------- help: try: `let fresh6 = &mut (*list.offset(fresh5 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
     --> src/status.rs:14527:9
      |
14527 |         oe;
      |         ^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14539:17
      |
14539 |             let ref mut fresh8 = *list.offset(fresh7 as isize);
      |             ----^^^^^^^^^^^^^^--------------------------------- help: try: `let fresh8 = &mut (*list.offset(fresh7 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
     --> src/status.rs:14543:9
      |
14543 |         layout;
      |         ^^^^^^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
     --> src/status.rs:14579:5
      |
14579 |     return out;
      |     ^^^^^^^^^^^ help: remove `return`: `out`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
     --> src/status.rs:14551:38
      |
14551 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
      |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
     --> src/status.rs:14574:13
      |
14574 |             j;
      |             ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
     --> src/status.rs:14577:9
      |
14577 |         i;
      |         ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
     --> src/status.rs:14792:5
      |
14792 |     return out;
      |     ^^^^^^^^^^^ help: remove `return`: `out`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
     --> src/status.rs:14585:46
      |
14585 |     let mut list: *mut *const libc::c_char = 0 as *mut *const libc::c_char;
      |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
     --> src/status.rs:14586:42
      |
14586 |     let mut colon: *const libc::c_char = 0 as *const libc::c_char;
      |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14589:36
      |
14589 |     let mut s_loop: *mut session = 0 as *mut session;
      |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14590:32
      |
14590 |     let mut wl: *mut winlink = 0 as *mut winlink;
      |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14591:30
      |
14591 |     let mut w: *mut window = 0 as *mut window;
      |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14592:39
      |
14592 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
      |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14593:38
      |
14593 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
      |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14594:38
      |
14594 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
      |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14596:16
      |
14596 |         return 0 as *mut libc::c_char;
      |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14598:11
      |
14598 |     out = 0 as *mut libc::c_char;
      |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
     --> src/status.rs:14612:19
      |
14612 |             out = 0 as *mut libc::c_char;
      |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14649:17
      |
14649 |             let ref mut fresh10 = *list.offset(fresh9 as isize);
      |             ----^^^^^^^^^^^^^^^--------------------------------- help: try: `let fresh10 = &mut (*list.offset(fresh9 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14690:25
      |
14690 |                     let ref mut fresh12 = *list.offset(fresh11 as isize);
      |                     ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh12 = &mut (*list.offset(fresh11 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14708:29
      |
14708 |                         let ref mut fresh14 = *list.offset(fresh13 as isize);
      |                         ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh14 = &mut (*list.offset(fresh13 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14737:29
      |
14737 |                         let ref mut fresh16 = *list.offset(fresh15 as isize);
      |                         ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh16 = &mut (*list.offset(fresh15 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
     --> src/status.rs:14756:33
      |
14756 | ...                   let ref mut fresh18 = *list.offset(fresh17 as isize);
      |                       ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh18 = &mut (*list.offset(fresh17 as isize));`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: statement with no effect
     --> src/status.rs:14787:13
      |
14787 |             i;
      |             ^^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/style.rs:55:1
    |
55  | / pub unsafe extern "C" fn style_parse(
56  | |     mut defgc: *const grid_cell,
57  | |     mut gc: *mut grid_cell,
58  | |     mut in_0: *const libc::c_char,
...   |
211 | |     };
212 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
   --> src/style.rs:190:12
    |
190 |         if !(*in_0 as libc::c_int != '\0' as i32) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `*in_0 as libc::c_int == '\0' as i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/style.rs:202:13
    |
202 |             return -(1 as libc::c_int);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/style.rs:209:13
    |
209 |             return 0 as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/style.rs:214:1
    |
214 | / pub unsafe extern "C" fn style_tostring(mut gc: *mut grid_cell) -> *const libc::c_char {
215 | |     let mut off: libc::c_int = 0 as libc::c_int;
216 | |     let mut comma: libc::c_int = 0 as libc::c_int;
217 | |     static mut s: [libc::c_char; 256] = [0; 256];
...   |
264 | |     return s.as_mut_ptr();
265 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/style.rs:264:5
    |
264 |     return s.as_mut_ptr();
    |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `s.as_mut_ptr()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/style.rs:267:1
    |
267 | / pub unsafe extern "C" fn style_apply(
268 | |     mut gc: *mut grid_cell,
269 | |     mut oo: *mut options,
270 | |     mut name: *const libc::c_char,
...   |
281 | |     (*gc).attr = ((*gc).attr as libc::c_int | (*gcp).attr as libc::c_int) as u_short;
282 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
   --> src/style.rs:272:37
    |
272 |     let mut gcp: *const grid_cell = 0 as *const grid_cell;
    |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/style.rs:284:1
    |
284 | / pub unsafe extern "C" fn style_apply_update(
285 | |     mut gc: *mut grid_cell,
286 | |     mut oo: *mut options,
287 | |     mut name: *const libc::c_char,
...   |
299 | |     }
300 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
   --> src/style.rs:289:37
    |
289 |     let mut gcp: *const grid_cell = 0 as *const grid_cell;
    |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/style.rs:302:1
    |
302 | / pub unsafe extern "C" fn style_equal(
303 | |     mut gc1: *const grid_cell,
304 | |     mut gc2: *const grid_cell,
305 | | ) -> libc::c_int {
...   |
310 | |             == (*gc2).attr as libc::c_int & !(0x80 as libc::c_int)) as libc::c_int;
311 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/style.rs:306:5
    |
306 | /     return ((*gc1).fg == (*gc2).fg && (*gc1).bg == (*gc2).bg
307 | |         && (*gc1).flags as libc::c_int & !(0x4 as libc::c_int)
308 | |             == (*gc2).flags as libc::c_int & !(0x4 as libc::c_int)
309 | |         && (*gc1).attr as libc::c_int & !(0x80 as libc::c_int)
310 | |             == (*gc2).attr as libc::c_int & !(0x80 as libc::c_int)) as libc::c_int;
    | |___________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
306 ~     ((*gc1).fg == (*gc2).fg && (*gc1).bg == (*gc2).bg
307 +         && (*gc1).flags as libc::c_int & !(0x4 as libc::c_int)
308 +             == (*gc2).flags as libc::c_int & !(0x4 as libc::c_int)
309 +         && (*gc1).attr as libc::c_int & !(0x80 as libc::c_int)
310 +             == (*gc2).attr as libc::c_int & !(0x80 as libc::c_int)) as libc::c_int
    |

warning: unneeded `return` statement
   --> src/tmux.rs:651:5
    |
651 |     return b"/bin/sh\0" as *const u8 as *const libc::c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `b"/bin/sh\0" as *const u8 as *const libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/tmux.rs:641:31
    |
641 |     let mut pw: *mut passwd = 0 as *mut passwd;
    |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<passwd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:642:42
    |
642 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
   --> src/tmux.rs:663:5
    |
663 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/tmux.rs:666:1
    |
666 | / pub unsafe extern "C" fn areshell(mut shell: *const libc::c_char) -> libc::c_int {
667 | |     let mut progname: *const libc::c_char = 0 as *const libc::c_char;
668 | |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
669 | |     ptr = strrchr(shell, '/' as i32);
...   |
684 | |     return 0 as libc::c_int;
685 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/tmux.rs:684:5
    |
684 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/tmux.rs:667:45
    |
667 |     let mut progname: *const libc::c_char = 0 as *const libc::c_char;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:668:40
    |
668 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/tmux.rs:672:9
    |
672 |         ptr;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/tmux.rs:679:9
    |
679 |         progname;
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
   --> src/tmux.rs:747:12
    |
747 |         if !(lstat(resolved.as_mut_ptr(), &mut sb) != 0 as libc::c_int) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `lstat(resolved.as_mut_ptr(), &mut sb) == 0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
   --> src/tmux.rs:748:16
    |
748 |               if !(sb.st_mode & 0o170000 as libc::c_int as __mode_t
    |  ________________^
749 | |                 == 0o40000 as libc::c_int as __mode_t)
    | |______________________________________________________^ help: try: `sb.st_mode & 0o170000 as libc::c_int as __mode_t != 0o40000 as libc::c_int as __mode_t`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> src/tmux.rs:776:5
    |
776 |     return 0 as *mut libc::c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/tmux.rs:690:39
    |
690 |     let mut base: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:692:39
    |
692 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:693:36
    |
693 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:712:14
    |
712 |     *cause = 0 as *mut libc::c_char;
    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:776:12
    |
776 |     return 0 as *mut libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/tmux.rs:779:1
    |
779 | / pub unsafe extern "C" fn setblocking(mut fd: libc::c_int, mut state: libc::c_int) {
780 | |     let mut mode: libc::c_int = 0;
781 | |     mode = fcntl(fd, 3 as libc::c_int);
782 | |     if mode != -(1 as libc::c_int) {
...   |
789 | |     }
790 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
   --> src/tmux.rs:792:1
    |
792 | / pub unsafe extern "C" fn find_home() -> *const libc::c_char {
793 | |     let mut pw: *mut passwd = 0 as *mut passwd;
794 | |     static mut home: *const libc::c_char = 0 as *const libc::c_char;
795 | |     if !home.is_null() {
...   |
807 | |     return home;
808 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/tmux.rs:807:5
    |
807 |     return home;
    |     ^^^^^^^^^^^^ help: remove `return`: `home`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/tmux.rs:793:31
    |
793 |     let mut pw: *mut passwd = 0 as *mut passwd;
    |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<passwd>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:804:20
    |
804 |             home = 0 as *const libc::c_char;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
   --> src/tmux.rs:873:12
    |
873 |         if !(opt != -(1 as libc::c_int)) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `opt == -(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
   --> src/tmux.rs:813:39
    |
813 |     let mut path: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:814:40
    |
814 |     let mut label: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:815:40
    |
815 |     let mut cause: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:816:43
    |
816 |     let mut var: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:818:38
    |
818 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:819:42
    |
819 |     let mut shell: *const libc::c_char = 0 as *const libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:820:40
    |
820 |     let mut cwd: *const libc::c_char = 0 as *const libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/tmux.rs:824:46
    |
824 |     let mut oe: *const options_table_entry = 0 as *const options_table_entry;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<options_table_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:865:12
    |
865 |     path = 0 as *mut libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:955:33
    |
955 |     global_hooks = hooks_create(0 as *mut hooks);
    |                                 ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hooks>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/tmux.rs:961:9
    |
961 |         var;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/tmux.rs:980:37
    |
980 |     global_options = options_create(0 as *mut options);
    |                                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:981:39
    |
981 |     global_s_options = options_create(0 as *mut options);
    |                                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/tmux.rs:982:39
    |
982 |     global_w_options = options_create(0 as *mut options);
    |                                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tmux.rs:1001:9
     |
1001 |         oe;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1292:1
     |
1292 | / pub unsafe extern "C" fn tty_create_log() {
1293 | |     let mut name: [libc::c_char; 64] = [0; 64];
1294 | |     xsnprintf(
1295 | |         name.as_mut_ptr(),
...    |
1309 | |     }
1310 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1312:1
     |
1312 | / pub unsafe extern "C" fn tty_init(
1313 | |     mut tty: *mut tty,
1314 | |     mut c: *mut client,
1315 | |     mut fd: libc::c_int,
...    |
1338 | |     return 0 as libc::c_int;
1339 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty.rs:1338:5
     |
1338 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1341:1
     |
1341 | / pub unsafe extern "C" fn tty_resize(mut tty: *mut tty) {
1342 | |     let mut c: *mut client = (*tty).client;
1343 | |     let mut ws: winsize = winsize {
1344 | |         ws_row: 0,
...    |
1375 | |     tty_invalidate(tty);
1376 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1378:1
     |
1378 | / pub unsafe extern "C" fn tty_set_size(mut tty: *mut tty, mut sx: u_int, mut sy: u_int) {
1379 | |     (*tty).sx = sx;
1380 | |     (*tty).sy = sy;
1381 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: returning the result of a `let` binding from a block
    --> src/tty.rs:1417:9
     |
1413 | /         let mut init = timeval {
1414 | |             tv_sec: 0,
1415 | |             tv_usec: 100000 as libc::c_int as __suseconds_t,
1416 | |         };
     | |__________- unnecessary `let` binding
1417 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1413 ~         
1414 ~         timeval {
1415 +             tv_sec: 0,
1416 +             tv_usec: 100000 as libc::c_int as __suseconds_t,
1417 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/tty.rs:1435:34
     |
1435 |     event_add(&mut (*tty).timer, &mut tv);
     |                                  ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/tty.rs:1466:5
     |
1466 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/tty.rs:1445:9
     |
1441 | /         let mut init = timeval {
1442 | |             tv_sec: 0,
1443 | |             tv_usec: 100000 as libc::c_int as __suseconds_t,
1444 | |         };
     | |__________- unnecessary `let` binding
1445 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1441 ~         
1442 ~         timeval {
1443 +             tv_sec: 0,
1444 +             tv_usec: 100000 as libc::c_int as __suseconds_t,
1445 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/tty.rs:1465:34
     |
1465 |     event_add(&mut (*tty).timer, &mut tv);
     |                                  ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *const _` detected
    --> src/tty.rs:1503:42
     |
1503 |         event_add(&mut (*tty).event_out, 0 as *const timeval);
     |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1507:1
     |
1507 | / pub unsafe extern "C" fn tty_open(
1508 | |     mut tty: *mut tty,
1509 | |     mut cause: *mut *mut libc::c_char,
1510 | | ) -> libc::c_int {
...    |
1566 | |     return 0 as libc::c_int;
1567 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty.rs:1566:5
     |
1566 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1569:1
     |
1569 | / pub unsafe extern "C" fn tty_start_tty(mut tty: *mut tty) {
1570 | |     let mut c: *mut client = (*tty).client;
1571 | |     let mut tio: termios = termios {
1572 | |         c_iflag: 0,
...    |
1649 | |     (*tty).mouse_drag_release = None;
1650 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty.rs:1585:41
     |
1585 |         event_add(&mut (*tty).event_in, 0 as *const timeval);
     |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/tty.rs:1606:51
     |
1606 |         if tcsetattr((*tty).fd, 0 as libc::c_int, &mut tio) == 0 as libc::c_int {
     |                                                   ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1652:1
     |
1652 | / pub unsafe extern "C" fn tty_stop_tty(mut tty: *mut tty) {
1653 | |     let mut ws: winsize = winsize {
1654 | |         ws_row: 0,
1655 | |         ws_col: 0,
...    |
1721 | |     setblocking((*tty).fd, 1 as libc::c_int);
1722 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/tty.rs:1672:47
     |
1672 |     if tcsetattr((*tty).fd, 0 as libc::c_int, &mut (*tty).tio) == -(1 as libc::c_int) {
     |                                               ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1724:1
     |
1724 | / pub unsafe extern "C" fn tty_close(mut tty: *mut tty) {
1725 | |     if event_initialized(&mut (*tty).key_timer) != 0 {
1726 | |         event_del(&mut (*tty).key_timer);
1727 | |     }
...    |
1741 | |     }
1742 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/tty.rs:1725:26
     |
1725 |     if event_initialized(&mut (*tty).key_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1744:1
     |
1744 | / pub unsafe extern "C" fn tty_free(mut tty: *mut tty) {
1745 | |     tty_close(tty);
1746 | |     free((*tty).ccolour as *mut libc::c_void);
1747 | |     free((*tty).term_name as *mut libc::c_void);
1748 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1750:1
     |
1750 | / pub unsafe extern "C" fn tty_set_type(mut tty: *mut tty, mut type_0: libc::c_int) {
1751 | |     (*tty).term_type = type_0 as C2RustUnnamed_32;
1752 | |     if (*tty).term_type as libc::c_uint == TTY_VT420 as libc::c_int as libc::c_uint {
1753 | |         tty_puts(tty, b"\x1B[?69h\0" as *const u8 as *const libc::c_char);
1754 | |     }
1755 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1757:1
     |
1757 | / pub unsafe extern "C" fn tty_raw(mut tty: *mut tty, mut s: *const libc::c_char) {
1758 | |     let mut n: ssize_t = 0;
1759 | |     let mut slen: ssize_t = 0;
1760 | |     let mut i: u_int = 0;
...    |
1779 | |     }
1780 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/tty.rs:1778:9
     |
1778 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1782:1
     |
1782 | / pub unsafe extern "C" fn tty_putcode(mut tty: *mut tty, mut code: tty_code_code) {
1783 | |     tty_puts(tty, tty_term_string((*tty).term, code));
1784 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1786:1
     |
1786 | / pub unsafe extern "C" fn tty_putcode1(
1787 | |     mut tty: *mut tty,
1788 | |     mut code: tty_code_code,
1789 | |     mut a: libc::c_int,
...    |
1794 | |     tty_puts(tty, tty_term_string1((*tty).term, code, a));
1795 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1797:1
     |
1797 | / pub unsafe extern "C" fn tty_putcode2(
1798 | |     mut tty: *mut tty,
1799 | |     mut code: tty_code_code,
1800 | |     mut a: libc::c_int,
...    |
1806 | |     tty_puts(tty, tty_term_string2((*tty).term, code, a, b));
1807 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1809:1
     |
1809 | / pub unsafe extern "C" fn tty_putcode3(
1810 | |     mut tty: *mut tty,
1811 | |     mut code: tty_code_code,
1812 | |     mut a: libc::c_int,
...    |
1819 | |     tty_puts(tty, tty_term_string3((*tty).term, code, a, b, c));
1820 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1822:1
     |
1822 | / pub unsafe extern "C" fn tty_putcode_ptr1(
1823 | |     mut tty: *mut tty,
1824 | |     mut code: tty_code_code,
1825 | |     mut a: *const libc::c_void,
...    |
1829 | |     }
1830 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1832:1
     |
1832 | / pub unsafe extern "C" fn tty_putcode_ptr2(
1833 | |     mut tty: *mut tty,
1834 | |     mut code: tty_code_code,
1835 | |     mut a: *const libc::c_void,
...    |
1840 | |     }
1841 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty.rs:1864:42
     |
1864 |         event_add(&mut (*tty).event_out, 0 as *const timeval);
     |                                          ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1868:1
     |
1868 | / pub unsafe extern "C" fn tty_puts(mut tty: *mut tty, mut s: *const libc::c_char) {
1869 | |     if *s as libc::c_int != '\0' as i32 {
1870 | |         tty_add(tty, s, strlen(s));
1871 | |     }
1872 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1874:1
     |
1874 | / pub unsafe extern "C" fn tty_putc(mut tty: *mut tty, mut ch: u_char) {
1875 | |     let mut acs: *const libc::c_char = 0 as *const libc::c_char;
1876 | |     if (*tty).cell.attr as libc::c_int & 0x80 as libc::c_int != 0 {
1877 | |         acs = tty_acs_get(tty, ch);
...    |
1915 | |     }
1916 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty.rs:1875:40
     |
1875 |     let mut acs: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty.rs:1901:17
     |
1901 |                 (*tty).cy;
     |                 ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:1913:13
     |
1913 |             (*tty).cx;
     |             ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1918:1
     |
1918 | / pub unsafe extern "C" fn tty_putn(
1919 | |     mut tty: *mut tty,
1920 | |     mut buf: *const libc::c_void,
1921 | |     mut len: size_t,
...    |
1939 | |     };
1940 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/tty.rs:1929:13
     |
1929 |             (*tty).cy;
     |             ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/tty.rs:1942:38
     |
1942 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1962:1
     |
1962 | / pub unsafe extern "C" fn tty_set_title(
1963 | |     mut tty: *mut tty,
1964 | |     mut title: *const libc::c_char,
1965 | | ) {
...    |
1973 | |     tty_putcode(tty, TTYC_FSL);
1974 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:1988:1
     |
1988 | / pub unsafe extern "C" fn tty_update_mode(
1989 | |     mut tty: *mut tty,
1990 | |     mut mode: libc::c_int,
1991 | |     mut s: *mut screen,
...    |
2059 | |     (*tty).mode = mode;
2060 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:2073:16
     |
2073 |             if !(fresh0 > 0 as libc::c_int as u_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `fresh0 <= 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/tty.rs:2111:5
     |
2111 | /     return (((*ctx).orlower).wrapping_sub((*ctx).orupper)
2112 | |         >= (*(*(*wp).screen).grid).sy / 2 as libc::c_int as u_int) as libc::c_int;
     | |__________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2111 ~     (((*ctx).orlower).wrapping_sub((*ctx).orupper)
2112 +         >= (*(*(*wp).screen).grid).sy / 2 as libc::c_int as u_int) as libc::c_int
     |

warning: unneeded `return` statement
    --> src/tty.rs:2145:5
     |
2145 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/tty.rs:2160:13
     |
2160 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2167:13
     |
2167 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2298:9
     |
2298 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2302:1
     |
2302 | / pub unsafe extern "C" fn tty_draw_pane(
2303 | |     mut tty: *mut tty,
2304 | |     mut wp: *const window_pane,
2305 | |     mut py: u_int,
...    |
2309 | |     tty_draw_line(tty, wp, (*wp).screen, py, ox, oy);
2310 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty.rs:2351:5
     |
2351 |     return &mut new;
     |     ^^^^^^^^^^^^^^^^ help: remove `return`: `&mut new`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2354:1
     |
2354 | / pub unsafe extern "C" fn tty_draw_line(
2355 | |     mut tty: *mut tty,
2356 | |     mut wp: *const window_pane,
2357 | |     mut s: *mut screen,
...    |
2561 | |     tty_update_mode(tty, (*tty).mode, s);
2562 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty.rs:2387:37
     |
2387 |     let mut gcp: *const grid_cell = 0 as *const grid_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_check_codeset` doesn't need a mutable reference
    --> src/tty.rs:2460:38
     |
2460 |         gcp = tty_check_codeset(tty, &mut gc);
     |                                      ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/tty.rs:2471:33
     |
2471 |             tty_attributes(tty, &mut last, wp);
     |                                 ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/tty.rs:2487:33
     |
2487 |             tty_attributes(tty, &mut last, wp);
     |                                 ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/tty.rs:2495:17
     |
2495 |                 ux;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2497:17
     |
2497 |                 j;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/tty.rs:2500:33
     |
2500 |             tty_attributes(tty, &mut last, wp);
     |                                 ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/tty.rs:2505:17
     |
2505 |                 j;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2518:9
     |
2518 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `grid_cells_equal` doesn't need a mutable reference
    --> src/tty.rs:2521:29
     |
2521 |         if grid_cells_equal(&mut last, &grid_default_cell) != 0 {
     |                             ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/tty.rs:2528:17
     |
2528 |                 len;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2530:17
     |
2530 |                 width;
     |                 ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/tty.rs:2543:33
     |
2543 |             tty_attributes(tty, &mut last, wp);
     |                                 ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/tty.rs:2579:5
     |
2579 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2582:1
     |
2582 | / pub unsafe extern "C" fn tty_write(
2583 | |     mut cmdfn: Option::<unsafe extern "C" fn(*mut tty, *const tty_ctx) -> ()>,
2584 | |     mut ctx: *mut tty_ctx,
2585 | | ) {
...    |
2607 | |     }
2608 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:2598:12
     |
2598 |         if !(tty_client_ready(c, wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `tty_client_ready(c, wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/tty.rs:2587:30
     |
2587 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2610:1
     |
2610 | / pub unsafe extern "C" fn tty_cmd_insertcharacter(
2611 | |     mut tty: *mut tty,
2612 | |     mut ctx: *const tty_ctx,
2613 | | ) {
...    |
2626 | |     tty_emulate_repeat(tty, TTYC_ICH, TTYC_ICH1, (*ctx).num);
2627 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2629:1
     |
2629 | / pub unsafe extern "C" fn tty_cmd_deletecharacter(
2630 | |     mut tty: *mut tty,
2631 | |     mut ctx: *const tty_ctx,
2632 | | ) {
...    |
2645 | |     tty_emulate_repeat(tty, TTYC_DCH, TTYC_DCH1, (*ctx).num);
2646 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2648:1
     |
2648 | / pub unsafe extern "C" fn tty_cmd_clearcharacter(
2649 | |     mut tty: *mut tty,
2650 | |     mut ctx: *const tty_ctx,
2651 | | ) {
...    |
2660 | |     };
2661 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2663:1
     |
2663 | / pub unsafe extern "C" fn tty_cmd_insertline(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2664 | |     if !((*ctx).xoff == 0 as libc::c_int as u_int
2665 | |         && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
2666 | |         || tty_fake_bce(tty, (*ctx).wp, (*ctx).bg) != 0
...    |
2682 | |     (*tty).cx = (*tty).cy;
2683 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2685:1
     |
2685 | / pub unsafe extern "C" fn tty_cmd_deleteline(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2686 | |     if !((*ctx).xoff == 0 as libc::c_int as u_int
2687 | |         && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
2688 | |         || tty_fake_bce(tty, (*ctx).wp, (*ctx).bg) != 0
...    |
2704 | |     (*tty).cx = (*tty).cy;
2705 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2707:1
     |
2707 | / pub unsafe extern "C" fn tty_cmd_clearline(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2708 | |     let mut wp: *mut window_pane = (*ctx).wp;
2709 | |     let mut nx: u_int = 0;
2710 | |     let mut py: u_int = ((*ctx).yoff).wrapping_add((*ctx).ocy);
...    |
2713 | |     tty_clear_line(tty, wp, py, (*ctx).xoff, nx, (*ctx).bg);
2714 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2716:1
     |
2716 | / pub unsafe extern "C" fn tty_cmd_clearendofline(
2717 | |     mut tty: *mut tty,
2718 | |     mut ctx: *const tty_ctx,
2719 | | ) {
...    |
2725 | |     tty_clear_line(tty, wp, py, ((*ctx).xoff).wrapping_add((*ctx).ocx), nx, (*ctx).bg);
2726 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2728:1
     |
2728 | / pub unsafe extern "C" fn tty_cmd_clearstartofline(
2729 | |     mut tty: *mut tty,
2730 | |     mut ctx: *const tty_ctx,
2731 | | ) {
...    |
2742 | |     );
2743 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2745:1
     |
2745 | / pub unsafe extern "C" fn tty_cmd_reverseindex(
2746 | |     mut tty: *mut tty,
2747 | |     mut ctx: *const tty_ctx,
2748 | | ) {
...    |
2766 | |     tty_putcode(tty, TTYC_RI);
2767 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2769:1
     |
2769 | / pub unsafe extern "C" fn tty_cmd_linefeed(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2770 | |     let mut wp: *mut window_pane = (*ctx).wp;
2771 | |     if (*ctx).ocy != (*ctx).orlower {
2772 | |         return;
...    |
2802 | |     tty_putc(tty, '\n' as i32 as u_char);
2803 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:2776:12
     |
2776 |           && !((*tty).term_type as libc::c_uint
     |  ____________^
2777 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/tty.rs:2774:8
     |
2774 |       if !((*ctx).xoff == 0 as libc::c_int as u_int
     |  ________^
2775 | |         && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
2776 | |         && !((*tty).term_type as libc::c_uint
2777 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
2774 ~     if !(((*tty).term_type as libc::c_uint
2775 +             == TTY_VT420 as libc::c_int as libc::c_uint) || (*ctx).xoff == 0 as libc::c_int as u_int && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
     |

warning: this boolean expression can be simplified
    --> src/tty.rs:2788:12
     |
2788 |           if !((*tty).term_type as libc::c_uint
     |  ____________^
2789 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2805:1
     |
2805 | / pub unsafe extern "C" fn tty_cmd_scrollup(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2806 | |     let mut wp: *mut window_pane = (*ctx).wp;
2807 | |     let mut i: u_int = 0;
2808 | |     if !((*ctx).xoff == 0 as libc::c_int as u_int
...    |
2840 | |     };
2841 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:2810:12
     |
2810 |           && !((*tty).term_type as libc::c_uint
     |  ____________^
2811 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/tty.rs:2808:8
     |
2808 |       if !((*ctx).xoff == 0 as libc::c_int as u_int
     |  ________^
2809 | |         && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
2810 | |         && !((*tty).term_type as libc::c_uint
2811 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
2808 ~     if !(((*tty).term_type as libc::c_uint
2809 +             == TTY_VT420 as libc::c_int as libc::c_uint) || (*ctx).xoff == 0 as libc::c_int as u_int && (*(*(*(*ctx).wp).screen).grid).sx >= (*tty).sx)
     |

warning: this boolean expression can be simplified
    --> src/tty.rs:2824:12
     |
2824 |           if !((*tty).term_type as libc::c_uint
     |  ____________^
2825 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/tty.rs:2835:13
     |
2835 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2843:1
     |
2843 | / pub unsafe extern "C" fn tty_cmd_clearendofscreen(
2844 | |     mut tty: *mut tty,
2845 | |     mut ctx: *const tty_ctx,
2846 | | ) {
...    |
2870 | |     tty_clear_line(tty, wp, py, px, nx, (*ctx).bg);
2871 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2873:1
     |
2873 | / pub unsafe extern "C" fn tty_cmd_clearstartofscreen(
2874 | |     mut tty: *mut tty,
2875 | |     mut ctx: *const tty_ctx,
2876 | | ) {
...    |
2898 | |     tty_clear_line(tty, wp, py, px, nx, (*ctx).bg);
2899 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2901:1
     |
2901 | / pub unsafe extern "C" fn tty_cmd_clearscreen(
2902 | |     mut tty: *mut tty,
2903 | |     mut ctx: *const tty_ctx,
2904 | | ) {
...    |
2922 | |     tty_clear_area(tty, wp, py, ny, px, nx, (*ctx).bg);
2923 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2925:1
     |
2925 | / pub unsafe extern "C" fn tty_cmd_alignmenttest(
2926 | |     mut tty: *mut tty,
2927 | |     mut ctx: *const tty_ctx,
2928 | | ) {
...    |
2952 | |     }
2953 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/tty.rs:2948:13
     |
2948 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty.rs:2951:9
     |
2951 |         j;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2955:1
     |
2955 | / pub unsafe extern "C" fn tty_cmd_cell(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2956 | |     if ((*ctx).xoff).wrapping_add((*ctx).ocx)
2957 | |         > ((*tty).sx).wrapping_sub(1 as libc::c_int as u_int)
2958 | |         && (*ctx).ocy == (*ctx).orlower
...    |
2969 | |     tty_cell(tty, (*ctx).cell, (*ctx).wp);
2970 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2972:1
     |
2972 | / pub unsafe extern "C" fn tty_cmd_cells(mut tty: *mut tty, mut ctx: *const tty_ctx) {
2973 | |     tty_cursor_pane_unless_wrap(tty, ctx, (*ctx).ocx, (*ctx).ocy);
2974 | |     tty_attributes(tty, (*ctx).cell, (*ctx).wp);
2975 | |     tty_putn(tty, (*ctx).ptr, (*ctx).num as size_t, (*ctx).num);
2976 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:2978:1
     |
2978 | / pub unsafe extern "C" fn tty_cmd_setselection(
2979 | |     mut tty: *mut tty,
2980 | |     mut ctx: *const tty_ctx,
2981 | | ) {
...    |
2999 | |     free(buf as *mut libc::c_void);
3000 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/tty.rs:2982:38
     |
2982 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3002:1
     |
3002 | / pub unsafe extern "C" fn tty_cmd_rawstring(mut tty: *mut tty, mut ctx: *const tty_ctx) {
3003 | |     tty_add(tty, (*ctx).ptr as *const libc::c_char, (*ctx).num as size_t);
3004 | |     tty_invalidate(tty);
3005 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty.rs:3011:37
     |
3011 |     let mut gcp: *const grid_cell = 0 as *const grid_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3040:1
     |
3040 | / pub unsafe extern "C" fn tty_reset(mut tty: *mut tty) {
3041 | |     let mut gc: *mut grid_cell = &mut (*tty).cell;
3042 | |     if grid_cells_equal(gc, &grid_default_cell) == 0 {
3043 | |         if (*gc).attr as libc::c_int & 0x80 as libc::c_int != 0
...    |
3060 | |     (*tty).last_wp = -(1 as libc::c_int);
3061 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/tty.rs:3092:50
     |
3092 |         tty_update_mode(tty, 0x1 as libc::c_int, 0 as *mut screen);
     |                                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3101:1
     |
3101 | / pub unsafe extern "C" fn tty_region_off(mut tty: *mut tty) {
3102 | |     tty_region(
3103 | |         tty,
3104 | |         0 as libc::c_int as u_int,
3105 | |         ((*tty).sy).wrapping_sub(1 as libc::c_int as u_int),
3106 | |     );
3107 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3149:1
     |
3149 | / pub unsafe extern "C" fn tty_margin_off(mut tty: *mut tty) {
3150 | |     tty_margin(
3151 | |         tty,
3152 | |         0 as libc::c_int as u_int,
3153 | |         ((*tty).sx).wrapping_sub(1 as libc::c_int as u_int),
3154 | |     );
3155 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:3167:8
     |
3167 |     if !((*tty).term_type as libc::c_uint == TTY_VT420 as libc::c_int as libc::c_uint) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3243:1
     |
3243 | / pub unsafe extern "C" fn tty_cursor(mut tty: *mut tty, mut cx: u_int, mut cy: u_int) {
3244 | |     let mut current_block: u64;
3245 | |     let mut term: *mut tty_term = (*tty).term;
3246 | |     let mut thisx: u_int = 0;
...    |
3357 | |     (*tty).cy = cy;
3358 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty.rs:3266:13
     |
3266 |           && (!((*tty).term_type as libc::c_uint
     |  _____________^
3267 | |             == TTY_VT420 as libc::c_int as libc::c_uint)
     | |________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/tty.rs:3275:17
     |
3275 |               && (!((*tty).term_type as libc::c_uint
     |  _________________^
3276 | |                 == TTY_VT420 as libc::c_int as libc::c_uint)
     | |____________________________________________________________^ help: try: `(*tty).term_type as libc::c_uint != TTY_VT420 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/tty.rs:3350:5
     |
3350 | /     match current_block {
3351 | |         3117960734895620227 => {
3352 | |             tty_putcode2(tty, TTYC_CUP, cy as libc::c_int, cx as libc::c_int);
3353 | |         }
3354 | |         _ => {}
3355 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
3350 ~     if current_block == 3117960734895620227 {
3351 +         tty_putcode2(tty, TTYC_CUP, cy as libc::c_int, cx as libc::c_int);
3352 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty.rs:3360:1
     |
3360 | / pub unsafe extern "C" fn tty_attributes(
3361 | |     mut tty: *mut tty,
3362 | |     mut gc: *const grid_cell,
3363 | |     mut wp: *const window_pane,
...    |
3452 | |     }
3453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `tty_colours` doesn't need a mutable reference
    --> src/tty.rs:3419:22
     |
3419 |     tty_colours(tty, &mut gc2);
     |                      ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: this boolean expression can be simplified
    --> src/tty.rs:3603:12
     |
3603 |           if !(tty_try_colour(tty, (*gc).fg, b"38\0" as *const u8 as *const libc::c_char)
     |  ____________^
3604 | |             == 0 as libc::c_int)
     | |________________________________^ help: try: `tty_try_colour(tty, (*gc).fg, b"38\0" as *const u8 as *const libc::c_char) != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/tty.rs:3627:12
     |
3627 |           if !(tty_try_colour(tty, (*gc).bg, b"48\0" as *const u8 as *const libc::c_char)
     |  ____________^
3628 | |             == 0 as libc::c_int)
     | |________________________________^ help: try: `tty_try_colour(tty, (*gc).bg, b"48\0" as *const u8 as *const libc::c_char) != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/tty.rs:3692:9
     |
3692 |         return 0 as libc::c_int;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/tty.rs:3732:9
     |
3732 |         return -(1 as libc::c_int);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/tty.rs:3741:37
     |
3741 |     let mut agc: *const grid_cell = 0 as *const grid_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty.rs:3742:37
     |
3742 |     let mut pgc: *const grid_cell = 0 as *const grid_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty.rs:3743:37
     |
3743 |     let mut wgc: *const grid_cell = 0 as *const grid_cell;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tty_attributes` doesn't need a mutable reference
    --> src/tty.rs:3832:25
     |
3832 |     tty_attributes(tty, &mut gc, wp);
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1132:9
     |
1128 | /         let mut init = tty_acs_entry {
1129 | |             key: '+' as i32 as u_char,
1130 | |             string: b"\xE2\x86\x92\0" as *const u8 as *const libc::c_char,
1131 | |         };
     | |__________- unnecessary `let` binding
1132 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1128 ~         
1129 ~         tty_acs_entry {
1130 +             key: '+' as i32 as u_char,
1131 +             string: b"\xE2\x86\x92\0" as *const u8 as *const libc::c_char,
1132 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1139:9
     |
1135 | /         let mut init = tty_acs_entry {
1136 | |             key: ',' as i32 as u_char,
1137 | |             string: b"\xE2\x86\x90\0" as *const u8 as *const libc::c_char,
1138 | |         };
     | |__________- unnecessary `let` binding
1139 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1135 ~         
1136 ~         tty_acs_entry {
1137 +             key: ',' as i32 as u_char,
1138 +             string: b"\xE2\x86\x90\0" as *const u8 as *const libc::c_char,
1139 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1146:9
     |
1142 | /         let mut init = tty_acs_entry {
1143 | |             key: '-' as i32 as u_char,
1144 | |             string: b"\xE2\x86\x91\0" as *const u8 as *const libc::c_char,
1145 | |         };
     | |__________- unnecessary `let` binding
1146 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1142 ~         
1143 ~         tty_acs_entry {
1144 +             key: '-' as i32 as u_char,
1145 +             string: b"\xE2\x86\x91\0" as *const u8 as *const libc::c_char,
1146 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1153:9
     |
1149 | /         let mut init = tty_acs_entry {
1150 | |             key: '.' as i32 as u_char,
1151 | |             string: b"\xE2\x86\x93\0" as *const u8 as *const libc::c_char,
1152 | |         };
     | |__________- unnecessary `let` binding
1153 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1149 ~         
1150 ~         tty_acs_entry {
1151 +             key: '.' as i32 as u_char,
1152 +             string: b"\xE2\x86\x93\0" as *const u8 as *const libc::c_char,
1153 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1160:9
     |
1156 | /         let mut init = tty_acs_entry {
1157 | |             key: '0' as i32 as u_char,
1158 | |             string: b"\xE2\x96\xAE\0" as *const u8 as *const libc::c_char,
1159 | |         };
     | |__________- unnecessary `let` binding
1160 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1156 ~         
1157 ~         tty_acs_entry {
1158 +             key: '0' as i32 as u_char,
1159 +             string: b"\xE2\x96\xAE\0" as *const u8 as *const libc::c_char,
1160 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1167:9
     |
1163 | /         let mut init = tty_acs_entry {
1164 | |             key: '`' as i32 as u_char,
1165 | |             string: b"\xE2\x97\x86\0" as *const u8 as *const libc::c_char,
1166 | |         };
     | |__________- unnecessary `let` binding
1167 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1163 ~         
1164 ~         tty_acs_entry {
1165 +             key: '`' as i32 as u_char,
1166 +             string: b"\xE2\x97\x86\0" as *const u8 as *const libc::c_char,
1167 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1174:9
     |
1170 | /         let mut init = tty_acs_entry {
1171 | |             key: 'a' as i32 as u_char,
1172 | |             string: b"\xE2\x96\x92\0" as *const u8 as *const libc::c_char,
1173 | |         };
     | |__________- unnecessary `let` binding
1174 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1170 ~         
1171 ~         tty_acs_entry {
1172 +             key: 'a' as i32 as u_char,
1173 +             string: b"\xE2\x96\x92\0" as *const u8 as *const libc::c_char,
1174 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1181:9
     |
1177 | /         let mut init = tty_acs_entry {
1178 | |             key: 'f' as i32 as u_char,
1179 | |             string: b"\xC2\xB0\0" as *const u8 as *const libc::c_char,
1180 | |         };
     | |__________- unnecessary `let` binding
1181 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1177 ~         
1178 ~         tty_acs_entry {
1179 +             key: 'f' as i32 as u_char,
1180 +             string: b"\xC2\xB0\0" as *const u8 as *const libc::c_char,
1181 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1188:9
     |
1184 | /         let mut init = tty_acs_entry {
1185 | |             key: 'g' as i32 as u_char,
1186 | |             string: b"\xC2\xB1\0" as *const u8 as *const libc::c_char,
1187 | |         };
     | |__________- unnecessary `let` binding
1188 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1184 ~         
1185 ~         tty_acs_entry {
1186 +             key: 'g' as i32 as u_char,
1187 +             string: b"\xC2\xB1\0" as *const u8 as *const libc::c_char,
1188 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1195:9
     |
1191 | /         let mut init = tty_acs_entry {
1192 | |             key: 'h' as i32 as u_char,
1193 | |             string: b"\xE2\x96\x92\0" as *const u8 as *const libc::c_char,
1194 | |         };
     | |__________- unnecessary `let` binding
1195 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1191 ~         
1192 ~         tty_acs_entry {
1193 +             key: 'h' as i32 as u_char,
1194 +             string: b"\xE2\x96\x92\0" as *const u8 as *const libc::c_char,
1195 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1202:9
     |
1198 | /         let mut init = tty_acs_entry {
1199 | |             key: 'i' as i32 as u_char,
1200 | |             string: b"\xE2\x98\x83\0" as *const u8 as *const libc::c_char,
1201 | |         };
     | |__________- unnecessary `let` binding
1202 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1198 ~         
1199 ~         tty_acs_entry {
1200 +             key: 'i' as i32 as u_char,
1201 +             string: b"\xE2\x98\x83\0" as *const u8 as *const libc::c_char,
1202 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1209:9
     |
1205 | /         let mut init = tty_acs_entry {
1206 | |             key: 'j' as i32 as u_char,
1207 | |             string: b"\xE2\x94\x98\0" as *const u8 as *const libc::c_char,
1208 | |         };
     | |__________- unnecessary `let` binding
1209 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1205 ~         
1206 ~         tty_acs_entry {
1207 +             key: 'j' as i32 as u_char,
1208 +             string: b"\xE2\x94\x98\0" as *const u8 as *const libc::c_char,
1209 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1216:9
     |
1212 | /         let mut init = tty_acs_entry {
1213 | |             key: 'k' as i32 as u_char,
1214 | |             string: b"\xE2\x94\x90\0" as *const u8 as *const libc::c_char,
1215 | |         };
     | |__________- unnecessary `let` binding
1216 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1212 ~         
1213 ~         tty_acs_entry {
1214 +             key: 'k' as i32 as u_char,
1215 +             string: b"\xE2\x94\x90\0" as *const u8 as *const libc::c_char,
1216 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1223:9
     |
1219 | /         let mut init = tty_acs_entry {
1220 | |             key: 'l' as i32 as u_char,
1221 | |             string: b"\xE2\x94\x8C\0" as *const u8 as *const libc::c_char,
1222 | |         };
     | |__________- unnecessary `let` binding
1223 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1219 ~         
1220 ~         tty_acs_entry {
1221 +             key: 'l' as i32 as u_char,
1222 +             string: b"\xE2\x94\x8C\0" as *const u8 as *const libc::c_char,
1223 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1230:9
     |
1226 | /         let mut init = tty_acs_entry {
1227 | |             key: 'm' as i32 as u_char,
1228 | |             string: b"\xE2\x94\x94\0" as *const u8 as *const libc::c_char,
1229 | |         };
     | |__________- unnecessary `let` binding
1230 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1226 ~         
1227 ~         tty_acs_entry {
1228 +             key: 'm' as i32 as u_char,
1229 +             string: b"\xE2\x94\x94\0" as *const u8 as *const libc::c_char,
1230 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1237:9
     |
1233 | /         let mut init = tty_acs_entry {
1234 | |             key: 'n' as i32 as u_char,
1235 | |             string: b"\xE2\x94\xBC\0" as *const u8 as *const libc::c_char,
1236 | |         };
     | |__________- unnecessary `let` binding
1237 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1233 ~         
1234 ~         tty_acs_entry {
1235 +             key: 'n' as i32 as u_char,
1236 +             string: b"\xE2\x94\xBC\0" as *const u8 as *const libc::c_char,
1237 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1244:9
     |
1240 | /         let mut init = tty_acs_entry {
1241 | |             key: 'o' as i32 as u_char,
1242 | |             string: b"\xE2\x8E\xBA\0" as *const u8 as *const libc::c_char,
1243 | |         };
     | |__________- unnecessary `let` binding
1244 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1240 ~         
1241 ~         tty_acs_entry {
1242 +             key: 'o' as i32 as u_char,
1243 +             string: b"\xE2\x8E\xBA\0" as *const u8 as *const libc::c_char,
1244 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1251:9
     |
1247 | /         let mut init = tty_acs_entry {
1248 | |             key: 'p' as i32 as u_char,
1249 | |             string: b"\xE2\x8E\xBB\0" as *const u8 as *const libc::c_char,
1250 | |         };
     | |__________- unnecessary `let` binding
1251 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1247 ~         
1248 ~         tty_acs_entry {
1249 +             key: 'p' as i32 as u_char,
1250 +             string: b"\xE2\x8E\xBB\0" as *const u8 as *const libc::c_char,
1251 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1258:9
     |
1254 | /         let mut init = tty_acs_entry {
1255 | |             key: 'q' as i32 as u_char,
1256 | |             string: b"\xE2\x94\x80\0" as *const u8 as *const libc::c_char,
1257 | |         };
     | |__________- unnecessary `let` binding
1258 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1254 ~         
1255 ~         tty_acs_entry {
1256 +             key: 'q' as i32 as u_char,
1257 +             string: b"\xE2\x94\x80\0" as *const u8 as *const libc::c_char,
1258 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1265:9
     |
1261 | /         let mut init = tty_acs_entry {
1262 | |             key: 'r' as i32 as u_char,
1263 | |             string: b"\xE2\x8E\xBC\0" as *const u8 as *const libc::c_char,
1264 | |         };
     | |__________- unnecessary `let` binding
1265 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1261 ~         
1262 ~         tty_acs_entry {
1263 +             key: 'r' as i32 as u_char,
1264 +             string: b"\xE2\x8E\xBC\0" as *const u8 as *const libc::c_char,
1265 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1272:9
     |
1268 | /         let mut init = tty_acs_entry {
1269 | |             key: 's' as i32 as u_char,
1270 | |             string: b"\xE2\x8E\xBD\0" as *const u8 as *const libc::c_char,
1271 | |         };
     | |__________- unnecessary `let` binding
1272 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1268 ~         
1269 ~         tty_acs_entry {
1270 +             key: 's' as i32 as u_char,
1271 +             string: b"\xE2\x8E\xBD\0" as *const u8 as *const libc::c_char,
1272 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1279:9
     |
1275 | /         let mut init = tty_acs_entry {
1276 | |             key: 't' as i32 as u_char,
1277 | |             string: b"\xE2\x94\x9C\0" as *const u8 as *const libc::c_char,
1278 | |         };
     | |__________- unnecessary `let` binding
1279 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1275 ~         
1276 ~         tty_acs_entry {
1277 +             key: 't' as i32 as u_char,
1278 +             string: b"\xE2\x94\x9C\0" as *const u8 as *const libc::c_char,
1279 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1286:9
     |
1282 | /         let mut init = tty_acs_entry {
1283 | |             key: 'u' as i32 as u_char,
1284 | |             string: b"\xE2\x94\xA4\0" as *const u8 as *const libc::c_char,
1285 | |         };
     | |__________- unnecessary `let` binding
1286 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1282 ~         
1283 ~         tty_acs_entry {
1284 +             key: 'u' as i32 as u_char,
1285 +             string: b"\xE2\x94\xA4\0" as *const u8 as *const libc::c_char,
1286 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1293:9
     |
1289 | /         let mut init = tty_acs_entry {
1290 | |             key: 'v' as i32 as u_char,
1291 | |             string: b"\xE2\x94\xB4\0" as *const u8 as *const libc::c_char,
1292 | |         };
     | |__________- unnecessary `let` binding
1293 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1289 ~         
1290 ~         tty_acs_entry {
1291 +             key: 'v' as i32 as u_char,
1292 +             string: b"\xE2\x94\xB4\0" as *const u8 as *const libc::c_char,
1293 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1300:9
     |
1296 | /         let mut init = tty_acs_entry {
1297 | |             key: 'w' as i32 as u_char,
1298 | |             string: b"\xE2\x94\xAC\0" as *const u8 as *const libc::c_char,
1299 | |         };
     | |__________- unnecessary `let` binding
1300 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1296 ~         
1297 ~         tty_acs_entry {
1298 +             key: 'w' as i32 as u_char,
1299 +             string: b"\xE2\x94\xAC\0" as *const u8 as *const libc::c_char,
1300 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1307:9
     |
1303 | /         let mut init = tty_acs_entry {
1304 | |             key: 'x' as i32 as u_char,
1305 | |             string: b"\xE2\x94\x82\0" as *const u8 as *const libc::c_char,
1306 | |         };
     | |__________- unnecessary `let` binding
1307 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1303 ~         
1304 ~         tty_acs_entry {
1305 +             key: 'x' as i32 as u_char,
1306 +             string: b"\xE2\x94\x82\0" as *const u8 as *const libc::c_char,
1307 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1314:9
     |
1310 | /         let mut init = tty_acs_entry {
1311 | |             key: 'y' as i32 as u_char,
1312 | |             string: b"\xE2\x89\xA4\0" as *const u8 as *const libc::c_char,
1313 | |         };
     | |__________- unnecessary `let` binding
1314 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1310 ~         
1311 ~         tty_acs_entry {
1312 +             key: 'y' as i32 as u_char,
1313 +             string: b"\xE2\x89\xA4\0" as *const u8 as *const libc::c_char,
1314 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1321:9
     |
1317 | /         let mut init = tty_acs_entry {
1318 | |             key: 'z' as i32 as u_char,
1319 | |             string: b"\xE2\x89\xA5\0" as *const u8 as *const libc::c_char,
1320 | |         };
     | |__________- unnecessary `let` binding
1321 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1317 ~         
1318 ~         tty_acs_entry {
1319 +             key: 'z' as i32 as u_char,
1320 +             string: b"\xE2\x89\xA5\0" as *const u8 as *const libc::c_char,
1321 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1328:9
     |
1324 | /         let mut init = tty_acs_entry {
1325 | |             key: '{' as i32 as u_char,
1326 | |             string: b"\xCF\x80\0" as *const u8 as *const libc::c_char,
1327 | |         };
     | |__________- unnecessary `let` binding
1328 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1324 ~         
1325 ~         tty_acs_entry {
1326 +             key: '{' as i32 as u_char,
1327 +             string: b"\xCF\x80\0" as *const u8 as *const libc::c_char,
1328 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1335:9
     |
1331 | /         let mut init = tty_acs_entry {
1332 | |             key: '|' as i32 as u_char,
1333 | |             string: b"\xE2\x89\xA0\0" as *const u8 as *const libc::c_char,
1334 | |         };
     | |__________- unnecessary `let` binding
1335 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1331 ~         
1332 ~         tty_acs_entry {
1333 +             key: '|' as i32 as u_char,
1334 +             string: b"\xE2\x89\xA0\0" as *const u8 as *const libc::c_char,
1335 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1342:9
     |
1338 | /         let mut init = tty_acs_entry {
1339 | |             key: '}' as i32 as u_char,
1340 | |             string: b"\xC2\xA3\0" as *const u8 as *const libc::c_char,
1341 | |         };
     | |__________- unnecessary `let` binding
1342 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1338 ~         
1339 ~         tty_acs_entry {
1340 +             key: '}' as i32 as u_char,
1341 +             string: b"\xC2\xA3\0" as *const u8 as *const libc::c_char,
1342 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_acs.rs:1349:9
     |
1345 | /         let mut init = tty_acs_entry {
1346 | |             key: '~' as i32 as u_char,
1347 | |             string: b"\xC2\xB7\0" as *const u8 as *const libc::c_char,
1348 | |         };
     | |__________- unnecessary `let` binding
1349 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1345 ~         
1346 ~         tty_acs_entry {
1347 +             key: '~' as i32 as u_char,
1348 +             string: b"\xC2\xB7\0" as *const u8 as *const libc::c_char,
1349 +         }
     |

warning: unneeded `return` statement
    --> src/tty_acs.rs:1359:5
     |
1359 |     return ch as libc::c_int - (*entry).key as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `ch as libc::c_int - (*entry).key as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_acs.rs:1362:1
     |
1362 | / pub unsafe extern "C" fn tty_acs_needed(mut tty: *mut tty) -> libc::c_int {
1363 | |     if tty.is_null() {
1364 | |         return 0 as libc::c_int;
1365 | |     }
...    |
1374 | |     return 1 as libc::c_int;
1375 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_acs.rs:1374:5
     |
1374 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_acs.rs:1377:1
     |
1377 | / pub unsafe extern "C" fn tty_acs_get(
1378 | |     mut tty: *mut tty,
1379 | |     mut ch: u_char,
1380 | | ) -> *const libc::c_char {
...    |
1409 | |     return (*entry).string;
1410 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_acs.rs:1409:5
     |
1409 |     return (*entry).string;
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*entry).string`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/tty_acs.rs:1381:41
     |
1381 |     let mut entry: *mut tty_acs_entry = 0 as *mut tty_acs_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_acs_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_acs.rs:1386:20
     |
1386 |             return 0 as *const libc::c_char;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_acs.rs:1407:16
     |
1407 |         return 0 as *const libc::c_char;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1291:9
     |
1287 | /         let mut init = tty_default_key_raw {
1288 | |             string: b"\x1BOo\0" as *const u8 as *const libc::c_char,
1289 | |             key: KEYC_KP_SLASH as libc::c_int as key_code,
1290 | |         };
     | |__________- unnecessary `let` binding
1291 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1287 ~         
1288 ~         tty_default_key_raw {
1289 +             string: b"\x1BOo\0" as *const u8 as *const libc::c_char,
1290 +             key: KEYC_KP_SLASH as libc::c_int as key_code,
1291 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1298:9
     |
1294 | /         let mut init = tty_default_key_raw {
1295 | |             string: b"\x1BOj\0" as *const u8 as *const libc::c_char,
1296 | |             key: KEYC_KP_STAR as libc::c_int as key_code,
1297 | |         };
     | |__________- unnecessary `let` binding
1298 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1294 ~         
1295 ~         tty_default_key_raw {
1296 +             string: b"\x1BOj\0" as *const u8 as *const libc::c_char,
1297 +             key: KEYC_KP_STAR as libc::c_int as key_code,
1298 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1305:9
     |
1301 | /         let mut init = tty_default_key_raw {
1302 | |             string: b"\x1BOm\0" as *const u8 as *const libc::c_char,
1303 | |             key: KEYC_KP_MINUS as libc::c_int as key_code,
1304 | |         };
     | |__________- unnecessary `let` binding
1305 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1301 ~         
1302 ~         tty_default_key_raw {
1303 +             string: b"\x1BOm\0" as *const u8 as *const libc::c_char,
1304 +             key: KEYC_KP_MINUS as libc::c_int as key_code,
1305 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1312:9
     |
1308 | /         let mut init = tty_default_key_raw {
1309 | |             string: b"\x1BOw\0" as *const u8 as *const libc::c_char,
1310 | |             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1311 | |         };
     | |__________- unnecessary `let` binding
1312 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1308 ~         
1309 ~         tty_default_key_raw {
1310 +             string: b"\x1BOw\0" as *const u8 as *const libc::c_char,
1311 +             key: KEYC_KP_SEVEN as libc::c_int as key_code,
1312 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1319:9
     |
1315 | /         let mut init = tty_default_key_raw {
1316 | |             string: b"\x1BOx\0" as *const u8 as *const libc::c_char,
1317 | |             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1318 | |         };
     | |__________- unnecessary `let` binding
1319 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1315 ~         
1316 ~         tty_default_key_raw {
1317 +             string: b"\x1BOx\0" as *const u8 as *const libc::c_char,
1318 +             key: KEYC_KP_EIGHT as libc::c_int as key_code,
1319 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1326:9
     |
1322 | /         let mut init = tty_default_key_raw {
1323 | |             string: b"\x1BOy\0" as *const u8 as *const libc::c_char,
1324 | |             key: KEYC_KP_NINE as libc::c_int as key_code,
1325 | |         };
     | |__________- unnecessary `let` binding
1326 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1322 ~         
1323 ~         tty_default_key_raw {
1324 +             string: b"\x1BOy\0" as *const u8 as *const libc::c_char,
1325 +             key: KEYC_KP_NINE as libc::c_int as key_code,
1326 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1333:9
     |
1329 | /         let mut init = tty_default_key_raw {
1330 | |             string: b"\x1BOk\0" as *const u8 as *const libc::c_char,
1331 | |             key: KEYC_KP_PLUS as libc::c_int as key_code,
1332 | |         };
     | |__________- unnecessary `let` binding
1333 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1329 ~         
1330 ~         tty_default_key_raw {
1331 +             string: b"\x1BOk\0" as *const u8 as *const libc::c_char,
1332 +             key: KEYC_KP_PLUS as libc::c_int as key_code,
1333 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1340:9
     |
1336 | /         let mut init = tty_default_key_raw {
1337 | |             string: b"\x1BOt\0" as *const u8 as *const libc::c_char,
1338 | |             key: KEYC_KP_FOUR as libc::c_int as key_code,
1339 | |         };
     | |__________- unnecessary `let` binding
1340 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1336 ~         
1337 ~         tty_default_key_raw {
1338 +             string: b"\x1BOt\0" as *const u8 as *const libc::c_char,
1339 +             key: KEYC_KP_FOUR as libc::c_int as key_code,
1340 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1347:9
     |
1343 | /         let mut init = tty_default_key_raw {
1344 | |             string: b"\x1BOu\0" as *const u8 as *const libc::c_char,
1345 | |             key: KEYC_KP_FIVE as libc::c_int as key_code,
1346 | |         };
     | |__________- unnecessary `let` binding
1347 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1343 ~         
1344 ~         tty_default_key_raw {
1345 +             string: b"\x1BOu\0" as *const u8 as *const libc::c_char,
1346 +             key: KEYC_KP_FIVE as libc::c_int as key_code,
1347 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1354:9
     |
1350 | /         let mut init = tty_default_key_raw {
1351 | |             string: b"\x1BOv\0" as *const u8 as *const libc::c_char,
1352 | |             key: KEYC_KP_SIX as libc::c_int as key_code,
1353 | |         };
     | |__________- unnecessary `let` binding
1354 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1350 ~         
1351 ~         tty_default_key_raw {
1352 +             string: b"\x1BOv\0" as *const u8 as *const libc::c_char,
1353 +             key: KEYC_KP_SIX as libc::c_int as key_code,
1354 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1361:9
     |
1357 | /         let mut init = tty_default_key_raw {
1358 | |             string: b"\x1BOq\0" as *const u8 as *const libc::c_char,
1359 | |             key: KEYC_KP_ONE as libc::c_int as key_code,
1360 | |         };
     | |__________- unnecessary `let` binding
1361 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1357 ~         
1358 ~         tty_default_key_raw {
1359 +             string: b"\x1BOq\0" as *const u8 as *const libc::c_char,
1360 +             key: KEYC_KP_ONE as libc::c_int as key_code,
1361 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1368:9
     |
1364 | /         let mut init = tty_default_key_raw {
1365 | |             string: b"\x1BOr\0" as *const u8 as *const libc::c_char,
1366 | |             key: KEYC_KP_TWO as libc::c_int as key_code,
1367 | |         };
     | |__________- unnecessary `let` binding
1368 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1364 ~         
1365 ~         tty_default_key_raw {
1366 +             string: b"\x1BOr\0" as *const u8 as *const libc::c_char,
1367 +             key: KEYC_KP_TWO as libc::c_int as key_code,
1368 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1375:9
     |
1371 | /         let mut init = tty_default_key_raw {
1372 | |             string: b"\x1BOs\0" as *const u8 as *const libc::c_char,
1373 | |             key: KEYC_KP_THREE as libc::c_int as key_code,
1374 | |         };
     | |__________- unnecessary `let` binding
1375 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1371 ~         
1372 ~         tty_default_key_raw {
1373 +             string: b"\x1BOs\0" as *const u8 as *const libc::c_char,
1374 +             key: KEYC_KP_THREE as libc::c_int as key_code,
1375 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1382:9
     |
1378 | /         let mut init = tty_default_key_raw {
1379 | |             string: b"\x1BOM\0" as *const u8 as *const libc::c_char,
1380 | |             key: KEYC_KP_ENTER as libc::c_int as key_code,
1381 | |         };
     | |__________- unnecessary `let` binding
1382 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1378 ~         
1379 ~         tty_default_key_raw {
1380 +             string: b"\x1BOM\0" as *const u8 as *const libc::c_char,
1381 +             key: KEYC_KP_ENTER as libc::c_int as key_code,
1382 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1389:9
     |
1385 | /         let mut init = tty_default_key_raw {
1386 | |             string: b"\x1BOp\0" as *const u8 as *const libc::c_char,
1387 | |             key: KEYC_KP_ZERO as libc::c_int as key_code,
1388 | |         };
     | |__________- unnecessary `let` binding
1389 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1385 ~         
1386 ~         tty_default_key_raw {
1387 +             string: b"\x1BOp\0" as *const u8 as *const libc::c_char,
1388 +             key: KEYC_KP_ZERO as libc::c_int as key_code,
1389 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1396:9
     |
1392 | /         let mut init = tty_default_key_raw {
1393 | |             string: b"\x1BOn\0" as *const u8 as *const libc::c_char,
1394 | |             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1395 | |         };
     | |__________- unnecessary `let` binding
1396 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1392 ~         
1393 ~         tty_default_key_raw {
1394 +             string: b"\x1BOn\0" as *const u8 as *const libc::c_char,
1395 +             key: KEYC_KP_PERIOD as libc::c_int as key_code,
1396 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1403:9
     |
1399 | /         let mut init = tty_default_key_raw {
1400 | |             string: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1401 | |             key: KEYC_UP as libc::c_int as key_code,
1402 | |         };
     | |__________- unnecessary `let` binding
1403 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1399 ~         
1400 ~         tty_default_key_raw {
1401 +             string: b"\x1BOA\0" as *const u8 as *const libc::c_char,
1402 +             key: KEYC_UP as libc::c_int as key_code,
1403 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1410:9
     |
1406 | /         let mut init = tty_default_key_raw {
1407 | |             string: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1408 | |             key: KEYC_DOWN as libc::c_int as key_code,
1409 | |         };
     | |__________- unnecessary `let` binding
1410 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1406 ~         
1407 ~         tty_default_key_raw {
1408 +             string: b"\x1BOB\0" as *const u8 as *const libc::c_char,
1409 +             key: KEYC_DOWN as libc::c_int as key_code,
1410 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1417:9
     |
1413 | /         let mut init = tty_default_key_raw {
1414 | |             string: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1415 | |             key: KEYC_RIGHT as libc::c_int as key_code,
1416 | |         };
     | |__________- unnecessary `let` binding
1417 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1413 ~         
1414 ~         tty_default_key_raw {
1415 +             string: b"\x1BOC\0" as *const u8 as *const libc::c_char,
1416 +             key: KEYC_RIGHT as libc::c_int as key_code,
1417 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1424:9
     |
1420 | /         let mut init = tty_default_key_raw {
1421 | |             string: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1422 | |             key: KEYC_LEFT as libc::c_int as key_code,
1423 | |         };
     | |__________- unnecessary `let` binding
1424 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1420 ~         
1421 ~         tty_default_key_raw {
1422 +             string: b"\x1BOD\0" as *const u8 as *const libc::c_char,
1423 +             key: KEYC_LEFT as libc::c_int as key_code,
1424 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1431:9
     |
1427 | /         let mut init = tty_default_key_raw {
1428 | |             string: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1429 | |             key: KEYC_UP as libc::c_int as key_code,
1430 | |         };
     | |__________- unnecessary `let` binding
1431 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1427 ~         
1428 ~         tty_default_key_raw {
1429 +             string: b"\x1B[A\0" as *const u8 as *const libc::c_char,
1430 +             key: KEYC_UP as libc::c_int as key_code,
1431 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1438:9
     |
1434 | /         let mut init = tty_default_key_raw {
1435 | |             string: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1436 | |             key: KEYC_DOWN as libc::c_int as key_code,
1437 | |         };
     | |__________- unnecessary `let` binding
1438 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1434 ~         
1435 ~         tty_default_key_raw {
1436 +             string: b"\x1B[B\0" as *const u8 as *const libc::c_char,
1437 +             key: KEYC_DOWN as libc::c_int as key_code,
1438 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1445:9
     |
1441 | /         let mut init = tty_default_key_raw {
1442 | |             string: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1443 | |             key: KEYC_RIGHT as libc::c_int as key_code,
1444 | |         };
     | |__________- unnecessary `let` binding
1445 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1441 ~         
1442 ~         tty_default_key_raw {
1443 +             string: b"\x1B[C\0" as *const u8 as *const libc::c_char,
1444 +             key: KEYC_RIGHT as libc::c_int as key_code,
1445 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1452:9
     |
1448 | /         let mut init = tty_default_key_raw {
1449 | |             string: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1450 | |             key: KEYC_LEFT as libc::c_int as key_code,
1451 | |         };
     | |__________- unnecessary `let` binding
1452 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1448 ~         
1449 ~         tty_default_key_raw {
1450 +             string: b"\x1B[D\0" as *const u8 as *const libc::c_char,
1451 +             key: KEYC_LEFT as libc::c_int as key_code,
1452 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1459:9
     |
1455 | /         let mut init = tty_default_key_raw {
1456 | |             string: b"\x1BOH\0" as *const u8 as *const libc::c_char,
1457 | |             key: KEYC_HOME as libc::c_int as key_code,
1458 | |         };
     | |__________- unnecessary `let` binding
1459 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1455 ~         
1456 ~         tty_default_key_raw {
1457 +             string: b"\x1BOH\0" as *const u8 as *const libc::c_char,
1458 +             key: KEYC_HOME as libc::c_int as key_code,
1459 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1466:9
     |
1462 | /         let mut init = tty_default_key_raw {
1463 | |             string: b"\x1BOF\0" as *const u8 as *const libc::c_char,
1464 | |             key: KEYC_END as libc::c_int as key_code,
1465 | |         };
     | |__________- unnecessary `let` binding
1466 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1462 ~         
1463 ~         tty_default_key_raw {
1464 +             string: b"\x1BOF\0" as *const u8 as *const libc::c_char,
1465 +             key: KEYC_END as libc::c_int as key_code,
1466 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1473:9
     |
1469 | /         let mut init = tty_default_key_raw {
1470 | |             string: b"\x1B[H\0" as *const u8 as *const libc::c_char,
1471 | |             key: KEYC_HOME as libc::c_int as key_code,
1472 | |         };
     | |__________- unnecessary `let` binding
1473 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1469 ~         
1470 ~         tty_default_key_raw {
1471 +             string: b"\x1B[H\0" as *const u8 as *const libc::c_char,
1472 +             key: KEYC_HOME as libc::c_int as key_code,
1473 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1480:9
     |
1476 | /         let mut init = tty_default_key_raw {
1477 | |             string: b"\x1B[F\0" as *const u8 as *const libc::c_char,
1478 | |             key: KEYC_END as libc::c_int as key_code,
1479 | |         };
     | |__________- unnecessary `let` binding
1480 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1476 ~         
1477 ~         tty_default_key_raw {
1478 +             string: b"\x1B[F\0" as *const u8 as *const libc::c_char,
1479 +             key: KEYC_END as libc::c_int as key_code,
1480 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1488:9
     |
1483 | /         let mut init = tty_default_key_raw {
1484 | |             string: b"\x1BOa\0" as *const u8 as *const libc::c_char,
1485 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1486 | |                 | 0x400000000000 as libc::c_ulonglong,
1487 | |         };
     | |__________- unnecessary `let` binding
1488 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1483 ~         
1484 ~         tty_default_key_raw {
1485 +             string: b"\x1BOa\0" as *const u8 as *const libc::c_char,
1486 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1487 +                 | 0x400000000000 as libc::c_ulonglong,
1488 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1496:9
     |
1491 | /         let mut init = tty_default_key_raw {
1492 | |             string: b"\x1BOb\0" as *const u8 as *const libc::c_char,
1493 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1494 | |                 | 0x400000000000 as libc::c_ulonglong,
1495 | |         };
     | |__________- unnecessary `let` binding
1496 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1491 ~         
1492 ~         tty_default_key_raw {
1493 +             string: b"\x1BOb\0" as *const u8 as *const libc::c_char,
1494 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1495 +                 | 0x400000000000 as libc::c_ulonglong,
1496 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1504:9
     |
1499 | /         let mut init = tty_default_key_raw {
1500 | |             string: b"\x1BOc\0" as *const u8 as *const libc::c_char,
1501 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1502 | |                 | 0x400000000000 as libc::c_ulonglong,
1503 | |         };
     | |__________- unnecessary `let` binding
1504 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1499 ~         
1500 ~         tty_default_key_raw {
1501 +             string: b"\x1BOc\0" as *const u8 as *const libc::c_char,
1502 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1503 +                 | 0x400000000000 as libc::c_ulonglong,
1504 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1512:9
     |
1507 | /         let mut init = tty_default_key_raw {
1508 | |             string: b"\x1BOd\0" as *const u8 as *const libc::c_char,
1509 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1510 | |                 | 0x400000000000 as libc::c_ulonglong,
1511 | |         };
     | |__________- unnecessary `let` binding
1512 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1507 ~         
1508 ~         tty_default_key_raw {
1509 +             string: b"\x1BOd\0" as *const u8 as *const libc::c_char,
1510 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1511 +                 | 0x400000000000 as libc::c_ulonglong,
1512 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1520:9
     |
1515 | /         let mut init = tty_default_key_raw {
1516 | |             string: b"\x1B[a\0" as *const u8 as *const libc::c_char,
1517 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1518 | |                 | 0x800000000000 as libc::c_ulonglong,
1519 | |         };
     | |__________- unnecessary `let` binding
1520 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1515 ~         
1516 ~         tty_default_key_raw {
1517 +             string: b"\x1B[a\0" as *const u8 as *const libc::c_char,
1518 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
1519 +                 | 0x800000000000 as libc::c_ulonglong,
1520 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1528:9
     |
1523 | /         let mut init = tty_default_key_raw {
1524 | |             string: b"\x1B[b\0" as *const u8 as *const libc::c_char,
1525 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1526 | |                 | 0x800000000000 as libc::c_ulonglong,
1527 | |         };
     | |__________- unnecessary `let` binding
1528 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1523 ~         
1524 ~         tty_default_key_raw {
1525 +             string: b"\x1B[b\0" as *const u8 as *const libc::c_char,
1526 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
1527 +                 | 0x800000000000 as libc::c_ulonglong,
1528 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1536:9
     |
1531 | /         let mut init = tty_default_key_raw {
1532 | |             string: b"\x1B[c\0" as *const u8 as *const libc::c_char,
1533 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1534 | |                 | 0x800000000000 as libc::c_ulonglong,
1535 | |         };
     | |__________- unnecessary `let` binding
1536 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1531 ~         
1532 ~         tty_default_key_raw {
1533 +             string: b"\x1B[c\0" as *const u8 as *const libc::c_char,
1534 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
1535 +                 | 0x800000000000 as libc::c_ulonglong,
1536 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1544:9
     |
1539 | /         let mut init = tty_default_key_raw {
1540 | |             string: b"\x1B[d\0" as *const u8 as *const libc::c_char,
1541 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1542 | |                 | 0x800000000000 as libc::c_ulonglong,
1543 | |         };
     | |__________- unnecessary `let` binding
1544 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1539 ~         
1540 ~         tty_default_key_raw {
1541 +             string: b"\x1B[d\0" as *const u8 as *const libc::c_char,
1542 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
1543 +                 | 0x800000000000 as libc::c_ulonglong,
1544 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1552:9
     |
1547 | /         let mut init = tty_default_key_raw {
1548 | |             string: b"\x1B[11^\0" as *const u8 as *const libc::c_char,
1549 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1550 | |                 | 0x400000000000 as libc::c_ulonglong,
1551 | |         };
     | |__________- unnecessary `let` binding
1552 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1547 ~         
1548 ~         tty_default_key_raw {
1549 +             string: b"\x1B[11^\0" as *const u8 as *const libc::c_char,
1550 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1551 +                 | 0x400000000000 as libc::c_ulonglong,
1552 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1560:9
     |
1555 | /         let mut init = tty_default_key_raw {
1556 | |             string: b"\x1B[12^\0" as *const u8 as *const libc::c_char,
1557 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1558 | |                 | 0x400000000000 as libc::c_ulonglong,
1559 | |         };
     | |__________- unnecessary `let` binding
1560 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1555 ~         
1556 ~         tty_default_key_raw {
1557 +             string: b"\x1B[12^\0" as *const u8 as *const libc::c_char,
1558 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1559 +                 | 0x400000000000 as libc::c_ulonglong,
1560 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1568:9
     |
1563 | /         let mut init = tty_default_key_raw {
1564 | |             string: b"\x1B[13^\0" as *const u8 as *const libc::c_char,
1565 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1566 | |                 | 0x400000000000 as libc::c_ulonglong,
1567 | |         };
     | |__________- unnecessary `let` binding
1568 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1563 ~         
1564 ~         tty_default_key_raw {
1565 +             string: b"\x1B[13^\0" as *const u8 as *const libc::c_char,
1566 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1567 +                 | 0x400000000000 as libc::c_ulonglong,
1568 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1576:9
     |
1571 | /         let mut init = tty_default_key_raw {
1572 | |             string: b"\x1B[14^\0" as *const u8 as *const libc::c_char,
1573 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1574 | |                 | 0x400000000000 as libc::c_ulonglong,
1575 | |         };
     | |__________- unnecessary `let` binding
1576 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1571 ~         
1572 ~         tty_default_key_raw {
1573 +             string: b"\x1B[14^\0" as *const u8 as *const libc::c_char,
1574 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1575 +                 | 0x400000000000 as libc::c_ulonglong,
1576 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1584:9
     |
1579 | /         let mut init = tty_default_key_raw {
1580 | |             string: b"\x1B[15^\0" as *const u8 as *const libc::c_char,
1581 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1582 | |                 | 0x400000000000 as libc::c_ulonglong,
1583 | |         };
     | |__________- unnecessary `let` binding
1584 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1579 ~         
1580 ~         tty_default_key_raw {
1581 +             string: b"\x1B[15^\0" as *const u8 as *const libc::c_char,
1582 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1583 +                 | 0x400000000000 as libc::c_ulonglong,
1584 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1592:9
     |
1587 | /         let mut init = tty_default_key_raw {
1588 | |             string: b"\x1B[17^\0" as *const u8 as *const libc::c_char,
1589 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1590 | |                 | 0x400000000000 as libc::c_ulonglong,
1591 | |         };
     | |__________- unnecessary `let` binding
1592 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1587 ~         
1588 ~         tty_default_key_raw {
1589 +             string: b"\x1B[17^\0" as *const u8 as *const libc::c_char,
1590 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1591 +                 | 0x400000000000 as libc::c_ulonglong,
1592 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1600:9
     |
1595 | /         let mut init = tty_default_key_raw {
1596 | |             string: b"\x1B[18^\0" as *const u8 as *const libc::c_char,
1597 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1598 | |                 | 0x400000000000 as libc::c_ulonglong,
1599 | |         };
     | |__________- unnecessary `let` binding
1600 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1595 ~         
1596 ~         tty_default_key_raw {
1597 +             string: b"\x1B[18^\0" as *const u8 as *const libc::c_char,
1598 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1599 +                 | 0x400000000000 as libc::c_ulonglong,
1600 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1608:9
     |
1603 | /         let mut init = tty_default_key_raw {
1604 | |             string: b"\x1B[19^\0" as *const u8 as *const libc::c_char,
1605 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1606 | |                 | 0x400000000000 as libc::c_ulonglong,
1607 | |         };
     | |__________- unnecessary `let` binding
1608 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1603 ~         
1604 ~         tty_default_key_raw {
1605 +             string: b"\x1B[19^\0" as *const u8 as *const libc::c_char,
1606 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1607 +                 | 0x400000000000 as libc::c_ulonglong,
1608 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1616:9
     |
1611 | /         let mut init = tty_default_key_raw {
1612 | |             string: b"\x1B[20^\0" as *const u8 as *const libc::c_char,
1613 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1614 | |                 | 0x400000000000 as libc::c_ulonglong,
1615 | |         };
     | |__________- unnecessary `let` binding
1616 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1611 ~         
1612 ~         tty_default_key_raw {
1613 +             string: b"\x1B[20^\0" as *const u8 as *const libc::c_char,
1614 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1615 +                 | 0x400000000000 as libc::c_ulonglong,
1616 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1624:9
     |
1619 | /         let mut init = tty_default_key_raw {
1620 | |             string: b"\x1B[21^\0" as *const u8 as *const libc::c_char,
1621 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1622 | |                 | 0x400000000000 as libc::c_ulonglong,
1623 | |         };
     | |__________- unnecessary `let` binding
1624 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1619 ~         
1620 ~         tty_default_key_raw {
1621 +             string: b"\x1B[21^\0" as *const u8 as *const libc::c_char,
1622 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1623 +                 | 0x400000000000 as libc::c_ulonglong,
1624 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1632:9
     |
1627 | /         let mut init = tty_default_key_raw {
1628 | |             string: b"\x1B[23^\0" as *const u8 as *const libc::c_char,
1629 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1630 | |                 | 0x400000000000 as libc::c_ulonglong,
1631 | |         };
     | |__________- unnecessary `let` binding
1632 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1627 ~         
1628 ~         tty_default_key_raw {
1629 +             string: b"\x1B[23^\0" as *const u8 as *const libc::c_char,
1630 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1631 +                 | 0x400000000000 as libc::c_ulonglong,
1632 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1640:9
     |
1635 | /         let mut init = tty_default_key_raw {
1636 | |             string: b"\x1B[24^\0" as *const u8 as *const libc::c_char,
1637 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1638 | |                 | 0x400000000000 as libc::c_ulonglong,
1639 | |         };
     | |__________- unnecessary `let` binding
1640 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1635 ~         
1636 ~         tty_default_key_raw {
1637 +             string: b"\x1B[24^\0" as *const u8 as *const libc::c_char,
1638 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1639 +                 | 0x400000000000 as libc::c_ulonglong,
1640 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1648:9
     |
1643 | /         let mut init = tty_default_key_raw {
1644 | |             string: b"\x1B[2^\0" as *const u8 as *const libc::c_char,
1645 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1646 | |                 | 0x400000000000 as libc::c_ulonglong,
1647 | |         };
     | |__________- unnecessary `let` binding
1648 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1643 ~         
1644 ~         tty_default_key_raw {
1645 +             string: b"\x1B[2^\0" as *const u8 as *const libc::c_char,
1646 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1647 +                 | 0x400000000000 as libc::c_ulonglong,
1648 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1656:9
     |
1651 | /         let mut init = tty_default_key_raw {
1652 | |             string: b"\x1B[3^\0" as *const u8 as *const libc::c_char,
1653 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1654 | |                 | 0x400000000000 as libc::c_ulonglong,
1655 | |         };
     | |__________- unnecessary `let` binding
1656 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1651 ~         
1652 ~         tty_default_key_raw {
1653 +             string: b"\x1B[3^\0" as *const u8 as *const libc::c_char,
1654 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1655 +                 | 0x400000000000 as libc::c_ulonglong,
1656 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1664:9
     |
1659 | /         let mut init = tty_default_key_raw {
1660 | |             string: b"\x1B[7^\0" as *const u8 as *const libc::c_char,
1661 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1662 | |                 | 0x400000000000 as libc::c_ulonglong,
1663 | |         };
     | |__________- unnecessary `let` binding
1664 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1659 ~         
1660 ~         tty_default_key_raw {
1661 +             string: b"\x1B[7^\0" as *const u8 as *const libc::c_char,
1662 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1663 +                 | 0x400000000000 as libc::c_ulonglong,
1664 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1672:9
     |
1667 | /         let mut init = tty_default_key_raw {
1668 | |             string: b"\x1B[8^\0" as *const u8 as *const libc::c_char,
1669 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
1670 | |                 | 0x400000000000 as libc::c_ulonglong,
1671 | |         };
     | |__________- unnecessary `let` binding
1672 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1667 ~         
1668 ~         tty_default_key_raw {
1669 +             string: b"\x1B[8^\0" as *const u8 as *const libc::c_char,
1670 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
1671 +                 | 0x400000000000 as libc::c_ulonglong,
1672 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1680:9
     |
1675 | /         let mut init = tty_default_key_raw {
1676 | |             string: b"\x1B[6^\0" as *const u8 as *const libc::c_char,
1677 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1678 | |                 | 0x400000000000 as libc::c_ulonglong,
1679 | |         };
     | |__________- unnecessary `let` binding
1680 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1675 ~         
1676 ~         tty_default_key_raw {
1677 +             string: b"\x1B[6^\0" as *const u8 as *const libc::c_char,
1678 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1679 +                 | 0x400000000000 as libc::c_ulonglong,
1680 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1688:9
     |
1683 | /         let mut init = tty_default_key_raw {
1684 | |             string: b"\x1B[5^\0" as *const u8 as *const libc::c_char,
1685 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1686 | |                 | 0x400000000000 as libc::c_ulonglong,
1687 | |         };
     | |__________- unnecessary `let` binding
1688 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1683 ~         
1684 ~         tty_default_key_raw {
1685 +             string: b"\x1B[5^\0" as *const u8 as *const libc::c_char,
1686 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1687 +                 | 0x400000000000 as libc::c_ulonglong,
1688 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1696:9
     |
1691 | /         let mut init = tty_default_key_raw {
1692 | |             string: b"\x1B[11$\0" as *const u8 as *const libc::c_char,
1693 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1694 | |                 | 0x800000000000 as libc::c_ulonglong,
1695 | |         };
     | |__________- unnecessary `let` binding
1696 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1691 ~         
1692 ~         tty_default_key_raw {
1693 +             string: b"\x1B[11$\0" as *const u8 as *const libc::c_char,
1694 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1695 +                 | 0x800000000000 as libc::c_ulonglong,
1696 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1704:9
     |
1699 | /         let mut init = tty_default_key_raw {
1700 | |             string: b"\x1B[12$\0" as *const u8 as *const libc::c_char,
1701 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1702 | |                 | 0x800000000000 as libc::c_ulonglong,
1703 | |         };
     | |__________- unnecessary `let` binding
1704 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1699 ~         
1700 ~         tty_default_key_raw {
1701 +             string: b"\x1B[12$\0" as *const u8 as *const libc::c_char,
1702 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1703 +                 | 0x800000000000 as libc::c_ulonglong,
1704 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1712:9
     |
1707 | /         let mut init = tty_default_key_raw {
1708 | |             string: b"\x1B[13$\0" as *const u8 as *const libc::c_char,
1709 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1710 | |                 | 0x800000000000 as libc::c_ulonglong,
1711 | |         };
     | |__________- unnecessary `let` binding
1712 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1707 ~         
1708 ~         tty_default_key_raw {
1709 +             string: b"\x1B[13$\0" as *const u8 as *const libc::c_char,
1710 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1711 +                 | 0x800000000000 as libc::c_ulonglong,
1712 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1720:9
     |
1715 | /         let mut init = tty_default_key_raw {
1716 | |             string: b"\x1B[14$\0" as *const u8 as *const libc::c_char,
1717 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1718 | |                 | 0x800000000000 as libc::c_ulonglong,
1719 | |         };
     | |__________- unnecessary `let` binding
1720 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1715 ~         
1716 ~         tty_default_key_raw {
1717 +             string: b"\x1B[14$\0" as *const u8 as *const libc::c_char,
1718 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1719 +                 | 0x800000000000 as libc::c_ulonglong,
1720 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1728:9
     |
1723 | /         let mut init = tty_default_key_raw {
1724 | |             string: b"\x1B[15$\0" as *const u8 as *const libc::c_char,
1725 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1726 | |                 | 0x800000000000 as libc::c_ulonglong,
1727 | |         };
     | |__________- unnecessary `let` binding
1728 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1723 ~         
1724 ~         tty_default_key_raw {
1725 +             string: b"\x1B[15$\0" as *const u8 as *const libc::c_char,
1726 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1727 +                 | 0x800000000000 as libc::c_ulonglong,
1728 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1736:9
     |
1731 | /         let mut init = tty_default_key_raw {
1732 | |             string: b"\x1B[17$\0" as *const u8 as *const libc::c_char,
1733 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1734 | |                 | 0x800000000000 as libc::c_ulonglong,
1735 | |         };
     | |__________- unnecessary `let` binding
1736 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1731 ~         
1732 ~         tty_default_key_raw {
1733 +             string: b"\x1B[17$\0" as *const u8 as *const libc::c_char,
1734 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1735 +                 | 0x800000000000 as libc::c_ulonglong,
1736 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1744:9
     |
1739 | /         let mut init = tty_default_key_raw {
1740 | |             string: b"\x1B[18$\0" as *const u8 as *const libc::c_char,
1741 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1742 | |                 | 0x800000000000 as libc::c_ulonglong,
1743 | |         };
     | |__________- unnecessary `let` binding
1744 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1739 ~         
1740 ~         tty_default_key_raw {
1741 +             string: b"\x1B[18$\0" as *const u8 as *const libc::c_char,
1742 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1743 +                 | 0x800000000000 as libc::c_ulonglong,
1744 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1752:9
     |
1747 | /         let mut init = tty_default_key_raw {
1748 | |             string: b"\x1B[19$\0" as *const u8 as *const libc::c_char,
1749 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1750 | |                 | 0x800000000000 as libc::c_ulonglong,
1751 | |         };
     | |__________- unnecessary `let` binding
1752 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1747 ~         
1748 ~         tty_default_key_raw {
1749 +             string: b"\x1B[19$\0" as *const u8 as *const libc::c_char,
1750 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1751 +                 | 0x800000000000 as libc::c_ulonglong,
1752 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1760:9
     |
1755 | /         let mut init = tty_default_key_raw {
1756 | |             string: b"\x1B[20$\0" as *const u8 as *const libc::c_char,
1757 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1758 | |                 | 0x800000000000 as libc::c_ulonglong,
1759 | |         };
     | |__________- unnecessary `let` binding
1760 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1755 ~         
1756 ~         tty_default_key_raw {
1757 +             string: b"\x1B[20$\0" as *const u8 as *const libc::c_char,
1758 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1759 +                 | 0x800000000000 as libc::c_ulonglong,
1760 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1768:9
     |
1763 | /         let mut init = tty_default_key_raw {
1764 | |             string: b"\x1B[21$\0" as *const u8 as *const libc::c_char,
1765 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1766 | |                 | 0x800000000000 as libc::c_ulonglong,
1767 | |         };
     | |__________- unnecessary `let` binding
1768 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1763 ~         
1764 ~         tty_default_key_raw {
1765 +             string: b"\x1B[21$\0" as *const u8 as *const libc::c_char,
1766 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1767 +                 | 0x800000000000 as libc::c_ulonglong,
1768 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1776:9
     |
1771 | /         let mut init = tty_default_key_raw {
1772 | |             string: b"\x1B[23$\0" as *const u8 as *const libc::c_char,
1773 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1774 | |                 | 0x800000000000 as libc::c_ulonglong,
1775 | |         };
     | |__________- unnecessary `let` binding
1776 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1771 ~         
1772 ~         tty_default_key_raw {
1773 +             string: b"\x1B[23$\0" as *const u8 as *const libc::c_char,
1774 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1775 +                 | 0x800000000000 as libc::c_ulonglong,
1776 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1784:9
     |
1779 | /         let mut init = tty_default_key_raw {
1780 | |             string: b"\x1B[24$\0" as *const u8 as *const libc::c_char,
1781 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1782 | |                 | 0x800000000000 as libc::c_ulonglong,
1783 | |         };
     | |__________- unnecessary `let` binding
1784 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1779 ~         
1780 ~         tty_default_key_raw {
1781 +             string: b"\x1B[24$\0" as *const u8 as *const libc::c_char,
1782 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1783 +                 | 0x800000000000 as libc::c_ulonglong,
1784 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1792:9
     |
1787 | /         let mut init = tty_default_key_raw {
1788 | |             string: b"\x1B[2$\0" as *const u8 as *const libc::c_char,
1789 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1790 | |                 | 0x800000000000 as libc::c_ulonglong,
1791 | |         };
     | |__________- unnecessary `let` binding
1792 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1787 ~         
1788 ~         tty_default_key_raw {
1789 +             string: b"\x1B[2$\0" as *const u8 as *const libc::c_char,
1790 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1791 +                 | 0x800000000000 as libc::c_ulonglong,
1792 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1800:9
     |
1795 | /         let mut init = tty_default_key_raw {
1796 | |             string: b"\x1B[3$\0" as *const u8 as *const libc::c_char,
1797 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1798 | |                 | 0x800000000000 as libc::c_ulonglong,
1799 | |         };
     | |__________- unnecessary `let` binding
1800 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1795 ~         
1796 ~         tty_default_key_raw {
1797 +             string: b"\x1B[3$\0" as *const u8 as *const libc::c_char,
1798 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1799 +                 | 0x800000000000 as libc::c_ulonglong,
1800 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1808:9
     |
1803 | /         let mut init = tty_default_key_raw {
1804 | |             string: b"\x1B[7$\0" as *const u8 as *const libc::c_char,
1805 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1806 | |                 | 0x800000000000 as libc::c_ulonglong,
1807 | |         };
     | |__________- unnecessary `let` binding
1808 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1803 ~         
1804 ~         tty_default_key_raw {
1805 +             string: b"\x1B[7$\0" as *const u8 as *const libc::c_char,
1806 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1807 +                 | 0x800000000000 as libc::c_ulonglong,
1808 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1816:9
     |
1811 | /         let mut init = tty_default_key_raw {
1812 | |             string: b"\x1B[8$\0" as *const u8 as *const libc::c_char,
1813 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
1814 | |                 | 0x800000000000 as libc::c_ulonglong,
1815 | |         };
     | |__________- unnecessary `let` binding
1816 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1811 ~         
1812 ~         tty_default_key_raw {
1813 +             string: b"\x1B[8$\0" as *const u8 as *const libc::c_char,
1814 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
1815 +                 | 0x800000000000 as libc::c_ulonglong,
1816 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1824:9
     |
1819 | /         let mut init = tty_default_key_raw {
1820 | |             string: b"\x1B[6$\0" as *const u8 as *const libc::c_char,
1821 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1822 | |                 | 0x800000000000 as libc::c_ulonglong,
1823 | |         };
     | |__________- unnecessary `let` binding
1824 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1819 ~         
1820 ~         tty_default_key_raw {
1821 +             string: b"\x1B[6$\0" as *const u8 as *const libc::c_char,
1822 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1823 +                 | 0x800000000000 as libc::c_ulonglong,
1824 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1832:9
     |
1827 | /         let mut init = tty_default_key_raw {
1828 | |             string: b"\x1B[5$\0" as *const u8 as *const libc::c_char,
1829 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1830 | |                 | 0x800000000000 as libc::c_ulonglong,
1831 | |         };
     | |__________- unnecessary `let` binding
1832 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1827 ~         
1828 ~         tty_default_key_raw {
1829 +             string: b"\x1B[5$\0" as *const u8 as *const libc::c_char,
1830 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1831 +                 | 0x800000000000 as libc::c_ulonglong,
1832 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1841:9
     |
1835 | /         let mut init = tty_default_key_raw {
1836 | |             string: b"\x1B[11@\0" as *const u8 as *const libc::c_char,
1837 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1838 | |                 | 0x400000000000 as libc::c_ulonglong
1839 | |                 | 0x800000000000 as libc::c_ulonglong,
1840 | |         };
     | |__________- unnecessary `let` binding
1841 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1835 ~         
1836 ~         tty_default_key_raw {
1837 +             string: b"\x1B[11@\0" as *const u8 as *const libc::c_char,
1838 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
1839 +                 | 0x400000000000 as libc::c_ulonglong
1840 +                 | 0x800000000000 as libc::c_ulonglong,
1841 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1850:9
     |
1844 | /         let mut init = tty_default_key_raw {
1845 | |             string: b"\x1B[12@\0" as *const u8 as *const libc::c_char,
1846 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1847 | |                 | 0x400000000000 as libc::c_ulonglong
1848 | |                 | 0x800000000000 as libc::c_ulonglong,
1849 | |         };
     | |__________- unnecessary `let` binding
1850 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1844 ~         
1845 ~         tty_default_key_raw {
1846 +             string: b"\x1B[12@\0" as *const u8 as *const libc::c_char,
1847 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
1848 +                 | 0x400000000000 as libc::c_ulonglong
1849 +                 | 0x800000000000 as libc::c_ulonglong,
1850 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1859:9
     |
1853 | /         let mut init = tty_default_key_raw {
1854 | |             string: b"\x1B[13@\0" as *const u8 as *const libc::c_char,
1855 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1856 | |                 | 0x400000000000 as libc::c_ulonglong
1857 | |                 | 0x800000000000 as libc::c_ulonglong,
1858 | |         };
     | |__________- unnecessary `let` binding
1859 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1853 ~         
1854 ~         tty_default_key_raw {
1855 +             string: b"\x1B[13@\0" as *const u8 as *const libc::c_char,
1856 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
1857 +                 | 0x400000000000 as libc::c_ulonglong
1858 +                 | 0x800000000000 as libc::c_ulonglong,
1859 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1868:9
     |
1862 | /         let mut init = tty_default_key_raw {
1863 | |             string: b"\x1B[14@\0" as *const u8 as *const libc::c_char,
1864 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1865 | |                 | 0x400000000000 as libc::c_ulonglong
1866 | |                 | 0x800000000000 as libc::c_ulonglong,
1867 | |         };
     | |__________- unnecessary `let` binding
1868 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1862 ~         
1863 ~         tty_default_key_raw {
1864 +             string: b"\x1B[14@\0" as *const u8 as *const libc::c_char,
1865 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
1866 +                 | 0x400000000000 as libc::c_ulonglong
1867 +                 | 0x800000000000 as libc::c_ulonglong,
1868 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1877:9
     |
1871 | /         let mut init = tty_default_key_raw {
1872 | |             string: b"\x1B[15@\0" as *const u8 as *const libc::c_char,
1873 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1874 | |                 | 0x400000000000 as libc::c_ulonglong
1875 | |                 | 0x800000000000 as libc::c_ulonglong,
1876 | |         };
     | |__________- unnecessary `let` binding
1877 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1871 ~         
1872 ~         tty_default_key_raw {
1873 +             string: b"\x1B[15@\0" as *const u8 as *const libc::c_char,
1874 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
1875 +                 | 0x400000000000 as libc::c_ulonglong
1876 +                 | 0x800000000000 as libc::c_ulonglong,
1877 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1886:9
     |
1880 | /         let mut init = tty_default_key_raw {
1881 | |             string: b"\x1B[17@\0" as *const u8 as *const libc::c_char,
1882 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1883 | |                 | 0x400000000000 as libc::c_ulonglong
1884 | |                 | 0x800000000000 as libc::c_ulonglong,
1885 | |         };
     | |__________- unnecessary `let` binding
1886 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1880 ~         
1881 ~         tty_default_key_raw {
1882 +             string: b"\x1B[17@\0" as *const u8 as *const libc::c_char,
1883 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
1884 +                 | 0x400000000000 as libc::c_ulonglong
1885 +                 | 0x800000000000 as libc::c_ulonglong,
1886 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1895:9
     |
1889 | /         let mut init = tty_default_key_raw {
1890 | |             string: b"\x1B[18@\0" as *const u8 as *const libc::c_char,
1891 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1892 | |                 | 0x400000000000 as libc::c_ulonglong
1893 | |                 | 0x800000000000 as libc::c_ulonglong,
1894 | |         };
     | |__________- unnecessary `let` binding
1895 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1889 ~         
1890 ~         tty_default_key_raw {
1891 +             string: b"\x1B[18@\0" as *const u8 as *const libc::c_char,
1892 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
1893 +                 | 0x400000000000 as libc::c_ulonglong
1894 +                 | 0x800000000000 as libc::c_ulonglong,
1895 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1904:9
     |
1898 | /         let mut init = tty_default_key_raw {
1899 | |             string: b"\x1B[19@\0" as *const u8 as *const libc::c_char,
1900 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1901 | |                 | 0x400000000000 as libc::c_ulonglong
1902 | |                 | 0x800000000000 as libc::c_ulonglong,
1903 | |         };
     | |__________- unnecessary `let` binding
1904 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1898 ~         
1899 ~         tty_default_key_raw {
1900 +             string: b"\x1B[19@\0" as *const u8 as *const libc::c_char,
1901 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
1902 +                 | 0x400000000000 as libc::c_ulonglong
1903 +                 | 0x800000000000 as libc::c_ulonglong,
1904 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1913:9
     |
1907 | /         let mut init = tty_default_key_raw {
1908 | |             string: b"\x1B[20@\0" as *const u8 as *const libc::c_char,
1909 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1910 | |                 | 0x400000000000 as libc::c_ulonglong
1911 | |                 | 0x800000000000 as libc::c_ulonglong,
1912 | |         };
     | |__________- unnecessary `let` binding
1913 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1907 ~         
1908 ~         tty_default_key_raw {
1909 +             string: b"\x1B[20@\0" as *const u8 as *const libc::c_char,
1910 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
1911 +                 | 0x400000000000 as libc::c_ulonglong
1912 +                 | 0x800000000000 as libc::c_ulonglong,
1913 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1922:9
     |
1916 | /         let mut init = tty_default_key_raw {
1917 | |             string: b"\x1B[21@\0" as *const u8 as *const libc::c_char,
1918 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1919 | |                 | 0x400000000000 as libc::c_ulonglong
1920 | |                 | 0x800000000000 as libc::c_ulonglong,
1921 | |         };
     | |__________- unnecessary `let` binding
1922 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1916 ~         
1917 ~         tty_default_key_raw {
1918 +             string: b"\x1B[21@\0" as *const u8 as *const libc::c_char,
1919 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
1920 +                 | 0x400000000000 as libc::c_ulonglong
1921 +                 | 0x800000000000 as libc::c_ulonglong,
1922 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1931:9
     |
1925 | /         let mut init = tty_default_key_raw {
1926 | |             string: b"\x1B[23@\0" as *const u8 as *const libc::c_char,
1927 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1928 | |                 | 0x400000000000 as libc::c_ulonglong
1929 | |                 | 0x800000000000 as libc::c_ulonglong,
1930 | |         };
     | |__________- unnecessary `let` binding
1931 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1925 ~         
1926 ~         tty_default_key_raw {
1927 +             string: b"\x1B[23@\0" as *const u8 as *const libc::c_char,
1928 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
1929 +                 | 0x400000000000 as libc::c_ulonglong
1930 +                 | 0x800000000000 as libc::c_ulonglong,
1931 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1940:9
     |
1934 | /         let mut init = tty_default_key_raw {
1935 | |             string: b"\x1B[24@\0" as *const u8 as *const libc::c_char,
1936 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1937 | |                 | 0x400000000000 as libc::c_ulonglong
1938 | |                 | 0x800000000000 as libc::c_ulonglong,
1939 | |         };
     | |__________- unnecessary `let` binding
1940 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1934 ~         
1935 ~         tty_default_key_raw {
1936 +             string: b"\x1B[24@\0" as *const u8 as *const libc::c_char,
1937 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
1938 +                 | 0x400000000000 as libc::c_ulonglong
1939 +                 | 0x800000000000 as libc::c_ulonglong,
1940 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1949:9
     |
1943 | /         let mut init = tty_default_key_raw {
1944 | |             string: b"\x1B[2@\0" as *const u8 as *const libc::c_char,
1945 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1946 | |                 | 0x400000000000 as libc::c_ulonglong
1947 | |                 | 0x800000000000 as libc::c_ulonglong,
1948 | |         };
     | |__________- unnecessary `let` binding
1949 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1943 ~         
1944 ~         tty_default_key_raw {
1945 +             string: b"\x1B[2@\0" as *const u8 as *const libc::c_char,
1946 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
1947 +                 | 0x400000000000 as libc::c_ulonglong
1948 +                 | 0x800000000000 as libc::c_ulonglong,
1949 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1958:9
     |
1952 | /         let mut init = tty_default_key_raw {
1953 | |             string: b"\x1B[3@\0" as *const u8 as *const libc::c_char,
1954 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1955 | |                 | 0x400000000000 as libc::c_ulonglong
1956 | |                 | 0x800000000000 as libc::c_ulonglong,
1957 | |         };
     | |__________- unnecessary `let` binding
1958 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1952 ~         
1953 ~         tty_default_key_raw {
1954 +             string: b"\x1B[3@\0" as *const u8 as *const libc::c_char,
1955 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
1956 +                 | 0x400000000000 as libc::c_ulonglong
1957 +                 | 0x800000000000 as libc::c_ulonglong,
1958 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1967:9
     |
1961 | /         let mut init = tty_default_key_raw {
1962 | |             string: b"\x1B[7@\0" as *const u8 as *const libc::c_char,
1963 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1964 | |                 | 0x400000000000 as libc::c_ulonglong
1965 | |                 | 0x800000000000 as libc::c_ulonglong,
1966 | |         };
     | |__________- unnecessary `let` binding
1967 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1961 ~         
1962 ~         tty_default_key_raw {
1963 +             string: b"\x1B[7@\0" as *const u8 as *const libc::c_char,
1964 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
1965 +                 | 0x400000000000 as libc::c_ulonglong
1966 +                 | 0x800000000000 as libc::c_ulonglong,
1967 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1976:9
     |
1970 | /         let mut init = tty_default_key_raw {
1971 | |             string: b"\x1B[8@\0" as *const u8 as *const libc::c_char,
1972 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
1973 | |                 | 0x400000000000 as libc::c_ulonglong
1974 | |                 | 0x800000000000 as libc::c_ulonglong,
1975 | |         };
     | |__________- unnecessary `let` binding
1976 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1970 ~         
1971 ~         tty_default_key_raw {
1972 +             string: b"\x1B[8@\0" as *const u8 as *const libc::c_char,
1973 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
1974 +                 | 0x400000000000 as libc::c_ulonglong
1975 +                 | 0x800000000000 as libc::c_ulonglong,
1976 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1985:9
     |
1979 | /         let mut init = tty_default_key_raw {
1980 | |             string: b"\x1B[6@\0" as *const u8 as *const libc::c_char,
1981 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1982 | |                 | 0x400000000000 as libc::c_ulonglong
1983 | |                 | 0x800000000000 as libc::c_ulonglong,
1984 | |         };
     | |__________- unnecessary `let` binding
1985 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1979 ~         
1980 ~         tty_default_key_raw {
1981 +             string: b"\x1B[6@\0" as *const u8 as *const libc::c_char,
1982 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
1983 +                 | 0x400000000000 as libc::c_ulonglong
1984 +                 | 0x800000000000 as libc::c_ulonglong,
1985 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:1994:9
     |
1988 | /         let mut init = tty_default_key_raw {
1989 | |             string: b"\x1B[5@\0" as *const u8 as *const libc::c_char,
1990 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1991 | |                 | 0x400000000000 as libc::c_ulonglong
1992 | |                 | 0x800000000000 as libc::c_ulonglong,
1993 | |         };
     | |__________- unnecessary `let` binding
1994 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1988 ~         
1989 ~         tty_default_key_raw {
1990 +             string: b"\x1B[5@\0" as *const u8 as *const libc::c_char,
1991 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
1992 +                 | 0x400000000000 as libc::c_ulonglong
1993 +                 | 0x800000000000 as libc::c_ulonglong,
1994 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2001:9
     |
1997 | /         let mut init = tty_default_key_raw {
1998 | |             string: b"\x1B[I\0" as *const u8 as *const libc::c_char,
1999 | |             key: KEYC_FOCUS_IN as libc::c_int as key_code,
2000 | |         };
     | |__________- unnecessary `let` binding
2001 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1997 ~         
1998 ~         tty_default_key_raw {
1999 +             string: b"\x1B[I\0" as *const u8 as *const libc::c_char,
2000 +             key: KEYC_FOCUS_IN as libc::c_int as key_code,
2001 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2008:9
     |
2004 | /         let mut init = tty_default_key_raw {
2005 | |             string: b"\x1B[O\0" as *const u8 as *const libc::c_char,
2006 | |             key: KEYC_FOCUS_OUT as libc::c_int as key_code,
2007 | |         };
     | |__________- unnecessary `let` binding
2008 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2004 ~         
2005 ~         tty_default_key_raw {
2006 +             string: b"\x1B[O\0" as *const u8 as *const libc::c_char,
2007 +             key: KEYC_FOCUS_OUT as libc::c_int as key_code,
2008 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2015:9
     |
2011 | /         let mut init = tty_default_key_raw {
2012 | |             string: b"\x1B[200~\0" as *const u8 as *const libc::c_char,
2013 | |             key: KEYC_PASTE_START as libc::c_int as key_code,
2014 | |         };
     | |__________- unnecessary `let` binding
2015 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2011 ~         
2012 ~         tty_default_key_raw {
2013 +             string: b"\x1B[200~\0" as *const u8 as *const libc::c_char,
2014 +             key: KEYC_PASTE_START as libc::c_int as key_code,
2015 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2022:9
     |
2018 | /         let mut init = tty_default_key_raw {
2019 | |             string: b"\x1B[201~\0" as *const u8 as *const libc::c_char,
2020 | |             key: KEYC_PASTE_END as libc::c_int as key_code,
2021 | |         };
     | |__________- unnecessary `let` binding
2022 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2018 ~         
2019 ~         tty_default_key_raw {
2020 +             string: b"\x1B[201~\0" as *const u8 as *const libc::c_char,
2021 +             key: KEYC_PASTE_END as libc::c_int as key_code,
2022 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2031:9
     |
2027 | /         let mut init = tty_default_key_code {
2028 | |             code: TTYC_KF1,
2029 | |             key: KEYC_F1 as libc::c_int as key_code,
2030 | |         };
     | |__________- unnecessary `let` binding
2031 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2027 ~         
2028 ~         tty_default_key_code {
2029 +             code: TTYC_KF1,
2030 +             key: KEYC_F1 as libc::c_int as key_code,
2031 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2038:9
     |
2034 | /         let mut init = tty_default_key_code {
2035 | |             code: TTYC_KF2,
2036 | |             key: KEYC_F2 as libc::c_int as key_code,
2037 | |         };
     | |__________- unnecessary `let` binding
2038 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2034 ~         
2035 ~         tty_default_key_code {
2036 +             code: TTYC_KF2,
2037 +             key: KEYC_F2 as libc::c_int as key_code,
2038 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2045:9
     |
2041 | /         let mut init = tty_default_key_code {
2042 | |             code: TTYC_KF3,
2043 | |             key: KEYC_F3 as libc::c_int as key_code,
2044 | |         };
     | |__________- unnecessary `let` binding
2045 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2041 ~         
2042 ~         tty_default_key_code {
2043 +             code: TTYC_KF3,
2044 +             key: KEYC_F3 as libc::c_int as key_code,
2045 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2052:9
     |
2048 | /         let mut init = tty_default_key_code {
2049 | |             code: TTYC_KF4,
2050 | |             key: KEYC_F4 as libc::c_int as key_code,
2051 | |         };
     | |__________- unnecessary `let` binding
2052 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2048 ~         
2049 ~         tty_default_key_code {
2050 +             code: TTYC_KF4,
2051 +             key: KEYC_F4 as libc::c_int as key_code,
2052 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2059:9
     |
2055 | /         let mut init = tty_default_key_code {
2056 | |             code: TTYC_KF5,
2057 | |             key: KEYC_F5 as libc::c_int as key_code,
2058 | |         };
     | |__________- unnecessary `let` binding
2059 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2055 ~         
2056 ~         tty_default_key_code {
2057 +             code: TTYC_KF5,
2058 +             key: KEYC_F5 as libc::c_int as key_code,
2059 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2066:9
     |
2062 | /         let mut init = tty_default_key_code {
2063 | |             code: TTYC_KF6,
2064 | |             key: KEYC_F6 as libc::c_int as key_code,
2065 | |         };
     | |__________- unnecessary `let` binding
2066 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2062 ~         
2063 ~         tty_default_key_code {
2064 +             code: TTYC_KF6,
2065 +             key: KEYC_F6 as libc::c_int as key_code,
2066 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2073:9
     |
2069 | /         let mut init = tty_default_key_code {
2070 | |             code: TTYC_KF7,
2071 | |             key: KEYC_F7 as libc::c_int as key_code,
2072 | |         };
     | |__________- unnecessary `let` binding
2073 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2069 ~         
2070 ~         tty_default_key_code {
2071 +             code: TTYC_KF7,
2072 +             key: KEYC_F7 as libc::c_int as key_code,
2073 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2080:9
     |
2076 | /         let mut init = tty_default_key_code {
2077 | |             code: TTYC_KF8,
2078 | |             key: KEYC_F8 as libc::c_int as key_code,
2079 | |         };
     | |__________- unnecessary `let` binding
2080 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2076 ~         
2077 ~         tty_default_key_code {
2078 +             code: TTYC_KF8,
2079 +             key: KEYC_F8 as libc::c_int as key_code,
2080 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2087:9
     |
2083 | /         let mut init = tty_default_key_code {
2084 | |             code: TTYC_KF9,
2085 | |             key: KEYC_F9 as libc::c_int as key_code,
2086 | |         };
     | |__________- unnecessary `let` binding
2087 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2083 ~         
2084 ~         tty_default_key_code {
2085 +             code: TTYC_KF9,
2086 +             key: KEYC_F9 as libc::c_int as key_code,
2087 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2094:9
     |
2090 | /         let mut init = tty_default_key_code {
2091 | |             code: TTYC_KF10,
2092 | |             key: KEYC_F10 as libc::c_int as key_code,
2093 | |         };
     | |__________- unnecessary `let` binding
2094 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2090 ~         
2091 ~         tty_default_key_code {
2092 +             code: TTYC_KF10,
2093 +             key: KEYC_F10 as libc::c_int as key_code,
2094 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2101:9
     |
2097 | /         let mut init = tty_default_key_code {
2098 | |             code: TTYC_KF11,
2099 | |             key: KEYC_F11 as libc::c_int as key_code,
2100 | |         };
     | |__________- unnecessary `let` binding
2101 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2097 ~         
2098 ~         tty_default_key_code {
2099 +             code: TTYC_KF11,
2100 +             key: KEYC_F11 as libc::c_int as key_code,
2101 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2108:9
     |
2104 | /         let mut init = tty_default_key_code {
2105 | |             code: TTYC_KF12,
2106 | |             key: KEYC_F12 as libc::c_int as key_code,
2107 | |         };
     | |__________- unnecessary `let` binding
2108 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2104 ~         
2105 ~         tty_default_key_code {
2106 +             code: TTYC_KF12,
2107 +             key: KEYC_F12 as libc::c_int as key_code,
2108 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2116:9
     |
2111 | /         let mut init = tty_default_key_code {
2112 | |             code: TTYC_KF13,
2113 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2114 | |                 | 0x800000000000 as libc::c_ulonglong,
2115 | |         };
     | |__________- unnecessary `let` binding
2116 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2111 ~         
2112 ~         tty_default_key_code {
2113 +             code: TTYC_KF13,
2114 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2115 +                 | 0x800000000000 as libc::c_ulonglong,
2116 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2124:9
     |
2119 | /         let mut init = tty_default_key_code {
2120 | |             code: TTYC_KF14,
2121 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2122 | |                 | 0x800000000000 as libc::c_ulonglong,
2123 | |         };
     | |__________- unnecessary `let` binding
2124 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2119 ~         
2120 ~         tty_default_key_code {
2121 +             code: TTYC_KF14,
2122 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2123 +                 | 0x800000000000 as libc::c_ulonglong,
2124 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2132:9
     |
2127 | /         let mut init = tty_default_key_code {
2128 | |             code: TTYC_KF15,
2129 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2130 | |                 | 0x800000000000 as libc::c_ulonglong,
2131 | |         };
     | |__________- unnecessary `let` binding
2132 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2127 ~         
2128 ~         tty_default_key_code {
2129 +             code: TTYC_KF15,
2130 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2131 +                 | 0x800000000000 as libc::c_ulonglong,
2132 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2140:9
     |
2135 | /         let mut init = tty_default_key_code {
2136 | |             code: TTYC_KF16,
2137 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2138 | |                 | 0x800000000000 as libc::c_ulonglong,
2139 | |         };
     | |__________- unnecessary `let` binding
2140 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2135 ~         
2136 ~         tty_default_key_code {
2137 +             code: TTYC_KF16,
2138 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2139 +                 | 0x800000000000 as libc::c_ulonglong,
2140 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2148:9
     |
2143 | /         let mut init = tty_default_key_code {
2144 | |             code: TTYC_KF17,
2145 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2146 | |                 | 0x800000000000 as libc::c_ulonglong,
2147 | |         };
     | |__________- unnecessary `let` binding
2148 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2143 ~         
2144 ~         tty_default_key_code {
2145 +             code: TTYC_KF17,
2146 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2147 +                 | 0x800000000000 as libc::c_ulonglong,
2148 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2156:9
     |
2151 | /         let mut init = tty_default_key_code {
2152 | |             code: TTYC_KF18,
2153 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2154 | |                 | 0x800000000000 as libc::c_ulonglong,
2155 | |         };
     | |__________- unnecessary `let` binding
2156 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2151 ~         
2152 ~         tty_default_key_code {
2153 +             code: TTYC_KF18,
2154 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2155 +                 | 0x800000000000 as libc::c_ulonglong,
2156 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2164:9
     |
2159 | /         let mut init = tty_default_key_code {
2160 | |             code: TTYC_KF19,
2161 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2162 | |                 | 0x800000000000 as libc::c_ulonglong,
2163 | |         };
     | |__________- unnecessary `let` binding
2164 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2159 ~         
2160 ~         tty_default_key_code {
2161 +             code: TTYC_KF19,
2162 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2163 +                 | 0x800000000000 as libc::c_ulonglong,
2164 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2172:9
     |
2167 | /         let mut init = tty_default_key_code {
2168 | |             code: TTYC_KF20,
2169 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2170 | |                 | 0x800000000000 as libc::c_ulonglong,
2171 | |         };
     | |__________- unnecessary `let` binding
2172 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2167 ~         
2168 ~         tty_default_key_code {
2169 +             code: TTYC_KF20,
2170 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2171 +                 | 0x800000000000 as libc::c_ulonglong,
2172 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2180:9
     |
2175 | /         let mut init = tty_default_key_code {
2176 | |             code: TTYC_KF21,
2177 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2178 | |                 | 0x800000000000 as libc::c_ulonglong,
2179 | |         };
     | |__________- unnecessary `let` binding
2180 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2175 ~         
2176 ~         tty_default_key_code {
2177 +             code: TTYC_KF21,
2178 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2179 +                 | 0x800000000000 as libc::c_ulonglong,
2180 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2188:9
     |
2183 | /         let mut init = tty_default_key_code {
2184 | |             code: TTYC_KF22,
2185 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2186 | |                 | 0x800000000000 as libc::c_ulonglong,
2187 | |         };
     | |__________- unnecessary `let` binding
2188 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2183 ~         
2184 ~         tty_default_key_code {
2185 +             code: TTYC_KF22,
2186 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2187 +                 | 0x800000000000 as libc::c_ulonglong,
2188 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2196:9
     |
2191 | /         let mut init = tty_default_key_code {
2192 | |             code: TTYC_KF23,
2193 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2194 | |                 | 0x800000000000 as libc::c_ulonglong,
2195 | |         };
     | |__________- unnecessary `let` binding
2196 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2191 ~         
2192 ~         tty_default_key_code {
2193 +             code: TTYC_KF23,
2194 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2195 +                 | 0x800000000000 as libc::c_ulonglong,
2196 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2204:9
     |
2199 | /         let mut init = tty_default_key_code {
2200 | |             code: TTYC_KF24,
2201 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2202 | |                 | 0x800000000000 as libc::c_ulonglong,
2203 | |         };
     | |__________- unnecessary `let` binding
2204 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2199 ~         
2200 ~         tty_default_key_code {
2201 +             code: TTYC_KF24,
2202 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2203 +                 | 0x800000000000 as libc::c_ulonglong,
2204 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2212:9
     |
2207 | /         let mut init = tty_default_key_code {
2208 | |             code: TTYC_KF25,
2209 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2210 | |                 | 0x400000000000 as libc::c_ulonglong,
2211 | |         };
     | |__________- unnecessary `let` binding
2212 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2207 ~         
2208 ~         tty_default_key_code {
2209 +             code: TTYC_KF25,
2210 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2211 +                 | 0x400000000000 as libc::c_ulonglong,
2212 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2220:9
     |
2215 | /         let mut init = tty_default_key_code {
2216 | |             code: TTYC_KF26,
2217 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2218 | |                 | 0x400000000000 as libc::c_ulonglong,
2219 | |         };
     | |__________- unnecessary `let` binding
2220 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2215 ~         
2216 ~         tty_default_key_code {
2217 +             code: TTYC_KF26,
2218 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2219 +                 | 0x400000000000 as libc::c_ulonglong,
2220 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2228:9
     |
2223 | /         let mut init = tty_default_key_code {
2224 | |             code: TTYC_KF27,
2225 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2226 | |                 | 0x400000000000 as libc::c_ulonglong,
2227 | |         };
     | |__________- unnecessary `let` binding
2228 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2223 ~         
2224 ~         tty_default_key_code {
2225 +             code: TTYC_KF27,
2226 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2227 +                 | 0x400000000000 as libc::c_ulonglong,
2228 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2236:9
     |
2231 | /         let mut init = tty_default_key_code {
2232 | |             code: TTYC_KF28,
2233 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2234 | |                 | 0x400000000000 as libc::c_ulonglong,
2235 | |         };
     | |__________- unnecessary `let` binding
2236 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2231 ~         
2232 ~         tty_default_key_code {
2233 +             code: TTYC_KF28,
2234 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2235 +                 | 0x400000000000 as libc::c_ulonglong,
2236 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2244:9
     |
2239 | /         let mut init = tty_default_key_code {
2240 | |             code: TTYC_KF29,
2241 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2242 | |                 | 0x400000000000 as libc::c_ulonglong,
2243 | |         };
     | |__________- unnecessary `let` binding
2244 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2239 ~         
2240 ~         tty_default_key_code {
2241 +             code: TTYC_KF29,
2242 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2243 +                 | 0x400000000000 as libc::c_ulonglong,
2244 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2252:9
     |
2247 | /         let mut init = tty_default_key_code {
2248 | |             code: TTYC_KF30,
2249 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2250 | |                 | 0x400000000000 as libc::c_ulonglong,
2251 | |         };
     | |__________- unnecessary `let` binding
2252 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2247 ~         
2248 ~         tty_default_key_code {
2249 +             code: TTYC_KF30,
2250 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2251 +                 | 0x400000000000 as libc::c_ulonglong,
2252 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2260:9
     |
2255 | /         let mut init = tty_default_key_code {
2256 | |             code: TTYC_KF31,
2257 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2258 | |                 | 0x400000000000 as libc::c_ulonglong,
2259 | |         };
     | |__________- unnecessary `let` binding
2260 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2255 ~         
2256 ~         tty_default_key_code {
2257 +             code: TTYC_KF31,
2258 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2259 +                 | 0x400000000000 as libc::c_ulonglong,
2260 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2268:9
     |
2263 | /         let mut init = tty_default_key_code {
2264 | |             code: TTYC_KF32,
2265 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2266 | |                 | 0x400000000000 as libc::c_ulonglong,
2267 | |         };
     | |__________- unnecessary `let` binding
2268 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2263 ~         
2264 ~         tty_default_key_code {
2265 +             code: TTYC_KF32,
2266 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2267 +                 | 0x400000000000 as libc::c_ulonglong,
2268 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2276:9
     |
2271 | /         let mut init = tty_default_key_code {
2272 | |             code: TTYC_KF33,
2273 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2274 | |                 | 0x400000000000 as libc::c_ulonglong,
2275 | |         };
     | |__________- unnecessary `let` binding
2276 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2271 ~         
2272 ~         tty_default_key_code {
2273 +             code: TTYC_KF33,
2274 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2275 +                 | 0x400000000000 as libc::c_ulonglong,
2276 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2284:9
     |
2279 | /         let mut init = tty_default_key_code {
2280 | |             code: TTYC_KF34,
2281 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2282 | |                 | 0x400000000000 as libc::c_ulonglong,
2283 | |         };
     | |__________- unnecessary `let` binding
2284 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2279 ~         
2280 ~         tty_default_key_code {
2281 +             code: TTYC_KF34,
2282 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2283 +                 | 0x400000000000 as libc::c_ulonglong,
2284 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2292:9
     |
2287 | /         let mut init = tty_default_key_code {
2288 | |             code: TTYC_KF35,
2289 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2290 | |                 | 0x400000000000 as libc::c_ulonglong,
2291 | |         };
     | |__________- unnecessary `let` binding
2292 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2287 ~         
2288 ~         tty_default_key_code {
2289 +             code: TTYC_KF35,
2290 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2291 +                 | 0x400000000000 as libc::c_ulonglong,
2292 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2300:9
     |
2295 | /         let mut init = tty_default_key_code {
2296 | |             code: TTYC_KF36,
2297 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2298 | |                 | 0x400000000000 as libc::c_ulonglong,
2299 | |         };
     | |__________- unnecessary `let` binding
2300 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2295 ~         
2296 ~         tty_default_key_code {
2297 +             code: TTYC_KF36,
2298 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2299 +                 | 0x400000000000 as libc::c_ulonglong,
2300 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2309:9
     |
2303 | /         let mut init = tty_default_key_code {
2304 | |             code: TTYC_KF37,
2305 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2306 | |                 | 0x800000000000 as libc::c_ulonglong
2307 | |                 | 0x400000000000 as libc::c_ulonglong,
2308 | |         };
     | |__________- unnecessary `let` binding
2309 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2303 ~         
2304 ~         tty_default_key_code {
2305 +             code: TTYC_KF37,
2306 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2307 +                 | 0x800000000000 as libc::c_ulonglong
2308 +                 | 0x400000000000 as libc::c_ulonglong,
2309 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2318:9
     |
2312 | /         let mut init = tty_default_key_code {
2313 | |             code: TTYC_KF38,
2314 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2315 | |                 | 0x800000000000 as libc::c_ulonglong
2316 | |                 | 0x400000000000 as libc::c_ulonglong,
2317 | |         };
     | |__________- unnecessary `let` binding
2318 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2312 ~         
2313 ~         tty_default_key_code {
2314 +             code: TTYC_KF38,
2315 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2316 +                 | 0x800000000000 as libc::c_ulonglong
2317 +                 | 0x400000000000 as libc::c_ulonglong,
2318 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2327:9
     |
2321 | /         let mut init = tty_default_key_code {
2322 | |             code: TTYC_KF39,
2323 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2324 | |                 | 0x800000000000 as libc::c_ulonglong
2325 | |                 | 0x400000000000 as libc::c_ulonglong,
2326 | |         };
     | |__________- unnecessary `let` binding
2327 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2321 ~         
2322 ~         tty_default_key_code {
2323 +             code: TTYC_KF39,
2324 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2325 +                 | 0x800000000000 as libc::c_ulonglong
2326 +                 | 0x400000000000 as libc::c_ulonglong,
2327 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2336:9
     |
2330 | /         let mut init = tty_default_key_code {
2331 | |             code: TTYC_KF40,
2332 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2333 | |                 | 0x800000000000 as libc::c_ulonglong
2334 | |                 | 0x400000000000 as libc::c_ulonglong,
2335 | |         };
     | |__________- unnecessary `let` binding
2336 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2330 ~         
2331 ~         tty_default_key_code {
2332 +             code: TTYC_KF40,
2333 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2334 +                 | 0x800000000000 as libc::c_ulonglong
2335 +                 | 0x400000000000 as libc::c_ulonglong,
2336 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2345:9
     |
2339 | /         let mut init = tty_default_key_code {
2340 | |             code: TTYC_KF41,
2341 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2342 | |                 | 0x800000000000 as libc::c_ulonglong
2343 | |                 | 0x400000000000 as libc::c_ulonglong,
2344 | |         };
     | |__________- unnecessary `let` binding
2345 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2339 ~         
2340 ~         tty_default_key_code {
2341 +             code: TTYC_KF41,
2342 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2343 +                 | 0x800000000000 as libc::c_ulonglong
2344 +                 | 0x400000000000 as libc::c_ulonglong,
2345 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2354:9
     |
2348 | /         let mut init = tty_default_key_code {
2349 | |             code: TTYC_KF42,
2350 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2351 | |                 | 0x800000000000 as libc::c_ulonglong
2352 | |                 | 0x400000000000 as libc::c_ulonglong,
2353 | |         };
     | |__________- unnecessary `let` binding
2354 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2348 ~         
2349 ~         tty_default_key_code {
2350 +             code: TTYC_KF42,
2351 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2352 +                 | 0x800000000000 as libc::c_ulonglong
2353 +                 | 0x400000000000 as libc::c_ulonglong,
2354 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2363:9
     |
2357 | /         let mut init = tty_default_key_code {
2358 | |             code: TTYC_KF43,
2359 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2360 | |                 | 0x800000000000 as libc::c_ulonglong
2361 | |                 | 0x400000000000 as libc::c_ulonglong,
2362 | |         };
     | |__________- unnecessary `let` binding
2363 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2357 ~         
2358 ~         tty_default_key_code {
2359 +             code: TTYC_KF43,
2360 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2361 +                 | 0x800000000000 as libc::c_ulonglong
2362 +                 | 0x400000000000 as libc::c_ulonglong,
2363 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2372:9
     |
2366 | /         let mut init = tty_default_key_code {
2367 | |             code: TTYC_KF44,
2368 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2369 | |                 | 0x800000000000 as libc::c_ulonglong
2370 | |                 | 0x400000000000 as libc::c_ulonglong,
2371 | |         };
     | |__________- unnecessary `let` binding
2372 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2366 ~         
2367 ~         tty_default_key_code {
2368 +             code: TTYC_KF44,
2369 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2370 +                 | 0x800000000000 as libc::c_ulonglong
2371 +                 | 0x400000000000 as libc::c_ulonglong,
2372 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2381:9
     |
2375 | /         let mut init = tty_default_key_code {
2376 | |             code: TTYC_KF45,
2377 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2378 | |                 | 0x800000000000 as libc::c_ulonglong
2379 | |                 | 0x400000000000 as libc::c_ulonglong,
2380 | |         };
     | |__________- unnecessary `let` binding
2381 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2375 ~         
2376 ~         tty_default_key_code {
2377 +             code: TTYC_KF45,
2378 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2379 +                 | 0x800000000000 as libc::c_ulonglong
2380 +                 | 0x400000000000 as libc::c_ulonglong,
2381 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2390:9
     |
2384 | /         let mut init = tty_default_key_code {
2385 | |             code: TTYC_KF46,
2386 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2387 | |                 | 0x800000000000 as libc::c_ulonglong
2388 | |                 | 0x400000000000 as libc::c_ulonglong,
2389 | |         };
     | |__________- unnecessary `let` binding
2390 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2384 ~         
2385 ~         tty_default_key_code {
2386 +             code: TTYC_KF46,
2387 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2388 +                 | 0x800000000000 as libc::c_ulonglong
2389 +                 | 0x400000000000 as libc::c_ulonglong,
2390 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2399:9
     |
2393 | /         let mut init = tty_default_key_code {
2394 | |             code: TTYC_KF47,
2395 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2396 | |                 | 0x800000000000 as libc::c_ulonglong
2397 | |                 | 0x400000000000 as libc::c_ulonglong,
2398 | |         };
     | |__________- unnecessary `let` binding
2399 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2393 ~         
2394 ~         tty_default_key_code {
2395 +             code: TTYC_KF47,
2396 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2397 +                 | 0x800000000000 as libc::c_ulonglong
2398 +                 | 0x400000000000 as libc::c_ulonglong,
2399 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2408:9
     |
2402 | /         let mut init = tty_default_key_code {
2403 | |             code: TTYC_KF48,
2404 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2405 | |                 | 0x800000000000 as libc::c_ulonglong
2406 | |                 | 0x400000000000 as libc::c_ulonglong,
2407 | |         };
     | |__________- unnecessary `let` binding
2408 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2402 ~         
2403 ~         tty_default_key_code {
2404 +             code: TTYC_KF48,
2405 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2406 +                 | 0x800000000000 as libc::c_ulonglong
2407 +                 | 0x400000000000 as libc::c_ulonglong,
2408 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2416:9
     |
2411 | /         let mut init = tty_default_key_code {
2412 | |             code: TTYC_KF49,
2413 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2414 | |                 | 0x200000000000 as libc::c_ulonglong,
2415 | |         };
     | |__________- unnecessary `let` binding
2416 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2411 ~         
2412 ~         tty_default_key_code {
2413 +             code: TTYC_KF49,
2414 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2415 +                 | 0x200000000000 as libc::c_ulonglong,
2416 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2424:9
     |
2419 | /         let mut init = tty_default_key_code {
2420 | |             code: TTYC_KF50,
2421 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2422 | |                 | 0x200000000000 as libc::c_ulonglong,
2423 | |         };
     | |__________- unnecessary `let` binding
2424 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2419 ~         
2420 ~         tty_default_key_code {
2421 +             code: TTYC_KF50,
2422 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2423 +                 | 0x200000000000 as libc::c_ulonglong,
2424 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2432:9
     |
2427 | /         let mut init = tty_default_key_code {
2428 | |             code: TTYC_KF51,
2429 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2430 | |                 | 0x200000000000 as libc::c_ulonglong,
2431 | |         };
     | |__________- unnecessary `let` binding
2432 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2427 ~         
2428 ~         tty_default_key_code {
2429 +             code: TTYC_KF51,
2430 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2431 +                 | 0x200000000000 as libc::c_ulonglong,
2432 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2440:9
     |
2435 | /         let mut init = tty_default_key_code {
2436 | |             code: TTYC_KF52,
2437 | |             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2438 | |                 | 0x200000000000 as libc::c_ulonglong,
2439 | |         };
     | |__________- unnecessary `let` binding
2440 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2435 ~         
2436 ~         tty_default_key_code {
2437 +             code: TTYC_KF52,
2438 +             key: KEYC_F4 as libc::c_int as libc::c_ulonglong
2439 +                 | 0x200000000000 as libc::c_ulonglong,
2440 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2448:9
     |
2443 | /         let mut init = tty_default_key_code {
2444 | |             code: TTYC_KF53,
2445 | |             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2446 | |                 | 0x200000000000 as libc::c_ulonglong,
2447 | |         };
     | |__________- unnecessary `let` binding
2448 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2443 ~         
2444 ~         tty_default_key_code {
2445 +             code: TTYC_KF53,
2446 +             key: KEYC_F5 as libc::c_int as libc::c_ulonglong
2447 +                 | 0x200000000000 as libc::c_ulonglong,
2448 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2456:9
     |
2451 | /         let mut init = tty_default_key_code {
2452 | |             code: TTYC_KF54,
2453 | |             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2454 | |                 | 0x200000000000 as libc::c_ulonglong,
2455 | |         };
     | |__________- unnecessary `let` binding
2456 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2451 ~         
2452 ~         tty_default_key_code {
2453 +             code: TTYC_KF54,
2454 +             key: KEYC_F6 as libc::c_int as libc::c_ulonglong
2455 +                 | 0x200000000000 as libc::c_ulonglong,
2456 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2464:9
     |
2459 | /         let mut init = tty_default_key_code {
2460 | |             code: TTYC_KF55,
2461 | |             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2462 | |                 | 0x200000000000 as libc::c_ulonglong,
2463 | |         };
     | |__________- unnecessary `let` binding
2464 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2459 ~         
2460 ~         tty_default_key_code {
2461 +             code: TTYC_KF55,
2462 +             key: KEYC_F7 as libc::c_int as libc::c_ulonglong
2463 +                 | 0x200000000000 as libc::c_ulonglong,
2464 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2472:9
     |
2467 | /         let mut init = tty_default_key_code {
2468 | |             code: TTYC_KF56,
2469 | |             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2470 | |                 | 0x200000000000 as libc::c_ulonglong,
2471 | |         };
     | |__________- unnecessary `let` binding
2472 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2467 ~         
2468 ~         tty_default_key_code {
2469 +             code: TTYC_KF56,
2470 +             key: KEYC_F8 as libc::c_int as libc::c_ulonglong
2471 +                 | 0x200000000000 as libc::c_ulonglong,
2472 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2480:9
     |
2475 | /         let mut init = tty_default_key_code {
2476 | |             code: TTYC_KF57,
2477 | |             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2478 | |                 | 0x200000000000 as libc::c_ulonglong,
2479 | |         };
     | |__________- unnecessary `let` binding
2480 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2475 ~         
2476 ~         tty_default_key_code {
2477 +             code: TTYC_KF57,
2478 +             key: KEYC_F9 as libc::c_int as libc::c_ulonglong
2479 +                 | 0x200000000000 as libc::c_ulonglong,
2480 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2488:9
     |
2483 | /         let mut init = tty_default_key_code {
2484 | |             code: TTYC_KF58,
2485 | |             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2486 | |                 | 0x200000000000 as libc::c_ulonglong,
2487 | |         };
     | |__________- unnecessary `let` binding
2488 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2483 ~         
2484 ~         tty_default_key_code {
2485 +             code: TTYC_KF58,
2486 +             key: KEYC_F10 as libc::c_int as libc::c_ulonglong
2487 +                 | 0x200000000000 as libc::c_ulonglong,
2488 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2496:9
     |
2491 | /         let mut init = tty_default_key_code {
2492 | |             code: TTYC_KF59,
2493 | |             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2494 | |                 | 0x200000000000 as libc::c_ulonglong,
2495 | |         };
     | |__________- unnecessary `let` binding
2496 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2491 ~         
2492 ~         tty_default_key_code {
2493 +             code: TTYC_KF59,
2494 +             key: KEYC_F11 as libc::c_int as libc::c_ulonglong
2495 +                 | 0x200000000000 as libc::c_ulonglong,
2496 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2504:9
     |
2499 | /         let mut init = tty_default_key_code {
2500 | |             code: TTYC_KF60,
2501 | |             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2502 | |                 | 0x200000000000 as libc::c_ulonglong,
2503 | |         };
     | |__________- unnecessary `let` binding
2504 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2499 ~         
2500 ~         tty_default_key_code {
2501 +             code: TTYC_KF60,
2502 +             key: KEYC_F12 as libc::c_int as libc::c_ulonglong
2503 +                 | 0x200000000000 as libc::c_ulonglong,
2504 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2513:9
     |
2507 | /         let mut init = tty_default_key_code {
2508 | |             code: TTYC_KF61,
2509 | |             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2510 | |                 | 0x200000000000 as libc::c_ulonglong
2511 | |                 | 0x800000000000 as libc::c_ulonglong,
2512 | |         };
     | |__________- unnecessary `let` binding
2513 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2507 ~         
2508 ~         tty_default_key_code {
2509 +             code: TTYC_KF61,
2510 +             key: KEYC_F1 as libc::c_int as libc::c_ulonglong
2511 +                 | 0x200000000000 as libc::c_ulonglong
2512 +                 | 0x800000000000 as libc::c_ulonglong,
2513 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2522:9
     |
2516 | /         let mut init = tty_default_key_code {
2517 | |             code: TTYC_KF62,
2518 | |             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2519 | |                 | 0x200000000000 as libc::c_ulonglong
2520 | |                 | 0x800000000000 as libc::c_ulonglong,
2521 | |         };
     | |__________- unnecessary `let` binding
2522 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2516 ~         
2517 ~         tty_default_key_code {
2518 +             code: TTYC_KF62,
2519 +             key: KEYC_F2 as libc::c_int as libc::c_ulonglong
2520 +                 | 0x200000000000 as libc::c_ulonglong
2521 +                 | 0x800000000000 as libc::c_ulonglong,
2522 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2531:9
     |
2525 | /         let mut init = tty_default_key_code {
2526 | |             code: TTYC_KF63,
2527 | |             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2528 | |                 | 0x200000000000 as libc::c_ulonglong
2529 | |                 | 0x800000000000 as libc::c_ulonglong,
2530 | |         };
     | |__________- unnecessary `let` binding
2531 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2525 ~         
2526 ~         tty_default_key_code {
2527 +             code: TTYC_KF63,
2528 +             key: KEYC_F3 as libc::c_int as libc::c_ulonglong
2529 +                 | 0x200000000000 as libc::c_ulonglong
2530 +                 | 0x800000000000 as libc::c_ulonglong,
2531 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2538:9
     |
2534 | /         let mut init = tty_default_key_code {
2535 | |             code: TTYC_KICH1,
2536 | |             key: KEYC_IC as libc::c_int as key_code,
2537 | |         };
     | |__________- unnecessary `let` binding
2538 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2534 ~         
2535 ~         tty_default_key_code {
2536 +             code: TTYC_KICH1,
2537 +             key: KEYC_IC as libc::c_int as key_code,
2538 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2545:9
     |
2541 | /         let mut init = tty_default_key_code {
2542 | |             code: TTYC_KDCH1,
2543 | |             key: KEYC_DC as libc::c_int as key_code,
2544 | |         };
     | |__________- unnecessary `let` binding
2545 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2541 ~         
2542 ~         tty_default_key_code {
2543 +             code: TTYC_KDCH1,
2544 +             key: KEYC_DC as libc::c_int as key_code,
2545 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2552:9
     |
2548 | /         let mut init = tty_default_key_code {
2549 | |             code: TTYC_KHOME,
2550 | |             key: KEYC_HOME as libc::c_int as key_code,
2551 | |         };
     | |__________- unnecessary `let` binding
2552 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2548 ~         
2549 ~         tty_default_key_code {
2550 +             code: TTYC_KHOME,
2551 +             key: KEYC_HOME as libc::c_int as key_code,
2552 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2559:9
     |
2555 | /         let mut init = tty_default_key_code {
2556 | |             code: TTYC_KEND,
2557 | |             key: KEYC_END as libc::c_int as key_code,
2558 | |         };
     | |__________- unnecessary `let` binding
2559 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2555 ~         
2556 ~         tty_default_key_code {
2557 +             code: TTYC_KEND,
2558 +             key: KEYC_END as libc::c_int as key_code,
2559 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2566:9
     |
2562 | /         let mut init = tty_default_key_code {
2563 | |             code: TTYC_KNP,
2564 | |             key: KEYC_NPAGE as libc::c_int as key_code,
2565 | |         };
     | |__________- unnecessary `let` binding
2566 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2562 ~         
2563 ~         tty_default_key_code {
2564 +             code: TTYC_KNP,
2565 +             key: KEYC_NPAGE as libc::c_int as key_code,
2566 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2573:9
     |
2569 | /         let mut init = tty_default_key_code {
2570 | |             code: TTYC_KPP,
2571 | |             key: KEYC_PPAGE as libc::c_int as key_code,
2572 | |         };
     | |__________- unnecessary `let` binding
2573 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2569 ~         
2570 ~         tty_default_key_code {
2571 +             code: TTYC_KPP,
2572 +             key: KEYC_PPAGE as libc::c_int as key_code,
2573 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2580:9
     |
2576 | /         let mut init = tty_default_key_code {
2577 | |             code: TTYC_KCBT,
2578 | |             key: KEYC_BTAB as libc::c_int as key_code,
2579 | |         };
     | |__________- unnecessary `let` binding
2580 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2576 ~         
2577 ~         tty_default_key_code {
2578 +             code: TTYC_KCBT,
2579 +             key: KEYC_BTAB as libc::c_int as key_code,
2580 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2587:9
     |
2583 | /         let mut init = tty_default_key_code {
2584 | |             code: TTYC_KCUU1,
2585 | |             key: KEYC_UP as libc::c_int as key_code,
2586 | |         };
     | |__________- unnecessary `let` binding
2587 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2583 ~         
2584 ~         tty_default_key_code {
2585 +             code: TTYC_KCUU1,
2586 +             key: KEYC_UP as libc::c_int as key_code,
2587 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2594:9
     |
2590 | /         let mut init = tty_default_key_code {
2591 | |             code: TTYC_KCUD1,
2592 | |             key: KEYC_DOWN as libc::c_int as key_code,
2593 | |         };
     | |__________- unnecessary `let` binding
2594 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2590 ~         
2591 ~         tty_default_key_code {
2592 +             code: TTYC_KCUD1,
2593 +             key: KEYC_DOWN as libc::c_int as key_code,
2594 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2601:9
     |
2597 | /         let mut init = tty_default_key_code {
2598 | |             code: TTYC_KCUB1,
2599 | |             key: KEYC_LEFT as libc::c_int as key_code,
2600 | |         };
     | |__________- unnecessary `let` binding
2601 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2597 ~         
2598 ~         tty_default_key_code {
2599 +             code: TTYC_KCUB1,
2600 +             key: KEYC_LEFT as libc::c_int as key_code,
2601 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2608:9
     |
2604 | /         let mut init = tty_default_key_code {
2605 | |             code: TTYC_KCUF1,
2606 | |             key: KEYC_RIGHT as libc::c_int as key_code,
2607 | |         };
     | |__________- unnecessary `let` binding
2608 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2604 ~         
2605 ~         tty_default_key_code {
2606 +             code: TTYC_KCUF1,
2607 +             key: KEYC_RIGHT as libc::c_int as key_code,
2608 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2617:9
     |
2611 | /         let mut init = tty_default_key_code {
2612 | |             code: TTYC_KDC2,
2613 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2614 | |                 | 0x800000000000 as libc::c_ulonglong
2615 | |                 | 0x1000000000000 as libc::c_ulonglong,
2616 | |         };
     | |__________- unnecessary `let` binding
2617 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2611 ~         
2612 ~         tty_default_key_code {
2613 +             code: TTYC_KDC2,
2614 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2615 +                 | 0x800000000000 as libc::c_ulonglong
2616 +                 | 0x1000000000000 as libc::c_ulonglong,
2617 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2626:9
     |
2620 | /         let mut init = tty_default_key_code {
2621 | |             code: TTYC_KDC3,
2622 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2623 | |                 | 0x200000000000 as libc::c_ulonglong
2624 | |                 | 0x1000000000000 as libc::c_ulonglong,
2625 | |         };
     | |__________- unnecessary `let` binding
2626 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2620 ~         
2621 ~         tty_default_key_code {
2622 +             code: TTYC_KDC3,
2623 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2624 +                 | 0x200000000000 as libc::c_ulonglong
2625 +                 | 0x1000000000000 as libc::c_ulonglong,
2626 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2636:9
     |
2629 | /         let mut init = tty_default_key_code {
2630 | |             code: TTYC_KDC4,
2631 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2632 | |                 | 0x800000000000 as libc::c_ulonglong
2633 | |                 | 0x200000000000 as libc::c_ulonglong
2634 | |                 | 0x1000000000000 as libc::c_ulonglong,
2635 | |         };
     | |__________- unnecessary `let` binding
2636 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2629 ~         
2630 ~         tty_default_key_code {
2631 +             code: TTYC_KDC4,
2632 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2633 +                 | 0x800000000000 as libc::c_ulonglong
2634 +                 | 0x200000000000 as libc::c_ulonglong
2635 +                 | 0x1000000000000 as libc::c_ulonglong,
2636 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2645:9
     |
2639 | /         let mut init = tty_default_key_code {
2640 | |             code: TTYC_KDC5,
2641 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2642 | |                 | 0x400000000000 as libc::c_ulonglong
2643 | |                 | 0x1000000000000 as libc::c_ulonglong,
2644 | |         };
     | |__________- unnecessary `let` binding
2645 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2639 ~         
2640 ~         tty_default_key_code {
2641 +             code: TTYC_KDC5,
2642 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2643 +                 | 0x400000000000 as libc::c_ulonglong
2644 +                 | 0x1000000000000 as libc::c_ulonglong,
2645 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2655:9
     |
2648 | /         let mut init = tty_default_key_code {
2649 | |             code: TTYC_KDC6,
2650 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2651 | |                 | 0x800000000000 as libc::c_ulonglong
2652 | |                 | 0x400000000000 as libc::c_ulonglong
2653 | |                 | 0x1000000000000 as libc::c_ulonglong,
2654 | |         };
     | |__________- unnecessary `let` binding
2655 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2648 ~         
2649 ~         tty_default_key_code {
2650 +             code: TTYC_KDC6,
2651 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2652 +                 | 0x800000000000 as libc::c_ulonglong
2653 +                 | 0x400000000000 as libc::c_ulonglong
2654 +                 | 0x1000000000000 as libc::c_ulonglong,
2655 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2665:9
     |
2658 | /         let mut init = tty_default_key_code {
2659 | |             code: TTYC_KDC7,
2660 | |             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2661 | |                 | 0x200000000000 as libc::c_ulonglong
2662 | |                 | 0x400000000000 as libc::c_ulonglong
2663 | |                 | 0x1000000000000 as libc::c_ulonglong,
2664 | |         };
     | |__________- unnecessary `let` binding
2665 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2658 ~         
2659 ~         tty_default_key_code {
2660 +             code: TTYC_KDC7,
2661 +             key: KEYC_DC as libc::c_int as libc::c_ulonglong
2662 +                 | 0x200000000000 as libc::c_ulonglong
2663 +                 | 0x400000000000 as libc::c_ulonglong
2664 +                 | 0x1000000000000 as libc::c_ulonglong,
2665 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2674:9
     |
2668 | /         let mut init = tty_default_key_code {
2669 | |             code: TTYC_KIND,
2670 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2671 | |                 | 0x800000000000 as libc::c_ulonglong
2672 | |                 | 0x1000000000000 as libc::c_ulonglong,
2673 | |         };
     | |__________- unnecessary `let` binding
2674 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2668 ~         
2669 ~         tty_default_key_code {
2670 +             code: TTYC_KIND,
2671 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2672 +                 | 0x800000000000 as libc::c_ulonglong
2673 +                 | 0x1000000000000 as libc::c_ulonglong,
2674 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2683:9
     |
2677 | /         let mut init = tty_default_key_code {
2678 | |             code: TTYC_KDN2,
2679 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2680 | |                 | 0x800000000000 as libc::c_ulonglong
2681 | |                 | 0x1000000000000 as libc::c_ulonglong,
2682 | |         };
     | |__________- unnecessary `let` binding
2683 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2677 ~         
2678 ~         tty_default_key_code {
2679 +             code: TTYC_KDN2,
2680 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2681 +                 | 0x800000000000 as libc::c_ulonglong
2682 +                 | 0x1000000000000 as libc::c_ulonglong,
2683 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2692:9
     |
2686 | /         let mut init = tty_default_key_code {
2687 | |             code: TTYC_KDN3,
2688 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2689 | |                 | 0x200000000000 as libc::c_ulonglong
2690 | |                 | 0x1000000000000 as libc::c_ulonglong,
2691 | |         };
     | |__________- unnecessary `let` binding
2692 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2686 ~         
2687 ~         tty_default_key_code {
2688 +             code: TTYC_KDN3,
2689 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2690 +                 | 0x200000000000 as libc::c_ulonglong
2691 +                 | 0x1000000000000 as libc::c_ulonglong,
2692 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2702:9
     |
2695 | /         let mut init = tty_default_key_code {
2696 | |             code: TTYC_KDN4,
2697 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2698 | |                 | 0x800000000000 as libc::c_ulonglong
2699 | |                 | 0x200000000000 as libc::c_ulonglong
2700 | |                 | 0x1000000000000 as libc::c_ulonglong,
2701 | |         };
     | |__________- unnecessary `let` binding
2702 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2695 ~         
2696 ~         tty_default_key_code {
2697 +             code: TTYC_KDN4,
2698 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2699 +                 | 0x800000000000 as libc::c_ulonglong
2700 +                 | 0x200000000000 as libc::c_ulonglong
2701 +                 | 0x1000000000000 as libc::c_ulonglong,
2702 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2711:9
     |
2705 | /         let mut init = tty_default_key_code {
2706 | |             code: TTYC_KDN5,
2707 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2708 | |                 | 0x400000000000 as libc::c_ulonglong
2709 | |                 | 0x1000000000000 as libc::c_ulonglong,
2710 | |         };
     | |__________- unnecessary `let` binding
2711 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2705 ~         
2706 ~         tty_default_key_code {
2707 +             code: TTYC_KDN5,
2708 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2709 +                 | 0x400000000000 as libc::c_ulonglong
2710 +                 | 0x1000000000000 as libc::c_ulonglong,
2711 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2721:9
     |
2714 | /         let mut init = tty_default_key_code {
2715 | |             code: TTYC_KDN6,
2716 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2717 | |                 | 0x800000000000 as libc::c_ulonglong
2718 | |                 | 0x400000000000 as libc::c_ulonglong
2719 | |                 | 0x1000000000000 as libc::c_ulonglong,
2720 | |         };
     | |__________- unnecessary `let` binding
2721 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2714 ~         
2715 ~         tty_default_key_code {
2716 +             code: TTYC_KDN6,
2717 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2718 +                 | 0x800000000000 as libc::c_ulonglong
2719 +                 | 0x400000000000 as libc::c_ulonglong
2720 +                 | 0x1000000000000 as libc::c_ulonglong,
2721 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2731:9
     |
2724 | /         let mut init = tty_default_key_code {
2725 | |             code: TTYC_KDN7,
2726 | |             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2727 | |                 | 0x200000000000 as libc::c_ulonglong
2728 | |                 | 0x400000000000 as libc::c_ulonglong
2729 | |                 | 0x1000000000000 as libc::c_ulonglong,
2730 | |         };
     | |__________- unnecessary `let` binding
2731 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2724 ~         
2725 ~         tty_default_key_code {
2726 +             code: TTYC_KDN7,
2727 +             key: KEYC_DOWN as libc::c_int as libc::c_ulonglong
2728 +                 | 0x200000000000 as libc::c_ulonglong
2729 +                 | 0x400000000000 as libc::c_ulonglong
2730 +                 | 0x1000000000000 as libc::c_ulonglong,
2731 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2740:9
     |
2734 | /         let mut init = tty_default_key_code {
2735 | |             code: TTYC_KEND2,
2736 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2737 | |                 | 0x800000000000 as libc::c_ulonglong
2738 | |                 | 0x1000000000000 as libc::c_ulonglong,
2739 | |         };
     | |__________- unnecessary `let` binding
2740 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2734 ~         
2735 ~         tty_default_key_code {
2736 +             code: TTYC_KEND2,
2737 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2738 +                 | 0x800000000000 as libc::c_ulonglong
2739 +                 | 0x1000000000000 as libc::c_ulonglong,
2740 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2749:9
     |
2743 | /         let mut init = tty_default_key_code {
2744 | |             code: TTYC_KEND3,
2745 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2746 | |                 | 0x200000000000 as libc::c_ulonglong
2747 | |                 | 0x1000000000000 as libc::c_ulonglong,
2748 | |         };
     | |__________- unnecessary `let` binding
2749 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2743 ~         
2744 ~         tty_default_key_code {
2745 +             code: TTYC_KEND3,
2746 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2747 +                 | 0x200000000000 as libc::c_ulonglong
2748 +                 | 0x1000000000000 as libc::c_ulonglong,
2749 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2759:9
     |
2752 | /         let mut init = tty_default_key_code {
2753 | |             code: TTYC_KEND4,
2754 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2755 | |                 | 0x800000000000 as libc::c_ulonglong
2756 | |                 | 0x200000000000 as libc::c_ulonglong
2757 | |                 | 0x1000000000000 as libc::c_ulonglong,
2758 | |         };
     | |__________- unnecessary `let` binding
2759 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2752 ~         
2753 ~         tty_default_key_code {
2754 +             code: TTYC_KEND4,
2755 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2756 +                 | 0x800000000000 as libc::c_ulonglong
2757 +                 | 0x200000000000 as libc::c_ulonglong
2758 +                 | 0x1000000000000 as libc::c_ulonglong,
2759 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2768:9
     |
2762 | /         let mut init = tty_default_key_code {
2763 | |             code: TTYC_KEND5,
2764 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2765 | |                 | 0x400000000000 as libc::c_ulonglong
2766 | |                 | 0x1000000000000 as libc::c_ulonglong,
2767 | |         };
     | |__________- unnecessary `let` binding
2768 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2762 ~         
2763 ~         tty_default_key_code {
2764 +             code: TTYC_KEND5,
2765 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2766 +                 | 0x400000000000 as libc::c_ulonglong
2767 +                 | 0x1000000000000 as libc::c_ulonglong,
2768 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2778:9
     |
2771 | /         let mut init = tty_default_key_code {
2772 | |             code: TTYC_KEND6,
2773 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2774 | |                 | 0x800000000000 as libc::c_ulonglong
2775 | |                 | 0x400000000000 as libc::c_ulonglong
2776 | |                 | 0x1000000000000 as libc::c_ulonglong,
2777 | |         };
     | |__________- unnecessary `let` binding
2778 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2771 ~         
2772 ~         tty_default_key_code {
2773 +             code: TTYC_KEND6,
2774 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2775 +                 | 0x800000000000 as libc::c_ulonglong
2776 +                 | 0x400000000000 as libc::c_ulonglong
2777 +                 | 0x1000000000000 as libc::c_ulonglong,
2778 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2788:9
     |
2781 | /         let mut init = tty_default_key_code {
2782 | |             code: TTYC_KEND7,
2783 | |             key: KEYC_END as libc::c_int as libc::c_ulonglong
2784 | |                 | 0x200000000000 as libc::c_ulonglong
2785 | |                 | 0x400000000000 as libc::c_ulonglong
2786 | |                 | 0x1000000000000 as libc::c_ulonglong,
2787 | |         };
     | |__________- unnecessary `let` binding
2788 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2781 ~         
2782 ~         tty_default_key_code {
2783 +             code: TTYC_KEND7,
2784 +             key: KEYC_END as libc::c_int as libc::c_ulonglong
2785 +                 | 0x200000000000 as libc::c_ulonglong
2786 +                 | 0x400000000000 as libc::c_ulonglong
2787 +                 | 0x1000000000000 as libc::c_ulonglong,
2788 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2797:9
     |
2791 | /         let mut init = tty_default_key_code {
2792 | |             code: TTYC_KHOM2,
2793 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2794 | |                 | 0x800000000000 as libc::c_ulonglong
2795 | |                 | 0x1000000000000 as libc::c_ulonglong,
2796 | |         };
     | |__________- unnecessary `let` binding
2797 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2791 ~         
2792 ~         tty_default_key_code {
2793 +             code: TTYC_KHOM2,
2794 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2795 +                 | 0x800000000000 as libc::c_ulonglong
2796 +                 | 0x1000000000000 as libc::c_ulonglong,
2797 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2806:9
     |
2800 | /         let mut init = tty_default_key_code {
2801 | |             code: TTYC_KHOM3,
2802 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2803 | |                 | 0x200000000000 as libc::c_ulonglong
2804 | |                 | 0x1000000000000 as libc::c_ulonglong,
2805 | |         };
     | |__________- unnecessary `let` binding
2806 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2800 ~         
2801 ~         tty_default_key_code {
2802 +             code: TTYC_KHOM3,
2803 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2804 +                 | 0x200000000000 as libc::c_ulonglong
2805 +                 | 0x1000000000000 as libc::c_ulonglong,
2806 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2816:9
     |
2809 | /         let mut init = tty_default_key_code {
2810 | |             code: TTYC_KHOM4,
2811 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2812 | |                 | 0x800000000000 as libc::c_ulonglong
2813 | |                 | 0x200000000000 as libc::c_ulonglong
2814 | |                 | 0x1000000000000 as libc::c_ulonglong,
2815 | |         };
     | |__________- unnecessary `let` binding
2816 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2809 ~         
2810 ~         tty_default_key_code {
2811 +             code: TTYC_KHOM4,
2812 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2813 +                 | 0x800000000000 as libc::c_ulonglong
2814 +                 | 0x200000000000 as libc::c_ulonglong
2815 +                 | 0x1000000000000 as libc::c_ulonglong,
2816 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2825:9
     |
2819 | /         let mut init = tty_default_key_code {
2820 | |             code: TTYC_KHOM5,
2821 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2822 | |                 | 0x400000000000 as libc::c_ulonglong
2823 | |                 | 0x1000000000000 as libc::c_ulonglong,
2824 | |         };
     | |__________- unnecessary `let` binding
2825 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2819 ~         
2820 ~         tty_default_key_code {
2821 +             code: TTYC_KHOM5,
2822 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2823 +                 | 0x400000000000 as libc::c_ulonglong
2824 +                 | 0x1000000000000 as libc::c_ulonglong,
2825 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2835:9
     |
2828 | /         let mut init = tty_default_key_code {
2829 | |             code: TTYC_KHOM6,
2830 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2831 | |                 | 0x800000000000 as libc::c_ulonglong
2832 | |                 | 0x400000000000 as libc::c_ulonglong
2833 | |                 | 0x1000000000000 as libc::c_ulonglong,
2834 | |         };
     | |__________- unnecessary `let` binding
2835 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2828 ~         
2829 ~         tty_default_key_code {
2830 +             code: TTYC_KHOM6,
2831 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2832 +                 | 0x800000000000 as libc::c_ulonglong
2833 +                 | 0x400000000000 as libc::c_ulonglong
2834 +                 | 0x1000000000000 as libc::c_ulonglong,
2835 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2845:9
     |
2838 | /         let mut init = tty_default_key_code {
2839 | |             code: TTYC_KHOM7,
2840 | |             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2841 | |                 | 0x200000000000 as libc::c_ulonglong
2842 | |                 | 0x400000000000 as libc::c_ulonglong
2843 | |                 | 0x1000000000000 as libc::c_ulonglong,
2844 | |         };
     | |__________- unnecessary `let` binding
2845 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2838 ~         
2839 ~         tty_default_key_code {
2840 +             code: TTYC_KHOM7,
2841 +             key: KEYC_HOME as libc::c_int as libc::c_ulonglong
2842 +                 | 0x200000000000 as libc::c_ulonglong
2843 +                 | 0x400000000000 as libc::c_ulonglong
2844 +                 | 0x1000000000000 as libc::c_ulonglong,
2845 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2854:9
     |
2848 | /         let mut init = tty_default_key_code {
2849 | |             code: TTYC_KIC2,
2850 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2851 | |                 | 0x800000000000 as libc::c_ulonglong
2852 | |                 | 0x1000000000000 as libc::c_ulonglong,
2853 | |         };
     | |__________- unnecessary `let` binding
2854 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2848 ~         
2849 ~         tty_default_key_code {
2850 +             code: TTYC_KIC2,
2851 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2852 +                 | 0x800000000000 as libc::c_ulonglong
2853 +                 | 0x1000000000000 as libc::c_ulonglong,
2854 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2863:9
     |
2857 | /         let mut init = tty_default_key_code {
2858 | |             code: TTYC_KIC3,
2859 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2860 | |                 | 0x200000000000 as libc::c_ulonglong
2861 | |                 | 0x1000000000000 as libc::c_ulonglong,
2862 | |         };
     | |__________- unnecessary `let` binding
2863 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2857 ~         
2858 ~         tty_default_key_code {
2859 +             code: TTYC_KIC3,
2860 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2861 +                 | 0x200000000000 as libc::c_ulonglong
2862 +                 | 0x1000000000000 as libc::c_ulonglong,
2863 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2873:9
     |
2866 | /         let mut init = tty_default_key_code {
2867 | |             code: TTYC_KIC4,
2868 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2869 | |                 | 0x800000000000 as libc::c_ulonglong
2870 | |                 | 0x200000000000 as libc::c_ulonglong
2871 | |                 | 0x1000000000000 as libc::c_ulonglong,
2872 | |         };
     | |__________- unnecessary `let` binding
2873 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2866 ~         
2867 ~         tty_default_key_code {
2868 +             code: TTYC_KIC4,
2869 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2870 +                 | 0x800000000000 as libc::c_ulonglong
2871 +                 | 0x200000000000 as libc::c_ulonglong
2872 +                 | 0x1000000000000 as libc::c_ulonglong,
2873 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2882:9
     |
2876 | /         let mut init = tty_default_key_code {
2877 | |             code: TTYC_KIC5,
2878 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2879 | |                 | 0x400000000000 as libc::c_ulonglong
2880 | |                 | 0x1000000000000 as libc::c_ulonglong,
2881 | |         };
     | |__________- unnecessary `let` binding
2882 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2876 ~         
2877 ~         tty_default_key_code {
2878 +             code: TTYC_KIC5,
2879 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2880 +                 | 0x400000000000 as libc::c_ulonglong
2881 +                 | 0x1000000000000 as libc::c_ulonglong,
2882 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2892:9
     |
2885 | /         let mut init = tty_default_key_code {
2886 | |             code: TTYC_KIC6,
2887 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2888 | |                 | 0x800000000000 as libc::c_ulonglong
2889 | |                 | 0x400000000000 as libc::c_ulonglong
2890 | |                 | 0x1000000000000 as libc::c_ulonglong,
2891 | |         };
     | |__________- unnecessary `let` binding
2892 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2885 ~         
2886 ~         tty_default_key_code {
2887 +             code: TTYC_KIC6,
2888 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2889 +                 | 0x800000000000 as libc::c_ulonglong
2890 +                 | 0x400000000000 as libc::c_ulonglong
2891 +                 | 0x1000000000000 as libc::c_ulonglong,
2892 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2902:9
     |
2895 | /         let mut init = tty_default_key_code {
2896 | |             code: TTYC_KIC7,
2897 | |             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2898 | |                 | 0x200000000000 as libc::c_ulonglong
2899 | |                 | 0x400000000000 as libc::c_ulonglong
2900 | |                 | 0x1000000000000 as libc::c_ulonglong,
2901 | |         };
     | |__________- unnecessary `let` binding
2902 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2895 ~         
2896 ~         tty_default_key_code {
2897 +             code: TTYC_KIC7,
2898 +             key: KEYC_IC as libc::c_int as libc::c_ulonglong
2899 +                 | 0x200000000000 as libc::c_ulonglong
2900 +                 | 0x400000000000 as libc::c_ulonglong
2901 +                 | 0x1000000000000 as libc::c_ulonglong,
2902 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2911:9
     |
2905 | /         let mut init = tty_default_key_code {
2906 | |             code: TTYC_KLFT2,
2907 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2908 | |                 | 0x800000000000 as libc::c_ulonglong
2909 | |                 | 0x1000000000000 as libc::c_ulonglong,
2910 | |         };
     | |__________- unnecessary `let` binding
2911 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2905 ~         
2906 ~         tty_default_key_code {
2907 +             code: TTYC_KLFT2,
2908 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2909 +                 | 0x800000000000 as libc::c_ulonglong
2910 +                 | 0x1000000000000 as libc::c_ulonglong,
2911 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2920:9
     |
2914 | /         let mut init = tty_default_key_code {
2915 | |             code: TTYC_KLFT3,
2916 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2917 | |                 | 0x200000000000 as libc::c_ulonglong
2918 | |                 | 0x1000000000000 as libc::c_ulonglong,
2919 | |         };
     | |__________- unnecessary `let` binding
2920 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2914 ~         
2915 ~         tty_default_key_code {
2916 +             code: TTYC_KLFT3,
2917 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2918 +                 | 0x200000000000 as libc::c_ulonglong
2919 +                 | 0x1000000000000 as libc::c_ulonglong,
2920 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2930:9
     |
2923 | /         let mut init = tty_default_key_code {
2924 | |             code: TTYC_KLFT4,
2925 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2926 | |                 | 0x800000000000 as libc::c_ulonglong
2927 | |                 | 0x200000000000 as libc::c_ulonglong
2928 | |                 | 0x1000000000000 as libc::c_ulonglong,
2929 | |         };
     | |__________- unnecessary `let` binding
2930 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2923 ~         
2924 ~         tty_default_key_code {
2925 +             code: TTYC_KLFT4,
2926 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2927 +                 | 0x800000000000 as libc::c_ulonglong
2928 +                 | 0x200000000000 as libc::c_ulonglong
2929 +                 | 0x1000000000000 as libc::c_ulonglong,
2930 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2939:9
     |
2933 | /         let mut init = tty_default_key_code {
2934 | |             code: TTYC_KLFT5,
2935 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2936 | |                 | 0x400000000000 as libc::c_ulonglong
2937 | |                 | 0x1000000000000 as libc::c_ulonglong,
2938 | |         };
     | |__________- unnecessary `let` binding
2939 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2933 ~         
2934 ~         tty_default_key_code {
2935 +             code: TTYC_KLFT5,
2936 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2937 +                 | 0x400000000000 as libc::c_ulonglong
2938 +                 | 0x1000000000000 as libc::c_ulonglong,
2939 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2949:9
     |
2942 | /         let mut init = tty_default_key_code {
2943 | |             code: TTYC_KLFT6,
2944 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2945 | |                 | 0x800000000000 as libc::c_ulonglong
2946 | |                 | 0x400000000000 as libc::c_ulonglong
2947 | |                 | 0x1000000000000 as libc::c_ulonglong,
2948 | |         };
     | |__________- unnecessary `let` binding
2949 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2942 ~         
2943 ~         tty_default_key_code {
2944 +             code: TTYC_KLFT6,
2945 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2946 +                 | 0x800000000000 as libc::c_ulonglong
2947 +                 | 0x400000000000 as libc::c_ulonglong
2948 +                 | 0x1000000000000 as libc::c_ulonglong,
2949 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2959:9
     |
2952 | /         let mut init = tty_default_key_code {
2953 | |             code: TTYC_KLFT7,
2954 | |             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2955 | |                 | 0x200000000000 as libc::c_ulonglong
2956 | |                 | 0x400000000000 as libc::c_ulonglong
2957 | |                 | 0x1000000000000 as libc::c_ulonglong,
2958 | |         };
     | |__________- unnecessary `let` binding
2959 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2952 ~         
2953 ~         tty_default_key_code {
2954 +             code: TTYC_KLFT7,
2955 +             key: KEYC_LEFT as libc::c_int as libc::c_ulonglong
2956 +                 | 0x200000000000 as libc::c_ulonglong
2957 +                 | 0x400000000000 as libc::c_ulonglong
2958 +                 | 0x1000000000000 as libc::c_ulonglong,
2959 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2968:9
     |
2962 | /         let mut init = tty_default_key_code {
2963 | |             code: TTYC_KNXT2,
2964 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2965 | |                 | 0x800000000000 as libc::c_ulonglong
2966 | |                 | 0x1000000000000 as libc::c_ulonglong,
2967 | |         };
     | |__________- unnecessary `let` binding
2968 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2962 ~         
2963 ~         tty_default_key_code {
2964 +             code: TTYC_KNXT2,
2965 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2966 +                 | 0x800000000000 as libc::c_ulonglong
2967 +                 | 0x1000000000000 as libc::c_ulonglong,
2968 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2977:9
     |
2971 | /         let mut init = tty_default_key_code {
2972 | |             code: TTYC_KNXT3,
2973 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2974 | |                 | 0x200000000000 as libc::c_ulonglong
2975 | |                 | 0x1000000000000 as libc::c_ulonglong,
2976 | |         };
     | |__________- unnecessary `let` binding
2977 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2971 ~         
2972 ~         tty_default_key_code {
2973 +             code: TTYC_KNXT3,
2974 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2975 +                 | 0x200000000000 as libc::c_ulonglong
2976 +                 | 0x1000000000000 as libc::c_ulonglong,
2977 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2987:9
     |
2980 | /         let mut init = tty_default_key_code {
2981 | |             code: TTYC_KNXT4,
2982 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2983 | |                 | 0x800000000000 as libc::c_ulonglong
2984 | |                 | 0x200000000000 as libc::c_ulonglong
2985 | |                 | 0x1000000000000 as libc::c_ulonglong,
2986 | |         };
     | |__________- unnecessary `let` binding
2987 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2980 ~         
2981 ~         tty_default_key_code {
2982 +             code: TTYC_KNXT4,
2983 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2984 +                 | 0x800000000000 as libc::c_ulonglong
2985 +                 | 0x200000000000 as libc::c_ulonglong
2986 +                 | 0x1000000000000 as libc::c_ulonglong,
2987 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:2996:9
     |
2990 | /         let mut init = tty_default_key_code {
2991 | |             code: TTYC_KNXT5,
2992 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2993 | |                 | 0x400000000000 as libc::c_ulonglong
2994 | |                 | 0x1000000000000 as libc::c_ulonglong,
2995 | |         };
     | |__________- unnecessary `let` binding
2996 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2990 ~         
2991 ~         tty_default_key_code {
2992 +             code: TTYC_KNXT5,
2993 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
2994 +                 | 0x400000000000 as libc::c_ulonglong
2995 +                 | 0x1000000000000 as libc::c_ulonglong,
2996 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3006:9
     |
2999 | /         let mut init = tty_default_key_code {
3000 | |             code: TTYC_KNXT6,
3001 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
3002 | |                 | 0x800000000000 as libc::c_ulonglong
3003 | |                 | 0x400000000000 as libc::c_ulonglong
3004 | |                 | 0x1000000000000 as libc::c_ulonglong,
3005 | |         };
     | |__________- unnecessary `let` binding
3006 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
2999 ~         
3000 ~         tty_default_key_code {
3001 +             code: TTYC_KNXT6,
3002 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
3003 +                 | 0x800000000000 as libc::c_ulonglong
3004 +                 | 0x400000000000 as libc::c_ulonglong
3005 +                 | 0x1000000000000 as libc::c_ulonglong,
3006 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3016:9
     |
3009 | /         let mut init = tty_default_key_code {
3010 | |             code: TTYC_KNXT7,
3011 | |             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
3012 | |                 | 0x200000000000 as libc::c_ulonglong
3013 | |                 | 0x400000000000 as libc::c_ulonglong
3014 | |                 | 0x1000000000000 as libc::c_ulonglong,
3015 | |         };
     | |__________- unnecessary `let` binding
3016 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3009 ~         
3010 ~         tty_default_key_code {
3011 +             code: TTYC_KNXT7,
3012 +             key: KEYC_NPAGE as libc::c_int as libc::c_ulonglong
3013 +                 | 0x200000000000 as libc::c_ulonglong
3014 +                 | 0x400000000000 as libc::c_ulonglong
3015 +                 | 0x1000000000000 as libc::c_ulonglong,
3016 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3025:9
     |
3019 | /         let mut init = tty_default_key_code {
3020 | |             code: TTYC_KPRV2,
3021 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3022 | |                 | 0x800000000000 as libc::c_ulonglong
3023 | |                 | 0x1000000000000 as libc::c_ulonglong,
3024 | |         };
     | |__________- unnecessary `let` binding
3025 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3019 ~         
3020 ~         tty_default_key_code {
3021 +             code: TTYC_KPRV2,
3022 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3023 +                 | 0x800000000000 as libc::c_ulonglong
3024 +                 | 0x1000000000000 as libc::c_ulonglong,
3025 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3034:9
     |
3028 | /         let mut init = tty_default_key_code {
3029 | |             code: TTYC_KPRV3,
3030 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3031 | |                 | 0x200000000000 as libc::c_ulonglong
3032 | |                 | 0x1000000000000 as libc::c_ulonglong,
3033 | |         };
     | |__________- unnecessary `let` binding
3034 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3028 ~         
3029 ~         tty_default_key_code {
3030 +             code: TTYC_KPRV3,
3031 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3032 +                 | 0x200000000000 as libc::c_ulonglong
3033 +                 | 0x1000000000000 as libc::c_ulonglong,
3034 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3044:9
     |
3037 | /         let mut init = tty_default_key_code {
3038 | |             code: TTYC_KPRV4,
3039 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3040 | |                 | 0x800000000000 as libc::c_ulonglong
3041 | |                 | 0x200000000000 as libc::c_ulonglong
3042 | |                 | 0x1000000000000 as libc::c_ulonglong,
3043 | |         };
     | |__________- unnecessary `let` binding
3044 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3037 ~         
3038 ~         tty_default_key_code {
3039 +             code: TTYC_KPRV4,
3040 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3041 +                 | 0x800000000000 as libc::c_ulonglong
3042 +                 | 0x200000000000 as libc::c_ulonglong
3043 +                 | 0x1000000000000 as libc::c_ulonglong,
3044 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3053:9
     |
3047 | /         let mut init = tty_default_key_code {
3048 | |             code: TTYC_KPRV5,
3049 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3050 | |                 | 0x400000000000 as libc::c_ulonglong
3051 | |                 | 0x1000000000000 as libc::c_ulonglong,
3052 | |         };
     | |__________- unnecessary `let` binding
3053 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3047 ~         
3048 ~         tty_default_key_code {
3049 +             code: TTYC_KPRV5,
3050 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3051 +                 | 0x400000000000 as libc::c_ulonglong
3052 +                 | 0x1000000000000 as libc::c_ulonglong,
3053 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3063:9
     |
3056 | /         let mut init = tty_default_key_code {
3057 | |             code: TTYC_KPRV6,
3058 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3059 | |                 | 0x800000000000 as libc::c_ulonglong
3060 | |                 | 0x400000000000 as libc::c_ulonglong
3061 | |                 | 0x1000000000000 as libc::c_ulonglong,
3062 | |         };
     | |__________- unnecessary `let` binding
3063 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3056 ~         
3057 ~         tty_default_key_code {
3058 +             code: TTYC_KPRV6,
3059 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3060 +                 | 0x800000000000 as libc::c_ulonglong
3061 +                 | 0x400000000000 as libc::c_ulonglong
3062 +                 | 0x1000000000000 as libc::c_ulonglong,
3063 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3073:9
     |
3066 | /         let mut init = tty_default_key_code {
3067 | |             code: TTYC_KPRV7,
3068 | |             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3069 | |                 | 0x200000000000 as libc::c_ulonglong
3070 | |                 | 0x400000000000 as libc::c_ulonglong
3071 | |                 | 0x1000000000000 as libc::c_ulonglong,
3072 | |         };
     | |__________- unnecessary `let` binding
3073 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3066 ~         
3067 ~         tty_default_key_code {
3068 +             code: TTYC_KPRV7,
3069 +             key: KEYC_PPAGE as libc::c_int as libc::c_ulonglong
3070 +                 | 0x200000000000 as libc::c_ulonglong
3071 +                 | 0x400000000000 as libc::c_ulonglong
3072 +                 | 0x1000000000000 as libc::c_ulonglong,
3073 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3082:9
     |
3076 | /         let mut init = tty_default_key_code {
3077 | |             code: TTYC_KRIT2,
3078 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3079 | |                 | 0x800000000000 as libc::c_ulonglong
3080 | |                 | 0x1000000000000 as libc::c_ulonglong,
3081 | |         };
     | |__________- unnecessary `let` binding
3082 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3076 ~         
3077 ~         tty_default_key_code {
3078 +             code: TTYC_KRIT2,
3079 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3080 +                 | 0x800000000000 as libc::c_ulonglong
3081 +                 | 0x1000000000000 as libc::c_ulonglong,
3082 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3091:9
     |
3085 | /         let mut init = tty_default_key_code {
3086 | |             code: TTYC_KRIT3,
3087 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3088 | |                 | 0x200000000000 as libc::c_ulonglong
3089 | |                 | 0x1000000000000 as libc::c_ulonglong,
3090 | |         };
     | |__________- unnecessary `let` binding
3091 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3085 ~         
3086 ~         tty_default_key_code {
3087 +             code: TTYC_KRIT3,
3088 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3089 +                 | 0x200000000000 as libc::c_ulonglong
3090 +                 | 0x1000000000000 as libc::c_ulonglong,
3091 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3101:9
     |
3094 | /         let mut init = tty_default_key_code {
3095 | |             code: TTYC_KRIT4,
3096 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3097 | |                 | 0x800000000000 as libc::c_ulonglong
3098 | |                 | 0x200000000000 as libc::c_ulonglong
3099 | |                 | 0x1000000000000 as libc::c_ulonglong,
3100 | |         };
     | |__________- unnecessary `let` binding
3101 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3094 ~         
3095 ~         tty_default_key_code {
3096 +             code: TTYC_KRIT4,
3097 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3098 +                 | 0x800000000000 as libc::c_ulonglong
3099 +                 | 0x200000000000 as libc::c_ulonglong
3100 +                 | 0x1000000000000 as libc::c_ulonglong,
3101 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3110:9
     |
3104 | /         let mut init = tty_default_key_code {
3105 | |             code: TTYC_KRIT5,
3106 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3107 | |                 | 0x400000000000 as libc::c_ulonglong
3108 | |                 | 0x1000000000000 as libc::c_ulonglong,
3109 | |         };
     | |__________- unnecessary `let` binding
3110 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3104 ~         
3105 ~         tty_default_key_code {
3106 +             code: TTYC_KRIT5,
3107 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3108 +                 | 0x400000000000 as libc::c_ulonglong
3109 +                 | 0x1000000000000 as libc::c_ulonglong,
3110 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3120:9
     |
3113 | /         let mut init = tty_default_key_code {
3114 | |             code: TTYC_KRIT6,
3115 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3116 | |                 | 0x800000000000 as libc::c_ulonglong
3117 | |                 | 0x400000000000 as libc::c_ulonglong
3118 | |                 | 0x1000000000000 as libc::c_ulonglong,
3119 | |         };
     | |__________- unnecessary `let` binding
3120 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3113 ~         
3114 ~         tty_default_key_code {
3115 +             code: TTYC_KRIT6,
3116 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3117 +                 | 0x800000000000 as libc::c_ulonglong
3118 +                 | 0x400000000000 as libc::c_ulonglong
3119 +                 | 0x1000000000000 as libc::c_ulonglong,
3120 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3130:9
     |
3123 | /         let mut init = tty_default_key_code {
3124 | |             code: TTYC_KRIT7,
3125 | |             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3126 | |                 | 0x200000000000 as libc::c_ulonglong
3127 | |                 | 0x400000000000 as libc::c_ulonglong
3128 | |                 | 0x1000000000000 as libc::c_ulonglong,
3129 | |         };
     | |__________- unnecessary `let` binding
3130 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3123 ~         
3124 ~         tty_default_key_code {
3125 +             code: TTYC_KRIT7,
3126 +             key: KEYC_RIGHT as libc::c_int as libc::c_ulonglong
3127 +                 | 0x200000000000 as libc::c_ulonglong
3128 +                 | 0x400000000000 as libc::c_ulonglong
3129 +                 | 0x1000000000000 as libc::c_ulonglong,
3130 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3139:9
     |
3133 | /         let mut init = tty_default_key_code {
3134 | |             code: TTYC_KRI,
3135 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3136 | |                 | 0x800000000000 as libc::c_ulonglong
3137 | |                 | 0x1000000000000 as libc::c_ulonglong,
3138 | |         };
     | |__________- unnecessary `let` binding
3139 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3133 ~         
3134 ~         tty_default_key_code {
3135 +             code: TTYC_KRI,
3136 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3137 +                 | 0x800000000000 as libc::c_ulonglong
3138 +                 | 0x1000000000000 as libc::c_ulonglong,
3139 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3148:9
     |
3142 | /         let mut init = tty_default_key_code {
3143 | |             code: TTYC_KUP2,
3144 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3145 | |                 | 0x800000000000 as libc::c_ulonglong
3146 | |                 | 0x1000000000000 as libc::c_ulonglong,
3147 | |         };
     | |__________- unnecessary `let` binding
3148 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3142 ~         
3143 ~         tty_default_key_code {
3144 +             code: TTYC_KUP2,
3145 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3146 +                 | 0x800000000000 as libc::c_ulonglong
3147 +                 | 0x1000000000000 as libc::c_ulonglong,
3148 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3157:9
     |
3151 | /         let mut init = tty_default_key_code {
3152 | |             code: TTYC_KUP3,
3153 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3154 | |                 | 0x200000000000 as libc::c_ulonglong
3155 | |                 | 0x1000000000000 as libc::c_ulonglong,
3156 | |         };
     | |__________- unnecessary `let` binding
3157 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3151 ~         
3152 ~         tty_default_key_code {
3153 +             code: TTYC_KUP3,
3154 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3155 +                 | 0x200000000000 as libc::c_ulonglong
3156 +                 | 0x1000000000000 as libc::c_ulonglong,
3157 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3167:9
     |
3160 | /         let mut init = tty_default_key_code {
3161 | |             code: TTYC_KUP4,
3162 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3163 | |                 | 0x800000000000 as libc::c_ulonglong
3164 | |                 | 0x200000000000 as libc::c_ulonglong
3165 | |                 | 0x1000000000000 as libc::c_ulonglong,
3166 | |         };
     | |__________- unnecessary `let` binding
3167 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3160 ~         
3161 ~         tty_default_key_code {
3162 +             code: TTYC_KUP4,
3163 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3164 +                 | 0x800000000000 as libc::c_ulonglong
3165 +                 | 0x200000000000 as libc::c_ulonglong
3166 +                 | 0x1000000000000 as libc::c_ulonglong,
3167 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3176:9
     |
3170 | /         let mut init = tty_default_key_code {
3171 | |             code: TTYC_KUP5,
3172 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3173 | |                 | 0x400000000000 as libc::c_ulonglong
3174 | |                 | 0x1000000000000 as libc::c_ulonglong,
3175 | |         };
     | |__________- unnecessary `let` binding
3176 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3170 ~         
3171 ~         tty_default_key_code {
3172 +             code: TTYC_KUP5,
3173 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3174 +                 | 0x400000000000 as libc::c_ulonglong
3175 +                 | 0x1000000000000 as libc::c_ulonglong,
3176 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3186:9
     |
3179 | /         let mut init = tty_default_key_code {
3180 | |             code: TTYC_KUP6,
3181 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3182 | |                 | 0x800000000000 as libc::c_ulonglong
3183 | |                 | 0x400000000000 as libc::c_ulonglong
3184 | |                 | 0x1000000000000 as libc::c_ulonglong,
3185 | |         };
     | |__________- unnecessary `let` binding
3186 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3179 ~         
3180 ~         tty_default_key_code {
3181 +             code: TTYC_KUP6,
3182 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3183 +                 | 0x800000000000 as libc::c_ulonglong
3184 +                 | 0x400000000000 as libc::c_ulonglong
3185 +                 | 0x1000000000000 as libc::c_ulonglong,
3186 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_keys.rs:3196:9
     |
3189 | /         let mut init = tty_default_key_code {
3190 | |             code: TTYC_KUP7,
3191 | |             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3192 | |                 | 0x200000000000 as libc::c_ulonglong
3193 | |                 | 0x400000000000 as libc::c_ulonglong
3194 | |                 | 0x1000000000000 as libc::c_ulonglong,
3195 | |         };
     | |__________- unnecessary `let` binding
3196 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
3189 ~         
3190 ~         tty_default_key_code {
3191 +             code: TTYC_KUP7,
3192 +             key: KEYC_UP as libc::c_int as libc::c_ulonglong
3193 +                 | 0x200000000000 as libc::c_ulonglong
3194 +                 | 0x400000000000 as libc::c_ulonglong
3195 +                 | 0x1000000000000 as libc::c_ulonglong,
3196 +         }
     |

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3204:32
     |
3204 |     let mut tk: *mut tty_key = 0 as *mut tty_key;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3206:43
     |
3206 |     let mut keystr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3232:32
     |
3232 |     let mut tk: *mut tty_key = 0 as *mut tty_key;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/tty_keys.rs:3243:5
     |
3243 | /     if *s as libc::c_int == (*tk).ch as libc::c_int {
3244 | |         s = s.offset(1);
3245 | |         s;
3246 | |         if *s as libc::c_int == '\0' as i32 {
...    |
3254 | |         tkp = &mut (*tk).right;
3255 | |     }
     | |_____^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: statement with no effect
    --> src/tty_keys.rs:3245:9
     |
3245 |         s;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_keys.rs:3259:1
     |
3259 | / pub unsafe extern "C" fn tty_keys_build(mut tty: *mut tty) {
3260 | |     let mut tdkr: *const tty_default_key_raw = 0 as *const tty_default_key_raw;
3261 | |     let mut tdkc: *const tty_default_key_code = 0 as *const tty_default_key_code;
3262 | |     let mut i: u_int = 0;
...    |
3317 | |     }
3318 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3260:48
     |
3260 |     let mut tdkr: *const tty_default_key_raw = 0 as *const tty_default_key_raw;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<tty_default_key_raw>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3261:49
     |
3261 |     let mut tdkc: *const tty_default_key_code = 0 as *const tty_default_key_code;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<tty_default_key_code>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3264:38
     |
3264 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3265:42
     |
3265 |     let mut value: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3266:37
     |
3266 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3270:23
     |
3270 |     (*tty).key_tree = 0 as *mut tty_key;
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty_keys.rs:3283:9
     |
3283 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3299:9
     |
3299 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3315:13
     |
3315 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_keys.rs:3320:1
     |
3320 | / pub unsafe extern "C" fn tty_keys_free(mut tty: *mut tty) {
3321 | |     tty_keys_free1((*tty).key_tree);
3322 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_keys.rs:3342:5
     |
3342 |     return tty_keys_find1((*tty).key_tree, buf, len, size);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `tty_keys_find1((*tty).key_tree, buf, len, size)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/tty_keys.rs:3371:5
     |
3371 |     return tty_keys_find1(tk, buf, len, size);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `tty_keys_find1(tk, buf, len, size)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3351:16
     |
3351 |         return 0 as *mut tty_key;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/tty_keys.rs:3353:5
     |
3353 | /     if (*tk).ch as libc::c_int == *buf as libc::c_int {
3354 | |         buf = buf.offset(1);
3355 | |         buf;
3356 | |         len = len.wrapping_sub(1);
...    |
3369 | |         tk = (*tk).right;
3370 | |     }
     | |_____^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: statement with no effect
    --> src/tty_keys.rs:3355:9
     |
3355 |         buf;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3357:9
     |
3357 |         len;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3359:9
     |
3359 |         *size;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/tty_keys.rs:3462:5
     |
3462 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3382:32
     |
3382 |     let mut tk: *mut tty_key = 0 as *mut tty_key;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3383:33
     |
3383 |     let mut tk1: *mut tty_key = 0 as *mut tty_key;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_key>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty_keys.rs:3442:13
     |
3442 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `utf8_combine` doesn't need a mutable reference
    --> src/tty_keys.rs:3447:25
     |
3447 |         if utf8_combine(&mut ud, &mut wc) as libc::c_uint
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_keys.rs:3465:1
     |
3465 | / pub unsafe extern "C" fn tty_keys_next(mut tty: *mut tty) -> key_code {
3466 | |     let mut current_block: u64;
3467 | |     let mut c: *mut client = (*tty).client;
3468 | |     let mut tv: timeval = timeval { tv_sec: 0, tv_usec: 0 };
...    |
3734 | |     };
3735 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/tty_keys.rs:3469:40
     |
3469 |     let mut buf: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/tty_keys.rs:3505:5
     |
3505 | /     match current_block {
3506 | |         13183875560443969876 => {
3507 | |             match tty_keys_mouse(tty, buf, len, &mut size) {
3508 | |                 0 => {
...    |
3588 | |         _ => {}
3589 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
3505 ~     if current_block == 13183875560443969876 {
3506 +         match tty_keys_mouse(tty, buf, len, &mut size) {
3507 +             0 => {
3508 +                 current_block = 17183070534439490203;
3509 +                 match current_block {
3510 +                     12770421059189612756 => {
3511 +                         current_block = 15364893815785058502;
3512 +                     }
3513 +                     17183070534439490203 => {
3514 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3515 +                         current_block = 10452571879034897134;
3516 +                     }
3517 +                     _ => {
3518 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3519 +                         log_debug(
3520 +                             b"%s: discard key %.*s %#llx\0" as *const u8
3521 +                                 as *const libc::c_char,
3522 +                             (*c).name,
3523 +                             size as libc::c_int,
3524 +                             buf,
3525 +                             key,
3526 +                         );
3527 +                         evbuffer_drain((*tty).in_0, size);
3528 +                         return 1 as libc::c_int as key_code;
3529 +                     }
3530 +                 }
3531 +             }
3532 +             -2 => {
3533 +                 current_block = 5224479313017524111;
3534 +                 match current_block {
3535 +                     12770421059189612756 => {
3536 +                         current_block = 15364893815785058502;
3537 +                     }
3538 +                     17183070534439490203 => {
3539 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3540 +                         current_block = 10452571879034897134;
3541 +                     }
3542 +                     _ => {
3543 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3544 +                         log_debug(
3545 +                             b"%s: discard key %.*s %#llx\0" as *const u8
3546 +                                 as *const libc::c_char,
3547 +                             (*c).name,
3548 +                             size as libc::c_int,
3549 +                             buf,
3550 +                             key,
3551 +                         );
3552 +                         evbuffer_drain((*tty).in_0, size);
3553 +                         return 1 as libc::c_int as key_code;
3554 +                     }
3555 +                 }
3556 +             }
3557 +             1 => {
3558 +                 current_block = 12770421059189612756;
3559 +                 match current_block {
3560 +                     12770421059189612756 => {
3561 +                         current_block = 15364893815785058502;
3562 +                     }
3563 +                     17183070534439490203 => {
3564 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3565 +                         current_block = 10452571879034897134;
3566 +                     }
3567 +                     _ => {
3568 +                         key = KEYC_MOUSE as libc::c_int as key_code;
3569 +                         log_debug(
3570 +                             b"%s: discard key %.*s %#llx\0" as *const u8
3571 +                                 as *const libc::c_char,
3572 +                             (*c).name,
3573 +                             size as libc::c_int,
3574 +                             buf,
3575 +                             key,
3576 +                         );
3577 +                         evbuffer_drain((*tty).in_0, size);
3578 +                         return 1 as libc::c_int as key_code;
3579 +                     }
3580 +                 }
3581 +             }
3582 +             -1 | _ => {
3583 +                 current_block = 13163678995505928440;
3584 +             }
3585 +         }
3586 +     }
     |

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/tty_keys.rs:3583:17
     |
3583 |                 -1 | _ => {
     |                 ^^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/tty_keys.rs:3620:29
     |
3620 | ...                   size;
     |                       ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/tty_keys.rs:3666:38
     |
3666 |                 if event_initialized(&mut (*tty).key_timer) != 0 {
     |                                      ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/tty_keys.rs:3690:42
     |
3690 |                     if event_initialized(&mut (*tty).key_timer) != 0
     |                                          ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_pending` doesn't need a mutable reference
    --> src/tty_keys.rs:3692:29
     |
3692 | ...                   &mut (*tty).key_timer,
     |                       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3694:29
     |
3694 | ...                   0 as *mut timeval,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<timeval>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/tty_keys.rs:3711:42
     |
3711 |                     if event_initialized(&mut (*tty).key_timer) != 0 {
     |                                          ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_add` doesn't need a mutable reference
    --> src/tty_keys.rs:3728:54
     |
3728 |                     event_add(&mut (*tty).key_timer, &mut tv);
     |                                                      ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/tty_keys.rs:3903:5
     |
3903 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/tty_keys.rs:3797:13
     |
3797 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3879:9
     |
3879 |         x;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_keys.rs:3881:9
     |
3881 |         y;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/tty_keys.rs:4016:5
     |
4016 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/tty_keys.rs:3916:41
     |
3916 |     let mut endptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty_keys.rs:3960:9
     |
3960 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:356:5
    |
353 | /     let mut init = tty_terms {
354 | |         lh_first: 0 as *const tty_term as *mut tty_term,
355 | |     };
    | |______- unnecessary `let` binding
356 |       init
    |       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
353 ~     
354 ~     tty_terms {
355 +         lh_first: 0 as *const tty_term as *mut tty_term,
356 +     }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:364:9
    |
360 | /         let mut init = tty_term_code_entry {
361 | |             type_0: TTYCODE_FLAG,
362 | |             name: b"AX\0" as *const u8 as *const libc::c_char,
363 | |         };
    | |__________- unnecessary `let` binding
364 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
360 ~         
361 ~         tty_term_code_entry {
362 +             type_0: TTYCODE_FLAG,
363 +             name: b"AX\0" as *const u8 as *const libc::c_char,
364 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:371:9
    |
367 | /         let mut init = tty_term_code_entry {
368 | |             type_0: TTYCODE_STRING,
369 | |             name: b"acsc\0" as *const u8 as *const libc::c_char,
370 | |         };
    | |__________- unnecessary `let` binding
371 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
367 ~         
368 ~         tty_term_code_entry {
369 +             type_0: TTYCODE_STRING,
370 +             name: b"acsc\0" as *const u8 as *const libc::c_char,
371 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:378:9
    |
374 | /         let mut init = tty_term_code_entry {
375 | |             type_0: TTYCODE_FLAG,
376 | |             name: b"bce\0" as *const u8 as *const libc::c_char,
377 | |         };
    | |__________- unnecessary `let` binding
378 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
374 ~         
375 ~         tty_term_code_entry {
376 +             type_0: TTYCODE_FLAG,
377 +             name: b"bce\0" as *const u8 as *const libc::c_char,
378 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:385:9
    |
381 | /         let mut init = tty_term_code_entry {
382 | |             type_0: TTYCODE_STRING,
383 | |             name: b"bel\0" as *const u8 as *const libc::c_char,
384 | |         };
    | |__________- unnecessary `let` binding
385 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
381 ~         
382 ~         tty_term_code_entry {
383 +             type_0: TTYCODE_STRING,
384 +             name: b"bel\0" as *const u8 as *const libc::c_char,
385 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:392:9
    |
388 | /         let mut init = tty_term_code_entry {
389 | |             type_0: TTYCODE_STRING,
390 | |             name: b"blink\0" as *const u8 as *const libc::c_char,
391 | |         };
    | |__________- unnecessary `let` binding
392 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
388 ~         
389 ~         tty_term_code_entry {
390 +             type_0: TTYCODE_STRING,
391 +             name: b"blink\0" as *const u8 as *const libc::c_char,
392 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:399:9
    |
395 | /         let mut init = tty_term_code_entry {
396 | |             type_0: TTYCODE_STRING,
397 | |             name: b"bold\0" as *const u8 as *const libc::c_char,
398 | |         };
    | |__________- unnecessary `let` binding
399 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
395 ~         
396 ~         tty_term_code_entry {
397 +             type_0: TTYCODE_STRING,
398 +             name: b"bold\0" as *const u8 as *const libc::c_char,
399 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:406:9
    |
402 | /         let mut init = tty_term_code_entry {
403 | |             type_0: TTYCODE_STRING,
404 | |             name: b"civis\0" as *const u8 as *const libc::c_char,
405 | |         };
    | |__________- unnecessary `let` binding
406 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
402 ~         
403 ~         tty_term_code_entry {
404 +             type_0: TTYCODE_STRING,
405 +             name: b"civis\0" as *const u8 as *const libc::c_char,
406 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:413:9
    |
409 | /         let mut init = tty_term_code_entry {
410 | |             type_0: TTYCODE_STRING,
411 | |             name: b"clear\0" as *const u8 as *const libc::c_char,
412 | |         };
    | |__________- unnecessary `let` binding
413 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
409 ~         
410 ~         tty_term_code_entry {
411 +             type_0: TTYCODE_STRING,
412 +             name: b"clear\0" as *const u8 as *const libc::c_char,
413 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:420:9
    |
416 | /         let mut init = tty_term_code_entry {
417 | |             type_0: TTYCODE_STRING,
418 | |             name: b"cnorm\0" as *const u8 as *const libc::c_char,
419 | |         };
    | |__________- unnecessary `let` binding
420 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
416 ~         
417 ~         tty_term_code_entry {
418 +             type_0: TTYCODE_STRING,
419 +             name: b"cnorm\0" as *const u8 as *const libc::c_char,
420 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:427:9
    |
423 | /         let mut init = tty_term_code_entry {
424 | |             type_0: TTYCODE_NUMBER,
425 | |             name: b"colors\0" as *const u8 as *const libc::c_char,
426 | |         };
    | |__________- unnecessary `let` binding
427 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
423 ~         
424 ~         tty_term_code_entry {
425 +             type_0: TTYCODE_NUMBER,
426 +             name: b"colors\0" as *const u8 as *const libc::c_char,
427 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:434:9
    |
430 | /         let mut init = tty_term_code_entry {
431 | |             type_0: TTYCODE_STRING,
432 | |             name: b"Cr\0" as *const u8 as *const libc::c_char,
433 | |         };
    | |__________- unnecessary `let` binding
434 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
430 ~         
431 ~         tty_term_code_entry {
432 +             type_0: TTYCODE_STRING,
433 +             name: b"Cr\0" as *const u8 as *const libc::c_char,
434 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:441:9
    |
437 | /         let mut init = tty_term_code_entry {
438 | |             type_0: TTYCODE_STRING,
439 | |             name: b"Cs\0" as *const u8 as *const libc::c_char,
440 | |         };
    | |__________- unnecessary `let` binding
441 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
437 ~         
438 ~         tty_term_code_entry {
439 +             type_0: TTYCODE_STRING,
440 +             name: b"Cs\0" as *const u8 as *const libc::c_char,
441 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:448:9
    |
444 | /         let mut init = tty_term_code_entry {
445 | |             type_0: TTYCODE_STRING,
446 | |             name: b"csr\0" as *const u8 as *const libc::c_char,
447 | |         };
    | |__________- unnecessary `let` binding
448 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
444 ~         
445 ~         tty_term_code_entry {
446 +             type_0: TTYCODE_STRING,
447 +             name: b"csr\0" as *const u8 as *const libc::c_char,
448 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:455:9
    |
451 | /         let mut init = tty_term_code_entry {
452 | |             type_0: TTYCODE_STRING,
453 | |             name: b"cub\0" as *const u8 as *const libc::c_char,
454 | |         };
    | |__________- unnecessary `let` binding
455 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
451 ~         
452 ~         tty_term_code_entry {
453 +             type_0: TTYCODE_STRING,
454 +             name: b"cub\0" as *const u8 as *const libc::c_char,
455 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:462:9
    |
458 | /         let mut init = tty_term_code_entry {
459 | |             type_0: TTYCODE_STRING,
460 | |             name: b"cub1\0" as *const u8 as *const libc::c_char,
461 | |         };
    | |__________- unnecessary `let` binding
462 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
458 ~         
459 ~         tty_term_code_entry {
460 +             type_0: TTYCODE_STRING,
461 +             name: b"cub1\0" as *const u8 as *const libc::c_char,
462 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:469:9
    |
465 | /         let mut init = tty_term_code_entry {
466 | |             type_0: TTYCODE_STRING,
467 | |             name: b"cud\0" as *const u8 as *const libc::c_char,
468 | |         };
    | |__________- unnecessary `let` binding
469 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
465 ~         
466 ~         tty_term_code_entry {
467 +             type_0: TTYCODE_STRING,
468 +             name: b"cud\0" as *const u8 as *const libc::c_char,
469 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:476:9
    |
472 | /         let mut init = tty_term_code_entry {
473 | |             type_0: TTYCODE_STRING,
474 | |             name: b"cud1\0" as *const u8 as *const libc::c_char,
475 | |         };
    | |__________- unnecessary `let` binding
476 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
472 ~         
473 ~         tty_term_code_entry {
474 +             type_0: TTYCODE_STRING,
475 +             name: b"cud1\0" as *const u8 as *const libc::c_char,
476 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:483:9
    |
479 | /         let mut init = tty_term_code_entry {
480 | |             type_0: TTYCODE_STRING,
481 | |             name: b"cuf\0" as *const u8 as *const libc::c_char,
482 | |         };
    | |__________- unnecessary `let` binding
483 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
479 ~         
480 ~         tty_term_code_entry {
481 +             type_0: TTYCODE_STRING,
482 +             name: b"cuf\0" as *const u8 as *const libc::c_char,
483 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:490:9
    |
486 | /         let mut init = tty_term_code_entry {
487 | |             type_0: TTYCODE_STRING,
488 | |             name: b"cuf1\0" as *const u8 as *const libc::c_char,
489 | |         };
    | |__________- unnecessary `let` binding
490 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
486 ~         
487 ~         tty_term_code_entry {
488 +             type_0: TTYCODE_STRING,
489 +             name: b"cuf1\0" as *const u8 as *const libc::c_char,
490 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:497:9
    |
493 | /         let mut init = tty_term_code_entry {
494 | |             type_0: TTYCODE_STRING,
495 | |             name: b"cup\0" as *const u8 as *const libc::c_char,
496 | |         };
    | |__________- unnecessary `let` binding
497 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
493 ~         
494 ~         tty_term_code_entry {
495 +             type_0: TTYCODE_STRING,
496 +             name: b"cup\0" as *const u8 as *const libc::c_char,
497 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:504:9
    |
500 | /         let mut init = tty_term_code_entry {
501 | |             type_0: TTYCODE_STRING,
502 | |             name: b"cuu\0" as *const u8 as *const libc::c_char,
503 | |         };
    | |__________- unnecessary `let` binding
504 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
500 ~         
501 ~         tty_term_code_entry {
502 +             type_0: TTYCODE_STRING,
503 +             name: b"cuu\0" as *const u8 as *const libc::c_char,
504 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:511:9
    |
507 | /         let mut init = tty_term_code_entry {
508 | |             type_0: TTYCODE_STRING,
509 | |             name: b"cuu1\0" as *const u8 as *const libc::c_char,
510 | |         };
    | |__________- unnecessary `let` binding
511 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
507 ~         
508 ~         tty_term_code_entry {
509 +             type_0: TTYCODE_STRING,
510 +             name: b"cuu1\0" as *const u8 as *const libc::c_char,
511 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:518:9
    |
514 | /         let mut init = tty_term_code_entry {
515 | |             type_0: TTYCODE_STRING,
516 | |             name: b"cvvis\0" as *const u8 as *const libc::c_char,
517 | |         };
    | |__________- unnecessary `let` binding
518 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
514 ~         
515 ~         tty_term_code_entry {
516 +             type_0: TTYCODE_STRING,
517 +             name: b"cvvis\0" as *const u8 as *const libc::c_char,
518 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:525:9
    |
521 | /         let mut init = tty_term_code_entry {
522 | |             type_0: TTYCODE_STRING,
523 | |             name: b"dch\0" as *const u8 as *const libc::c_char,
524 | |         };
    | |__________- unnecessary `let` binding
525 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
521 ~         
522 ~         tty_term_code_entry {
523 +             type_0: TTYCODE_STRING,
524 +             name: b"dch\0" as *const u8 as *const libc::c_char,
525 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:532:9
    |
528 | /         let mut init = tty_term_code_entry {
529 | |             type_0: TTYCODE_STRING,
530 | |             name: b"dch1\0" as *const u8 as *const libc::c_char,
531 | |         };
    | |__________- unnecessary `let` binding
532 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
528 ~         
529 ~         tty_term_code_entry {
530 +             type_0: TTYCODE_STRING,
531 +             name: b"dch1\0" as *const u8 as *const libc::c_char,
532 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:539:9
    |
535 | /         let mut init = tty_term_code_entry {
536 | |             type_0: TTYCODE_STRING,
537 | |             name: b"dim\0" as *const u8 as *const libc::c_char,
538 | |         };
    | |__________- unnecessary `let` binding
539 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
535 ~         
536 ~         tty_term_code_entry {
537 +             type_0: TTYCODE_STRING,
538 +             name: b"dim\0" as *const u8 as *const libc::c_char,
539 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:546:9
    |
542 | /         let mut init = tty_term_code_entry {
543 | |             type_0: TTYCODE_STRING,
544 | |             name: b"dl\0" as *const u8 as *const libc::c_char,
545 | |         };
    | |__________- unnecessary `let` binding
546 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
542 ~         
543 ~         tty_term_code_entry {
544 +             type_0: TTYCODE_STRING,
545 +             name: b"dl\0" as *const u8 as *const libc::c_char,
546 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:553:9
    |
549 | /         let mut init = tty_term_code_entry {
550 | |             type_0: TTYCODE_STRING,
551 | |             name: b"dl1\0" as *const u8 as *const libc::c_char,
552 | |         };
    | |__________- unnecessary `let` binding
553 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
549 ~         
550 ~         tty_term_code_entry {
551 +             type_0: TTYCODE_STRING,
552 +             name: b"dl1\0" as *const u8 as *const libc::c_char,
553 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:560:9
    |
556 | /         let mut init = tty_term_code_entry {
557 | |             type_0: TTYCODE_STRING,
558 | |             name: b"E3\0" as *const u8 as *const libc::c_char,
559 | |         };
    | |__________- unnecessary `let` binding
560 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
556 ~         
557 ~         tty_term_code_entry {
558 +             type_0: TTYCODE_STRING,
559 +             name: b"E3\0" as *const u8 as *const libc::c_char,
560 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:567:9
    |
563 | /         let mut init = tty_term_code_entry {
564 | |             type_0: TTYCODE_STRING,
565 | |             name: b"ech\0" as *const u8 as *const libc::c_char,
566 | |         };
    | |__________- unnecessary `let` binding
567 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
563 ~         
564 ~         tty_term_code_entry {
565 +             type_0: TTYCODE_STRING,
566 +             name: b"ech\0" as *const u8 as *const libc::c_char,
567 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:574:9
    |
570 | /         let mut init = tty_term_code_entry {
571 | |             type_0: TTYCODE_STRING,
572 | |             name: b"ed\0" as *const u8 as *const libc::c_char,
573 | |         };
    | |__________- unnecessary `let` binding
574 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
570 ~         
571 ~         tty_term_code_entry {
572 +             type_0: TTYCODE_STRING,
573 +             name: b"ed\0" as *const u8 as *const libc::c_char,
574 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:581:9
    |
577 | /         let mut init = tty_term_code_entry {
578 | |             type_0: TTYCODE_STRING,
579 | |             name: b"el\0" as *const u8 as *const libc::c_char,
580 | |         };
    | |__________- unnecessary `let` binding
581 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
577 ~         
578 ~         tty_term_code_entry {
579 +             type_0: TTYCODE_STRING,
580 +             name: b"el\0" as *const u8 as *const libc::c_char,
581 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:588:9
    |
584 | /         let mut init = tty_term_code_entry {
585 | |             type_0: TTYCODE_STRING,
586 | |             name: b"el1\0" as *const u8 as *const libc::c_char,
587 | |         };
    | |__________- unnecessary `let` binding
588 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
584 ~         
585 ~         tty_term_code_entry {
586 +             type_0: TTYCODE_STRING,
587 +             name: b"el1\0" as *const u8 as *const libc::c_char,
588 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:595:9
    |
591 | /         let mut init = tty_term_code_entry {
592 | |             type_0: TTYCODE_STRING,
593 | |             name: b"enacs\0" as *const u8 as *const libc::c_char,
594 | |         };
    | |__________- unnecessary `let` binding
595 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
591 ~         
592 ~         tty_term_code_entry {
593 +             type_0: TTYCODE_STRING,
594 +             name: b"enacs\0" as *const u8 as *const libc::c_char,
595 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:602:9
    |
598 | /         let mut init = tty_term_code_entry {
599 | |             type_0: TTYCODE_STRING,
600 | |             name: b"fsl\0" as *const u8 as *const libc::c_char,
601 | |         };
    | |__________- unnecessary `let` binding
602 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
598 ~         
599 ~         tty_term_code_entry {
600 +             type_0: TTYCODE_STRING,
601 +             name: b"fsl\0" as *const u8 as *const libc::c_char,
602 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:609:9
    |
605 | /         let mut init = tty_term_code_entry {
606 | |             type_0: TTYCODE_STRING,
607 | |             name: b"home\0" as *const u8 as *const libc::c_char,
608 | |         };
    | |__________- unnecessary `let` binding
609 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
605 ~         
606 ~         tty_term_code_entry {
607 +             type_0: TTYCODE_STRING,
608 +             name: b"home\0" as *const u8 as *const libc::c_char,
609 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:616:9
    |
612 | /         let mut init = tty_term_code_entry {
613 | |             type_0: TTYCODE_STRING,
614 | |             name: b"hpa\0" as *const u8 as *const libc::c_char,
615 | |         };
    | |__________- unnecessary `let` binding
616 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
612 ~         
613 ~         tty_term_code_entry {
614 +             type_0: TTYCODE_STRING,
615 +             name: b"hpa\0" as *const u8 as *const libc::c_char,
616 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:623:9
    |
619 | /         let mut init = tty_term_code_entry {
620 | |             type_0: TTYCODE_STRING,
621 | |             name: b"ich\0" as *const u8 as *const libc::c_char,
622 | |         };
    | |__________- unnecessary `let` binding
623 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
619 ~         
620 ~         tty_term_code_entry {
621 +             type_0: TTYCODE_STRING,
622 +             name: b"ich\0" as *const u8 as *const libc::c_char,
623 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:630:9
    |
626 | /         let mut init = tty_term_code_entry {
627 | |             type_0: TTYCODE_STRING,
628 | |             name: b"ich1\0" as *const u8 as *const libc::c_char,
629 | |         };
    | |__________- unnecessary `let` binding
630 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
626 ~         
627 ~         tty_term_code_entry {
628 +             type_0: TTYCODE_STRING,
629 +             name: b"ich1\0" as *const u8 as *const libc::c_char,
630 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:637:9
    |
633 | /         let mut init = tty_term_code_entry {
634 | |             type_0: TTYCODE_STRING,
635 | |             name: b"il\0" as *const u8 as *const libc::c_char,
636 | |         };
    | |__________- unnecessary `let` binding
637 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
633 ~         
634 ~         tty_term_code_entry {
635 +             type_0: TTYCODE_STRING,
636 +             name: b"il\0" as *const u8 as *const libc::c_char,
637 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:644:9
    |
640 | /         let mut init = tty_term_code_entry {
641 | |             type_0: TTYCODE_STRING,
642 | |             name: b"il1\0" as *const u8 as *const libc::c_char,
643 | |         };
    | |__________- unnecessary `let` binding
644 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
640 ~         
641 ~         tty_term_code_entry {
642 +             type_0: TTYCODE_STRING,
643 +             name: b"il1\0" as *const u8 as *const libc::c_char,
644 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:651:9
    |
647 | /         let mut init = tty_term_code_entry {
648 | |             type_0: TTYCODE_STRING,
649 | |             name: b"indn\0" as *const u8 as *const libc::c_char,
650 | |         };
    | |__________- unnecessary `let` binding
651 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
647 ~         
648 ~         tty_term_code_entry {
649 +             type_0: TTYCODE_STRING,
650 +             name: b"indn\0" as *const u8 as *const libc::c_char,
651 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:658:9
    |
654 | /         let mut init = tty_term_code_entry {
655 | |             type_0: TTYCODE_STRING,
656 | |             name: b"invis\0" as *const u8 as *const libc::c_char,
657 | |         };
    | |__________- unnecessary `let` binding
658 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
654 ~         
655 ~         tty_term_code_entry {
656 +             type_0: TTYCODE_STRING,
657 +             name: b"invis\0" as *const u8 as *const libc::c_char,
658 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:665:9
    |
661 | /         let mut init = tty_term_code_entry {
662 | |             type_0: TTYCODE_STRING,
663 | |             name: b"kcbt\0" as *const u8 as *const libc::c_char,
664 | |         };
    | |__________- unnecessary `let` binding
665 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
661 ~         
662 ~         tty_term_code_entry {
663 +             type_0: TTYCODE_STRING,
664 +             name: b"kcbt\0" as *const u8 as *const libc::c_char,
665 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:672:9
    |
668 | /         let mut init = tty_term_code_entry {
669 | |             type_0: TTYCODE_STRING,
670 | |             name: b"kcub1\0" as *const u8 as *const libc::c_char,
671 | |         };
    | |__________- unnecessary `let` binding
672 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
668 ~         
669 ~         tty_term_code_entry {
670 +             type_0: TTYCODE_STRING,
671 +             name: b"kcub1\0" as *const u8 as *const libc::c_char,
672 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:679:9
    |
675 | /         let mut init = tty_term_code_entry {
676 | |             type_0: TTYCODE_STRING,
677 | |             name: b"kcud1\0" as *const u8 as *const libc::c_char,
678 | |         };
    | |__________- unnecessary `let` binding
679 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
675 ~         
676 ~         tty_term_code_entry {
677 +             type_0: TTYCODE_STRING,
678 +             name: b"kcud1\0" as *const u8 as *const libc::c_char,
679 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:686:9
    |
682 | /         let mut init = tty_term_code_entry {
683 | |             type_0: TTYCODE_STRING,
684 | |             name: b"kcuf1\0" as *const u8 as *const libc::c_char,
685 | |         };
    | |__________- unnecessary `let` binding
686 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
682 ~         
683 ~         tty_term_code_entry {
684 +             type_0: TTYCODE_STRING,
685 +             name: b"kcuf1\0" as *const u8 as *const libc::c_char,
686 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:693:9
    |
689 | /         let mut init = tty_term_code_entry {
690 | |             type_0: TTYCODE_STRING,
691 | |             name: b"kcuu1\0" as *const u8 as *const libc::c_char,
692 | |         };
    | |__________- unnecessary `let` binding
693 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
689 ~         
690 ~         tty_term_code_entry {
691 +             type_0: TTYCODE_STRING,
692 +             name: b"kcuu1\0" as *const u8 as *const libc::c_char,
693 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:700:9
    |
696 | /         let mut init = tty_term_code_entry {
697 | |             type_0: TTYCODE_STRING,
698 | |             name: b"kDC\0" as *const u8 as *const libc::c_char,
699 | |         };
    | |__________- unnecessary `let` binding
700 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
696 ~         
697 ~         tty_term_code_entry {
698 +             type_0: TTYCODE_STRING,
699 +             name: b"kDC\0" as *const u8 as *const libc::c_char,
700 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:707:9
    |
703 | /         let mut init = tty_term_code_entry {
704 | |             type_0: TTYCODE_STRING,
705 | |             name: b"kDC3\0" as *const u8 as *const libc::c_char,
706 | |         };
    | |__________- unnecessary `let` binding
707 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
703 ~         
704 ~         tty_term_code_entry {
705 +             type_0: TTYCODE_STRING,
706 +             name: b"kDC3\0" as *const u8 as *const libc::c_char,
707 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:714:9
    |
710 | /         let mut init = tty_term_code_entry {
711 | |             type_0: TTYCODE_STRING,
712 | |             name: b"kDC4\0" as *const u8 as *const libc::c_char,
713 | |         };
    | |__________- unnecessary `let` binding
714 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
710 ~         
711 ~         tty_term_code_entry {
712 +             type_0: TTYCODE_STRING,
713 +             name: b"kDC4\0" as *const u8 as *const libc::c_char,
714 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:721:9
    |
717 | /         let mut init = tty_term_code_entry {
718 | |             type_0: TTYCODE_STRING,
719 | |             name: b"kDC5\0" as *const u8 as *const libc::c_char,
720 | |         };
    | |__________- unnecessary `let` binding
721 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
717 ~         
718 ~         tty_term_code_entry {
719 +             type_0: TTYCODE_STRING,
720 +             name: b"kDC5\0" as *const u8 as *const libc::c_char,
721 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:728:9
    |
724 | /         let mut init = tty_term_code_entry {
725 | |             type_0: TTYCODE_STRING,
726 | |             name: b"kDC6\0" as *const u8 as *const libc::c_char,
727 | |         };
    | |__________- unnecessary `let` binding
728 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
724 ~         
725 ~         tty_term_code_entry {
726 +             type_0: TTYCODE_STRING,
727 +             name: b"kDC6\0" as *const u8 as *const libc::c_char,
728 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:735:9
    |
731 | /         let mut init = tty_term_code_entry {
732 | |             type_0: TTYCODE_STRING,
733 | |             name: b"kDC7\0" as *const u8 as *const libc::c_char,
734 | |         };
    | |__________- unnecessary `let` binding
735 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
731 ~         
732 ~         tty_term_code_entry {
733 +             type_0: TTYCODE_STRING,
734 +             name: b"kDC7\0" as *const u8 as *const libc::c_char,
735 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:742:9
    |
738 | /         let mut init = tty_term_code_entry {
739 | |             type_0: TTYCODE_STRING,
740 | |             name: b"kdch1\0" as *const u8 as *const libc::c_char,
741 | |         };
    | |__________- unnecessary `let` binding
742 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
738 ~         
739 ~         tty_term_code_entry {
740 +             type_0: TTYCODE_STRING,
741 +             name: b"kdch1\0" as *const u8 as *const libc::c_char,
742 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:749:9
    |
745 | /         let mut init = tty_term_code_entry {
746 | |             type_0: TTYCODE_STRING,
747 | |             name: b"kDN\0" as *const u8 as *const libc::c_char,
748 | |         };
    | |__________- unnecessary `let` binding
749 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
745 ~         
746 ~         tty_term_code_entry {
747 +             type_0: TTYCODE_STRING,
748 +             name: b"kDN\0" as *const u8 as *const libc::c_char,
749 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:756:9
    |
752 | /         let mut init = tty_term_code_entry {
753 | |             type_0: TTYCODE_STRING,
754 | |             name: b"kDN3\0" as *const u8 as *const libc::c_char,
755 | |         };
    | |__________- unnecessary `let` binding
756 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
752 ~         
753 ~         tty_term_code_entry {
754 +             type_0: TTYCODE_STRING,
755 +             name: b"kDN3\0" as *const u8 as *const libc::c_char,
756 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:763:9
    |
759 | /         let mut init = tty_term_code_entry {
760 | |             type_0: TTYCODE_STRING,
761 | |             name: b"kDN4\0" as *const u8 as *const libc::c_char,
762 | |         };
    | |__________- unnecessary `let` binding
763 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
759 ~         
760 ~         tty_term_code_entry {
761 +             type_0: TTYCODE_STRING,
762 +             name: b"kDN4\0" as *const u8 as *const libc::c_char,
763 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:770:9
    |
766 | /         let mut init = tty_term_code_entry {
767 | |             type_0: TTYCODE_STRING,
768 | |             name: b"kDN5\0" as *const u8 as *const libc::c_char,
769 | |         };
    | |__________- unnecessary `let` binding
770 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
766 ~         
767 ~         tty_term_code_entry {
768 +             type_0: TTYCODE_STRING,
769 +             name: b"kDN5\0" as *const u8 as *const libc::c_char,
770 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:777:9
    |
773 | /         let mut init = tty_term_code_entry {
774 | |             type_0: TTYCODE_STRING,
775 | |             name: b"kDN6\0" as *const u8 as *const libc::c_char,
776 | |         };
    | |__________- unnecessary `let` binding
777 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
773 ~         
774 ~         tty_term_code_entry {
775 +             type_0: TTYCODE_STRING,
776 +             name: b"kDN6\0" as *const u8 as *const libc::c_char,
777 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:784:9
    |
780 | /         let mut init = tty_term_code_entry {
781 | |             type_0: TTYCODE_STRING,
782 | |             name: b"kDN7\0" as *const u8 as *const libc::c_char,
783 | |         };
    | |__________- unnecessary `let` binding
784 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
780 ~         
781 ~         tty_term_code_entry {
782 +             type_0: TTYCODE_STRING,
783 +             name: b"kDN7\0" as *const u8 as *const libc::c_char,
784 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:791:9
    |
787 | /         let mut init = tty_term_code_entry {
788 | |             type_0: TTYCODE_STRING,
789 | |             name: b"kend\0" as *const u8 as *const libc::c_char,
790 | |         };
    | |__________- unnecessary `let` binding
791 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
787 ~         
788 ~         tty_term_code_entry {
789 +             type_0: TTYCODE_STRING,
790 +             name: b"kend\0" as *const u8 as *const libc::c_char,
791 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:798:9
    |
794 | /         let mut init = tty_term_code_entry {
795 | |             type_0: TTYCODE_STRING,
796 | |             name: b"kEND\0" as *const u8 as *const libc::c_char,
797 | |         };
    | |__________- unnecessary `let` binding
798 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
794 ~         
795 ~         tty_term_code_entry {
796 +             type_0: TTYCODE_STRING,
797 +             name: b"kEND\0" as *const u8 as *const libc::c_char,
798 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:805:9
    |
801 | /         let mut init = tty_term_code_entry {
802 | |             type_0: TTYCODE_STRING,
803 | |             name: b"kEND3\0" as *const u8 as *const libc::c_char,
804 | |         };
    | |__________- unnecessary `let` binding
805 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
801 ~         
802 ~         tty_term_code_entry {
803 +             type_0: TTYCODE_STRING,
804 +             name: b"kEND3\0" as *const u8 as *const libc::c_char,
805 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:812:9
    |
808 | /         let mut init = tty_term_code_entry {
809 | |             type_0: TTYCODE_STRING,
810 | |             name: b"kEND4\0" as *const u8 as *const libc::c_char,
811 | |         };
    | |__________- unnecessary `let` binding
812 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
808 ~         
809 ~         tty_term_code_entry {
810 +             type_0: TTYCODE_STRING,
811 +             name: b"kEND4\0" as *const u8 as *const libc::c_char,
812 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:819:9
    |
815 | /         let mut init = tty_term_code_entry {
816 | |             type_0: TTYCODE_STRING,
817 | |             name: b"kEND5\0" as *const u8 as *const libc::c_char,
818 | |         };
    | |__________- unnecessary `let` binding
819 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
815 ~         
816 ~         tty_term_code_entry {
817 +             type_0: TTYCODE_STRING,
818 +             name: b"kEND5\0" as *const u8 as *const libc::c_char,
819 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:826:9
    |
822 | /         let mut init = tty_term_code_entry {
823 | |             type_0: TTYCODE_STRING,
824 | |             name: b"kEND6\0" as *const u8 as *const libc::c_char,
825 | |         };
    | |__________- unnecessary `let` binding
826 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
822 ~         
823 ~         tty_term_code_entry {
824 +             type_0: TTYCODE_STRING,
825 +             name: b"kEND6\0" as *const u8 as *const libc::c_char,
826 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:833:9
    |
829 | /         let mut init = tty_term_code_entry {
830 | |             type_0: TTYCODE_STRING,
831 | |             name: b"kEND7\0" as *const u8 as *const libc::c_char,
832 | |         };
    | |__________- unnecessary `let` binding
833 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
829 ~         
830 ~         tty_term_code_entry {
831 +             type_0: TTYCODE_STRING,
832 +             name: b"kEND7\0" as *const u8 as *const libc::c_char,
833 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:840:9
    |
836 | /         let mut init = tty_term_code_entry {
837 | |             type_0: TTYCODE_STRING,
838 | |             name: b"kf1\0" as *const u8 as *const libc::c_char,
839 | |         };
    | |__________- unnecessary `let` binding
840 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
836 ~         
837 ~         tty_term_code_entry {
838 +             type_0: TTYCODE_STRING,
839 +             name: b"kf1\0" as *const u8 as *const libc::c_char,
840 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:847:9
    |
843 | /         let mut init = tty_term_code_entry {
844 | |             type_0: TTYCODE_STRING,
845 | |             name: b"kf10\0" as *const u8 as *const libc::c_char,
846 | |         };
    | |__________- unnecessary `let` binding
847 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
843 ~         
844 ~         tty_term_code_entry {
845 +             type_0: TTYCODE_STRING,
846 +             name: b"kf10\0" as *const u8 as *const libc::c_char,
847 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:854:9
    |
850 | /         let mut init = tty_term_code_entry {
851 | |             type_0: TTYCODE_STRING,
852 | |             name: b"kf11\0" as *const u8 as *const libc::c_char,
853 | |         };
    | |__________- unnecessary `let` binding
854 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
850 ~         
851 ~         tty_term_code_entry {
852 +             type_0: TTYCODE_STRING,
853 +             name: b"kf11\0" as *const u8 as *const libc::c_char,
854 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:861:9
    |
857 | /         let mut init = tty_term_code_entry {
858 | |             type_0: TTYCODE_STRING,
859 | |             name: b"kf12\0" as *const u8 as *const libc::c_char,
860 | |         };
    | |__________- unnecessary `let` binding
861 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
857 ~         
858 ~         tty_term_code_entry {
859 +             type_0: TTYCODE_STRING,
860 +             name: b"kf12\0" as *const u8 as *const libc::c_char,
861 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:868:9
    |
864 | /         let mut init = tty_term_code_entry {
865 | |             type_0: TTYCODE_STRING,
866 | |             name: b"kf13\0" as *const u8 as *const libc::c_char,
867 | |         };
    | |__________- unnecessary `let` binding
868 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
864 ~         
865 ~         tty_term_code_entry {
866 +             type_0: TTYCODE_STRING,
867 +             name: b"kf13\0" as *const u8 as *const libc::c_char,
868 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:875:9
    |
871 | /         let mut init = tty_term_code_entry {
872 | |             type_0: TTYCODE_STRING,
873 | |             name: b"kf14\0" as *const u8 as *const libc::c_char,
874 | |         };
    | |__________- unnecessary `let` binding
875 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
871 ~         
872 ~         tty_term_code_entry {
873 +             type_0: TTYCODE_STRING,
874 +             name: b"kf14\0" as *const u8 as *const libc::c_char,
875 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:882:9
    |
878 | /         let mut init = tty_term_code_entry {
879 | |             type_0: TTYCODE_STRING,
880 | |             name: b"kf15\0" as *const u8 as *const libc::c_char,
881 | |         };
    | |__________- unnecessary `let` binding
882 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
878 ~         
879 ~         tty_term_code_entry {
880 +             type_0: TTYCODE_STRING,
881 +             name: b"kf15\0" as *const u8 as *const libc::c_char,
882 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:889:9
    |
885 | /         let mut init = tty_term_code_entry {
886 | |             type_0: TTYCODE_STRING,
887 | |             name: b"kf16\0" as *const u8 as *const libc::c_char,
888 | |         };
    | |__________- unnecessary `let` binding
889 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
885 ~         
886 ~         tty_term_code_entry {
887 +             type_0: TTYCODE_STRING,
888 +             name: b"kf16\0" as *const u8 as *const libc::c_char,
889 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:896:9
    |
892 | /         let mut init = tty_term_code_entry {
893 | |             type_0: TTYCODE_STRING,
894 | |             name: b"kf17\0" as *const u8 as *const libc::c_char,
895 | |         };
    | |__________- unnecessary `let` binding
896 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
892 ~         
893 ~         tty_term_code_entry {
894 +             type_0: TTYCODE_STRING,
895 +             name: b"kf17\0" as *const u8 as *const libc::c_char,
896 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:903:9
    |
899 | /         let mut init = tty_term_code_entry {
900 | |             type_0: TTYCODE_STRING,
901 | |             name: b"kf18\0" as *const u8 as *const libc::c_char,
902 | |         };
    | |__________- unnecessary `let` binding
903 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
899 ~         
900 ~         tty_term_code_entry {
901 +             type_0: TTYCODE_STRING,
902 +             name: b"kf18\0" as *const u8 as *const libc::c_char,
903 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:910:9
    |
906 | /         let mut init = tty_term_code_entry {
907 | |             type_0: TTYCODE_STRING,
908 | |             name: b"kf19\0" as *const u8 as *const libc::c_char,
909 | |         };
    | |__________- unnecessary `let` binding
910 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
906 ~         
907 ~         tty_term_code_entry {
908 +             type_0: TTYCODE_STRING,
909 +             name: b"kf19\0" as *const u8 as *const libc::c_char,
910 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:917:9
    |
913 | /         let mut init = tty_term_code_entry {
914 | |             type_0: TTYCODE_STRING,
915 | |             name: b"kf2\0" as *const u8 as *const libc::c_char,
916 | |         };
    | |__________- unnecessary `let` binding
917 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
913 ~         
914 ~         tty_term_code_entry {
915 +             type_0: TTYCODE_STRING,
916 +             name: b"kf2\0" as *const u8 as *const libc::c_char,
917 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:924:9
    |
920 | /         let mut init = tty_term_code_entry {
921 | |             type_0: TTYCODE_STRING,
922 | |             name: b"kf20\0" as *const u8 as *const libc::c_char,
923 | |         };
    | |__________- unnecessary `let` binding
924 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
920 ~         
921 ~         tty_term_code_entry {
922 +             type_0: TTYCODE_STRING,
923 +             name: b"kf20\0" as *const u8 as *const libc::c_char,
924 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:931:9
    |
927 | /         let mut init = tty_term_code_entry {
928 | |             type_0: TTYCODE_STRING,
929 | |             name: b"kf21\0" as *const u8 as *const libc::c_char,
930 | |         };
    | |__________- unnecessary `let` binding
931 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
927 ~         
928 ~         tty_term_code_entry {
929 +             type_0: TTYCODE_STRING,
930 +             name: b"kf21\0" as *const u8 as *const libc::c_char,
931 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:938:9
    |
934 | /         let mut init = tty_term_code_entry {
935 | |             type_0: TTYCODE_STRING,
936 | |             name: b"kf22\0" as *const u8 as *const libc::c_char,
937 | |         };
    | |__________- unnecessary `let` binding
938 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
934 ~         
935 ~         tty_term_code_entry {
936 +             type_0: TTYCODE_STRING,
937 +             name: b"kf22\0" as *const u8 as *const libc::c_char,
938 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:945:9
    |
941 | /         let mut init = tty_term_code_entry {
942 | |             type_0: TTYCODE_STRING,
943 | |             name: b"kf23\0" as *const u8 as *const libc::c_char,
944 | |         };
    | |__________- unnecessary `let` binding
945 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
941 ~         
942 ~         tty_term_code_entry {
943 +             type_0: TTYCODE_STRING,
944 +             name: b"kf23\0" as *const u8 as *const libc::c_char,
945 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:952:9
    |
948 | /         let mut init = tty_term_code_entry {
949 | |             type_0: TTYCODE_STRING,
950 | |             name: b"kf24\0" as *const u8 as *const libc::c_char,
951 | |         };
    | |__________- unnecessary `let` binding
952 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
948 ~         
949 ~         tty_term_code_entry {
950 +             type_0: TTYCODE_STRING,
951 +             name: b"kf24\0" as *const u8 as *const libc::c_char,
952 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:959:9
    |
955 | /         let mut init = tty_term_code_entry {
956 | |             type_0: TTYCODE_STRING,
957 | |             name: b"kf25\0" as *const u8 as *const libc::c_char,
958 | |         };
    | |__________- unnecessary `let` binding
959 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
955 ~         
956 ~         tty_term_code_entry {
957 +             type_0: TTYCODE_STRING,
958 +             name: b"kf25\0" as *const u8 as *const libc::c_char,
959 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:966:9
    |
962 | /         let mut init = tty_term_code_entry {
963 | |             type_0: TTYCODE_STRING,
964 | |             name: b"kf26\0" as *const u8 as *const libc::c_char,
965 | |         };
    | |__________- unnecessary `let` binding
966 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
962 ~         
963 ~         tty_term_code_entry {
964 +             type_0: TTYCODE_STRING,
965 +             name: b"kf26\0" as *const u8 as *const libc::c_char,
966 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:973:9
    |
969 | /         let mut init = tty_term_code_entry {
970 | |             type_0: TTYCODE_STRING,
971 | |             name: b"kf27\0" as *const u8 as *const libc::c_char,
972 | |         };
    | |__________- unnecessary `let` binding
973 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
969 ~         
970 ~         tty_term_code_entry {
971 +             type_0: TTYCODE_STRING,
972 +             name: b"kf27\0" as *const u8 as *const libc::c_char,
973 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:980:9
    |
976 | /         let mut init = tty_term_code_entry {
977 | |             type_0: TTYCODE_STRING,
978 | |             name: b"kf28\0" as *const u8 as *const libc::c_char,
979 | |         };
    | |__________- unnecessary `let` binding
980 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
976 ~         
977 ~         tty_term_code_entry {
978 +             type_0: TTYCODE_STRING,
979 +             name: b"kf28\0" as *const u8 as *const libc::c_char,
980 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:987:9
    |
983 | /         let mut init = tty_term_code_entry {
984 | |             type_0: TTYCODE_STRING,
985 | |             name: b"kf29\0" as *const u8 as *const libc::c_char,
986 | |         };
    | |__________- unnecessary `let` binding
987 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
983 ~         
984 ~         tty_term_code_entry {
985 +             type_0: TTYCODE_STRING,
986 +             name: b"kf29\0" as *const u8 as *const libc::c_char,
987 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/tty_term.rs:994:9
    |
990 | /         let mut init = tty_term_code_entry {
991 | |             type_0: TTYCODE_STRING,
992 | |             name: b"kf3\0" as *const u8 as *const libc::c_char,
993 | |         };
    | |__________- unnecessary `let` binding
994 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
990 ~         
991 ~         tty_term_code_entry {
992 +             type_0: TTYCODE_STRING,
993 +             name: b"kf3\0" as *const u8 as *const libc::c_char,
994 +         }
    |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1001:9
     |
997  | /         let mut init = tty_term_code_entry {
998  | |             type_0: TTYCODE_STRING,
999  | |             name: b"kf30\0" as *const u8 as *const libc::c_char,
1000 | |         };
     | |__________- unnecessary `let` binding
1001 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
997  ~         
998  ~         tty_term_code_entry {
999  +             type_0: TTYCODE_STRING,
1000 +             name: b"kf30\0" as *const u8 as *const libc::c_char,
1001 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1008:9
     |
1004 | /         let mut init = tty_term_code_entry {
1005 | |             type_0: TTYCODE_STRING,
1006 | |             name: b"kf31\0" as *const u8 as *const libc::c_char,
1007 | |         };
     | |__________- unnecessary `let` binding
1008 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1004 ~         
1005 ~         tty_term_code_entry {
1006 +             type_0: TTYCODE_STRING,
1007 +             name: b"kf31\0" as *const u8 as *const libc::c_char,
1008 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1015:9
     |
1011 | /         let mut init = tty_term_code_entry {
1012 | |             type_0: TTYCODE_STRING,
1013 | |             name: b"kf32\0" as *const u8 as *const libc::c_char,
1014 | |         };
     | |__________- unnecessary `let` binding
1015 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1011 ~         
1012 ~         tty_term_code_entry {
1013 +             type_0: TTYCODE_STRING,
1014 +             name: b"kf32\0" as *const u8 as *const libc::c_char,
1015 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1022:9
     |
1018 | /         let mut init = tty_term_code_entry {
1019 | |             type_0: TTYCODE_STRING,
1020 | |             name: b"kf33\0" as *const u8 as *const libc::c_char,
1021 | |         };
     | |__________- unnecessary `let` binding
1022 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1018 ~         
1019 ~         tty_term_code_entry {
1020 +             type_0: TTYCODE_STRING,
1021 +             name: b"kf33\0" as *const u8 as *const libc::c_char,
1022 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1029:9
     |
1025 | /         let mut init = tty_term_code_entry {
1026 | |             type_0: TTYCODE_STRING,
1027 | |             name: b"kf34\0" as *const u8 as *const libc::c_char,
1028 | |         };
     | |__________- unnecessary `let` binding
1029 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1025 ~         
1026 ~         tty_term_code_entry {
1027 +             type_0: TTYCODE_STRING,
1028 +             name: b"kf34\0" as *const u8 as *const libc::c_char,
1029 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1036:9
     |
1032 | /         let mut init = tty_term_code_entry {
1033 | |             type_0: TTYCODE_STRING,
1034 | |             name: b"kf35\0" as *const u8 as *const libc::c_char,
1035 | |         };
     | |__________- unnecessary `let` binding
1036 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1032 ~         
1033 ~         tty_term_code_entry {
1034 +             type_0: TTYCODE_STRING,
1035 +             name: b"kf35\0" as *const u8 as *const libc::c_char,
1036 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1043:9
     |
1039 | /         let mut init = tty_term_code_entry {
1040 | |             type_0: TTYCODE_STRING,
1041 | |             name: b"kf36\0" as *const u8 as *const libc::c_char,
1042 | |         };
     | |__________- unnecessary `let` binding
1043 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1039 ~         
1040 ~         tty_term_code_entry {
1041 +             type_0: TTYCODE_STRING,
1042 +             name: b"kf36\0" as *const u8 as *const libc::c_char,
1043 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1050:9
     |
1046 | /         let mut init = tty_term_code_entry {
1047 | |             type_0: TTYCODE_STRING,
1048 | |             name: b"kf37\0" as *const u8 as *const libc::c_char,
1049 | |         };
     | |__________- unnecessary `let` binding
1050 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1046 ~         
1047 ~         tty_term_code_entry {
1048 +             type_0: TTYCODE_STRING,
1049 +             name: b"kf37\0" as *const u8 as *const libc::c_char,
1050 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1057:9
     |
1053 | /         let mut init = tty_term_code_entry {
1054 | |             type_0: TTYCODE_STRING,
1055 | |             name: b"kf38\0" as *const u8 as *const libc::c_char,
1056 | |         };
     | |__________- unnecessary `let` binding
1057 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1053 ~         
1054 ~         tty_term_code_entry {
1055 +             type_0: TTYCODE_STRING,
1056 +             name: b"kf38\0" as *const u8 as *const libc::c_char,
1057 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1064:9
     |
1060 | /         let mut init = tty_term_code_entry {
1061 | |             type_0: TTYCODE_STRING,
1062 | |             name: b"kf39\0" as *const u8 as *const libc::c_char,
1063 | |         };
     | |__________- unnecessary `let` binding
1064 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1060 ~         
1061 ~         tty_term_code_entry {
1062 +             type_0: TTYCODE_STRING,
1063 +             name: b"kf39\0" as *const u8 as *const libc::c_char,
1064 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1071:9
     |
1067 | /         let mut init = tty_term_code_entry {
1068 | |             type_0: TTYCODE_STRING,
1069 | |             name: b"kf4\0" as *const u8 as *const libc::c_char,
1070 | |         };
     | |__________- unnecessary `let` binding
1071 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1067 ~         
1068 ~         tty_term_code_entry {
1069 +             type_0: TTYCODE_STRING,
1070 +             name: b"kf4\0" as *const u8 as *const libc::c_char,
1071 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1078:9
     |
1074 | /         let mut init = tty_term_code_entry {
1075 | |             type_0: TTYCODE_STRING,
1076 | |             name: b"kf40\0" as *const u8 as *const libc::c_char,
1077 | |         };
     | |__________- unnecessary `let` binding
1078 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1074 ~         
1075 ~         tty_term_code_entry {
1076 +             type_0: TTYCODE_STRING,
1077 +             name: b"kf40\0" as *const u8 as *const libc::c_char,
1078 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1085:9
     |
1081 | /         let mut init = tty_term_code_entry {
1082 | |             type_0: TTYCODE_STRING,
1083 | |             name: b"kf41\0" as *const u8 as *const libc::c_char,
1084 | |         };
     | |__________- unnecessary `let` binding
1085 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1081 ~         
1082 ~         tty_term_code_entry {
1083 +             type_0: TTYCODE_STRING,
1084 +             name: b"kf41\0" as *const u8 as *const libc::c_char,
1085 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1092:9
     |
1088 | /         let mut init = tty_term_code_entry {
1089 | |             type_0: TTYCODE_STRING,
1090 | |             name: b"kf42\0" as *const u8 as *const libc::c_char,
1091 | |         };
     | |__________- unnecessary `let` binding
1092 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1088 ~         
1089 ~         tty_term_code_entry {
1090 +             type_0: TTYCODE_STRING,
1091 +             name: b"kf42\0" as *const u8 as *const libc::c_char,
1092 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1099:9
     |
1095 | /         let mut init = tty_term_code_entry {
1096 | |             type_0: TTYCODE_STRING,
1097 | |             name: b"kf43\0" as *const u8 as *const libc::c_char,
1098 | |         };
     | |__________- unnecessary `let` binding
1099 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1095 ~         
1096 ~         tty_term_code_entry {
1097 +             type_0: TTYCODE_STRING,
1098 +             name: b"kf43\0" as *const u8 as *const libc::c_char,
1099 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1106:9
     |
1102 | /         let mut init = tty_term_code_entry {
1103 | |             type_0: TTYCODE_STRING,
1104 | |             name: b"kf44\0" as *const u8 as *const libc::c_char,
1105 | |         };
     | |__________- unnecessary `let` binding
1106 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1102 ~         
1103 ~         tty_term_code_entry {
1104 +             type_0: TTYCODE_STRING,
1105 +             name: b"kf44\0" as *const u8 as *const libc::c_char,
1106 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1113:9
     |
1109 | /         let mut init = tty_term_code_entry {
1110 | |             type_0: TTYCODE_STRING,
1111 | |             name: b"kf45\0" as *const u8 as *const libc::c_char,
1112 | |         };
     | |__________- unnecessary `let` binding
1113 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1109 ~         
1110 ~         tty_term_code_entry {
1111 +             type_0: TTYCODE_STRING,
1112 +             name: b"kf45\0" as *const u8 as *const libc::c_char,
1113 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1120:9
     |
1116 | /         let mut init = tty_term_code_entry {
1117 | |             type_0: TTYCODE_STRING,
1118 | |             name: b"kf46\0" as *const u8 as *const libc::c_char,
1119 | |         };
     | |__________- unnecessary `let` binding
1120 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1116 ~         
1117 ~         tty_term_code_entry {
1118 +             type_0: TTYCODE_STRING,
1119 +             name: b"kf46\0" as *const u8 as *const libc::c_char,
1120 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1127:9
     |
1123 | /         let mut init = tty_term_code_entry {
1124 | |             type_0: TTYCODE_STRING,
1125 | |             name: b"kf47\0" as *const u8 as *const libc::c_char,
1126 | |         };
     | |__________- unnecessary `let` binding
1127 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1123 ~         
1124 ~         tty_term_code_entry {
1125 +             type_0: TTYCODE_STRING,
1126 +             name: b"kf47\0" as *const u8 as *const libc::c_char,
1127 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1134:9
     |
1130 | /         let mut init = tty_term_code_entry {
1131 | |             type_0: TTYCODE_STRING,
1132 | |             name: b"kf48\0" as *const u8 as *const libc::c_char,
1133 | |         };
     | |__________- unnecessary `let` binding
1134 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1130 ~         
1131 ~         tty_term_code_entry {
1132 +             type_0: TTYCODE_STRING,
1133 +             name: b"kf48\0" as *const u8 as *const libc::c_char,
1134 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1141:9
     |
1137 | /         let mut init = tty_term_code_entry {
1138 | |             type_0: TTYCODE_STRING,
1139 | |             name: b"kf49\0" as *const u8 as *const libc::c_char,
1140 | |         };
     | |__________- unnecessary `let` binding
1141 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1137 ~         
1138 ~         tty_term_code_entry {
1139 +             type_0: TTYCODE_STRING,
1140 +             name: b"kf49\0" as *const u8 as *const libc::c_char,
1141 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1148:9
     |
1144 | /         let mut init = tty_term_code_entry {
1145 | |             type_0: TTYCODE_STRING,
1146 | |             name: b"kf5\0" as *const u8 as *const libc::c_char,
1147 | |         };
     | |__________- unnecessary `let` binding
1148 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1144 ~         
1145 ~         tty_term_code_entry {
1146 +             type_0: TTYCODE_STRING,
1147 +             name: b"kf5\0" as *const u8 as *const libc::c_char,
1148 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1155:9
     |
1151 | /         let mut init = tty_term_code_entry {
1152 | |             type_0: TTYCODE_STRING,
1153 | |             name: b"kf50\0" as *const u8 as *const libc::c_char,
1154 | |         };
     | |__________- unnecessary `let` binding
1155 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1151 ~         
1152 ~         tty_term_code_entry {
1153 +             type_0: TTYCODE_STRING,
1154 +             name: b"kf50\0" as *const u8 as *const libc::c_char,
1155 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1162:9
     |
1158 | /         let mut init = tty_term_code_entry {
1159 | |             type_0: TTYCODE_STRING,
1160 | |             name: b"kf51\0" as *const u8 as *const libc::c_char,
1161 | |         };
     | |__________- unnecessary `let` binding
1162 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1158 ~         
1159 ~         tty_term_code_entry {
1160 +             type_0: TTYCODE_STRING,
1161 +             name: b"kf51\0" as *const u8 as *const libc::c_char,
1162 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1169:9
     |
1165 | /         let mut init = tty_term_code_entry {
1166 | |             type_0: TTYCODE_STRING,
1167 | |             name: b"kf52\0" as *const u8 as *const libc::c_char,
1168 | |         };
     | |__________- unnecessary `let` binding
1169 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1165 ~         
1166 ~         tty_term_code_entry {
1167 +             type_0: TTYCODE_STRING,
1168 +             name: b"kf52\0" as *const u8 as *const libc::c_char,
1169 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1176:9
     |
1172 | /         let mut init = tty_term_code_entry {
1173 | |             type_0: TTYCODE_STRING,
1174 | |             name: b"kf53\0" as *const u8 as *const libc::c_char,
1175 | |         };
     | |__________- unnecessary `let` binding
1176 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1172 ~         
1173 ~         tty_term_code_entry {
1174 +             type_0: TTYCODE_STRING,
1175 +             name: b"kf53\0" as *const u8 as *const libc::c_char,
1176 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1183:9
     |
1179 | /         let mut init = tty_term_code_entry {
1180 | |             type_0: TTYCODE_STRING,
1181 | |             name: b"kf54\0" as *const u8 as *const libc::c_char,
1182 | |         };
     | |__________- unnecessary `let` binding
1183 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1179 ~         
1180 ~         tty_term_code_entry {
1181 +             type_0: TTYCODE_STRING,
1182 +             name: b"kf54\0" as *const u8 as *const libc::c_char,
1183 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1190:9
     |
1186 | /         let mut init = tty_term_code_entry {
1187 | |             type_0: TTYCODE_STRING,
1188 | |             name: b"kf55\0" as *const u8 as *const libc::c_char,
1189 | |         };
     | |__________- unnecessary `let` binding
1190 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1186 ~         
1187 ~         tty_term_code_entry {
1188 +             type_0: TTYCODE_STRING,
1189 +             name: b"kf55\0" as *const u8 as *const libc::c_char,
1190 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1197:9
     |
1193 | /         let mut init = tty_term_code_entry {
1194 | |             type_0: TTYCODE_STRING,
1195 | |             name: b"kf56\0" as *const u8 as *const libc::c_char,
1196 | |         };
     | |__________- unnecessary `let` binding
1197 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1193 ~         
1194 ~         tty_term_code_entry {
1195 +             type_0: TTYCODE_STRING,
1196 +             name: b"kf56\0" as *const u8 as *const libc::c_char,
1197 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1204:9
     |
1200 | /         let mut init = tty_term_code_entry {
1201 | |             type_0: TTYCODE_STRING,
1202 | |             name: b"kf57\0" as *const u8 as *const libc::c_char,
1203 | |         };
     | |__________- unnecessary `let` binding
1204 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1200 ~         
1201 ~         tty_term_code_entry {
1202 +             type_0: TTYCODE_STRING,
1203 +             name: b"kf57\0" as *const u8 as *const libc::c_char,
1204 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1211:9
     |
1207 | /         let mut init = tty_term_code_entry {
1208 | |             type_0: TTYCODE_STRING,
1209 | |             name: b"kf58\0" as *const u8 as *const libc::c_char,
1210 | |         };
     | |__________- unnecessary `let` binding
1211 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1207 ~         
1208 ~         tty_term_code_entry {
1209 +             type_0: TTYCODE_STRING,
1210 +             name: b"kf58\0" as *const u8 as *const libc::c_char,
1211 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1218:9
     |
1214 | /         let mut init = tty_term_code_entry {
1215 | |             type_0: TTYCODE_STRING,
1216 | |             name: b"kf59\0" as *const u8 as *const libc::c_char,
1217 | |         };
     | |__________- unnecessary `let` binding
1218 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1214 ~         
1215 ~         tty_term_code_entry {
1216 +             type_0: TTYCODE_STRING,
1217 +             name: b"kf59\0" as *const u8 as *const libc::c_char,
1218 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1225:9
     |
1221 | /         let mut init = tty_term_code_entry {
1222 | |             type_0: TTYCODE_STRING,
1223 | |             name: b"kf6\0" as *const u8 as *const libc::c_char,
1224 | |         };
     | |__________- unnecessary `let` binding
1225 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1221 ~         
1222 ~         tty_term_code_entry {
1223 +             type_0: TTYCODE_STRING,
1224 +             name: b"kf6\0" as *const u8 as *const libc::c_char,
1225 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1232:9
     |
1228 | /         let mut init = tty_term_code_entry {
1229 | |             type_0: TTYCODE_STRING,
1230 | |             name: b"kf60\0" as *const u8 as *const libc::c_char,
1231 | |         };
     | |__________- unnecessary `let` binding
1232 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1228 ~         
1229 ~         tty_term_code_entry {
1230 +             type_0: TTYCODE_STRING,
1231 +             name: b"kf60\0" as *const u8 as *const libc::c_char,
1232 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1239:9
     |
1235 | /         let mut init = tty_term_code_entry {
1236 | |             type_0: TTYCODE_STRING,
1237 | |             name: b"kf61\0" as *const u8 as *const libc::c_char,
1238 | |         };
     | |__________- unnecessary `let` binding
1239 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1235 ~         
1236 ~         tty_term_code_entry {
1237 +             type_0: TTYCODE_STRING,
1238 +             name: b"kf61\0" as *const u8 as *const libc::c_char,
1239 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1246:9
     |
1242 | /         let mut init = tty_term_code_entry {
1243 | |             type_0: TTYCODE_STRING,
1244 | |             name: b"kf62\0" as *const u8 as *const libc::c_char,
1245 | |         };
     | |__________- unnecessary `let` binding
1246 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1242 ~         
1243 ~         tty_term_code_entry {
1244 +             type_0: TTYCODE_STRING,
1245 +             name: b"kf62\0" as *const u8 as *const libc::c_char,
1246 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1253:9
     |
1249 | /         let mut init = tty_term_code_entry {
1250 | |             type_0: TTYCODE_STRING,
1251 | |             name: b"kf63\0" as *const u8 as *const libc::c_char,
1252 | |         };
     | |__________- unnecessary `let` binding
1253 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1249 ~         
1250 ~         tty_term_code_entry {
1251 +             type_0: TTYCODE_STRING,
1252 +             name: b"kf63\0" as *const u8 as *const libc::c_char,
1253 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1260:9
     |
1256 | /         let mut init = tty_term_code_entry {
1257 | |             type_0: TTYCODE_STRING,
1258 | |             name: b"kf7\0" as *const u8 as *const libc::c_char,
1259 | |         };
     | |__________- unnecessary `let` binding
1260 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1256 ~         
1257 ~         tty_term_code_entry {
1258 +             type_0: TTYCODE_STRING,
1259 +             name: b"kf7\0" as *const u8 as *const libc::c_char,
1260 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1267:9
     |
1263 | /         let mut init = tty_term_code_entry {
1264 | |             type_0: TTYCODE_STRING,
1265 | |             name: b"kf8\0" as *const u8 as *const libc::c_char,
1266 | |         };
     | |__________- unnecessary `let` binding
1267 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1263 ~         
1264 ~         tty_term_code_entry {
1265 +             type_0: TTYCODE_STRING,
1266 +             name: b"kf8\0" as *const u8 as *const libc::c_char,
1267 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1274:9
     |
1270 | /         let mut init = tty_term_code_entry {
1271 | |             type_0: TTYCODE_STRING,
1272 | |             name: b"kf9\0" as *const u8 as *const libc::c_char,
1273 | |         };
     | |__________- unnecessary `let` binding
1274 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1270 ~         
1271 ~         tty_term_code_entry {
1272 +             type_0: TTYCODE_STRING,
1273 +             name: b"kf9\0" as *const u8 as *const libc::c_char,
1274 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1281:9
     |
1277 | /         let mut init = tty_term_code_entry {
1278 | |             type_0: TTYCODE_STRING,
1279 | |             name: b"kHOM\0" as *const u8 as *const libc::c_char,
1280 | |         };
     | |__________- unnecessary `let` binding
1281 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1277 ~         
1278 ~         tty_term_code_entry {
1279 +             type_0: TTYCODE_STRING,
1280 +             name: b"kHOM\0" as *const u8 as *const libc::c_char,
1281 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1288:9
     |
1284 | /         let mut init = tty_term_code_entry {
1285 | |             type_0: TTYCODE_STRING,
1286 | |             name: b"kHOM3\0" as *const u8 as *const libc::c_char,
1287 | |         };
     | |__________- unnecessary `let` binding
1288 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1284 ~         
1285 ~         tty_term_code_entry {
1286 +             type_0: TTYCODE_STRING,
1287 +             name: b"kHOM3\0" as *const u8 as *const libc::c_char,
1288 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1295:9
     |
1291 | /         let mut init = tty_term_code_entry {
1292 | |             type_0: TTYCODE_STRING,
1293 | |             name: b"kHOM4\0" as *const u8 as *const libc::c_char,
1294 | |         };
     | |__________- unnecessary `let` binding
1295 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1291 ~         
1292 ~         tty_term_code_entry {
1293 +             type_0: TTYCODE_STRING,
1294 +             name: b"kHOM4\0" as *const u8 as *const libc::c_char,
1295 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1302:9
     |
1298 | /         let mut init = tty_term_code_entry {
1299 | |             type_0: TTYCODE_STRING,
1300 | |             name: b"kHOM5\0" as *const u8 as *const libc::c_char,
1301 | |         };
     | |__________- unnecessary `let` binding
1302 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1298 ~         
1299 ~         tty_term_code_entry {
1300 +             type_0: TTYCODE_STRING,
1301 +             name: b"kHOM5\0" as *const u8 as *const libc::c_char,
1302 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1309:9
     |
1305 | /         let mut init = tty_term_code_entry {
1306 | |             type_0: TTYCODE_STRING,
1307 | |             name: b"kHOM6\0" as *const u8 as *const libc::c_char,
1308 | |         };
     | |__________- unnecessary `let` binding
1309 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1305 ~         
1306 ~         tty_term_code_entry {
1307 +             type_0: TTYCODE_STRING,
1308 +             name: b"kHOM6\0" as *const u8 as *const libc::c_char,
1309 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1316:9
     |
1312 | /         let mut init = tty_term_code_entry {
1313 | |             type_0: TTYCODE_STRING,
1314 | |             name: b"kHOM7\0" as *const u8 as *const libc::c_char,
1315 | |         };
     | |__________- unnecessary `let` binding
1316 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1312 ~         
1313 ~         tty_term_code_entry {
1314 +             type_0: TTYCODE_STRING,
1315 +             name: b"kHOM7\0" as *const u8 as *const libc::c_char,
1316 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1323:9
     |
1319 | /         let mut init = tty_term_code_entry {
1320 | |             type_0: TTYCODE_STRING,
1321 | |             name: b"khome\0" as *const u8 as *const libc::c_char,
1322 | |         };
     | |__________- unnecessary `let` binding
1323 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1319 ~         
1320 ~         tty_term_code_entry {
1321 +             type_0: TTYCODE_STRING,
1322 +             name: b"khome\0" as *const u8 as *const libc::c_char,
1323 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1330:9
     |
1326 | /         let mut init = tty_term_code_entry {
1327 | |             type_0: TTYCODE_STRING,
1328 | |             name: b"kIC\0" as *const u8 as *const libc::c_char,
1329 | |         };
     | |__________- unnecessary `let` binding
1330 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1326 ~         
1327 ~         tty_term_code_entry {
1328 +             type_0: TTYCODE_STRING,
1329 +             name: b"kIC\0" as *const u8 as *const libc::c_char,
1330 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1337:9
     |
1333 | /         let mut init = tty_term_code_entry {
1334 | |             type_0: TTYCODE_STRING,
1335 | |             name: b"kIC3\0" as *const u8 as *const libc::c_char,
1336 | |         };
     | |__________- unnecessary `let` binding
1337 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1333 ~         
1334 ~         tty_term_code_entry {
1335 +             type_0: TTYCODE_STRING,
1336 +             name: b"kIC3\0" as *const u8 as *const libc::c_char,
1337 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1344:9
     |
1340 | /         let mut init = tty_term_code_entry {
1341 | |             type_0: TTYCODE_STRING,
1342 | |             name: b"kIC4\0" as *const u8 as *const libc::c_char,
1343 | |         };
     | |__________- unnecessary `let` binding
1344 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1340 ~         
1341 ~         tty_term_code_entry {
1342 +             type_0: TTYCODE_STRING,
1343 +             name: b"kIC4\0" as *const u8 as *const libc::c_char,
1344 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1351:9
     |
1347 | /         let mut init = tty_term_code_entry {
1348 | |             type_0: TTYCODE_STRING,
1349 | |             name: b"kIC5\0" as *const u8 as *const libc::c_char,
1350 | |         };
     | |__________- unnecessary `let` binding
1351 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1347 ~         
1348 ~         tty_term_code_entry {
1349 +             type_0: TTYCODE_STRING,
1350 +             name: b"kIC5\0" as *const u8 as *const libc::c_char,
1351 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1358:9
     |
1354 | /         let mut init = tty_term_code_entry {
1355 | |             type_0: TTYCODE_STRING,
1356 | |             name: b"kIC6\0" as *const u8 as *const libc::c_char,
1357 | |         };
     | |__________- unnecessary `let` binding
1358 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1354 ~         
1355 ~         tty_term_code_entry {
1356 +             type_0: TTYCODE_STRING,
1357 +             name: b"kIC6\0" as *const u8 as *const libc::c_char,
1358 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1365:9
     |
1361 | /         let mut init = tty_term_code_entry {
1362 | |             type_0: TTYCODE_STRING,
1363 | |             name: b"kIC7\0" as *const u8 as *const libc::c_char,
1364 | |         };
     | |__________- unnecessary `let` binding
1365 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1361 ~         
1362 ~         tty_term_code_entry {
1363 +             type_0: TTYCODE_STRING,
1364 +             name: b"kIC7\0" as *const u8 as *const libc::c_char,
1365 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1372:9
     |
1368 | /         let mut init = tty_term_code_entry {
1369 | |             type_0: TTYCODE_STRING,
1370 | |             name: b"kich1\0" as *const u8 as *const libc::c_char,
1371 | |         };
     | |__________- unnecessary `let` binding
1372 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1368 ~         
1369 ~         tty_term_code_entry {
1370 +             type_0: TTYCODE_STRING,
1371 +             name: b"kich1\0" as *const u8 as *const libc::c_char,
1372 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1379:9
     |
1375 | /         let mut init = tty_term_code_entry {
1376 | |             type_0: TTYCODE_STRING,
1377 | |             name: b"kind\0" as *const u8 as *const libc::c_char,
1378 | |         };
     | |__________- unnecessary `let` binding
1379 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1375 ~         
1376 ~         tty_term_code_entry {
1377 +             type_0: TTYCODE_STRING,
1378 +             name: b"kind\0" as *const u8 as *const libc::c_char,
1379 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1386:9
     |
1382 | /         let mut init = tty_term_code_entry {
1383 | |             type_0: TTYCODE_STRING,
1384 | |             name: b"kLFT\0" as *const u8 as *const libc::c_char,
1385 | |         };
     | |__________- unnecessary `let` binding
1386 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1382 ~         
1383 ~         tty_term_code_entry {
1384 +             type_0: TTYCODE_STRING,
1385 +             name: b"kLFT\0" as *const u8 as *const libc::c_char,
1386 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1393:9
     |
1389 | /         let mut init = tty_term_code_entry {
1390 | |             type_0: TTYCODE_STRING,
1391 | |             name: b"kLFT3\0" as *const u8 as *const libc::c_char,
1392 | |         };
     | |__________- unnecessary `let` binding
1393 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1389 ~         
1390 ~         tty_term_code_entry {
1391 +             type_0: TTYCODE_STRING,
1392 +             name: b"kLFT3\0" as *const u8 as *const libc::c_char,
1393 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1400:9
     |
1396 | /         let mut init = tty_term_code_entry {
1397 | |             type_0: TTYCODE_STRING,
1398 | |             name: b"kLFT4\0" as *const u8 as *const libc::c_char,
1399 | |         };
     | |__________- unnecessary `let` binding
1400 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1396 ~         
1397 ~         tty_term_code_entry {
1398 +             type_0: TTYCODE_STRING,
1399 +             name: b"kLFT4\0" as *const u8 as *const libc::c_char,
1400 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1407:9
     |
1403 | /         let mut init = tty_term_code_entry {
1404 | |             type_0: TTYCODE_STRING,
1405 | |             name: b"kLFT5\0" as *const u8 as *const libc::c_char,
1406 | |         };
     | |__________- unnecessary `let` binding
1407 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1403 ~         
1404 ~         tty_term_code_entry {
1405 +             type_0: TTYCODE_STRING,
1406 +             name: b"kLFT5\0" as *const u8 as *const libc::c_char,
1407 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1414:9
     |
1410 | /         let mut init = tty_term_code_entry {
1411 | |             type_0: TTYCODE_STRING,
1412 | |             name: b"kLFT6\0" as *const u8 as *const libc::c_char,
1413 | |         };
     | |__________- unnecessary `let` binding
1414 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1410 ~         
1411 ~         tty_term_code_entry {
1412 +             type_0: TTYCODE_STRING,
1413 +             name: b"kLFT6\0" as *const u8 as *const libc::c_char,
1414 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1421:9
     |
1417 | /         let mut init = tty_term_code_entry {
1418 | |             type_0: TTYCODE_STRING,
1419 | |             name: b"kLFT7\0" as *const u8 as *const libc::c_char,
1420 | |         };
     | |__________- unnecessary `let` binding
1421 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1417 ~         
1418 ~         tty_term_code_entry {
1419 +             type_0: TTYCODE_STRING,
1420 +             name: b"kLFT7\0" as *const u8 as *const libc::c_char,
1421 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1428:9
     |
1424 | /         let mut init = tty_term_code_entry {
1425 | |             type_0: TTYCODE_STRING,
1426 | |             name: b"kmous\0" as *const u8 as *const libc::c_char,
1427 | |         };
     | |__________- unnecessary `let` binding
1428 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1424 ~         
1425 ~         tty_term_code_entry {
1426 +             type_0: TTYCODE_STRING,
1427 +             name: b"kmous\0" as *const u8 as *const libc::c_char,
1428 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1435:9
     |
1431 | /         let mut init = tty_term_code_entry {
1432 | |             type_0: TTYCODE_STRING,
1433 | |             name: b"knp\0" as *const u8 as *const libc::c_char,
1434 | |         };
     | |__________- unnecessary `let` binding
1435 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1431 ~         
1432 ~         tty_term_code_entry {
1433 +             type_0: TTYCODE_STRING,
1434 +             name: b"knp\0" as *const u8 as *const libc::c_char,
1435 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1442:9
     |
1438 | /         let mut init = tty_term_code_entry {
1439 | |             type_0: TTYCODE_STRING,
1440 | |             name: b"kNXT\0" as *const u8 as *const libc::c_char,
1441 | |         };
     | |__________- unnecessary `let` binding
1442 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1438 ~         
1439 ~         tty_term_code_entry {
1440 +             type_0: TTYCODE_STRING,
1441 +             name: b"kNXT\0" as *const u8 as *const libc::c_char,
1442 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1449:9
     |
1445 | /         let mut init = tty_term_code_entry {
1446 | |             type_0: TTYCODE_STRING,
1447 | |             name: b"kNXT3\0" as *const u8 as *const libc::c_char,
1448 | |         };
     | |__________- unnecessary `let` binding
1449 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1445 ~         
1446 ~         tty_term_code_entry {
1447 +             type_0: TTYCODE_STRING,
1448 +             name: b"kNXT3\0" as *const u8 as *const libc::c_char,
1449 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1456:9
     |
1452 | /         let mut init = tty_term_code_entry {
1453 | |             type_0: TTYCODE_STRING,
1454 | |             name: b"kNXT4\0" as *const u8 as *const libc::c_char,
1455 | |         };
     | |__________- unnecessary `let` binding
1456 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1452 ~         
1453 ~         tty_term_code_entry {
1454 +             type_0: TTYCODE_STRING,
1455 +             name: b"kNXT4\0" as *const u8 as *const libc::c_char,
1456 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1463:9
     |
1459 | /         let mut init = tty_term_code_entry {
1460 | |             type_0: TTYCODE_STRING,
1461 | |             name: b"kNXT5\0" as *const u8 as *const libc::c_char,
1462 | |         };
     | |__________- unnecessary `let` binding
1463 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1459 ~         
1460 ~         tty_term_code_entry {
1461 +             type_0: TTYCODE_STRING,
1462 +             name: b"kNXT5\0" as *const u8 as *const libc::c_char,
1463 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1470:9
     |
1466 | /         let mut init = tty_term_code_entry {
1467 | |             type_0: TTYCODE_STRING,
1468 | |             name: b"kNXT6\0" as *const u8 as *const libc::c_char,
1469 | |         };
     | |__________- unnecessary `let` binding
1470 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1466 ~         
1467 ~         tty_term_code_entry {
1468 +             type_0: TTYCODE_STRING,
1469 +             name: b"kNXT6\0" as *const u8 as *const libc::c_char,
1470 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1477:9
     |
1473 | /         let mut init = tty_term_code_entry {
1474 | |             type_0: TTYCODE_STRING,
1475 | |             name: b"kNXT7\0" as *const u8 as *const libc::c_char,
1476 | |         };
     | |__________- unnecessary `let` binding
1477 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1473 ~         
1474 ~         tty_term_code_entry {
1475 +             type_0: TTYCODE_STRING,
1476 +             name: b"kNXT7\0" as *const u8 as *const libc::c_char,
1477 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1484:9
     |
1480 | /         let mut init = tty_term_code_entry {
1481 | |             type_0: TTYCODE_STRING,
1482 | |             name: b"kpp\0" as *const u8 as *const libc::c_char,
1483 | |         };
     | |__________- unnecessary `let` binding
1484 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1480 ~         
1481 ~         tty_term_code_entry {
1482 +             type_0: TTYCODE_STRING,
1483 +             name: b"kpp\0" as *const u8 as *const libc::c_char,
1484 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1491:9
     |
1487 | /         let mut init = tty_term_code_entry {
1488 | |             type_0: TTYCODE_STRING,
1489 | |             name: b"kPRV\0" as *const u8 as *const libc::c_char,
1490 | |         };
     | |__________- unnecessary `let` binding
1491 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1487 ~         
1488 ~         tty_term_code_entry {
1489 +             type_0: TTYCODE_STRING,
1490 +             name: b"kPRV\0" as *const u8 as *const libc::c_char,
1491 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1498:9
     |
1494 | /         let mut init = tty_term_code_entry {
1495 | |             type_0: TTYCODE_STRING,
1496 | |             name: b"kPRV3\0" as *const u8 as *const libc::c_char,
1497 | |         };
     | |__________- unnecessary `let` binding
1498 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1494 ~         
1495 ~         tty_term_code_entry {
1496 +             type_0: TTYCODE_STRING,
1497 +             name: b"kPRV3\0" as *const u8 as *const libc::c_char,
1498 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1505:9
     |
1501 | /         let mut init = tty_term_code_entry {
1502 | |             type_0: TTYCODE_STRING,
1503 | |             name: b"kPRV4\0" as *const u8 as *const libc::c_char,
1504 | |         };
     | |__________- unnecessary `let` binding
1505 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1501 ~         
1502 ~         tty_term_code_entry {
1503 +             type_0: TTYCODE_STRING,
1504 +             name: b"kPRV4\0" as *const u8 as *const libc::c_char,
1505 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1512:9
     |
1508 | /         let mut init = tty_term_code_entry {
1509 | |             type_0: TTYCODE_STRING,
1510 | |             name: b"kPRV5\0" as *const u8 as *const libc::c_char,
1511 | |         };
     | |__________- unnecessary `let` binding
1512 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1508 ~         
1509 ~         tty_term_code_entry {
1510 +             type_0: TTYCODE_STRING,
1511 +             name: b"kPRV5\0" as *const u8 as *const libc::c_char,
1512 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1519:9
     |
1515 | /         let mut init = tty_term_code_entry {
1516 | |             type_0: TTYCODE_STRING,
1517 | |             name: b"kPRV6\0" as *const u8 as *const libc::c_char,
1518 | |         };
     | |__________- unnecessary `let` binding
1519 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1515 ~         
1516 ~         tty_term_code_entry {
1517 +             type_0: TTYCODE_STRING,
1518 +             name: b"kPRV6\0" as *const u8 as *const libc::c_char,
1519 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1526:9
     |
1522 | /         let mut init = tty_term_code_entry {
1523 | |             type_0: TTYCODE_STRING,
1524 | |             name: b"kPRV7\0" as *const u8 as *const libc::c_char,
1525 | |         };
     | |__________- unnecessary `let` binding
1526 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1522 ~         
1523 ~         tty_term_code_entry {
1524 +             type_0: TTYCODE_STRING,
1525 +             name: b"kPRV7\0" as *const u8 as *const libc::c_char,
1526 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1533:9
     |
1529 | /         let mut init = tty_term_code_entry {
1530 | |             type_0: TTYCODE_STRING,
1531 | |             name: b"kri\0" as *const u8 as *const libc::c_char,
1532 | |         };
     | |__________- unnecessary `let` binding
1533 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1529 ~         
1530 ~         tty_term_code_entry {
1531 +             type_0: TTYCODE_STRING,
1532 +             name: b"kri\0" as *const u8 as *const libc::c_char,
1533 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1540:9
     |
1536 | /         let mut init = tty_term_code_entry {
1537 | |             type_0: TTYCODE_STRING,
1538 | |             name: b"kRIT\0" as *const u8 as *const libc::c_char,
1539 | |         };
     | |__________- unnecessary `let` binding
1540 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1536 ~         
1537 ~         tty_term_code_entry {
1538 +             type_0: TTYCODE_STRING,
1539 +             name: b"kRIT\0" as *const u8 as *const libc::c_char,
1540 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1547:9
     |
1543 | /         let mut init = tty_term_code_entry {
1544 | |             type_0: TTYCODE_STRING,
1545 | |             name: b"kRIT3\0" as *const u8 as *const libc::c_char,
1546 | |         };
     | |__________- unnecessary `let` binding
1547 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1543 ~         
1544 ~         tty_term_code_entry {
1545 +             type_0: TTYCODE_STRING,
1546 +             name: b"kRIT3\0" as *const u8 as *const libc::c_char,
1547 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1554:9
     |
1550 | /         let mut init = tty_term_code_entry {
1551 | |             type_0: TTYCODE_STRING,
1552 | |             name: b"kRIT4\0" as *const u8 as *const libc::c_char,
1553 | |         };
     | |__________- unnecessary `let` binding
1554 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1550 ~         
1551 ~         tty_term_code_entry {
1552 +             type_0: TTYCODE_STRING,
1553 +             name: b"kRIT4\0" as *const u8 as *const libc::c_char,
1554 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1561:9
     |
1557 | /         let mut init = tty_term_code_entry {
1558 | |             type_0: TTYCODE_STRING,
1559 | |             name: b"kRIT5\0" as *const u8 as *const libc::c_char,
1560 | |         };
     | |__________- unnecessary `let` binding
1561 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1557 ~         
1558 ~         tty_term_code_entry {
1559 +             type_0: TTYCODE_STRING,
1560 +             name: b"kRIT5\0" as *const u8 as *const libc::c_char,
1561 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1568:9
     |
1564 | /         let mut init = tty_term_code_entry {
1565 | |             type_0: TTYCODE_STRING,
1566 | |             name: b"kRIT6\0" as *const u8 as *const libc::c_char,
1567 | |         };
     | |__________- unnecessary `let` binding
1568 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1564 ~         
1565 ~         tty_term_code_entry {
1566 +             type_0: TTYCODE_STRING,
1567 +             name: b"kRIT6\0" as *const u8 as *const libc::c_char,
1568 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1575:9
     |
1571 | /         let mut init = tty_term_code_entry {
1572 | |             type_0: TTYCODE_STRING,
1573 | |             name: b"kRIT7\0" as *const u8 as *const libc::c_char,
1574 | |         };
     | |__________- unnecessary `let` binding
1575 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1571 ~         
1572 ~         tty_term_code_entry {
1573 +             type_0: TTYCODE_STRING,
1574 +             name: b"kRIT7\0" as *const u8 as *const libc::c_char,
1575 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1582:9
     |
1578 | /         let mut init = tty_term_code_entry {
1579 | |             type_0: TTYCODE_STRING,
1580 | |             name: b"kUP\0" as *const u8 as *const libc::c_char,
1581 | |         };
     | |__________- unnecessary `let` binding
1582 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1578 ~         
1579 ~         tty_term_code_entry {
1580 +             type_0: TTYCODE_STRING,
1581 +             name: b"kUP\0" as *const u8 as *const libc::c_char,
1582 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1589:9
     |
1585 | /         let mut init = tty_term_code_entry {
1586 | |             type_0: TTYCODE_STRING,
1587 | |             name: b"kUP3\0" as *const u8 as *const libc::c_char,
1588 | |         };
     | |__________- unnecessary `let` binding
1589 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1585 ~         
1586 ~         tty_term_code_entry {
1587 +             type_0: TTYCODE_STRING,
1588 +             name: b"kUP3\0" as *const u8 as *const libc::c_char,
1589 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1596:9
     |
1592 | /         let mut init = tty_term_code_entry {
1593 | |             type_0: TTYCODE_STRING,
1594 | |             name: b"kUP4\0" as *const u8 as *const libc::c_char,
1595 | |         };
     | |__________- unnecessary `let` binding
1596 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1592 ~         
1593 ~         tty_term_code_entry {
1594 +             type_0: TTYCODE_STRING,
1595 +             name: b"kUP4\0" as *const u8 as *const libc::c_char,
1596 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1603:9
     |
1599 | /         let mut init = tty_term_code_entry {
1600 | |             type_0: TTYCODE_STRING,
1601 | |             name: b"kUP5\0" as *const u8 as *const libc::c_char,
1602 | |         };
     | |__________- unnecessary `let` binding
1603 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1599 ~         
1600 ~         tty_term_code_entry {
1601 +             type_0: TTYCODE_STRING,
1602 +             name: b"kUP5\0" as *const u8 as *const libc::c_char,
1603 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1610:9
     |
1606 | /         let mut init = tty_term_code_entry {
1607 | |             type_0: TTYCODE_STRING,
1608 | |             name: b"kUP6\0" as *const u8 as *const libc::c_char,
1609 | |         };
     | |__________- unnecessary `let` binding
1610 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1606 ~         
1607 ~         tty_term_code_entry {
1608 +             type_0: TTYCODE_STRING,
1609 +             name: b"kUP6\0" as *const u8 as *const libc::c_char,
1610 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1617:9
     |
1613 | /         let mut init = tty_term_code_entry {
1614 | |             type_0: TTYCODE_STRING,
1615 | |             name: b"kUP7\0" as *const u8 as *const libc::c_char,
1616 | |         };
     | |__________- unnecessary `let` binding
1617 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1613 ~         
1614 ~         tty_term_code_entry {
1615 +             type_0: TTYCODE_STRING,
1616 +             name: b"kUP7\0" as *const u8 as *const libc::c_char,
1617 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1624:9
     |
1620 | /         let mut init = tty_term_code_entry {
1621 | |             type_0: TTYCODE_STRING,
1622 | |             name: b"Ms\0" as *const u8 as *const libc::c_char,
1623 | |         };
     | |__________- unnecessary `let` binding
1624 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1620 ~         
1621 ~         tty_term_code_entry {
1622 +             type_0: TTYCODE_STRING,
1623 +             name: b"Ms\0" as *const u8 as *const libc::c_char,
1624 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1631:9
     |
1627 | /         let mut init = tty_term_code_entry {
1628 | |             type_0: TTYCODE_STRING,
1629 | |             name: b"op\0" as *const u8 as *const libc::c_char,
1630 | |         };
     | |__________- unnecessary `let` binding
1631 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1627 ~         
1628 ~         tty_term_code_entry {
1629 +             type_0: TTYCODE_STRING,
1630 +             name: b"op\0" as *const u8 as *const libc::c_char,
1631 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1638:9
     |
1634 | /         let mut init = tty_term_code_entry {
1635 | |             type_0: TTYCODE_STRING,
1636 | |             name: b"rev\0" as *const u8 as *const libc::c_char,
1637 | |         };
     | |__________- unnecessary `let` binding
1638 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1634 ~         
1635 ~         tty_term_code_entry {
1636 +             type_0: TTYCODE_STRING,
1637 +             name: b"rev\0" as *const u8 as *const libc::c_char,
1638 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1645:9
     |
1641 | /         let mut init = tty_term_code_entry {
1642 | |             type_0: TTYCODE_FLAG,
1643 | |             name: b"RGB\0" as *const u8 as *const libc::c_char,
1644 | |         };
     | |__________- unnecessary `let` binding
1645 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1641 ~         
1642 ~         tty_term_code_entry {
1643 +             type_0: TTYCODE_FLAG,
1644 +             name: b"RGB\0" as *const u8 as *const libc::c_char,
1645 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1652:9
     |
1648 | /         let mut init = tty_term_code_entry {
1649 | |             type_0: TTYCODE_STRING,
1650 | |             name: b"ri\0" as *const u8 as *const libc::c_char,
1651 | |         };
     | |__________- unnecessary `let` binding
1652 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1648 ~         
1649 ~         tty_term_code_entry {
1650 +             type_0: TTYCODE_STRING,
1651 +             name: b"ri\0" as *const u8 as *const libc::c_char,
1652 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1659:9
     |
1655 | /         let mut init = tty_term_code_entry {
1656 | |             type_0: TTYCODE_STRING,
1657 | |             name: b"rmacs\0" as *const u8 as *const libc::c_char,
1658 | |         };
     | |__________- unnecessary `let` binding
1659 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1655 ~         
1656 ~         tty_term_code_entry {
1657 +             type_0: TTYCODE_STRING,
1658 +             name: b"rmacs\0" as *const u8 as *const libc::c_char,
1659 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1666:9
     |
1662 | /         let mut init = tty_term_code_entry {
1663 | |             type_0: TTYCODE_STRING,
1664 | |             name: b"rmcup\0" as *const u8 as *const libc::c_char,
1665 | |         };
     | |__________- unnecessary `let` binding
1666 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1662 ~         
1663 ~         tty_term_code_entry {
1664 +             type_0: TTYCODE_STRING,
1665 +             name: b"rmcup\0" as *const u8 as *const libc::c_char,
1666 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1673:9
     |
1669 | /         let mut init = tty_term_code_entry {
1670 | |             type_0: TTYCODE_STRING,
1671 | |             name: b"rmkx\0" as *const u8 as *const libc::c_char,
1672 | |         };
     | |__________- unnecessary `let` binding
1673 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1669 ~         
1670 ~         tty_term_code_entry {
1671 +             type_0: TTYCODE_STRING,
1672 +             name: b"rmkx\0" as *const u8 as *const libc::c_char,
1673 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1680:9
     |
1676 | /         let mut init = tty_term_code_entry {
1677 | |             type_0: TTYCODE_STRING,
1678 | |             name: b"Se\0" as *const u8 as *const libc::c_char,
1679 | |         };
     | |__________- unnecessary `let` binding
1680 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1676 ~         
1677 ~         tty_term_code_entry {
1678 +             type_0: TTYCODE_STRING,
1679 +             name: b"Se\0" as *const u8 as *const libc::c_char,
1680 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1687:9
     |
1683 | /         let mut init = tty_term_code_entry {
1684 | |             type_0: TTYCODE_STRING,
1685 | |             name: b"setab\0" as *const u8 as *const libc::c_char,
1686 | |         };
     | |__________- unnecessary `let` binding
1687 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1683 ~         
1684 ~         tty_term_code_entry {
1685 +             type_0: TTYCODE_STRING,
1686 +             name: b"setab\0" as *const u8 as *const libc::c_char,
1687 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1694:9
     |
1690 | /         let mut init = tty_term_code_entry {
1691 | |             type_0: TTYCODE_STRING,
1692 | |             name: b"setaf\0" as *const u8 as *const libc::c_char,
1693 | |         };
     | |__________- unnecessary `let` binding
1694 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1690 ~         
1691 ~         tty_term_code_entry {
1692 +             type_0: TTYCODE_STRING,
1693 +             name: b"setaf\0" as *const u8 as *const libc::c_char,
1694 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1701:9
     |
1697 | /         let mut init = tty_term_code_entry {
1698 | |             type_0: TTYCODE_STRING,
1699 | |             name: b"setrgbb\0" as *const u8 as *const libc::c_char,
1700 | |         };
     | |__________- unnecessary `let` binding
1701 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1697 ~         
1698 ~         tty_term_code_entry {
1699 +             type_0: TTYCODE_STRING,
1700 +             name: b"setrgbb\0" as *const u8 as *const libc::c_char,
1701 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1708:9
     |
1704 | /         let mut init = tty_term_code_entry {
1705 | |             type_0: TTYCODE_STRING,
1706 | |             name: b"setrgbf\0" as *const u8 as *const libc::c_char,
1707 | |         };
     | |__________- unnecessary `let` binding
1708 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1704 ~         
1705 ~         tty_term_code_entry {
1706 +             type_0: TTYCODE_STRING,
1707 +             name: b"setrgbf\0" as *const u8 as *const libc::c_char,
1708 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1715:9
     |
1711 | /         let mut init = tty_term_code_entry {
1712 | |             type_0: TTYCODE_STRING,
1713 | |             name: b"sgr0\0" as *const u8 as *const libc::c_char,
1714 | |         };
     | |__________- unnecessary `let` binding
1715 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1711 ~         
1712 ~         tty_term_code_entry {
1713 +             type_0: TTYCODE_STRING,
1714 +             name: b"sgr0\0" as *const u8 as *const libc::c_char,
1715 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1722:9
     |
1718 | /         let mut init = tty_term_code_entry {
1719 | |             type_0: TTYCODE_STRING,
1720 | |             name: b"sitm\0" as *const u8 as *const libc::c_char,
1721 | |         };
     | |__________- unnecessary `let` binding
1722 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1718 ~         
1719 ~         tty_term_code_entry {
1720 +             type_0: TTYCODE_STRING,
1721 +             name: b"sitm\0" as *const u8 as *const libc::c_char,
1722 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1729:9
     |
1725 | /         let mut init = tty_term_code_entry {
1726 | |             type_0: TTYCODE_STRING,
1727 | |             name: b"smacs\0" as *const u8 as *const libc::c_char,
1728 | |         };
     | |__________- unnecessary `let` binding
1729 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1725 ~         
1726 ~         tty_term_code_entry {
1727 +             type_0: TTYCODE_STRING,
1728 +             name: b"smacs\0" as *const u8 as *const libc::c_char,
1729 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1736:9
     |
1732 | /         let mut init = tty_term_code_entry {
1733 | |             type_0: TTYCODE_STRING,
1734 | |             name: b"smcup\0" as *const u8 as *const libc::c_char,
1735 | |         };
     | |__________- unnecessary `let` binding
1736 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1732 ~         
1733 ~         tty_term_code_entry {
1734 +             type_0: TTYCODE_STRING,
1735 +             name: b"smcup\0" as *const u8 as *const libc::c_char,
1736 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1743:9
     |
1739 | /         let mut init = tty_term_code_entry {
1740 | |             type_0: TTYCODE_STRING,
1741 | |             name: b"smkx\0" as *const u8 as *const libc::c_char,
1742 | |         };
     | |__________- unnecessary `let` binding
1743 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1739 ~         
1740 ~         tty_term_code_entry {
1741 +             type_0: TTYCODE_STRING,
1742 +             name: b"smkx\0" as *const u8 as *const libc::c_char,
1743 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1750:9
     |
1746 | /         let mut init = tty_term_code_entry {
1747 | |             type_0: TTYCODE_STRING,
1748 | |             name: b"smso\0" as *const u8 as *const libc::c_char,
1749 | |         };
     | |__________- unnecessary `let` binding
1750 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1746 ~         
1747 ~         tty_term_code_entry {
1748 +             type_0: TTYCODE_STRING,
1749 +             name: b"smso\0" as *const u8 as *const libc::c_char,
1750 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1757:9
     |
1753 | /         let mut init = tty_term_code_entry {
1754 | |             type_0: TTYCODE_STRING,
1755 | |             name: b"smul\0" as *const u8 as *const libc::c_char,
1756 | |         };
     | |__________- unnecessary `let` binding
1757 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1753 ~         
1754 ~         tty_term_code_entry {
1755 +             type_0: TTYCODE_STRING,
1756 +             name: b"smul\0" as *const u8 as *const libc::c_char,
1757 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1764:9
     |
1760 | /         let mut init = tty_term_code_entry {
1761 | |             type_0: TTYCODE_STRING,
1762 | |             name: b"smxx\0" as *const u8 as *const libc::c_char,
1763 | |         };
     | |__________- unnecessary `let` binding
1764 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1760 ~         
1761 ~         tty_term_code_entry {
1762 +             type_0: TTYCODE_STRING,
1763 +             name: b"smxx\0" as *const u8 as *const libc::c_char,
1764 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1771:9
     |
1767 | /         let mut init = tty_term_code_entry {
1768 | |             type_0: TTYCODE_STRING,
1769 | |             name: b"Ss\0" as *const u8 as *const libc::c_char,
1770 | |         };
     | |__________- unnecessary `let` binding
1771 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1767 ~         
1768 ~         tty_term_code_entry {
1769 +             type_0: TTYCODE_STRING,
1770 +             name: b"Ss\0" as *const u8 as *const libc::c_char,
1771 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1778:9
     |
1774 | /         let mut init = tty_term_code_entry {
1775 | |             type_0: TTYCODE_FLAG,
1776 | |             name: b"Tc\0" as *const u8 as *const libc::c_char,
1777 | |         };
     | |__________- unnecessary `let` binding
1778 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1774 ~         
1775 ~         tty_term_code_entry {
1776 +             type_0: TTYCODE_FLAG,
1777 +             name: b"Tc\0" as *const u8 as *const libc::c_char,
1778 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1785:9
     |
1781 | /         let mut init = tty_term_code_entry {
1782 | |             type_0: TTYCODE_STRING,
1783 | |             name: b"tsl\0" as *const u8 as *const libc::c_char,
1784 | |         };
     | |__________- unnecessary `let` binding
1785 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1781 ~         
1782 ~         tty_term_code_entry {
1783 +             type_0: TTYCODE_STRING,
1784 +             name: b"tsl\0" as *const u8 as *const libc::c_char,
1785 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1792:9
     |
1788 | /         let mut init = tty_term_code_entry {
1789 | |             type_0: TTYCODE_NUMBER,
1790 | |             name: b"U8\0" as *const u8 as *const libc::c_char,
1791 | |         };
     | |__________- unnecessary `let` binding
1792 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1788 ~         
1789 ~         tty_term_code_entry {
1790 +             type_0: TTYCODE_NUMBER,
1791 +             name: b"U8\0" as *const u8 as *const libc::c_char,
1792 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1799:9
     |
1795 | /         let mut init = tty_term_code_entry {
1796 | |             type_0: TTYCODE_STRING,
1797 | |             name: b"vpa\0" as *const u8 as *const libc::c_char,
1798 | |         };
     | |__________- unnecessary `let` binding
1799 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1795 ~         
1796 ~         tty_term_code_entry {
1797 +             type_0: TTYCODE_STRING,
1798 +             name: b"vpa\0" as *const u8 as *const libc::c_char,
1799 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1806:9
     |
1802 | /         let mut init = tty_term_code_entry {
1803 | |             type_0: TTYCODE_FLAG,
1804 | |             name: b"xenl\0" as *const u8 as *const libc::c_char,
1805 | |         };
     | |__________- unnecessary `let` binding
1806 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1802 ~         
1803 ~         tty_term_code_entry {
1804 +             type_0: TTYCODE_FLAG,
1805 +             name: b"xenl\0" as *const u8 as *const libc::c_char,
1806 +         }
     |

warning: returning the result of a `let` binding from a block
    --> src/tty_term.rs:1813:9
     |
1809 | /         let mut init = tty_term_code_entry {
1810 | |             type_0: TTYCODE_FLAG,
1811 | |             name: b"XT\0" as *const u8 as *const libc::c_char,
1812 | |         };
     | |__________- unnecessary `let` binding
1813 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1809 ~         
1810 ~         tty_term_code_entry {
1811 +             type_0: TTYCODE_FLAG,
1812 +             name: b"XT\0" as *const u8 as *const libc::c_char,
1813 +         }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:1817:1
     |
1817 | / pub unsafe extern "C" fn tty_term_ncodes() -> u_int {
1818 | |     return (::core::mem::size_of::<[tty_term_code_entry; 208]>() as libc::c_ulong)
1819 | |         .wrapping_div(::core::mem::size_of::<tty_term_code_entry>() as libc::c_ulong)
1820 | |         as u_int;
1821 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:1818:5
     |
1818 | /     return (::core::mem::size_of::<[tty_term_code_entry; 208]>() as libc::c_ulong)
1819 | |         .wrapping_div(::core::mem::size_of::<tty_term_code_entry>() as libc::c_ulong)
1820 | |         as u_int;
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1818 ~     (::core::mem::size_of::<[tty_term_code_entry; 208]>() as libc::c_ulong)
1819 +         .wrapping_div(::core::mem::size_of::<tty_term_code_entry>() as libc::c_ulong)
1820 +         as u_int
     |

warning: unneeded `return` statement
    --> src/tty_term.rs:1858:5
     |
1858 |     return xstrdup(buf.as_mut_ptr());
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xstrdup(buf.as_mut_ptr())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/tty_term.rs:1823:40
     |
1823 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty_term.rs:1838:17
     |
1838 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_term.rs:1842:17
     |
1842 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_term.rs:1855:9
     |
1855 |         ptr;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/tty_term.rs:1934:16
     |
1934 |             if !(strcmp(s, (*ent).name) != 0 as libc::c_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `strcmp(s, (*ent).name) == 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *const _` detected
    --> src/tty_term.rs:1864:47
     |
1864 |     let mut ent: *const tty_term_code_entry = 0 as *const tty_term_code_entry;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<tty_term_code_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1865:35
     |
1865 |     let mut code: *mut tty_code = 0 as *mut tty_code;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_code>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1866:39
     |
1866 |     let mut next: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1867:36
     |
1867 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1868:39
     |
1868 |     let mut copy: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1869:37
     |
1869 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1870:40
     |
1870 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_term.rs:1871:43
     |
1871 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1892:17
     |
1892 |         value = 0 as *mut libc::c_char;
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/tty_term.rs:1965:25
     |
1965 |                         0 | _ => {}
     |                         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/tty_term.rs:1970:13
     |
1970 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:1977:1
     |
1977 | / pub unsafe extern "C" fn tty_term_find(
1978 | |     mut name: *mut libc::c_char,
1979 | |     mut fd: libc::c_int,
1980 | |     mut cause: *mut *mut libc::c_char,
...    |
2194 | |     return 0 as *mut tty_term;
2195 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/tty_term.rs:2073:24
     |
2073 |                     if !(n == -(1 as libc::c_int)) {
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n != -(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/tty_term.rs:2194:5
     |
2194 |     return 0 as *mut tty_term;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut tty_term`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1982:35
     |
1982 |     let mut term: *mut tty_term = 0 as *mut tty_term;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_term>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_term.rs:1983:47
     |
1983 |     let mut ent: *const tty_term_code_entry = 0 as *const tty_term_code_entry;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<tty_term_code_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1984:35
     |
1984 |     let mut code: *mut tty_code = 0 as *mut tty_code;
     |                                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_code>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/tty_term.rs:1985:37
     |
1985 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_term.rs:1990:38
     |
1990 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/tty_term.rs:1991:40
     |
1991 |     let mut acs: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/tty_term.rs:1996:13
     |
1996 |             (*term).references;
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/tty_term.rs:2078:17
     |
2078 |                 0 | _ => {}
     |                 ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/tty_term.rs:2081:13
     |
2081 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_term.rs:2095:17
     |
2095 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/tty_term.rs:2188:17
     |
2188 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/tty_term.rs:2194:12
     |
2194 |     return 0 as *mut tty_term;
     |            ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty_term>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2197:1
     |
2197 | / pub unsafe extern "C" fn tty_term_free(mut term: *mut tty_term) {
2198 | |     let mut i: u_int = 0;
2199 | |     (*term).references = ((*term).references).wrapping_sub(1);
2200 | |     if (*term).references != 0 as libc::c_int as u_int {
...    |
2221 | |     free(term as *mut libc::c_void);
2222 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/tty_term.rs:2217:9
     |
2217 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2224:1
     |
2224 | / pub unsafe extern "C" fn tty_term_has(
2225 | |     mut term: *mut tty_term,
2226 | |     mut code: tty_code_code,
2227 | | ) -> libc::c_int {
2228 | |     return ((*((*term).codes).offset(code as isize)).type_0 as libc::c_uint
2229 | |         != TTYCODE_NONE as libc::c_int as libc::c_uint) as libc::c_int;
2230 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2228:5
     |
2228 | /     return ((*((*term).codes).offset(code as isize)).type_0 as libc::c_uint
2229 | |         != TTYCODE_NONE as libc::c_int as libc::c_uint) as libc::c_int;
     | |_______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2228 ~     ((*((*term).codes).offset(code as isize)).type_0 as libc::c_uint
2229 +         != TTYCODE_NONE as libc::c_int as libc::c_uint) as libc::c_int
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2232:1
     |
2232 | / pub unsafe extern "C" fn tty_term_string(
2233 | |     mut term: *mut tty_term,
2234 | |     mut code: tty_code_code,
2235 | | ) -> *const libc::c_char {
...    |
2247 | |     return (*((*term).codes).offset(code as isize)).value.string;
2248 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2247:5
     |
2247 |     return (*((*term).codes).offset(code as isize)).value.string;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*((*term).codes).offset(code as isize)).value.string`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2250:1
     |
2250 | / pub unsafe extern "C" fn tty_term_string1(
2251 | |     mut term: *mut tty_term,
2252 | |     mut code: tty_code_code,
2253 | |     mut a: libc::c_int,
...    |
2266 | |     );
2267 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2255:5
     |
2255 | /     return tparm(
2256 | |         tty_term_string(term, code) as *mut libc::c_char,
2257 | |         a,
2258 | |         0 as libc::c_int,
...    |
2265 | |         0 as libc::c_int,
2266 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2255 ~     tparm(
2256 +         tty_term_string(term, code) as *mut libc::c_char,
2257 +         a,
2258 +         0 as libc::c_int,
2259 +         0 as libc::c_int,
2260 +         0 as libc::c_int,
2261 +         0 as libc::c_int,
2262 +         0 as libc::c_int,
2263 +         0 as libc::c_int,
2264 +         0 as libc::c_int,
2265 +         0 as libc::c_int,
2266 +     )
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2269:1
     |
2269 | / pub unsafe extern "C" fn tty_term_string2(
2270 | |     mut term: *mut tty_term,
2271 | |     mut code: tty_code_code,
2272 | |     mut a: libc::c_int,
...    |
2286 | |     );
2287 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2275:5
     |
2275 | /     return tparm(
2276 | |         tty_term_string(term, code) as *mut libc::c_char,
2277 | |         a,
2278 | |         b,
...    |
2285 | |         0 as libc::c_int,
2286 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2275 ~     tparm(
2276 +         tty_term_string(term, code) as *mut libc::c_char,
2277 +         a,
2278 +         b,
2279 +         0 as libc::c_int,
2280 +         0 as libc::c_int,
2281 +         0 as libc::c_int,
2282 +         0 as libc::c_int,
2283 +         0 as libc::c_int,
2284 +         0 as libc::c_int,
2285 +         0 as libc::c_int,
2286 +     )
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2289:1
     |
2289 | / pub unsafe extern "C" fn tty_term_string3(
2290 | |     mut term: *mut tty_term,
2291 | |     mut code: tty_code_code,
2292 | |     mut a: libc::c_int,
...    |
2307 | |     );
2308 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2296:5
     |
2296 | /     return tparm(
2297 | |         tty_term_string(term, code) as *mut libc::c_char,
2298 | |         a,
2299 | |         b,
...    |
2306 | |         0 as libc::c_int,
2307 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2296 ~     tparm(
2297 +         tty_term_string(term, code) as *mut libc::c_char,
2298 +         a,
2299 +         b,
2300 +         c,
2301 +         0 as libc::c_int,
2302 +         0 as libc::c_int,
2303 +         0 as libc::c_int,
2304 +         0 as libc::c_int,
2305 +         0 as libc::c_int,
2306 +         0 as libc::c_int,
2307 +     )
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2310:1
     |
2310 | / pub unsafe extern "C" fn tty_term_ptr1(
2311 | |     mut term: *mut tty_term,
2312 | |     mut code: tty_code_code,
2313 | |     mut a: *const libc::c_void,
...    |
2326 | |     );
2327 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2315:5
     |
2315 | /     return tparm(
2316 | |         tty_term_string(term, code) as *mut libc::c_char,
2317 | |         a,
2318 | |         0 as libc::c_int,
...    |
2325 | |         0 as libc::c_int,
2326 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2315 ~     tparm(
2316 +         tty_term_string(term, code) as *mut libc::c_char,
2317 +         a,
2318 +         0 as libc::c_int,
2319 +         0 as libc::c_int,
2320 +         0 as libc::c_int,
2321 +         0 as libc::c_int,
2322 +         0 as libc::c_int,
2323 +         0 as libc::c_int,
2324 +         0 as libc::c_int,
2325 +         0 as libc::c_int,
2326 +     )
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2329:1
     |
2329 | / pub unsafe extern "C" fn tty_term_ptr2(
2330 | |     mut term: *mut tty_term,
2331 | |     mut code: tty_code_code,
2332 | |     mut a: *const libc::c_void,
...    |
2346 | |     );
2347 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2335:5
     |
2335 | /     return tparm(
2336 | |         tty_term_string(term, code) as *mut libc::c_char,
2337 | |         a,
2338 | |         b,
...    |
2345 | |         0 as libc::c_int,
2346 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2335 ~     tparm(
2336 +         tty_term_string(term, code) as *mut libc::c_char,
2337 +         a,
2338 +         b,
2339 +         0 as libc::c_int,
2340 +         0 as libc::c_int,
2341 +         0 as libc::c_int,
2342 +         0 as libc::c_int,
2343 +         0 as libc::c_int,
2344 +         0 as libc::c_int,
2345 +         0 as libc::c_int,
2346 +     )
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2349:1
     |
2349 | / pub unsafe extern "C" fn tty_term_number(
2350 | |     mut term: *mut tty_term,
2351 | |     mut code: tty_code_code,
2352 | | ) -> libc::c_int {
...    |
2364 | |     return (*((*term).codes).offset(code as isize)).value.number;
2365 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2364:5
     |
2364 |     return (*((*term).codes).offset(code as isize)).value.number;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*((*term).codes).offset(code as isize)).value.number`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2367:1
     |
2367 | / pub unsafe extern "C" fn tty_term_flag(
2368 | |     mut term: *mut tty_term,
2369 | |     mut code: tty_code_code,
2370 | | ) -> libc::c_int {
...    |
2382 | |     return (*((*term).codes).offset(code as isize)).value.flag;
2383 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2382:5
     |
2382 |     return (*((*term).codes).offset(code as isize)).value.flag;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*((*term).codes).offset(code as isize)).value.flag`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/tty_term.rs:2385:1
     |
2385 | / pub unsafe extern "C" fn tty_term_describe(
2386 | |     mut term: *mut tty_term,
2387 | |     mut code: tty_code_code,
2388 | | ) -> *const libc::c_char {
...    |
2443 | |     return s.as_mut_ptr();
2444 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/tty_term.rs:2443:5
     |
2443 |     return s.as_mut_ptr();
     |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `s.as_mut_ptr()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/utf8.rs:54:1
   |
54 | / pub unsafe extern "C" fn utf8_set(mut ud: *mut utf8_data, mut ch: u_char) {
55 | |     static mut empty: utf8_data = {
56 | |         let mut init = utf8_data {
57 | |             data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
...  |
69 | |     *((*ud).data).as_mut_ptr() = ch;
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: returning the result of a `let` binding from a block
  --> src/utf8.rs:62:9
   |
56 | /         let mut init = utf8_data {
57 | |             data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
58 | |             have: 1 as libc::c_int as u_char,
59 | |             size: 1 as libc::c_int as u_char,
60 | |             width: 1 as libc::c_int as u_char,
61 | |         };
   | |__________- unnecessary `let` binding
62 |           init
   |           ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
   |
56 ~         
57 ~         utf8_data {
58 +             data: [0 as libc::c_int as u_char, 0, 0, 0, 0, 0, 0, 0, 0],
59 +             have: 1 as libc::c_int as u_char,
60 +             size: 1 as libc::c_int as u_char,
61 +             width: 1 as libc::c_int as u_char,
62 +         }
   |

warning: unsafe function's docs miss `# Safety` section
  --> src/utf8.rs:72:1
   |
72 | / pub unsafe extern "C" fn utf8_copy(mut to: *mut utf8_data, mut from: *const utf8_data) {
73 | |     let mut i: u_int = 0;
74 | |     memcpy(
75 | |         to as *mut libc::c_void,
...  |
84 | |     }
85 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
  --> src/utf8.rs:83:9
   |
83 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:87:1
    |
87  | / pub unsafe extern "C" fn utf8_open(
88  | |     mut ud: *mut utf8_data,
89  | |     mut ch: u_char,
90  | | ) -> utf8_state {
...   |
112 | |     return UTF8_MORE;
113 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:112:5
    |
112 |     return UTF8_MORE;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_MORE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:115:1
    |
115 | / pub unsafe extern "C" fn utf8_append(
116 | |     mut ud: *mut utf8_data,
117 | |     mut ch: u_char,
118 | | ) -> utf8_state {
...   |
153 | |     return UTF8_DONE;
154 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:153:5
    |
153 |     return UTF8_DONE;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_DONE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/utf8.rs:169:5
    |
169 |     return width;
    |     ^^^^^^^^^^^^^ help: remove `return`: `width`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:172:1
    |
172 | / pub unsafe extern "C" fn utf8_combine(
173 | |     mut ud: *const utf8_data,
174 | |     mut wc: *mut wchar_t,
175 | | ) -> utf8_state {
...   |
197 | |     };
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:193:13
    |
193 |             return UTF8_ERROR;
    |             ^^^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_ERROR`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/utf8.rs:195:14
    |
195 |         0 => return UTF8_ERROR,
    |              ^^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_ERROR`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/utf8.rs:196:14
    |
196 |         _ => return UTF8_DONE,
    |              ^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_DONE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:189:17
    |
189 |                 0 as *mut wchar_t,
    |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<wchar_t>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/utf8.rs:190:17
    |
190 |                 0 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:200:1
    |
200 | / pub unsafe extern "C" fn utf8_split(
201 | |     mut wc: wchar_t,
202 | |     mut ud: *mut utf8_data,
203 | | ) -> utf8_state {
...   |
219 | |     return UTF8_DONE;
220 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:219:5
    |
219 |     return UTF8_DONE;
    |     ^^^^^^^^^^^^^^^^^ help: remove `return`: `UTF8_DONE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:222:1
    |
222 | / pub unsafe extern "C" fn utf8_strvis(
223 | |     mut dst: *mut libc::c_char,
224 | |     mut src: *const libc::c_char,
225 | |     mut len: size_t,
...   |
285 | |     return dst.offset_from(start) as libc::c_long as libc::c_int;
286 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:285:5
    |
285 |     return dst.offset_from(start) as libc::c_long as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `dst.offset_from(start) as libc::c_long as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/utf8.rs:234:42
    |
234 |     let mut start: *const libc::c_char = 0 as *const libc::c_char;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
   --> src/utf8.rs:235:40
    |
235 |     let mut end: *const libc::c_char = 0 as *const libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:259:21
    |
259 |                     i;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:282:9
    |
282 |         src;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:288:1
    |
288 | / pub unsafe extern "C" fn utf8_stravis(
289 | |     mut dst: *mut *mut libc::c_char,
290 | |     mut src: *const libc::c_char,
291 | |     mut flag: libc::c_int,
...   |
303 | |     return len;
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:303:5
    |
303 |     return len;
    |     ^^^^^^^^^^^ help: remove `return`: `len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:293:38
    |
293 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:296:9
    |
296 |         0 as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:306:1
    |
306 | / pub unsafe extern "C" fn utf8_isvalid(mut s: *const libc::c_char) -> libc::c_int {
307 | |     let mut ud: utf8_data = utf8_data {
308 | |         data: [0; 9],
309 | |         have: 0,
...   |
342 | |     return 1 as libc::c_int;
343 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:342:5
    |
342 |     return 1 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/utf8.rs:313:40
    |
313 |     let mut end: *const libc::c_char = 0 as *const libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:339:13
    |
339 |             s;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:345:1
    |
345 | / pub unsafe extern "C" fn utf8_sanitize(
346 | |     mut src: *const libc::c_char,
347 | | ) -> *mut libc::c_char {
348 | |     let mut dst: *mut libc::c_char = 0 as *mut libc::c_char;
...   |
416 | |     return dst;
417 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:416:5
    |
416 |     return dst;
    |     ^^^^^^^^^^^ help: remove `return`: `dst`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:348:38
    |
348 |     let mut dst: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:358:11
    |
358 |     dst = 0 as *mut libc::c_char;
    |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:389:21
    |
389 |                     i;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:408:9
    |
408 |         src;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:419:1
    |
419 | / pub unsafe extern "C" fn utf8_strlen(mut s: *const utf8_data) -> size_t {
420 | |     let mut i: size_t = 0;
421 | |     i = 0 as libc::c_int as size_t;
422 | |     while (*s.offset(i as isize)).size as libc::c_int != 0 as libc::c_int {
...   |
426 | |     return i;
427 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:426:5
    |
426 |     return i;
    |     ^^^^^^^^^ help: remove `return`: `i`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/utf8.rs:424:9
    |
424 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:429:1
    |
429 | / pub unsafe extern "C" fn utf8_strwidth(
430 | |     mut s: *const utf8_data,
431 | |     mut n: ssize_t,
432 | | ) -> u_int {
...   |
445 | |     return width;
446 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:445:5
    |
445 |     return width;
    |     ^^^^^^^^^^^^^ help: remove `return`: `width`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/utf8.rs:443:9
    |
443 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:448:1
    |
448 | / pub unsafe extern "C" fn utf8_fromcstr(mut src: *const libc::c_char) -> *mut utf8_data {
449 | |     let mut dst: *mut utf8_data = 0 as *mut utf8_data;
450 | |     let mut n: size_t = 0;
451 | |     let mut more: utf8_state = UTF8_MORE;
...   |
492 | |     return dst;
493 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:492:5
    |
492 |     return dst;
    |     ^^^^^^^^^^^ help: remove `return`: `dst`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:449:35
    |
449 |     let mut dst: *mut utf8_data = 0 as *mut utf8_data;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:452:11
    |
452 |     dst = 0 as *mut utf8_data;
    |           ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:473:17
    |
473 |                 n;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:482:9
    |
482 |         n;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:484:9
    |
484 |         src;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:495:1
    |
495 | / pub unsafe extern "C" fn utf8_tocstr(mut src: *mut utf8_data) -> *mut libc::c_char {
496 | |     let mut dst: *mut libc::c_char = 0 as *mut libc::c_char;
497 | |     let mut n: size_t = 0;
498 | |     dst = 0 as *mut libc::c_char;
...   |
521 | |     return dst;
522 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:521:5
    |
521 |     return dst;
    |     ^^^^^^^^^^^ help: remove `return`: `dst`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:496:38
    |
496 |     let mut dst: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:498:11
    |
498 |     dst = 0 as *mut libc::c_char;
    |           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:513:9
    |
513 |         src;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:524:1
    |
524 | / pub unsafe extern "C" fn utf8_cstrwidth(mut s: *const libc::c_char) -> u_int {
525 | |     let mut tmp: utf8_data = utf8_data {
526 | |         data: [0; 9],
527 | |         have: 0,
...   |
562 | |     return width;
563 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:562:5
    |
562 |     return width;
    |     ^^^^^^^^^^^^^ help: remove `return`: `width`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/utf8.rs:557:13
    |
557 |             width;
    |             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:560:9
    |
560 |         s;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:565:1
    |
565 | / pub unsafe extern "C" fn utf8_trimcstr(
566 | |     mut s: *const libc::c_char,
567 | |     mut width: u_int,
568 | | ) -> *mut libc::c_char {
...   |
588 | |     return out;
589 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:588:5
    |
588 |     return out;
    |     ^^^^^^^^^^^ help: remove `return`: `out`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:569:35
    |
569 |     let mut tmp: *mut utf8_data = 0 as *mut utf8_data;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:570:36
    |
570 |     let mut next: *mut utf8_data = 0 as *mut utf8_data;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:571:38
    |
571 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:583:13
    |
583 |             next;
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:591:1
    |
591 | / pub unsafe extern "C" fn utf8_rtrimcstr(
592 | |     mut s: *const libc::c_char,
593 | |     mut width: u_int,
594 | | ) -> *mut libc::c_char {
...   |
628 | |     return out;
629 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:628:5
    |
628 |     return out;
    |     ^^^^^^^^^^^ help: remove `return`: `out`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:595:35
    |
595 |     let mut tmp: *mut utf8_data = 0 as *mut utf8_data;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:596:36
    |
596 |     let mut next: *mut utf8_data = 0 as *mut utf8_data;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:597:35
    |
597 |     let mut end: *mut utf8_data = 0 as *mut utf8_data;
    |                                   ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<utf8_data>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/utf8.rs:598:38
    |
598 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:604:9
    |
604 |         end;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:615:13
    |
615 |             next;
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/utf8.rs:623:13
    |
623 |             next;
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/utf8.rs:631:1
    |
631 | / pub unsafe extern "C" fn utf8_padcstr(
632 | |     mut s: *const libc::c_char,
633 | |     mut width: u_int,
634 | | ) -> *mut libc::c_char {
...   |
659 | |     return out;
660 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/utf8.rs:659:5
    |
659 |     return out;
    |     ^^^^^^^^^^^ help: remove `return`: `out`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/utf8.rs:636:38
    |
636 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/utf8.rs:656:9
    |
656 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1268:1
     |
1268 | / pub unsafe extern "C" fn args_print_add(
1269 | |     mut buf: *mut *mut libc::c_char,
1270 | |     mut len: *mut size_t,
1271 | |     mut fmt: *const libc::c_char,
...    |
1282 | |     free(s as *mut libc::c_void);
1283 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1275:36
     |
1275 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1285:1
     |
1285 | / pub unsafe extern "C" fn cfg_add_cause(mut fmt: *const libc::c_char, mut args: ...) {
1286 | |     let mut ap: ::core::ffi::VaListImpl;
1287 | |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
1288 | |     ap = args.clone();
...    |
1299 | |     *fresh0 = msg;
1300 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1287:38
     |
1287 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/variadic.rs:1291:5
     |
1291 |     cfg_ncauses;
     |     ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/variadic.rs:1297:9
     |
1297 |     let ref mut fresh0 = *cfg_causes
     |         ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
1297 ~     let fresh0 = &mut (*cfg_causes
1298 +         .offset(cfg_ncauses.wrapping_sub(1 as libc::c_int as u_int) as isize));
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1302:1
     |
1302 | / pub unsafe extern "C" fn cmdq_format(
1303 | |     mut item: *mut cmdq_item,
1304 | |     mut key: *const libc::c_char,
1305 | |     mut fmt: *const libc::c_char,
...    |
1328 | |     free(value as *mut libc::c_void);
1329 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1310:40
     |
1310 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1316:13
     |
1316 |             0 as *mut client,
     |             ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1317:13
     |
1317 |             0 as *mut cmdq_item,
     |             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1331:1
     |
1331 | / pub unsafe extern "C" fn cmdq_print(
1332 | |     mut item: *mut cmdq_item,
1333 | |     mut fmt: *const libc::c_char,
1334 | |     mut args: ...
...    |
1373 | |     }
1374 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1337:30
     |
1337 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1339:38
     |
1339 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1340:38
     |
1340 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1366:21
     |
1366 |                     0 as *mut cmd_find_state,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1367:21
     |
1367 |                     0 as *mut args,
     |                     ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<args>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1376:1
     |
1376 | / pub unsafe extern "C" fn control_write(
1377 | |     mut c: *mut client,
1378 | |     mut fmt: *const libc::c_char,
1379 | |     mut args: ...
...    |
1389 | |     server_client_push_stdout(c);
1390 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1392:1
     |
1392 | / pub unsafe extern "C" fn environ_set(
1393 | |     mut env: *mut environ,
1394 | |     mut name: *const libc::c_char,
1395 | |     mut fmt: *const libc::c_char,
...    |
1411 | |     };
1412 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1398:42
     |
1398 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1414:1
     |
1414 | / pub unsafe extern "C" fn environ_log(
1415 | |     mut env: *mut environ,
1416 | |     mut fmt: *const libc::c_char,
1417 | |     mut args: ...
...    |
1437 | |     free(prefix as *mut libc::c_void);
1438 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1419:42
     |
1419 |     let mut envent: *mut environ_entry = 0 as *mut environ_entry;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<environ_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1421:41
     |
1421 |     let mut prefix: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1440:1
     |
1440 | / pub unsafe extern "C" fn format_add(
1441 | |     mut ft: *mut format_tree,
1442 | |     mut key: *const libc::c_char,
1443 | |     mut fmt: *const libc::c_char,
...    |
1462 | |     xvasprintf(&mut (*fe).value, fmt, ap.as_va_list());
1463 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1446:37
     |
1446 |     let mut fe: *mut format_entry = 0 as *mut format_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1447:41
     |
1447 |     let mut fe_now: *mut format_entry = 0 as *mut format_entry;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1465:1
     |
1465 | / pub unsafe extern "C" fn hooks_insert(
1466 | |     mut hooks: *mut hooks,
1467 | |     mut item: *mut cmdq_item,
1468 | |     mut fs: *mut cmd_find_state,
...    |
1508 | |     free(name as *mut libc::c_void);
1509 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1472:31
     |
1472 |     let mut hook: *mut hook = 0 as *mut hook;
     |                               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<hook>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1474:39
     |
1474 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1475:40
     |
1475 |     let mut new_item: *mut cmdq_item = 0 as *mut cmdq_item;
     |                                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1494:9
     |
1494 |         0 as *mut mouse_event,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1506:21
     |
1506 |         cmdq_append(0 as *mut client, new_item);
     |                     ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1511:1
     |
1511 | / pub unsafe extern "C" fn input_reply(
1512 | |     mut ictx: *mut input_ctx,
1513 | |     mut fmt: *const libc::c_char,
1514 | |     mut args: ...
...    |
1521 | |     free(reply as *mut libc::c_void);
1522 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1517:40
     |
1517 |     let mut reply: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1524:1
     |
1524 | / pub unsafe extern "C" fn log_debug(mut msg: *const libc::c_char, mut args: ...) {
1525 | |     let mut ap: ::core::ffi::VaListImpl;
1526 | |     ap = args.clone();
1527 | |     log_vwrite(msg, ap.as_va_list());
1528 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1530:1
     |
1530 | / pub unsafe extern "C" fn fatal(mut msg: *const libc::c_char, mut args: ...) -> ! {
1531 | |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
1532 | |     let mut ap: ::core::ffi::VaListImpl;
1533 | |     ap = args.clone();
...    |
1544 | |     exit(1 as libc::c_int);
1545 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1531:38
     |
1531 |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1547:1
     |
1547 | / pub unsafe extern "C" fn fatalx(mut msg: *const libc::c_char, mut args: ...) -> ! {
1548 | |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
1549 | |     let mut ap: ::core::ffi::VaListImpl;
1550 | |     ap = args.clone();
...    |
1560 | |     exit(1 as libc::c_int);
1561 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1548:38
     |
1548 |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1563:1
     |
1563 | / pub unsafe extern "C" fn options_set_string(
1564 | |     mut oo: *mut options,
1565 | |     mut name: *const libc::c_char,
1566 | |     mut append: libc::c_int,
...    |
1608 | |     return o;
1609 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/variadic.rs:1608:5
     |
1608 |     return o;
     |     ^^^^^^^^^ help: remove `return`: `o`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/variadic.rs:1570:37
     |
1570 |     let mut o: *mut options_entry = 0 as *mut options_entry;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1572:36
     |
1572 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1573:40
     |
1573 |     let mut value: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1597:20
     |
1597 |             return 0 as *mut options_entry;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1611:1
     |
1611 | / pub unsafe extern "C" fn screen_write_cstrlen(
1612 | |     mut fmt: *const libc::c_char,
1613 | |     mut args: ...
1614 | | ) -> size_t {
...    |
1652 | |     return size;
1653 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/variadic.rs:1652:5
     |
1652 |     return size;
     |     ^^^^^^^^^^^^ help: remove `return`: `size`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/variadic.rs:1616:38
     |
1616 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1617:39
     |
1617 |     let mut msg2: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1618:38
     |
1618 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1619:39
     |
1619 |     let mut ptr2: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/variadic.rs:1634:17
     |
1634 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1638:17
     |
1638 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1655:1
     |
1655 | / pub unsafe extern "C" fn screen_write_strlen(
1656 | |     mut fmt: *const libc::c_char,
1657 | |     mut args: ...
1658 | | ) -> size_t {
...    |
1710 | |     return size;
1711 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/variadic.rs:1687:20
     |
1687 |                 if !(more as libc::c_uint == UTF8_MORE as libc::c_int as libc::c_uint) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `more as libc::c_uint != UTF8_MORE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/variadic.rs:1710:5
     |
1710 |     return size;
     |     ^^^^^^^^^^^^ help: remove `return`: `size`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/variadic.rs:1660:38
     |
1660 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1667:32
     |
1667 |     let mut ptr: *mut u_char = 0 as *mut u_char;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/variadic.rs:1680:13
     |
1680 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1691:17
     |
1691 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1694:13
     |
1694 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1703:17
     |
1703 |                 size;
     |                 ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1706:13
     |
1706 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1713:1
     |
1713 | / pub unsafe extern "C" fn screen_write_puts(
1714 | |     mut ctx: *mut screen_write_ctx,
1715 | |     mut gcp: *const grid_cell,
1716 | |     mut fmt: *const libc::c_char,
...    |
1721 | |     screen_write_vnputs(ctx, -(1 as libc::c_int) as ssize_t, gcp, fmt, ap.as_va_list());
1722 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1724:1
     |
1724 | / pub unsafe extern "C" fn screen_write_nputs(
1725 | |     mut ctx: *mut screen_write_ctx,
1726 | |     mut maxlen: ssize_t,
1727 | |     mut gcp: *const grid_cell,
...    |
1733 | |     screen_write_vnputs(ctx, maxlen, gcp, fmt, ap.as_va_list());
1734 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1736:1
     |
1736 | / pub unsafe extern "C" fn screen_write_cnputs(
1737 | |     mut ctx: *mut screen_write_ctx,
1738 | |     mut maxlen: ssize_t,
1739 | |     mut gcp: *const grid_cell,
...    |
1842 | |     free(msg as *mut libc::c_void);
1843 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/variadic.rs:1801:20
     |
1801 |                 if !(more as libc::c_uint == UTF8_MORE as libc::c_int as libc::c_uint) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `more as libc::c_uint != UTF8_MORE as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/variadic.rs:1757:38
     |
1757 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1758:32
     |
1758 |     let mut ptr: *mut u_char = 0 as *mut u_char;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1759:33
     |
1759 |     let mut last: *mut u_char = 0 as *mut u_char;
     |                                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/variadic.rs:1794:13
     |
1794 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1805:17
     |
1805 |                 ptr;
     |                 ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/variadic.rs:1808:13
     |
1808 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/variadic.rs:1816:44
     |
1816 |                     screen_write_putc(ctx, &mut gc, ' ' as i32 as u_char);
     |                                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/variadic.rs:1818:21
     |
1818 |                     size;
     |                     ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_cell` doesn't need a mutable reference
    --> src/variadic.rs:1823:40
     |
1823 |                 screen_write_cell(ctx, &mut gc);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/variadic.rs:1835:17
     |
1835 |                 size;
     |                 ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/variadic.rs:1836:40
     |
1836 |                 screen_write_putc(ctx, &mut gc, *ptr);
     |                                        ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/variadic.rs:1839:13
     |
1839 |             ptr;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1845:1
     |
1845 | / pub unsafe extern "C" fn server_client_add_message(
1846 | |     mut c: *mut client,
1847 | |     mut fmt: *const libc::c_char,
1848 | |     mut args: ...
...    |
1894 | |     }
1895 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1850:39
     |
1850 |     let mut msg: *mut message_entry = 0 as *mut message_entry;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1851:40
     |
1851 |     let mut msg1: *mut message_entry = 0 as *mut message_entry;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1852:36
     |
1852 |     let mut s: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1862:28
     |
1862 |     (*msg).msg_time = time(0 as *mut time_t);
     |                            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1867:29
     |
1867 |     (*msg).entry.tqe_next = 0 as *mut message_entry;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<message_entry>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1897:1
     |
1897 | / pub unsafe extern "C" fn status_message_set(
1898 | |     mut c: *mut client,
1899 | |     mut fmt: *const libc::c_char,
1900 | |     mut args: ...
...    |
1959 | |     (*c).flags |= 0x10 as libc::c_int;
1960 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/variadic.rs:1939:30
     |
1939 |         if event_initialized(&mut (*c).message_timer) != 0 {
     |                              ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_add` doesn't need a mutable reference
    --> src/variadic.rs:1956:44
     |
1956 |         event_add(&mut (*c).message_timer, &mut tv);
     |                                            ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:1962:1
     |
1962 | / pub unsafe extern "C" fn cmdq_error(
1963 | |     mut item: *mut cmdq_item,
1964 | |     mut fmt: *const libc::c_char,
1965 | |     mut args: ...
...    |
2007 | |     free(msg as *mut libc::c_void);
2008 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:1970:38
     |
1970 |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/variadic.rs:1972:38
     |
1972 |     let mut tmp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:2010:1
     |
2010 | / pub unsafe extern "C" fn window_copy_add(
2011 | |     mut wp: *mut window_pane,
2012 | |     mut fmt: *const libc::c_char,
2013 | |     mut args: ...
...    |
2017 | |     window_copy_vadd(wp, fmt, ap.as_va_list());
2018 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:2020:1
     |
2020 | / pub unsafe extern "C" fn xasprintf(
2021 | |     mut ret: *mut *mut libc::c_char,
2022 | |     mut fmt: *const libc::c_char,
2023 | |     mut args: ...
...    |
2029 | |     return i;
2030 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/variadic.rs:2029:5
     |
2029 |     return i;
     |     ^^^^^^^^^ help: remove `return`: `i`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:2032:1
     |
2032 | / pub unsafe extern "C" fn xsnprintf(
2033 | |     mut str: *mut libc::c_char,
2034 | |     mut len: size_t,
2035 | |     mut fmt: *const libc::c_char,
...    |
2042 | |     return i;
2043 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/variadic.rs:2042:5
     |
2042 |     return i;
     |     ^^^^^^^^^ help: remove `return`: `i`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/variadic.rs:2045:1
     |
2045 | / pub unsafe extern "C" fn setproctitle(mut fmt: *const libc::c_char, mut args: ...) {
2046 | |     let mut title: [libc::c_char; 16] = [0; 16];
2047 | |     let mut name: [libc::c_char; 16] = [0; 16];
2048 | |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
2073 | |     prctl(15 as libc::c_int, name.as_mut_ptr());
2074 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/variadic.rs:2048:37
     |
2048 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1242:1
     |
1242 | / pub unsafe extern "C" fn windows_RB_FIND(
1243 | |     mut head: *mut windows,
1244 | |     mut elm: *mut window,
1245 | | ) -> *mut window {
...    |
1258 | |     return 0 as *mut window;
1259 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1258:5
     |
1258 |     return 0 as *mut window;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:1250:9
     |
1250 | /         if comp < 0 as libc::c_int {
1251 | |             tmp = (*tmp).entry.rbe_left;
1252 | |         } else if comp > 0 as libc::c_int {
1253 | |             tmp = (*tmp).entry.rbe_right;
1254 | |         } else {
1255 | |             return tmp
1256 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:1258:12
     |
1258 |     return 0 as *mut window;
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1261:1
     |
1261 | / pub unsafe extern "C" fn windows_RB_NFIND(
1262 | |     mut head: *mut windows,
1263 | |     mut elm: *mut window,
1264 | | ) -> *mut window {
...    |
1279 | |     return res;
1280 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1279:5
     |
1279 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:1266:32
     |
1266 |     let mut res: *mut window = 0 as *mut window;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:1270:9
     |
1270 | /         if comp < 0 as libc::c_int {
1271 | |             res = tmp;
1272 | |             tmp = (*tmp).entry.rbe_left;
1273 | |         } else if comp > 0 as libc::c_int {
...    |
1276 | |             return tmp
1277 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1282:1
     |
1282 | / pub unsafe extern "C" fn windows_RB_NEXT(mut elm: *mut window) -> *mut window {
1283 | |     if !((*elm).entry.rbe_right).is_null() {
1284 | |         elm = (*elm).entry.rbe_right;
1285 | |         while !((*elm).entry.rbe_left).is_null() {
...    |
1300 | |     return elm;
1301 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1300:5
     |
1300 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1303:1
     |
1303 | / pub unsafe extern "C" fn windows_RB_REMOVE(
1304 | |     mut head: *mut windows,
1305 | |     mut elm: *mut window,
1306 | | ) -> *mut window {
...    |
1393 | |     return old;
1394 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1393:5
     |
1393 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:1308:34
     |
1308 |     let mut child: *mut window = 0 as *mut window;
     |                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1309:35
     |
1309 |     let mut parent: *mut window = 0 as *mut window;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1319:37
     |
1319 |         let mut left: *mut window = 0 as *mut window;
     |                                     ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window.rs:1371:5
     |
1371 | /     match current_block {
1372 | |         7245201122033322888 => {
1373 | |             parent = (*elm).entry.rbe_parent;
1374 | |             color = (*elm).entry.rbe_color;
...    |
1388 | |         _ => {}
1389 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1371 ~     if current_block == 7245201122033322888 {
1372 +         parent = (*elm).entry.rbe_parent;
1373 +         color = (*elm).entry.rbe_color;
1374 +         if !child.is_null() {
1375 +             (*child).entry.rbe_parent = parent;
1376 +         }
1377 +         if !parent.is_null() {
1378 +             if (*parent).entry.rbe_left == elm {
1379 +                 (*parent).entry.rbe_left = child;
1380 +             } else {
1381 +                 (*parent).entry.rbe_right = child;
1382 +             }
1383 +         } else {
1384 +             (*head).rbh_root = child;
1385 +         }
1386 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1396:1
     |
1396 | / pub unsafe extern "C" fn windows_RB_MINMAX(
1397 | |     mut head: *mut windows,
1398 | |     mut val: libc::c_int,
1399 | | ) -> *mut window {
...    |
1410 | |     return parent;
1411 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1410:5
     |
1410 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:1401:35
     |
1401 |     let mut parent: *mut window = 0 as *mut window;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1413:1
     |
1413 | / pub unsafe extern "C" fn windows_RB_INSERT_COLOR(
1414 | |     mut head: *mut windows,
1415 | |     mut elm: *mut window,
1416 | | ) {
...    |
1532 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
1533 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:1422:12
     |
1422 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window.rs:1417:35
     |
1417 |     let mut parent: *mut window = 0 as *mut window;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1418:36
     |
1418 |     let mut gparent: *mut window = 0 as *mut window;
     |                                    ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1419:32
     |
1419 |     let mut tmp: *mut window = 0 as *mut window;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1452:21
     |
1452 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1476:17
     |
1476 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1504:21
     |
1504 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1528:17
     |
1528 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1535:1
     |
1535 | / pub unsafe extern "C" fn windows_RB_PREV(mut elm: *mut window) -> *mut window {
1536 | |     if !((*elm).entry.rbe_left).is_null() {
1537 | |         elm = (*elm).entry.rbe_left;
1538 | |         while !((*elm).entry.rbe_right).is_null() {
...    |
1553 | |     return elm;
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1553:5
     |
1553 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1556:1
     |
1556 | / pub unsafe extern "C" fn windows_RB_REMOVE_COLOR(
1557 | |     mut head: *mut windows,
1558 | |     mut parent: *mut window,
1559 | |     mut elm: *mut window,
...    |
1747 | |     }
1748 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:1561:32
     |
1561 |     let mut tmp: *mut window = 0 as *mut window;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1587:17
     |
1587 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:1602:50
     |
1602 |                     let mut oleft: *mut window = 0 as *mut window;
     |                                                  ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1625:21
     |
1625 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1650:17
     |
1650 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1676:17
     |
1676 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:1691:51
     |
1691 |                     let mut oright: *mut window = 0 as *mut window;
     |                                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1714:21
     |
1714 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1739:17
     |
1739 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1750:1
     |
1750 | / pub unsafe extern "C" fn windows_RB_INSERT(
1751 | |     mut head: *mut windows,
1752 | |     mut elm: *mut window,
1753 | | ) -> *mut window {
...    |
1783 | |     return 0 as *mut window;
1784 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:1783:5
     |
1783 |     return 0 as *mut window;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:1754:32
     |
1754 |     let mut tmp: *mut window = 0 as *mut window;
     |                                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1755:35
     |
1755 |     let mut parent: *mut window = 0 as *mut window;
     |                                   ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:1761:9
     |
1761 | /         if comp < 0 as libc::c_int {
1762 | |             tmp = (*tmp).entry.rbe_left;
1763 | |         } else if comp > 0 as libc::c_int {
1764 | |             tmp = (*tmp).entry.rbe_right;
1765 | |         } else {
1766 | |             return tmp
1767 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:1770:30
     |
1770 |     (*elm).entry.rbe_right = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1783:12
     |
1783 |     return 0 as *mut window;
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1786:1
     |
1786 | / pub unsafe extern "C" fn winlinks_RB_REMOVE_COLOR(
1787 | |     mut head: *mut winlinks,
1788 | |     mut parent: *mut winlink,
1789 | |     mut elm: *mut winlink,
...    |
1977 | |     }
1978 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:1791:33
     |
1791 |     let mut tmp: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1817:17
     |
1817 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:1832:51
     |
1832 |                     let mut oleft: *mut winlink = 0 as *mut winlink;
     |                                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1855:21
     |
1855 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1880:17
     |
1880 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1906:17
     |
1906 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:1921:52
     |
1921 |                     let mut oright: *mut winlink = 0 as *mut winlink;
     |                                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:1944:21
     |
1944 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:1969:17
     |
1969 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:1980:1
     |
1980 | / pub unsafe extern "C" fn winlinks_RB_INSERT_COLOR(
1981 | |     mut head: *mut winlinks,
1982 | |     mut elm: *mut winlink,
1983 | | ) {
...    |
2099 | |     (*(*head).rbh_root).entry.rbe_color = 0 as libc::c_int;
2100 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:1989:12
     |
1989 |         if !(!parent.is_null() && (*parent).entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window.rs:1984:36
     |
1984 |     let mut parent: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1985:37
     |
1985 |     let mut gparent: *mut winlink = 0 as *mut winlink;
     |                                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:1986:33
     |
1986 |     let mut tmp: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:2019:21
     |
2019 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2043:17
     |
2043 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2071:21
     |
2071 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2095:17
     |
2095 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2102:1
     |
2102 | / pub unsafe extern "C" fn winlinks_RB_REMOVE(
2103 | |     mut head: *mut winlinks,
2104 | |     mut elm: *mut winlink,
2105 | | ) -> *mut winlink {
...    |
2192 | |     return old;
2193 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2192:5
     |
2192 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2107:35
     |
2107 |     let mut child: *mut winlink = 0 as *mut winlink;
     |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2108:36
     |
2108 |     let mut parent: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2118:38
     |
2118 |         let mut left: *mut winlink = 0 as *mut winlink;
     |                                      ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window.rs:2170:5
     |
2170 | /     match current_block {
2171 | |         7245201122033322888 => {
2172 | |             parent = (*elm).entry.rbe_parent;
2173 | |             color = (*elm).entry.rbe_color;
...    |
2187 | |         _ => {}
2188 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2170 ~     if current_block == 7245201122033322888 {
2171 +         parent = (*elm).entry.rbe_parent;
2172 +         color = (*elm).entry.rbe_color;
2173 +         if !child.is_null() {
2174 +             (*child).entry.rbe_parent = parent;
2175 +         }
2176 +         if !parent.is_null() {
2177 +             if (*parent).entry.rbe_left == elm {
2178 +                 (*parent).entry.rbe_left = child;
2179 +             } else {
2180 +                 (*parent).entry.rbe_right = child;
2181 +             }
2182 +         } else {
2183 +             (*head).rbh_root = child;
2184 +         }
2185 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2195:1
     |
2195 | / pub unsafe extern "C" fn winlinks_RB_INSERT(
2196 | |     mut head: *mut winlinks,
2197 | |     mut elm: *mut winlink,
2198 | | ) -> *mut winlink {
...    |
2228 | |     return 0 as *mut winlink;
2229 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2228:5
     |
2228 |     return 0 as *mut winlink;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut winlink`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2199:33
     |
2199 |     let mut tmp: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2200:36
     |
2200 |     let mut parent: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2206:9
     |
2206 | /         if comp < 0 as libc::c_int {
2207 | |             tmp = (*tmp).entry.rbe_left;
2208 | |         } else if comp > 0 as libc::c_int {
2209 | |             tmp = (*tmp).entry.rbe_right;
2210 | |         } else {
2211 | |             return tmp
2212 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:2215:30
     |
2215 |     (*elm).entry.rbe_right = 0 as *mut winlink;
     |                              ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2228:12
     |
2228 |     return 0 as *mut winlink;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2231:1
     |
2231 | / pub unsafe extern "C" fn winlinks_RB_FIND(
2232 | |     mut head: *mut winlinks,
2233 | |     mut elm: *mut winlink,
2234 | | ) -> *mut winlink {
...    |
2247 | |     return 0 as *mut winlink;
2248 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2247:5
     |
2247 |     return 0 as *mut winlink;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut winlink`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2239:9
     |
2239 | /         if comp < 0 as libc::c_int {
2240 | |             tmp = (*tmp).entry.rbe_left;
2241 | |         } else if comp > 0 as libc::c_int {
2242 | |             tmp = (*tmp).entry.rbe_right;
2243 | |         } else {
2244 | |             return tmp
2245 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:2247:12
     |
2247 |     return 0 as *mut winlink;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2250:1
     |
2250 | / pub unsafe extern "C" fn winlinks_RB_NFIND(
2251 | |     mut head: *mut winlinks,
2252 | |     mut elm: *mut winlink,
2253 | | ) -> *mut winlink {
...    |
2268 | |     return res;
2269 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2268:5
     |
2268 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2255:33
     |
2255 |     let mut res: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2259:9
     |
2259 | /         if comp < 0 as libc::c_int {
2260 | |             res = tmp;
2261 | |             tmp = (*tmp).entry.rbe_left;
2262 | |         } else if comp > 0 as libc::c_int {
...    |
2265 | |             return tmp
2266 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2271:1
     |
2271 | / pub unsafe extern "C" fn winlinks_RB_NEXT(mut elm: *mut winlink) -> *mut winlink {
2272 | |     if !((*elm).entry.rbe_right).is_null() {
2273 | |         elm = (*elm).entry.rbe_right;
2274 | |         while !((*elm).entry.rbe_left).is_null() {
...    |
2289 | |     return elm;
2290 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2289:5
     |
2289 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2292:1
     |
2292 | / pub unsafe extern "C" fn winlinks_RB_MINMAX(
2293 | |     mut head: *mut winlinks,
2294 | |     mut val: libc::c_int,
2295 | | ) -> *mut winlink {
...    |
2306 | |     return parent;
2307 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2306:5
     |
2306 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2297:36
     |
2297 |     let mut parent: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2309:1
     |
2309 | / pub unsafe extern "C" fn winlinks_RB_PREV(mut elm: *mut winlink) -> *mut winlink {
2310 | |     if !((*elm).entry.rbe_left).is_null() {
2311 | |         elm = (*elm).entry.rbe_left;
2312 | |         while !((*elm).entry.rbe_right).is_null() {
...    |
2327 | |     return elm;
2328 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2327:5
     |
2327 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2330:1
     |
2330 | / pub unsafe extern "C" fn window_pane_tree_RB_NEXT(
2331 | |     mut elm: *mut window_pane,
2332 | | ) -> *mut window_pane {
2333 | |     if !((*elm).tree_entry.rbe_right).is_null() {
...    |
2350 | |     return elm;
2351 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2350:5
     |
2350 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2353:1
     |
2353 | / pub unsafe extern "C" fn window_pane_tree_RB_REMOVE(
2354 | |     mut head: *mut window_pane_tree,
2355 | |     mut elm: *mut window_pane,
2356 | | ) -> *mut window_pane {
...    |
2443 | |     return old;
2444 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2443:5
     |
2443 |     return old;
     |     ^^^^^^^^^^^ help: remove `return`: `old`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2358:39
     |
2358 |     let mut child: *mut window_pane = 0 as *mut window_pane;
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2359:40
     |
2359 |     let mut parent: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2369:42
     |
2369 |         let mut left: *mut window_pane = 0 as *mut window_pane;
     |                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window.rs:2421:5
     |
2421 | /     match current_block {
2422 | |         7245201122033322888 => {
2423 | |             parent = (*elm).tree_entry.rbe_parent;
2424 | |             color = (*elm).tree_entry.rbe_color;
...    |
2438 | |         _ => {}
2439 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2421 ~     if current_block == 7245201122033322888 {
2422 +         parent = (*elm).tree_entry.rbe_parent;
2423 +         color = (*elm).tree_entry.rbe_color;
2424 +         if !child.is_null() {
2425 +             (*child).tree_entry.rbe_parent = parent;
2426 +         }
2427 +         if !parent.is_null() {
2428 +             if (*parent).tree_entry.rbe_left == elm {
2429 +                 (*parent).tree_entry.rbe_left = child;
2430 +             } else {
2431 +                 (*parent).tree_entry.rbe_right = child;
2432 +             }
2433 +         } else {
2434 +             (*head).rbh_root = child;
2435 +         }
2436 +     }
     |

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2446:1
     |
2446 | / pub unsafe extern "C" fn window_pane_tree_RB_INSERT_COLOR(
2447 | |     mut head: *mut window_pane_tree,
2448 | |     mut elm: *mut window_pane,
2449 | | ) {
...    |
2575 | |     (*(*head).rbh_root).tree_entry.rbe_color = 0 as libc::c_int;
2576 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:2455:12
     |
2455 |         if !(!parent.is_null() && (*parent).tree_entry.rbe_color == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `parent.is_null() || (*parent).tree_entry.rbe_color != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window.rs:2450:40
     |
2450 |     let mut parent: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2451:41
     |
2451 |     let mut gparent: *mut window_pane = 0 as *mut window_pane;
     |                                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2452:37
     |
2452 |     let mut tmp: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:2489:21
     |
2489 |                     !((*tmp).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2514:17
     |
2514 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2546:21
     |
2546 |                     !((*tmp).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2571:17
     |
2571 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2578:1
     |
2578 | / pub unsafe extern "C" fn window_pane_tree_RB_REMOVE_COLOR(
2579 | |     mut head: *mut window_pane_tree,
2580 | |     mut parent: *mut window_pane,
2581 | |     mut elm: *mut window_pane,
...    |
2781 | |     }
2782 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:2583:37
     |
2583 |     let mut tmp: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:2609:17
     |
2609 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:2627:55
     |
2627 |                     let mut oleft: *mut window_pane = 0 as *mut window_pane;
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:2650:21
     |
2650 |                     !((*oleft).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oleft).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2677:17
     |
2677 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2703:17
     |
2703 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: `0 as *mut _` detected
    --> src/window.rs:2721:56
     |
2721 |                     let mut oright: *mut window_pane = 0 as *mut window_pane;
     |                                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary operation
    --> src/window.rs:2746:21
     |
2746 |                     !((*oright).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*oright).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unnecessary operation
    --> src/window.rs:2773:17
     |
2773 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be reduced to: `((*tmp).tree_entry.rbe_parent).is_null();`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2784:1
     |
2784 | / pub unsafe extern "C" fn window_pane_tree_RB_INSERT(
2785 | |     mut head: *mut window_pane_tree,
2786 | |     mut elm: *mut window_pane,
2787 | | ) -> *mut window_pane {
...    |
2817 | |     return 0 as *mut window_pane;
2818 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2817:5
     |
2817 |     return 0 as *mut window_pane;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window_pane`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2788:37
     |
2788 |     let mut tmp: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2789:40
     |
2789 |     let mut parent: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2795:9
     |
2795 | /         if comp < 0 as libc::c_int {
2796 | |             tmp = (*tmp).tree_entry.rbe_left;
2797 | |         } else if comp > 0 as libc::c_int {
2798 | |             tmp = (*tmp).tree_entry.rbe_right;
2799 | |         } else {
2800 | |             return tmp
2801 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:2804:35
     |
2804 |     (*elm).tree_entry.rbe_right = 0 as *mut window_pane;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2817:12
     |
2817 |     return 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2820:1
     |
2820 | / pub unsafe extern "C" fn window_pane_tree_RB_FIND(
2821 | |     mut head: *mut window_pane_tree,
2822 | |     mut elm: *mut window_pane,
2823 | | ) -> *mut window_pane {
...    |
2836 | |     return 0 as *mut window_pane;
2837 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2836:5
     |
2836 |     return 0 as *mut window_pane;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window_pane`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2828:9
     |
2828 | /         if comp < 0 as libc::c_int {
2829 | |             tmp = (*tmp).tree_entry.rbe_left;
2830 | |         } else if comp > 0 as libc::c_int {
2831 | |             tmp = (*tmp).tree_entry.rbe_right;
2832 | |         } else {
2833 | |             return tmp
2834 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: `0 as *mut _` detected
    --> src/window.rs:2836:12
     |
2836 |     return 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2839:1
     |
2839 | / pub unsafe extern "C" fn window_pane_tree_RB_NFIND(
2840 | |     mut head: *mut window_pane_tree,
2841 | |     mut elm: *mut window_pane,
2842 | | ) -> *mut window_pane {
...    |
2857 | |     return res;
2858 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2857:5
     |
2857 |     return res;
     |     ^^^^^^^^^^^ help: remove `return`: `res`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2844:37
     |
2844 |     let mut res: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `if` chain can be rewritten with `match`
    --> src/window.rs:2848:9
     |
2848 | /         if comp < 0 as libc::c_int {
2849 | |             res = tmp;
2850 | |             tmp = (*tmp).tree_entry.rbe_left;
2851 | |         } else if comp > 0 as libc::c_int {
...    |
2854 | |             return tmp
2855 | |         }
     | |_________^
     |
     = help: consider rewriting the `if` chain to use `cmp` and `match`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2860:1
     |
2860 | / pub unsafe extern "C" fn window_pane_tree_RB_PREV(
2861 | |     mut elm: *mut window_pane,
2862 | | ) -> *mut window_pane {
2863 | |     if !((*elm).tree_entry.rbe_left).is_null() {
...    |
2880 | |     return elm;
2881 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2880:5
     |
2880 |     return elm;
     |     ^^^^^^^^^^^ help: remove `return`: `elm`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2883:1
     |
2883 | / pub unsafe extern "C" fn window_pane_tree_RB_MINMAX(
2884 | |     mut head: *mut window_pane_tree,
2885 | |     mut val: libc::c_int,
2886 | | ) -> *mut window_pane {
...    |
2897 | |     return parent;
2898 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2897:5
     |
2897 |     return parent;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `parent`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2888:40
     |
2888 |     let mut parent: *mut window_pane = 0 as *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2900:1
     |
2900 | / pub unsafe extern "C" fn window_cmp(
2901 | |     mut w1: *mut window,
2902 | |     mut w2: *mut window,
2903 | | ) -> libc::c_int {
2904 | |     return ((*w1).id).wrapping_sub((*w2).id) as libc::c_int;
2905 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2904:5
     |
2904 |     return ((*w1).id).wrapping_sub((*w2).id) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*w1).id).wrapping_sub((*w2).id) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2907:1
     |
2907 | / pub unsafe extern "C" fn winlink_cmp(
2908 | |     mut wl1: *mut winlink,
2909 | |     mut wl2: *mut winlink,
2910 | | ) -> libc::c_int {
2911 | |     return (*wl1).idx - (*wl2).idx;
2912 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2911:5
     |
2911 |     return (*wl1).idx - (*wl2).idx;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(*wl1).idx - (*wl2).idx`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2914:1
     |
2914 | / pub unsafe extern "C" fn window_pane_cmp(
2915 | |     mut wp1: *mut window_pane,
2916 | |     mut wp2: *mut window_pane,
2917 | | ) -> libc::c_int {
2918 | |     return ((*wp1).id).wrapping_sub((*wp2).id) as libc::c_int;
2919 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2918:5
     |
2918 |     return ((*wp1).id).wrapping_sub((*wp2).id) as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `((*wp1).id).wrapping_sub((*wp2).id) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2921:1
     |
2921 | / pub unsafe extern "C" fn winlink_find_by_window(
2922 | |     mut wwl: *mut winlinks,
2923 | |     mut w: *mut window,
2924 | | ) -> *mut winlink {
...    |
2933 | |     return 0 as *mut winlink;
2934 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2933:5
     |
2933 |     return 0 as *mut winlink;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut winlink`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2925:32
     |
2925 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2933:12
     |
2933 |     return 0 as *mut winlink;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2936:1
     |
2936 | / pub unsafe extern "C" fn winlink_find_by_index(
2937 | |     mut wwl: *mut winlinks,
2938 | |     mut idx: libc::c_int,
2939 | | ) -> *mut winlink {
...    |
2978 | |     return winlinks_RB_FIND(wwl, &mut wl);
2979 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2978:5
     |
2978 |     return winlinks_RB_FIND(wwl, &mut wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `winlinks_RB_FIND(wwl, &mut wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2942:18
     |
2942 |         session: 0 as *mut session,
     |                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2943:17
     |
2943 |         window: 0 as *mut window,
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2957:22
     |
2957 |         status_text: 0 as *mut libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2960:23
     |
2960 |             rbe_left: 0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2961:24
     |
2961 |             rbe_right: 0 as *mut winlink,
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2962:25
     |
2962 |             rbe_parent: 0 as *mut winlink,
     |                         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2966:23
     |
2966 |             tqe_next: 0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2967:23
     |
2967 |             tqe_prev: 0 as *mut *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2970:23
     |
2970 |             tqe_next: 0 as *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2971:23
     |
2971 |             tqe_prev: 0 as *mut *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:2981:1
     |
2981 | / pub unsafe extern "C" fn winlink_find_by_window_id(
2982 | |     mut wwl: *mut winlinks,
2983 | |     mut id: u_int,
2984 | | ) -> *mut winlink {
...    |
2993 | |     return 0 as *mut winlink;
2994 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:2993:5
     |
2993 |     return 0 as *mut winlink;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut winlink`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:2985:32
     |
2985 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:2993:12
     |
2993 |     return 0 as *mut winlink;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/window.rs:3011:12
     |
3011 |         if !(i != idx) {
     |            ^^^^^^^^^^^ help: try: `i == idx`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:3015:5
     |
3015 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:3009:13
     |
3009 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3018:1
     |
3018 | / pub unsafe extern "C" fn winlink_count(mut wwl: *mut winlinks) -> u_int {
3019 | |     let mut wl: *mut winlink = 0 as *mut winlink;
3020 | |     let mut n: u_int = 0;
3021 | |     n = 0 as libc::c_int as u_int;
...    |
3028 | |     return n;
3029 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3028:5
     |
3028 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3019:32
     |
3019 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:3025:9
     |
3025 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3031:1
     |
3031 | / pub unsafe extern "C" fn winlink_add(
3032 | |     mut wwl: *mut winlinks,
3033 | |     mut idx: libc::c_int,
3034 | | ) -> *mut winlink {
...    |
3050 | |     return wl;
3051 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3050:5
     |
3050 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3035:32
     |
3035 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3039:20
     |
3039 |             return 0 as *mut winlink;
     |                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3042:16
     |
3042 |         return 0 as *mut winlink
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3053:1
     |
3053 | / pub unsafe extern "C" fn winlink_set_window(mut wl: *mut winlink, mut w: *mut window) {
3054 | |     if !((*wl).window).is_null() {
3055 | |         if !((*wl).wentry.tqe_next).is_null() {
3056 | |             (*(*wl).wentry.tqe_next).wentry.tqe_prev = (*wl).wentry.tqe_prev;
...    |
3082 | |     );
3083 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:3070:29
     |
3070 |     (*wl).wentry.tqe_next = 0 as *mut winlink;
     |                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3085:1
     |
3085 | / pub unsafe extern "C" fn winlink_remove(mut wwl: *mut winlinks, mut wl: *mut winlink) {
3086 | |     let mut w: *mut window = (*wl).window;
3087 | |     if !w.is_null() {
3088 | |         if !((*wl).wentry.tqe_next).is_null() {
...    |
3105 | |     free(wl as *mut libc::c_void);
3106 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3108:1
     |
3108 | / pub unsafe extern "C" fn winlink_next(mut wl: *mut winlink) -> *mut winlink {
3109 | |     return winlinks_RB_NEXT(wl);
3110 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3109:5
     |
3109 |     return winlinks_RB_NEXT(wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `winlinks_RB_NEXT(wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3112:1
     |
3112 | / pub unsafe extern "C" fn winlink_previous(mut wl: *mut winlink) -> *mut winlink {
3113 | |     return winlinks_RB_PREV(wl);
3114 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3113:5
     |
3113 |     return winlinks_RB_PREV(wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `winlinks_RB_PREV(wl)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3116:1
     |
3116 | / pub unsafe extern "C" fn winlink_next_by_number(
3117 | |     mut wl: *mut winlink,
3118 | |     mut s: *mut session,
3119 | |     mut n: libc::c_int,
...    |
3129 | |     return wl;
3130 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3129:5
     |
3129 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:3127:9
     |
3127 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3132:1
     |
3132 | / pub unsafe extern "C" fn winlink_previous_by_number(
3133 | |     mut wl: *mut winlink,
3134 | |     mut s: *mut session,
3135 | |     mut n: libc::c_int,
...    |
3145 | |     return wl;
3146 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3145:5
     |
3145 |     return wl;
     |     ^^^^^^^^^^ help: remove `return`: `wl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:3143:9
     |
3143 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3148:1
     |
3148 | / pub unsafe extern "C" fn winlink_stack_push(
3149 | |     mut stack: *mut winlink_stack,
3150 | |     mut wl: *mut winlink,
3151 | | ) {
...    |
3163 | |     (*wl).sentry.tqe_prev = &mut (*stack).tqh_first;
3164 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3166:1
     |
3166 | / pub unsafe extern "C" fn winlink_stack_remove(
3167 | |     mut stack: *mut winlink_stack,
3168 | |     mut wl: *mut winlink,
3169 | | ) {
...    |
3186 | |     }
3187 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:3170:33
     |
3170 |     let mut wl2: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3189:1
     |
3189 | / pub unsafe extern "C" fn window_find_by_id_str(
3190 | |     mut s: *const libc::c_char,
3191 | | ) -> *mut window {
3192 | |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
...    |
3208 | |     return window_find_by_id(id);
3209 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3208:5
     |
3208 |     return window_find_by_id(id);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_find_by_id(id)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/window.rs:3192:43
     |
3192 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3195:16
     |
3195 |         return 0 as *mut window;
     |                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3206:16
     |
3206 |         return 0 as *mut window;
     |                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3211:1
     |
3211 | / pub unsafe extern "C" fn window_find_by_id(mut id: u_int) -> *mut window {
3212 | |     let mut w: window = window {
3213 | |         id: 0,
3214 | |         name: 0 as *mut libc::c_char,
...    |
3343 | |     return windows_RB_FIND(&mut windows, &mut w);
3344 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3343:5
     |
3343 |     return windows_RB_FIND(&mut windows, &mut w);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `windows_RB_FIND(&mut windows, &mut w)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3214:15
     |
3214 |         name: 0 as *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3218:31
     |
3218 |                     tqe_next: 0 as *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3219:31
     |
3219 |                     tqe_prev: 0 as *mut *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3227:27
     |
3227 |                 evcb_arg: 0 as *mut libc::c_void,
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3231:31
     |
3231 |                     tqe_next: 0 as *mut event,
     |                               ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3232:31
     |
3232 |                     tqe_prev: 0 as *mut *mut event,
     |                               ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3236:22
     |
3236 |             ev_base: 0 as *mut event_base,
     |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3240:34
     |
3240 |                         le_next: 0 as *mut event,
     |                                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3241:34
     |
3241 |                         le_prev: 0 as *mut *mut event,
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3254:31
     |
3254 |                     tqe_next: 0 as *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3255:31
     |
3255 |                     tqe_prev: 0 as *mut *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3263:27
     |
3263 |                 evcb_arg: 0 as *mut libc::c_void,
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3267:31
     |
3267 |                     tqe_next: 0 as *mut event,
     |                               ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3268:31
     |
3268 |                     tqe_prev: 0 as *mut *mut event,
     |                               ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3272:22
     |
3272 |             ev_base: 0 as *mut event_base,
     |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3276:34
     |
3276 |                         le_next: 0 as *mut event,
     |                                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3277:34
     |
3277 |                         le_prev: 0 as *mut *mut event,
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3287:17
     |
3287 |         active: 0 as *mut window_pane,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3288:15
     |
3288 |         last: 0 as *mut window_pane,
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3290:24
     |
3290 |             tqh_first: 0 as *mut window_pane,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3291:23
     |
3291 |             tqh_last: 0 as *mut *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3294:22
     |
3294 |         layout_root: 0 as *mut layout_cell,
     |                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3295:28
     |
3295 |         saved_layout_root: 0 as *mut layout_cell,
     |                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3296:21
     |
3296 |         old_layout: 0 as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3302:23
     |
3302 |             tqe_next: 0 as *mut window,
     |                       ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3303:23
     |
3303 |             tqe_prev: 0 as *mut *mut window,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3305:18
     |
3305 |         options: 0 as *mut options,
     |                  ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<options>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3332:24
     |
3332 |             tqh_first: 0 as *mut winlink,
     |                        ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3333:23
     |
3333 |             tqh_last: 0 as *mut *mut winlink,
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3336:23
     |
3336 |             rbe_left: 0 as *mut window,
     |                       ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3337:24
     |
3337 |             rbe_right: 0 as *mut window,
     |                        ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3338:25
     |
3338 |             rbe_parent: 0 as *mut window,
     |                         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3346:1
     |
3346 | / pub unsafe extern "C" fn window_update_activity(mut w: *mut window) {
3347 | |     gettimeofday(&mut (*w).activity_time, 0 as *mut libc::c_void);
3348 | |     alerts_queue(w, 0x2 as libc::c_int);
3349 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:3347:43
     |
3347 |     gettimeofday(&mut (*w).activity_time, 0 as *mut libc::c_void);
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3351:1
     |
3351 | / pub unsafe extern "C" fn window_create(mut sx: u_int, mut sy: u_int) -> *mut window {
3352 | |     let mut w: *mut window = 0 as *mut window;
3353 | |     w = xcalloc(
3354 | |         1 as libc::c_int as size_t,
...    |
3375 | |     return w;
3376 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3375:5
     |
3375 |     return w;
     |     ^^^^^^^^^ help: remove `return`: `w`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3352:30
     |
3352 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3357:17
     |
3357 |     (*w).name = 0 as *mut libc::c_char;
     |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3359:28
     |
3359 |     (*w).panes.tqh_first = 0 as *mut window_pane;
     |                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3361:19
     |
3361 |     (*w).active = 0 as *mut window_pane;
     |                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3363:24
     |
3363 |     (*w).layout_root = 0 as *mut layout_cell;
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3368:31
     |
3368 |     (*w).winlinks.tqh_first = 0 as *mut winlink;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3378:1
     |
3378 | / pub unsafe extern "C" fn window_create_spawn(
3379 | |     mut name: *const libc::c_char,
3380 | |     mut argc: libc::c_int,
3381 | |     mut argv: *mut *mut libc::c_char,
...    |
3421 | |     return w;
3422 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3421:5
     |
3421 |     return w;
     |     ^^^^^^^^^ help: remove `return`: `w`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3392:30
     |
3392 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3393:36
     |
3393 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3397:9
     |
3397 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3407:16
     |
3407 |         return 0 as *mut window;
     |                ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/window.rs:3437:26
     |
3437 |     if event_initialized(&mut (*w).name_event) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/window.rs:3440:26
     |
3440 |     if event_initialized(&mut (*w).alerts_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3449:1
     |
3449 | / pub unsafe extern "C" fn window_pane_destroy_ready(
3450 | |     mut wp: *mut window_pane,
3451 | | ) -> libc::c_int {
3452 | |     let mut n: libc::c_int = 0;
...    |
3470 | |     return 1 as libc::c_int;
3471 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3470:5
     |
3470 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3473:1
     |
3473 | / pub unsafe extern "C" fn window_add_ref(
3474 | |     mut w: *mut window,
3475 | |     mut from: *const libc::c_char,
3476 | | ) {
...    |
3486 | |     );
3487 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/window.rs:3478:5
     |
3478 |     (*w).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3489:1
     |
3489 | / pub unsafe extern "C" fn window_remove_ref(
3490 | |     mut w: *mut window,
3491 | |     mut from: *const libc::c_char,
3492 | | ) {
...    |
3508 | |     }
3509 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
    --> src/window.rs:3494:5
     |
3494 |     (*w).references;
     |     ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3511:1
     |
3511 | / pub unsafe extern "C" fn window_set_name(
3512 | |     mut w: *mut window,
3513 | |     mut new_name: *const libc::c_char,
3514 | | ) {
...    |
3522 | |     notify_window(b"window-renamed\0" as *const u8 as *const libc::c_char, w);
3523 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3525:1
     |
3525 | / pub unsafe extern "C" fn window_resize(
3526 | |     mut w: *mut window,
3527 | |     mut sx: u_int,
3528 | |     mut sy: u_int,
...    |
3531 | |     (*w).sy = sy;
3532 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3534:1
     |
3534 | / pub unsafe extern "C" fn window_has_pane(
3535 | |     mut w: *mut window,
3536 | |     mut wp: *mut window_pane,
3537 | | ) -> libc::c_int {
...    |
3546 | |     return 0 as libc::c_int;
3547 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3546:5
     |
3546 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3538:37
     |
3538 |     let mut wp1: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3549:1
     |
3549 | / pub unsafe extern "C" fn window_set_active_pane(
3550 | |     mut w: *mut window,
3551 | |     mut wp: *mut window_pane,
3552 | | ) -> libc::c_int {
...    |
3586 | |     return 1 as libc::c_int;
3587 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3586:5
     |
3586 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3589:1
     |
3589 | / pub unsafe extern "C" fn window_redraw_active_switch(
3590 | |     mut w: *mut window,
3591 | |     mut wp: *mut window_pane,
3592 | | ) {
...    |
3624 | |     }
3625 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/window.rs:3593:36
     |
3593 |     let mut gc: *const grid_cell = 0 as *const grid_cell;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<grid_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `style_equal` doesn't need a mutable reference
    --> src/window.rs:3615:44
     |
3615 |         || style_equal(&grid_default_cell, &mut (*(*w).active).colgc) != 0
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `style_equal` doesn't need a mutable reference
    --> src/window.rs:3621:44
     |
3621 |         || style_equal(&grid_default_cell, &mut (*wp).colgc) != 0
     |                                            ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3627:1
     |
3627 | / pub unsafe extern "C" fn window_get_active_at(
3628 | |     mut w: *mut window,
3629 | |     mut x: u_int,
3630 | |     mut y: u_int,
...    |
3644 | |     return 0 as *mut window_pane;
3645 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:3635:12
     |
3635 |         if !(window_pane_visible(wp) == 0) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_pane_visible(wp) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:3644:5
     |
3644 |     return 0 as *mut window_pane;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window_pane`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3632:36
     |
3632 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3644:12
     |
3644 |     return 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3647:1
     |
3647 | / pub unsafe extern "C" fn window_find_string(
3648 | |     mut w: *mut window,
3649 | |     mut s: *const libc::c_char,
3650 | | ) -> *mut window_pane {
...    |
3692 | |     return window_get_active_at(w, x, y);
3693 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3692:5
     |
3692 |     return window_get_active_at(w, x, y);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_get_active_at(w, x, y)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3690:16
     |
3690 |         return 0 as *mut window_pane
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3695:1
     |
3695 | / pub unsafe extern "C" fn window_zoom(mut wp: *mut window_pane) -> libc::c_int {
3696 | |     let mut w: *mut window = (*wp).window;
3697 | |     let mut wp1: *mut window_pane = 0 as *mut window_pane;
3698 | |     if (*w).flags & 0x1000 as libc::c_int != 0 {
...    |
3720 | |     return 0 as libc::c_int;
3721 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3720:5
     |
3720 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3697:37
     |
3697 |     let mut wp1: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3713:30
     |
3713 |         (*wp1).layout_cell = 0 as *mut layout_cell;
     |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3723:1
     |
3723 | / pub unsafe extern "C" fn window_unzoom(mut w: *mut window) -> libc::c_int {
3724 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
3725 | |     if (*w).flags & 0x1000 as libc::c_int == 0 {
3726 | |         return -(1 as libc::c_int);
...    |
3740 | |     return 0 as libc::c_int;
3741 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3740:5
     |
3740 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3724:36
     |
3724 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3731:30
     |
3731 |     (*w).saved_layout_root = 0 as *mut layout_cell;
     |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3735:35
     |
3735 |         (*wp).saved_layout_cell = 0 as *mut layout_cell;
     |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3743:1
     |
3743 | / pub unsafe extern "C" fn window_add_pane(
3744 | |     mut w: *mut window,
3745 | |     mut other: *mut window_pane,
3746 | |     mut before: libc::c_int,
...    |
3826 | |     return wp;
3827 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3826:5
     |
3826 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3750:36
     |
3750 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3811:36
     |
3811 |             (*wp).entry.tqe_next = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3829:1
     |
3829 | / pub unsafe extern "C" fn window_lost_pane(mut w: *mut window, mut wp: *mut window_pane) {
3830 | |     log_debug(
3831 | |         b"%s: @%u pane %%%u\0" as *const u8 as *const libc::c_char,
3832 | |         (*::core::mem::transmute::<
...    |
3861 | |     }
3862 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:3845:21
     |
3845 |         (*w).last = 0 as *mut window_pane;
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:3860:21
     |
3860 |         (*w).last = 0 as *mut window_pane;
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3864:1
     |
3864 | / pub unsafe extern "C" fn window_remove_pane(
3865 | |     mut w: *mut window,
3866 | |     mut wp: *mut window_pane,
3867 | | ) {
...    |
3875 | |     window_pane_destroy(wp);
3876 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3878:1
     |
3878 | / pub unsafe extern "C" fn window_pane_at_index(
3879 | |     mut w: *mut window,
3880 | |     mut idx: u_int,
3881 | | ) -> *mut window_pane {
...    |
3897 | |     return 0 as *mut window_pane;
3898 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3897:5
     |
3897 |     return 0 as *mut window_pane;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut window_pane`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3882:36
     |
3882 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:3894:9
     |
3894 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window.rs:3897:12
     |
3897 |     return 0 as *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3900:1
     |
3900 | / pub unsafe extern "C" fn window_pane_next_by_number(
3901 | |     mut w: *mut window,
3902 | |     mut wp: *mut window_pane,
3903 | |     mut n: u_int,
...    |
3913 | |     return wp;
3914 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3913:5
     |
3913 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:3911:9
     |
3911 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3916:1
     |
3916 | / pub unsafe extern "C" fn window_pane_previous_by_number(
3917 | |     mut w: *mut window,
3918 | |     mut wp: *mut window_pane,
3919 | |     mut n: u_int,
...    |
3929 | |     return wp;
3930 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3929:5
     |
3929 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:3927:9
     |
3927 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3932:1
     |
3932 | / pub unsafe extern "C" fn window_pane_index(
3933 | |     mut wp: *mut window_pane,
3934 | |     mut i: *mut u_int,
3935 | | ) -> libc::c_int {
...    |
3951 | |     return -(1 as libc::c_int);
3952 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3951:5
     |
3951 |     return -(1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3936:36
     |
3936 |     let mut wq: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:3948:9
     |
3948 |         *i;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3954:1
     |
3954 | / pub unsafe extern "C" fn window_count_panes(mut w: *mut window) -> u_int {
3955 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
3956 | |     let mut n: u_int = 0;
3957 | |     n = 0 as libc::c_int as u_int;
...    |
3964 | |     return n;
3965 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:3964:5
     |
3964 |     return n;
     |     ^^^^^^^^^ help: remove `return`: `n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:3955:36
     |
3955 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:3961:9
     |
3961 |         n;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3967:1
     |
3967 | / pub unsafe extern "C" fn window_destroy_panes(mut w: *mut window) {
3968 | |     let mut wp: *mut window_pane = 0 as *mut window_pane;
3969 | |     while !((*w).panes.tqh_first).is_null() {
3970 | |         wp = (*w).panes.tqh_first;
...    |
3978 | |     }
3979 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:3968:36
     |
3968 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:3981:1
     |
3981 | / pub unsafe extern "C" fn window_printable_flags(
3982 | |     mut wl: *mut winlink,
3983 | | ) -> *const libc::c_char {
3984 | |     let mut s: *mut session = (*wl).session;
...    |
4024 | |     return flags.as_mut_ptr();
4025 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4024:5
     |
4024 |     return flags.as_mut_ptr();
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `flags.as_mut_ptr()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: manual implementation of an assign operation
    --> src/window.rs:3990:9
     |
3990 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:3995:9
     |
3995 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:4000:9
     |
4000 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:4005:9
     |
4005 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:4010:9
     |
4010 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:4015:9
     |
4015 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
    --> src/window.rs:4020:9
     |
4020 |         pos = pos + 1;
     |         ^^^^^^^^^^^^^ help: replace it with: `pos += 1`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4027:1
     |
4027 | / pub unsafe extern "C" fn window_pane_find_by_id_str(
4028 | |     mut s: *const libc::c_char,
4029 | | ) -> *mut window_pane {
4030 | |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
...    |
4046 | |     return window_pane_find_by_id(id);
4047 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4046:5
     |
4046 |     return window_pane_find_by_id(id);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_pane_find_by_id(id)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/window.rs:4030:43
     |
4030 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4033:16
     |
4033 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4044:16
     |
4044 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4049:1
     |
4049 | / pub unsafe extern "C" fn window_pane_find_by_id(mut id: u_int) -> *mut window_pane {
4050 | |     let mut wp: window_pane = window_pane {
4051 | |         id: 0,
4052 | |         active_point: 0,
...    |
4265 | |     return window_pane_tree_RB_FIND(&mut all_window_panes, &mut wp);
4266 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4265:5
     |
4265 |     return window_pane_tree_RB_FIND(&mut all_window_panes, &mut wp);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_pane_tree_RB_FIND(&mut all_window_panes, &mut wp)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:4053:17
     |
4053 |         window: 0 as *mut window,
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4054:22
     |
4054 |         layout_cell: 0 as *mut layout_cell,
     |                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4055:28
     |
4055 |         saved_layout_cell: 0 as *mut layout_cell,
     |                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4064:15
     |
4064 |         argv: 0 as *mut *mut libc::c_char,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4065:16
     |
4065 |         shell: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4066:14
     |
4066 |         cwd: 0 as *const libc::c_char,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4071:16
     |
4071 |         event: 0 as *mut bufferevent,
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bufferevent>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4075:31
     |
4075 |                     tqe_next: 0 as *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4076:31
     |
4076 |                     tqe_prev: 0 as *mut *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4084:27
     |
4084 |                 evcb_arg: 0 as *mut libc::c_void,
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4088:31
     |
4088 |                     tqe_next: 0 as *mut event,
     |                               ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4089:31
     |
4089 |                     tqe_prev: 0 as *mut *mut event,
     |                               ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4093:22
     |
4093 |             ev_base: 0 as *mut event_base,
     |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4097:34
     |
4097 |                         le_next: 0 as *mut event,
     |                                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4098:34
     |
4098 |                         le_prev: 0 as *mut *mut event,
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4107:15
     |
4107 |         ictx: 0 as *mut input_ctx,
     |               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<input_ctx>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4120:18
     |
4120 |         palette: 0 as *mut libc::c_int,
     |                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4122:21
     |
4122 |         pipe_event: 0 as *mut bufferevent,
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bufferevent>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4124:17
     |
4124 |         screen: 0 as *mut screen,
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4126:20
     |
4126 |             title: 0 as *mut libc::c_char,
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4127:21
     |
4127 |             titles: 0 as *mut screen_titles,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4128:19
     |
4128 |             grid: 0 as *mut grid,
     |                   ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4132:22
     |
4132 |             ccolour: 0 as *mut libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4136:19
     |
4136 |             tabs: 0 as *mut bitstr_t,
     |                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4162:20
     |
4162 |             title: 0 as *mut libc::c_char,
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4163:21
     |
4163 |             titles: 0 as *mut screen_titles,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4164:19
     |
4164 |             grid: 0 as *mut grid,
     |                   ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4168:22
     |
4168 |             ccolour: 0 as *mut libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4172:19
     |
4172 |             tabs: 0 as *mut bitstr_t,
     |                   ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4200:21
     |
4200 |         saved_grid: 0 as *mut grid,
     |                     ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4213:15
     |
4213 |         mode: 0 as *const window_mode,
     |               ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_mode>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4214:19
     |
4214 |         modedata: 0 as *mut libc::c_void,
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4218:31
     |
4218 |                     tqe_next: 0 as *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4219:31
     |
4219 |                     tqe_prev: 0 as *mut *mut event_callback,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event_callback>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4227:27
     |
4227 |                 evcb_arg: 0 as *mut libc::c_void,
     |                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4231:31
     |
4231 |                     tqe_next: 0 as *mut event,
     |                               ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4232:31
     |
4232 |                     tqe_prev: 0 as *mut *mut event,
     |                               ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4236:22
     |
4236 |             ev_base: 0 as *mut event_base,
     |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event_base>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4240:34
     |
4240 |                         le_next: 0 as *mut event,
     |                                  ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4241:34
     |
4241 |                         le_prev: 0 as *mut *mut event,
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4252:20
     |
4252 |         searchstr: 0 as *mut libc::c_char,
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4254:23
     |
4254 |             tqe_next: 0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4255:23
     |
4255 |             tqe_prev: 0 as *mut *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4258:23
     |
4258 |             rbe_left: 0 as *mut window_pane,
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4259:24
     |
4259 |             rbe_right: 0 as *mut window_pane,
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4260:25
     |
4260 |             rbe_parent: 0 as *mut window_pane,
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window.rs:4324:5
     |
4324 |     return wp;
     |     ^^^^^^^^^^ help: remove `return`: `wp`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:4273:36
     |
4273 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4285:18
     |
4285 |     (*wp).argv = 0 as *mut *mut libc::c_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4286:19
     |
4286 |     (*wp).shell = 0 as *mut libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4287:17
     |
4287 |     (*wp).cwd = 0 as *const libc::c_char;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4289:19
     |
4289 |     (*wp).event = 0 as *mut bufferevent;
     |                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bufferevent>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4290:18
     |
4290 |     (*wp).mode = 0 as *const window_mode;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_mode>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4292:25
     |
4292 |     (*wp).layout_cell = 0 as *mut layout_cell;
     |                         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<layout_cell>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4301:24
     |
4301 |     (*wp).pipe_event = 0 as *mut bufferevent;
     |                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bufferevent>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4302:24
     |
4302 |     (*wp).saved_grid = 0 as *mut grid;
     |                        ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_initialized` doesn't need a mutable reference
    --> src/window.rs:4342:26
     |
4342 |     if event_initialized(&mut (*wp).resize_timer) != 0 {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4353:1
     |
4353 | / pub unsafe extern "C" fn window_pane_spawn(
4354 | |     mut wp: *mut window_pane,
4355 | |     mut argc: libc::c_int,
4356 | |     mut argv: *mut *mut libc::c_char,
...    |
4602 | |     return 0 as libc::c_int;
4603 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4602:5
     |
4602 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:4370:40
     |
4370 |     let mut argv0: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4371:38
     |
4371 |     let mut cmd: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4372:45
     |
4372 |     let mut argvp: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4373:40
     |
4373 |     let mut ptr: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4374:42
     |
4374 |     let mut first: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4375:41
     |
4375 |     let mut home: *const libc::c_char = 0 as *const libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:4421:9
     |
4421 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/window.rs:4432:35
     |
4432 |     sigprocmask(0 as libc::c_int, &mut set, &mut oldset);
     |                                   ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4438:9
     |
4438 |         0 as *mut termios,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<termios>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/window.rs:4451:43
     |
4451 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4451:56
     |
4451 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/window.rs:4456:43
     |
4456 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                           ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4456:56
     |
4456 |             sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window.rs:4457:19
     |
4457 |             cwd = 0 as *const libc::c_char;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `tcsetattr` doesn't need a mutable reference
    --> src/window.rs:4480:62
     |
4480 |             if tcsetattr(0 as libc::c_int, 0 as libc::c_int, &mut tio2)
     |                                                              ^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4547:21
     |
4547 |                     0 as *mut libc::c_void as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4566:39
     |
4566 |             execl((*wp).shell, argv0, 0 as *mut libc::c_void as *mut libc::c_char);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `sigprocmask` doesn't need a mutable reference
    --> src/window.rs:4571:35
     |
4571 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                   ^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4571:48
     |
4571 |     sigprocmask(2 as libc::c_int, &mut oldset, 0 as *mut sigset_t);
     |                                                ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<sigset_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4611:43
     |
4611 |     let mut new_data: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4640:1
     |
4640 | / pub unsafe extern "C" fn window_pane_resize(
4641 | |     mut wp: *mut window_pane,
4642 | |     mut sx: u_int,
4643 | |     mut sy: u_int,
...    |
4659 | |     (*wp).flags |= 0x8 as libc::c_int;
4660 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:4654:30
     |
4654 |         ((*wp).saved_grid == 0 as *mut libc::c_void as *mut grid) as libc::c_int,
     |                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4662:1
     |
4662 | / pub unsafe extern "C" fn window_pane_alternate_on(
4663 | |     mut wp: *mut window_pane,
4664 | |     mut gc: *mut grid_cell,
4665 | |     mut cursor: libc::c_int,
...    |
4708 | |     (*wp).flags |= 0x1 as libc::c_int;
4709 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4711:1
     |
4711 | / pub unsafe extern "C" fn window_pane_alternate_off(
4712 | |     mut wp: *mut window_pane,
4713 | |     mut gc: *mut grid_cell,
4714 | |     mut cursor: libc::c_int,
...    |
4764 | |     (*wp).flags |= 0x1 as libc::c_int;
4765 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:4763:24
     |
4763 |     (*wp).saved_grid = 0 as *mut grid;
     |                        ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4767:1
     |
4767 | / pub unsafe extern "C" fn window_pane_set_palette(
4768 | |     mut wp: *mut window_pane,
4769 | |     mut n: u_int,
4770 | |     mut colour: libc::c_int,
...    |
4783 | |     (*wp).flags |= 0x1 as libc::c_int;
4784 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4786:1
     |
4786 | / pub unsafe extern "C" fn window_pane_unset_palette(
4787 | |     mut wp: *mut window_pane,
4788 | |     mut n: u_int,
4789 | | ) {
...    |
4794 | |     (*wp).flags |= 0x1 as libc::c_int;
4795 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4797:1
     |
4797 | / pub unsafe extern "C" fn window_pane_reset_palette(mut wp: *mut window_pane) {
4798 | |     if ((*wp).palette).is_null() {
4799 | |         return;
4800 | |     }
...    |
4803 | |     (*wp).flags |= 0x1 as libc::c_int;
4804 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:4802:21
     |
4802 |     (*wp).palette = 0 as *mut libc::c_int;
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4806:1
     |
4806 | / pub unsafe extern "C" fn window_pane_get_palette(
4807 | |     mut wp: *const window_pane,
4808 | |     mut c: libc::c_int,
4809 | | ) -> libc::c_int {
...    |
4826 | |     return new;
4827 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4826:5
     |
4826 |     return new;
     |     ^^^^^^^^^^^ help: remove `return`: `new`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
    --> src/window.rs:4839:9
     |
4835 | /         let mut init = timeval {
4836 | |             tv_sec: 10 as libc::c_int as __time_t,
4837 | |             tv_usec: 0,
4838 | |         };
     | |__________- unnecessary `let` binding
4839 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
4835 ~         
4836 ~         timeval {
4837 +             tv_sec: 10 as libc::c_int as __time_t,
4838 +             tv_usec: 0,
4839 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/window.rs:4843:37
     |
4843 |     event_add(&mut (*wp).modetimer, &mut tv);
     |                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window.rs:4849:30
     |
4849 |     if (*wp).modelast < time(0 as *mut time_t) - 180 as libc::c_int as time_t {
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4861:1
     |
4861 | / pub unsafe extern "C" fn window_pane_set_mode(
4862 | |     mut wp: *mut window_pane,
4863 | |     mut mode: *const window_mode,
4864 | |     mut fs: *mut cmd_find_state,
...    |
4902 | |     return 0 as libc::c_int;
4903 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4902:5
     |
4902 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:4867:30
     |
4867 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window.rs:4873:9
     |
4869 | /         let mut init = timeval {
4870 | |             tv_sec: 10 as libc::c_int as __time_t,
4871 | |             tv_usec: 0,
4872 | |         };
     | |__________- unnecessary `let` binding
4873 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
4869 ~         
4870 ~         timeval {
4871 +             tv_sec: 10 as libc::c_int as __time_t,
4872 +             tv_usec: 0,
4873 +         }
     |

warning: `0 as *mut _` detected
    --> src/window.rs:4879:27
     |
4879 |     (*wp).modelast = time(0 as *mut time_t);
     |                           ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/window.rs:4894:37
     |
4894 |     event_add(&mut (*wp).modetimer, &mut tv);
     |                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4905:1
     |
4905 | / pub unsafe extern "C" fn window_pane_reset_mode(mut wp: *mut window_pane) {
4906 | |     if ((*wp).mode).is_null() {
4907 | |         return;
4908 | |     }
...    |
4916 | |     notify_pane(b"pane-mode-changed\0" as *const u8 as *const libc::c_char, wp);
4917 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *const _` detected
    --> src/window.rs:4911:18
     |
4911 |     (*wp).mode = 0 as *const window_mode;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<window_mode>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4919:1
     |
4919 | / pub unsafe extern "C" fn window_pane_key(
4920 | |     mut wp: *mut window_pane,
4921 | |     mut c: *mut client,
4922 | |     mut s: *mut session,
...    |
4983 | |     }
4984 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:4972:16
     |
4972 |             if !(wp2 == wp || !((*wp2).mode).is_null()) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wp2 != wp && ((*wp2).mode).is_null()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window.rs:4926:37
     |
4926 |     let mut wp2: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4940:31
     |
4940 |         (*wp).modelast = time(0 as *mut time_t);
     |                               ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:4977:45
     |
4977 |                         input_key(wp2, key, 0 as *mut mouse_event);
     |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mouse_event>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:4986:1
     |
4986 | / pub unsafe extern "C" fn window_pane_visible(mut wp: *mut window_pane) -> libc::c_int {
4987 | |     let mut w: *mut window = (*wp).window;
4988 | |     if ((*wp).layout_cell).is_null() {
4989 | |         return 0 as libc::c_int;
...    |
4999 | |     return 1 as libc::c_int;
5000 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:4999:5
     |
4999 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5002:1
     |
5002 | / pub unsafe extern "C" fn window_pane_search(
5003 | |     mut wp: *mut window_pane,
5004 | |     mut searchstr: *const libc::c_char,
5005 | | ) -> u_int {
...    |
5036 | |     return i.wrapping_add(1 as libc::c_int as u_int);
5037 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:5036:5
     |
5036 |     return i.wrapping_add(1 as libc::c_int as u_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `i.wrapping_add(1 as libc::c_int as u_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5007:47
     |
5007 |     let mut newsearchstr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5008:39
     |
5008 |     let mut line: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:5029:13
     |
5029 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window.rs:5058:5
     |
5058 |     return best;
     |     ^^^^^^^^^^^^ help: remove `return`: `best`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5042:38
     |
5042 |     let mut next: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5043:38
     |
5043 |     let mut best: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5046:16
     |
5046 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:5056:9
     |
5056 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5061:1
     |
5061 | / pub unsafe extern "C" fn window_pane_find_up(
5062 | |     mut wp: *mut window_pane,
5063 | | ) -> *mut window_pane {
5064 | |     let mut next: *mut window_pane = 0 as *mut window_pane;
...    |
5133 | |     return best;
5134 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:5103:16
     |
5103 |               if !(((*next).yoff)
     |  ________________^
5104 | |                 .wrapping_add((*next).sy)
5105 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5103 ~             if ((*next).yoff)
5104 +                 .wrapping_add((*next).sy)
5105 +                 .wrapping_add(1 as libc::c_int as u_int) == edge
     |

warning: this boolean expression can be simplified
    --> src/window.rs:5116:20
     |
5116 |                 if !(found == 0) {
     |                    ^^^^^^^^^^^^^ help: try: `found != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:5133:5
     |
5133 |     return best;
     |     ^^^^^^^^^^^^ help: remove `return`: `best`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5064:38
     |
5064 |     let mut next: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5065:38
     |
5065 |     let mut best: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5066:43
     |
5066 |     let mut list: *mut *mut window_pane = 0 as *mut *mut window_pane;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5075:16
     |
5075 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5081:12
     |
5081 |     list = 0 as *mut *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window.rs:5124:25
     |
5124 |                     let ref mut fresh11 = *list.offset(fresh10 as isize);
     |                     ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh11 = &mut (*list.offset(fresh10 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5136:1
     |
5136 | / pub unsafe extern "C" fn window_pane_find_down(
5137 | |     mut wp: *mut window_pane,
5138 | | ) -> *mut window_pane {
5139 | |     let mut next: *mut window_pane = 0 as *mut window_pane;
...    |
5207 | |     return best;
5208 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:5180:16
     |
5180 |             if !((*next).yoff != edge) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*next).yoff == edge`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/window.rs:5190:20
     |
5190 |                 if !(found == 0) {
     |                    ^^^^^^^^^^^^^ help: try: `found != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:5207:5
     |
5207 |     return best;
     |     ^^^^^^^^^^^^ help: remove `return`: `best`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5139:38
     |
5139 |     let mut next: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5140:38
     |
5140 |     let mut best: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5141:43
     |
5141 |     let mut list: *mut *mut window_pane = 0 as *mut *mut window_pane;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5150:16
     |
5150 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5156:12
     |
5156 |     list = 0 as *mut *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window.rs:5198:25
     |
5198 |                     let ref mut fresh13 = *list.offset(fresh12 as isize);
     |                     ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh13 = &mut (*list.offset(fresh12 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5210:1
     |
5210 | / pub unsafe extern "C" fn window_pane_find_left(
5211 | |     mut wp: *mut window_pane,
5212 | | ) -> *mut window_pane {
5213 | |     let mut next: *mut window_pane = 0 as *mut window_pane;
...    |
5266 | |     return best;
5267 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:5236:16
     |
5236 |               if !(((*next).xoff)
     |  ________________^
5237 | |                 .wrapping_add((*next).sx)
5238 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
     |
5236 ~             if ((*next).xoff)
5237 +                 .wrapping_add((*next).sx)
5238 +                 .wrapping_add(1 as libc::c_int as u_int) == edge
     |

warning: this boolean expression can be simplified
    --> src/window.rs:5249:20
     |
5249 |                 if !(found == 0) {
     |                    ^^^^^^^^^^^^^ help: try: `found != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:5266:5
     |
5266 |     return best;
     |     ^^^^^^^^^^^^ help: remove `return`: `best`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5213:38
     |
5213 |     let mut next: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5214:38
     |
5214 |     let mut best: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5215:43
     |
5215 |     let mut list: *mut *mut window_pane = 0 as *mut *mut window_pane;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5223:16
     |
5223 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5225:12
     |
5225 |     list = 0 as *mut *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window.rs:5257:25
     |
5257 |                     let ref mut fresh15 = *list.offset(fresh14 as isize);
     |                     ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh15 = &mut (*list.offset(fresh14 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5269:1
     |
5269 | / pub unsafe extern "C" fn window_pane_find_right(
5270 | |     mut wp: *mut window_pane,
5271 | | ) -> *mut window_pane {
5272 | |     let mut next: *mut window_pane = 0 as *mut window_pane;
...    |
5322 | |     return best;
5323 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
    --> src/window.rs:5295:16
     |
5295 |             if !((*next).xoff != edge) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*next).xoff == edge`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/window.rs:5305:20
     |
5305 |                 if !(found == 0) {
     |                    ^^^^^^^^^^^^^ help: try: `found != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window.rs:5322:5
     |
5322 |     return best;
     |     ^^^^^^^^^^^^ help: remove `return`: `best`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window.rs:5272:38
     |
5272 |     let mut next: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5273:38
     |
5273 |     let mut best: *mut window_pane = 0 as *mut window_pane;
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5274:43
     |
5274 |     let mut list: *mut *mut window_pane = 0 as *mut *mut window_pane;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5282:16
     |
5282 |         return 0 as *mut window_pane;
     |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window.rs:5284:12
     |
5284 |     list = 0 as *mut *mut window_pane;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window.rs:5313:25
     |
5313 |                     let ref mut fresh17 = *list.offset(fresh16 as isize);
     |                     ----^^^^^^^^^^^^^^^---------------------------------- help: try: `let fresh17 = &mut (*list.offset(fresh16 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5325:1
     |
5325 | / pub unsafe extern "C" fn winlink_clear_flags(mut wl: *mut winlink) {
5326 | |     let mut loop_0: *mut winlink = 0 as *mut winlink;
5327 | |     (*(*wl).window).flags
5328 | |         &= !(0x1 as libc::c_int | 0x2 as libc::c_int | 0x8 as libc::c_int);
...    |
5340 | |     }
5341 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window.rs:5326:36
     |
5326 |     let mut loop_0: *mut winlink = 0 as *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window.rs:5343:1
     |
5343 | / pub unsafe extern "C" fn winlink_shuffle_up(
5344 | |     mut s: *mut session,
5345 | |     mut wl: *mut winlink,
5346 | | ) -> libc::c_int {
...    |
5376 | |     return idx;
5377 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window.rs:5376:5
     |
5376 |     return idx;
     |     ^^^^^^^^^^^ help: remove `return`: `idx`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window.rs:5356:9
     |
5356 |         last;
     |         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window.rs:5370:13
     |
5370 |             0 as *mut *mut libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window.rs:5374:9
     |
5374 |         last;
     |         ^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/window_buffer.rs:1108:9
     |
1078 | /         let mut init = window_mode {
1079 | |             name: b"buffer-mode\0" as *const u8 as *const libc::c_char,
1080 | |             init: Some(
1081 | |                 window_buffer_init
...    |
1106 | |             command: None,
1107 | |         };
     | |__________- unnecessary `let` binding
1108 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1078 ~         
1079 ~         window_mode {
1080 +             name: b"buffer-mode\0" as *const u8 as *const libc::c_char,
1081 +             init: Some(
1082 +                 window_buffer_init
1083 +                     as unsafe extern "C" fn(
1084 +                         *mut window_pane,
1085 +                         *mut cmd_find_state,
1086 +                         *mut args,
1087 +                     ) -> *mut screen,
1088 +             ),
1089 +             free: Some(
1090 +                 window_buffer_free as unsafe extern "C" fn(*mut window_pane) -> (),
1091 +             ),
1092 +             resize: Some(
1093 +                 window_buffer_resize
1094 +                     as unsafe extern "C" fn(*mut window_pane, u_int, u_int) -> (),
1095 +             ),
1096 +             key: Some(
1097 +                 window_buffer_key
1098 +                     as unsafe extern "C" fn(
1099 +                         *mut window_pane,
1100 +                         *mut client,
1101 +                         *mut session,
1102 +                         key_code,
1103 +                         *mut mouse_event,
1104 +                     ) -> (),
1105 +             ),
1106 +             key_table: None,
1107 +             command: None,
1108 +         }
     |

warning: unneeded `return` statement
    --> src/window_buffer.rs:1134:5
     |
1134 |     return item;
     |     ^^^^^^^^^^^^ help: remove `return`: `item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1119:49
     |
1119 |     let mut item: *mut window_buffer_itemdata = 0 as *mut window_buffer_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_buffer_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_buffer.rs:1128:9
     |
1128 |     let ref mut fresh1 = *((*data).item_list).offset(fresh0 as isize);
     |     ----^^^^^^^^^^^^^^------------------------------------------------ help: try: `let fresh1 = &mut (*((*data).item_list).offset(fresh0 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unneeded `return` statement
    --> src/window_buffer.rs:1148:5
     |
1148 |     return strcmp((**a).name, (**b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((**a).name, (**b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_buffer.rs:1164:5
     |
1164 |     return strcmp((**a).name, (**b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((**a).name, (**b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_buffer.rs:1180:5
     |
1180 |     return strcmp((**a).name, (**b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((**a).name, (**b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1189:49
     |
1189 |     let mut item: *mut window_buffer_itemdata = 0 as *mut window_buffer_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_buffer_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1191:37
     |
1191 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1192:39
     |
1192 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1193:37
     |
1193 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1194:36
     |
1194 |     let mut ft: *mut format_tree = 0 as *mut format_tree;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<format_tree>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_buffer.rs:1199:9
     |
1199 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1202:25
     |
1202 |     (*data).item_list = 0 as *mut *mut window_buffer_itemdata;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_buffer_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1204:10
     |
1204 |     pb = 0 as *mut paste_buffer;
     |          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1267:17
     |
1267 |                 0 as *mut client,
     |                 ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1268:17
     |
1268 |                 0 as *mut cmdq_item,
     |                 ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1292:25
     |
1292 |                         0 as *mut mode_tree_item,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_buffer.rs:1305:9
     |
1305 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1316:37
     |
1316 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_buffer.rs:1318:42
     |
1318 |     let mut pdata: *const libc::c_char = 0 as *const libc::c_char;
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_buffer.rs:1319:40
     |
1319 |     let mut end: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_buffer.rs:1320:39
     |
1320 |     let mut cp: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_buffer.rs:1348:13
     |
1348 |             end;
     |             ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_buffer.rs:1367:9
     |
1367 |         end;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_buffer.rs:1369:9
     |
1369 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_buffer.rs:1389:5
     |
1389 | /     return (memmem(
1390 | |         bufdata as *const libc::c_void,
1391 | |         bufsize,
1392 | |         ss as *const libc::c_void,
1393 | |         strlen(ss),
1394 | |     ) != 0 as *mut libc::c_void) as libc::c_int;
     | |________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1389 ~     (memmem(
1390 +         bufdata as *const libc::c_void,
1391 +         bufsize,
1392 +         ss as *const libc::c_void,
1393 +         strlen(ss),
1394 +     ) != 0 as *mut libc::c_void) as libc::c_int
     |

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1378:37
     |
1378 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_buffer.rs:1379:44
     |
1379 |     let mut bufdata: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1394:10
     |
1394 |     ) != 0 as *mut libc::c_void) as libc::c_int;
     |          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_buffer.rs:1466:5
     |
1466 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1401:49
     |
1401 |     let mut data: *mut window_buffer_modedata = 0 as *mut window_buffer_modedata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_buffer_modedata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1402:30
     |
1402 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_buffer.rs:1480:9
     |
1480 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1504:37
     |
1504 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1521:37
     |
1521 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1526:13
     |
1526 |             0 as *mut cmd_find_state,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1542:49
     |
1542 |     let mut item: *mut window_buffer_itemdata = 0 as *mut window_buffer_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_buffer_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1544:51
     |
1544 |     finished = mode_tree_key(mtd, c, &mut key, m, 0 as *mut u_int, 0 as *mut u_int);
     |                                                   ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1544:68
     |
1544 |     finished = mode_tree_key(mtd, c, &mut key, m, 0 as *mut u_int, 0 as *mut u_int);
     |                                                                    ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_buffer.rs:1604:40
     |
1604 |     if finished != 0 || (paste_get_top(0 as *mut *const libc::c_char)).is_null() {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*const libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window_client.rs:1137:9
     |
1107 | /         let mut init = window_mode {
1108 | |             name: b"client-mode\0" as *const u8 as *const libc::c_char,
1109 | |             init: Some(
1110 | |                 window_client_init
...    |
1135 | |             command: None,
1136 | |         };
     | |__________- unnecessary `let` binding
1137 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1107 ~         
1108 ~         window_mode {
1109 +             name: b"client-mode\0" as *const u8 as *const libc::c_char,
1110 +             init: Some(
1111 +                 window_client_init
1112 +                     as unsafe extern "C" fn(
1113 +                         *mut window_pane,
1114 +                         *mut cmd_find_state,
1115 +                         *mut args,
1116 +                     ) -> *mut screen,
1117 +             ),
1118 +             free: Some(
1119 +                 window_client_free as unsafe extern "C" fn(*mut window_pane) -> (),
1120 +             ),
1121 +             resize: Some(
1122 +                 window_client_resize
1123 +                     as unsafe extern "C" fn(*mut window_pane, u_int, u_int) -> (),
1124 +             ),
1125 +             key: Some(
1126 +                 window_client_key
1127 +                     as unsafe extern "C" fn(
1128 +                         *mut window_pane,
1129 +                         *mut client,
1130 +                         *mut session,
1131 +                         key_code,
1132 +                         *mut mouse_event,
1133 +                     ) -> (),
1134 +             ),
1135 +             key_table: None,
1136 +             command: None,
1137 +         }
     |

warning: unneeded `return` statement
    --> src/window_client.rs:1164:5
     |
1164 |     return item;
     |     ^^^^^^^^^^^^ help: remove `return`: `item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_client.rs:1149:49
     |
1149 |     let mut item: *mut window_client_itemdata = 0 as *mut window_client_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_client_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_client.rs:1158:9
     |
1158 |     let ref mut fresh1 = *((*data).item_list).offset(fresh0 as isize);
     |     ----^^^^^^^^^^^^^^------------------------------------------------ help: try: `let fresh1 = &mut (*((*data).item_list).offset(fresh0 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unneeded `return` statement
    --> src/window_client.rs:1178:5
     |
1178 |     return strcmp((*(**a).c).name, (*(**b).c).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).c).name, (*(**b).c).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_client.rs:1200:5
     |
1200 |     return strcmp((*(**a).c).name, (*(**b).c).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).c).name, (*(**b).c).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_client.rs:1230:5
     |
1230 |     return strcmp((*(**a).c).name, (*(**b).c).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).c).name, (*(**b).c).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_client.rs:1260:5
     |
1260 |     return strcmp((*(**a).c).name, (*(**b).c).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).c).name, (*(**b).c).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_client.rs:1269:49
     |
1269 |     let mut item: *mut window_client_itemdata = 0 as *mut window_client_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_client_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1271:30
     |
1271 |     let mut c: *mut client = 0 as *mut client;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1272:39
     |
1272 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1273:37
     |
1273 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_client.rs:1278:9
     |
1278 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_client.rs:1281:25
     |
1281 |     (*data).item_list = 0 as *mut *mut window_client_itemdata;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_client_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_client.rs:1289:13
     |
1289 |             (*c).references;
     |             ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_client.rs:1359:17
     |
1359 |                 0 as *mut cmdq_item,
     |                 ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1362:17
     |
1362 |                 0 as *mut session,
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1363:17
     |
1363 |                 0 as *mut winlink,
     |                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1364:17
     |
1364 |                 0 as *mut window_pane,
     |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window_client.rs:1376:9
     |
1376 | /         match current_block_24 {
1377 | |             4068382217303356765 => {
1378 | |                 text = format_single(
1379 | |                     0 as *mut cmdq_item,
...    |
1397 | |             _ => {}
1398 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1376 ~         if current_block_24 == 4068382217303356765 {
1377 +             text = format_single(
1378 +                 0 as *mut cmdq_item,
1379 +                 (*data).format,
1380 +                 c,
1381 +                 0 as *mut session,
1382 +                 0 as *mut winlink,
1383 +                 0 as *mut window_pane,
1384 +             );
1385 +             mode_tree_add(
1386 +                 (*data).data,
1387 +                 0 as *mut mode_tree_item,
1388 +                 item as *mut libc::c_void,
1389 +                 c as uint64_t,
1390 +                 (*c).name,
1391 +                 text,
1392 +                 -(1 as libc::c_int),
1393 +             );
1394 +             free(text as *mut libc::c_void);
1395 +         }
     |

warning: `0 as *mut _` detected
    --> src/window_client.rs:1379:21
     |
1379 |                     0 as *mut cmdq_item,
     |                     ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1382:21
     |
1382 |                     0 as *mut session,
     |                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1383:21
     |
1383 |                     0 as *mut winlink,
     |                     ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1384:21
     |
1384 |                     0 as *mut window_pane,
     |                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1388:21
     |
1388 |                     0 as *mut mode_tree_item,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_client.rs:1400:9
     |
1400 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_client.rs:1412:36
     |
1412 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_client.rs:1521:5
     |
1521 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_client.rs:1463:49
     |
1463 |     let mut data: *mut window_client_modedata = 0 as *mut window_client_modedata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_client_modedata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1464:30
     |
1464 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_client.rs:1535:9
     |
1535 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_client.rs:1580:49
     |
1580 |     let mut item: *mut window_client_itemdata = 0 as *mut window_client_itemdata;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_client_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1582:51
     |
1582 |     finished = mode_tree_key(mtd, c, &mut key, m, 0 as *mut u_int, 0 as *mut u_int);
     |                                                   ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1582:68
     |
1582 |     finished = mode_tree_key(mtd, c, &mut key, m, 0 as *mut u_int, 0 as *mut u_int);
     |                                                                    ^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<u_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_client.rs:1616:17
     |
1616 |                 0 as *mut cmd_find_state,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window_clock.rs:1020:9
     |
990  | /         let mut init = window_mode {
991  | |             name: b"clock-mode\0" as *const u8 as *const libc::c_char,
992  | |             init: Some(
993  | |                 window_clock_init
...    |
1018 | |             command: None,
1019 | |         };
     | |__________- unnecessary `let` binding
1020 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
990  ~         
991  ~         window_mode {
992  +             name: b"clock-mode\0" as *const u8 as *const libc::c_char,
993  +             init: Some(
994  +                 window_clock_init
995  +                     as unsafe extern "C" fn(
996  +                         *mut window_pane,
997  +                         *mut cmd_find_state,
998  +                         *mut args,
999  +                     ) -> *mut screen,
1000 +             ),
1001 +             free: Some(
1002 +                 window_clock_free as unsafe extern "C" fn(*mut window_pane) -> (),
1003 +             ),
1004 +             resize: Some(
1005 +                 window_clock_resize
1006 +                     as unsafe extern "C" fn(*mut window_pane, u_int, u_int) -> (),
1007 +             ),
1008 +             key: Some(
1009 +                 window_clock_key
1010 +                     as unsafe extern "C" fn(
1011 +                         *mut window_pane,
1012 +                         *mut client,
1013 +                         *mut session,
1014 +                         key_code,
1015 +                         *mut mouse_event,
1016 +                     ) -> (),
1017 +             ),
1018 +             key_table: None,
1019 +             command: None,
1020 +         }
     |

warning: `0 as *const _` detected
    --> src/window_clock.rs:1563:18
     |
1563 |         tm_zone: 0 as *const libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_clock.rs:1576:18
     |
1576 |         tm_zone: 0 as *const libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window_clock.rs:1584:9
     |
1580 | /         let mut init = timeval {
1581 | |             tv_sec: 1 as libc::c_int as __time_t,
1582 | |             tv_usec: 0,
1583 | |         };
     | |__________- unnecessary `let` binding
1584 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1580 ~         
1581 ~         timeval {
1582 +             tv_sec: 1 as libc::c_int as __time_t,
1583 +             tv_usec: 0,
1584 +         }
     |

warning: the function `event_add` doesn't need a mutable reference
    --> src/window_clock.rs:1587:35
     |
1587 |     event_add(&mut (*data).timer, &mut tv);
     |                                   ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1588:14
     |
1588 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `gmtime_r` doesn't need a mutable reference
    --> src/window_clock.rs:1589:14
     |
1589 |     gmtime_r(&mut t, &mut now);
     |              ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `gmtime_r` doesn't need a mutable reference
    --> src/window_clock.rs:1590:14
     |
1590 |     gmtime_r(&mut (*data).tim, &mut then);
     |              ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unneeded `return` statement
    --> src/window_clock.rs:1640:5
     |
1640 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1603:49
     |
1603 |     let mut data: *mut window_clock_mode_data = 0 as *mut window_clock_mode_data;
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_clock_mode_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1604:30
     |
1604 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window_clock.rs:1610:9
     |
1606 | /         let mut init = timeval {
1607 | |             tv_sec: 1 as libc::c_int as __time_t,
1608 | |             tv_usec: 0,
1609 | |         };
     | |__________- unnecessary `let` binding
1610 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1606 ~         
1607 ~         timeval {
1608 +             tv_sec: 1 as libc::c_int as __time_t,
1609 +             tv_usec: 0,
1610 +         }
     |

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1615:24
     |
1615 |     (*data).tim = time(0 as *mut time_t);
     |                        ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `event_add` doesn't need a mutable reference
    --> src/window_clock.rs:1630:35
     |
1630 |     event_add(&mut (*data).timer, &mut tv);
     |                                   ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1673:13
     |
1673 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1674:12
     |
1674 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1675:15
     |
1675 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1676:15
     |
1676 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1699:38
     |
1699 |     let mut ptr: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1701:27
     |
1701 |     let mut tm: *mut tm = 0 as *mut tm;
     |                           ^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tm>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1715:34
     |
1715 |     screen_write_start(&mut ctx, 0 as *mut window_pane, s);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_clock.rs:1716:14
     |
1716 |     t = time(0 as *mut time_t);
     |              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<time_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `localtime` doesn't need a mutable reference
    --> src/window_clock.rs:1717:20
     |
1717 |     tm = localtime(&mut t);
     |                    ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `localtime` doesn't need a mutable reference
    --> src/window_clock.rs:1723:23
     |
1723 |             localtime(&mut t),
     |                       ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window_clock.rs:1813:9
     |
1813 | /         match current_block_47 {
1814 | |             2873832966593178012 => {
1815 | |                 j = 0 as libc::c_int as u_int;
1816 | |                 while j < 5 as libc::c_int as u_int {
...    |
1836 | |             _ => {}
1837 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1813 ~         if current_block_47 == 2873832966593178012 {
1814 +             j = 0 as libc::c_int as u_int;
1815 +             while j < 5 as libc::c_int as u_int {
1816 +                 i = 0 as libc::c_int as u_int;
1817 +                 while i < 5 as libc::c_int as u_int {
1818 +                     screen_write_cursormove(
1819 +                         &mut ctx,
1820 +                         x.wrapping_add(i),
1821 +                         y.wrapping_add(j),
1822 +                     );
1823 +                     if window_clock_table[idx as usize][j as usize][i as usize] != 0
1824 +                     {
1825 +                         screen_write_putc(&mut ctx, &mut gc, ' ' as i32 as u_char);
1826 +                     }
1827 +                     i = i.wrapping_add(1);
1828 +                     i;
1829 +                 }
1830 +                 j = j.wrapping_add(1);
1831 +                 j;
1832 +             }
1833 +             x = x.wrapping_add(6 as libc::c_int as u_int);
1834 +         }
     |

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/window_clock.rs:1826:57
     |
1826 | ...                   screen_write_putc(&mut ctx, &mut gc, ' ' as i32 as u_char);
     |                                                   ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/window_clock.rs:1829:25
     |
1829 |                         i;
     |                         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_clock.rs:1832:21
     |
1832 |                     j;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_clock.rs:1839:9
     |
1839 |         ptr;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: returning the result of a `let` binding from a block
    --> src/window_copy.rs:1194:9
     |
1163 | /         let mut init = window_mode {
1164 | |             name: b"copy-mode\0" as *const u8 as *const libc::c_char,
1165 | |             init: Some(
1166 | |                 window_copy_init
...    |
1192 | |             ),
1193 | |         };
     | |__________- unnecessary `let` binding
1194 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1163 ~         
1164 ~         window_mode {
1165 +             name: b"copy-mode\0" as *const u8 as *const libc::c_char,
1166 +             init: Some(
1167 +                 window_copy_init
1168 +                     as unsafe extern "C" fn(
1169 +                         *mut window_pane,
1170 +                         *mut cmd_find_state,
1171 +                         *mut args,
1172 +                     ) -> *mut screen,
1173 +             ),
1174 +             free: Some(window_copy_free as unsafe extern "C" fn(*mut window_pane) -> ()),
1175 +             resize: Some(
1176 +                 window_copy_resize
1177 +                     as unsafe extern "C" fn(*mut window_pane, u_int, u_int) -> (),
1178 +             ),
1179 +             key: None,
1180 +             key_table: Some(
1181 +                 window_copy_key_table
1182 +                     as unsafe extern "C" fn(*mut window_pane) -> *const libc::c_char,
1183 +             ),
1184 +             command: Some(
1185 +                 window_copy_command
1186 +                     as unsafe extern "C" fn(
1187 +                         *mut window_pane,
1188 +                         *mut client,
1189 +                         *mut session,
1190 +                         *mut args,
1191 +                         *mut mouse_event,
1192 +                     ) -> (),
1193 +             ),
1194 +         }
     |

warning: unneeded `return` statement
    --> src/window_copy.rs:1249:5
     |
1249 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1202:48
     |
1202 |     let mut data: *mut window_copy_mode_data = 0 as *mut window_copy_mode_data;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_copy_mode_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1203:30
     |
1203 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1221:29
     |
1221 |         (*data).searchstr = 0 as *mut libc::c_char;
     |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1223:26
     |
1223 |     (*data).searchmark = 0 as *mut bitstr_t;
     |                          ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1248:23
     |
1248 |     (*data).backing = 0 as *mut screen;
     |                       ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:1252:1
     |
1252 | / pub unsafe extern "C" fn window_copy_init_from_pane(
1253 | |     mut wp: *mut window_pane,
1254 | |     mut scroll_exit: libc::c_int,
1255 | | ) {
...    |
1288 | |     screen_write_stop(&mut ctx);
1289 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1260:13
     |
1260 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1261:12
     |
1261 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1262:15
     |
1262 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1263:15
     |
1263 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1280:34
     |
1280 |     screen_write_start(&mut ctx, 0 as *mut window_pane, s);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:1285:9
     |
1285 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:1291:1
     |
1291 | / pub unsafe extern "C" fn window_copy_init_for_output(mut wp: *mut window_pane) {
1292 | |     let mut data: *mut window_copy_mode_data = (*wp).modedata
1293 | |         as *mut window_copy_mode_data;
1294 | |     (*data)
...    |
1304 | |     );
1305 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:1325:1
     |
1325 | / pub unsafe extern "C" fn window_copy_vadd(
1326 | |     mut wp: *mut window_pane,
1327 | |     mut fmt: *const libc::c_char,
1328 | |     mut ap: ::core::ffi::VaList,
...    |
1414 | |     screen_write_stop(&mut ctx);
1415 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1334:13
     |
1334 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1335:12
     |
1335 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1336:15
     |
1336 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1337:15
     |
1337 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1345:13
     |
1345 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1346:12
     |
1346 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1347:15
     |
1347 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1348:15
     |
1348 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1378:39
     |
1378 |     screen_write_start(&mut back_ctx, 0 as *mut window_pane, backing);
     |                                       ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_vnputs` doesn't need a mutable reference
    --> src/window_copy.rs:1393:9
     |
1393 |         &mut gc,
     |         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:1417:1
     |
1417 | / pub unsafe extern "C" fn window_copy_pageup(
1418 | |     mut wp: *mut window_pane,
1419 | |     mut half_page: libc::c_int,
1420 | | ) {
...    |
1466 | |     window_copy_redraw_screen(wp);
1467 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
    --> src/window_copy.rs:1522:5
     |
1522 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:1535:9
     |
1535 |         oy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1541:9
     |
1541 |         oy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1560:9
     |
1560 |         oy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1564:9
     |
1564 |         oy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1578:13
     |
1578 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1579:12
     |
1579 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1580:15
     |
1580 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1581:15
     |
1581 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1602:34
     |
1602 |     screen_write_start(&mut ctx, 0 as *mut window_pane, s);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:1611:38
     |
1611 |         window_copy_search_marks(wp, 0 as *mut screen);
     |                                      ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:1628:5
     |
1628 |     return b"copy-mode\0" as *const u8 as *const libc::c_char;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `b"copy-mode\0" as *const u8 as *const libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/window_copy.rs:1640:44
     |
1640 |     let mut command: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1641:45
     |
1641 |     let mut argument: *const libc::c_char = 0 as *const libc::c_char;
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1642:39
     |
1642 |     let mut ws: *const libc::c_char = 0 as *const libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1660:50
     |
1660 |                 window_copy_append_selection(wp, 0 as *const libc::c_char);
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1671:50
     |
1671 |                 window_copy_append_selection(wp, 0 as *const libc::c_char);
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:1724:17
     |
1724 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/window_copy.rs:1729:48
     |
1729 |                 window_copy_copy_selection(wp, 0 as *const libc::c_char);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:1741:17
     |
1741 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/window_copy.rs:1746:48
     |
1746 |                 window_copy_copy_selection(wp, 0 as *const libc::c_char);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1754:48
     |
1754 |                 window_copy_copy_selection(wp, 0 as *const libc::c_char);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:1765:48
     |
1765 |                 window_copy_copy_selection(wp, 0 as *const libc::c_char);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:1777:17
     |
1777 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1786:17
     |
1786 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1795:17
     |
1795 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1804:17
     |
1804 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1834:21
     |
1834 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1844:17
     |
1844 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1873:25
     |
1873 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1880:25
     |
1880 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1887:25
     |
1887 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1894:25
     |
1894 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1908:25
     |
1908 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1915:25
     |
1915 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1922:25
     |
1922 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1929:25
     |
1929 |                         np;
     |                         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1951:17
     |
1951 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1963:17
     |
1963 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1975:17
     |
1975 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:1988:17
     |
1988 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2001:17
     |
2001 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2033:21
     |
2033 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2043:17
     |
2043 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2052:17
     |
2052 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2064:17
     |
2064 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2077:17
     |
2077 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2105:17
     |
2105 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2117:17
     |
2117 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2127:21
     |
2127 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2133:21
     |
2133 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2144:21
     |
2144 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2150:21
     |
2150 |                     np;
     |                     ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2164:17
     |
2164 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *const _` detected
    --> src/window_copy.rs:2205:46
     |
2205 |                 window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:2212:46
     |
2212 |                 window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:2229:17
     |
2229 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2240:17
     |
2240 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2251:17
     |
2251 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2262:17
     |
2262 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2274:17
     |
2274 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2286:17
     |
2286 |                 np;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_copy.rs:2477:5
     |
2477 | /     return (memcmp(
2478 | |         ((*ud).data).as_ptr() as *const libc::c_void,
2479 | |         ((*sud).data).as_ptr() as *const libc::c_void,
2480 | |         (*ud).size as libc::c_ulong,
2481 | |     ) == 0 as libc::c_int) as libc::c_int;
     | |__________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2477 ~     (memcmp(
2478 +         ((*ud).data).as_ptr() as *const libc::c_void,
2479 +         ((*sud).data).as_ptr() as *const libc::c_void,
2480 +         (*ud).size as libc::c_ulong,
2481 +     ) == 0 as libc::c_int) as libc::c_int
     |

warning: `0 as *const _` detected
    --> src/window_copy.rs:2462:36
     |
2462 |     let mut ud: *const utf8_data = 0 as *const utf8_data;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:2463:37
     |
2463 |     let mut sud: *const utf8_data = 0 as *const utf8_data;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:2518:5
     |
2518 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:2509:13
     |
2509 |             bx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2516:9
     |
2516 |         ax;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/window_copy.rs:2535:12
     |
2535 |           if !(((*gd).sx).wrapping_sub(ax.wrapping_sub(1 as libc::c_int as u_int))
     |  ____________^
2536 | |             < (*sgd).sx)
     | |________________________^ help: try: `((*gd).sx).wrapping_sub(ax.wrapping_sub(1 as libc::c_int as u_int)) >= (*sgd).sx`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window_copy.rs:2556:5
     |
2556 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:2546:17
     |
2546 |                 bx;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2554:9
     |
2554 |         ax;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_copy.rs:2598:5
     |
2598 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:2596:9
     |
2596 |         ptr;
     |         ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_copy.rs:2676:5
     |
2676 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:2624:13
     |
2624 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2640:17
     |
2640 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2645:17
     |
2645 |                 i;
     |                 ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_copy.rs:2796:5
     |
2796 |     return found;
     |     ^^^^^^^^^^^^^ help: remove `return`: `found`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2686:16
     |
2686 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2687:17
     |
2687 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2688:15
     |
2688 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2692:18
     |
2692 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2696:15
     |
2696 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2722:13
     |
2722 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2723:12
     |
2723 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2724:15
     |
2724 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2725:15
     |
2725 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2754:34
     |
2754 |     screen_write_start(&mut ctx, 0 as *mut window_pane, &mut ss);
     |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:2948:5
     |
2948 |     return nfound as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `nfound as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2806:16
     |
2806 |         title: 0 as *mut libc::c_char,
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2807:17
     |
2807 |         titles: 0 as *mut screen_titles,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_titles>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2808:15
     |
2808 |         grid: 0 as *mut grid,
     |               ^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2812:18
     |
2812 |         ccolour: 0 as *mut libc::c_char,
     |                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2816:15
     |
2816 |         tabs: 0 as *mut bitstr_t,
     |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2842:13
     |
2842 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2843:12
     |
2843 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2844:15
     |
2844 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2845:15
     |
2845 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2872:38
     |
2872 |         screen_write_start(&mut ctx, 0 as *mut window_pane, &mut ss);
     |                                      ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:2910:13
     |
2910 |             nfound;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_copy.rs:2923:21
     |
2923 |                 let ref mut fresh2 = *_name
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg
help: try
     |
2923 ~                 let fresh2 = &mut (*_name
2924 +                     .offset((_start >> 3 as libc::c_int) as isize));
     |

warning: statement with no effect
    --> src/window_copy.rs:2928:17
     |
2928 |                 _start;
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2931:13
     |
2931 |             px;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:2934:9
     |
2934 |         py;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_copy.rs:2954:26
     |
2954 |     (*data).searchmark = 0 as *mut bitstr_t;
     |                          ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<bitstr_t>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:2957:5
     |
2957 |     return window_copy_search(wp, 0 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_copy_search(wp, 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_copy.rs:2960:5
     |
2960 |     return window_copy_search(wp, 1 as libc::c_int);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `window_copy_search(wp, 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/window_copy.rs:2968:43
     |
2968 |     let mut errstr: *const libc::c_char = 0 as *const libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `screen_write_copy` doesn't need a mutable reference
    --> src/window_copy.rs:3064:13
     |
3064 |             &mut gc,
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `screen_write_putc` doesn't need a mutable reference
    --> src/window_copy.rs:3078:32
     |
3078 |         screen_write_putc(ctx, &mut gc, '$' as i32 as u_char);
     |                                ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/window_copy.rs:3092:9
     |
3092 |         yy;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3126:13
     |
3126 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3127:12
     |
3127 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3128:15
     |
3128 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3129:15
     |
3129 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3137:38
     |
3137 |     screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                      ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:3142:9
     |
3142 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_copy.rs:3170:9
     |
3170 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3182:13
     |
3182 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3183:12
     |
3183 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3184:15
     |
3184 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3185:15
     |
3185 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3204:42
     |
3204 |         screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:3259:5
     |
3259 |     return relpos;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `relpos`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_copy.rs:3342:5
     |
3342 |     return 1 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_copy.rs:3453:5
     |
3453 |     return buf as *mut libc::c_void;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `buf as *mut libc::c_void`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3351:38
     |
3351 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3371:16
     |
3371 |         return 0 as *mut libc::c_void;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:3443:9
     |
3443 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3447:16
     |
3447 |         return 0 as *mut libc::c_void;
     |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3462:13
     |
3462 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3463:12
     |
3463 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3464:15
     |
3464 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3465:15
     |
3465 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3477:42
     |
3477 |         screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3482:58
     |
3482 |     if paste_set(buf as *mut libc::c_char, len, bufname, 0 as *mut *mut libc::c_char)
     |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3494:38
     |
3494 |     let mut buf: *mut libc::c_void = 0 as *mut libc::c_void;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3496:29
     |
3496 |     let mut job: *mut job = 0 as *mut job;
     |                             ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<job>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3497:43
     |
3497 |     let mut expanded: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3503:9
     |
3503 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3505:9
     |
3505 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3507:9
     |
3507 |         0 as *mut winlink,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:3513:9
     |
3513 |         0 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3517:9
     |
3517 |         0 as *mut libc::c_void,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3528:38
     |
3528 |     let mut buf: *mut libc::c_void = 0 as *mut libc::c_void;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3540:38
     |
3540 |     let mut buf: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3541:37
     |
3541 |     let mut pb: *mut paste_buffer = 0 as *mut paste_buffer;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<paste_buffer>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:3542:44
     |
3542 |     let mut bufdata: *const libc::c_char = 0 as *const libc::c_char;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3546:13
     |
3546 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3547:12
     |
3547 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3548:15
     |
3548 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3549:15
     |
3549 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3565:42
     |
3565 |         screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                          ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3587:37
     |
3587 |     if paste_set(buf, len, bufname, 0 as *mut *mut libc::c_char) != 0 as libc::c_int {
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/window_copy.rs:3647:16
     |
3647 |             if !(gc.flags as libc::c_int & 0x4 as libc::c_int != 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `gc.flags as libc::c_int & 0x4 as libc::c_int == 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3614:34
     |
3614 |     let mut gl: *mut grid_line = 0 as *mut grid_line;
     |                                  ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<grid_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_copy.rs:3624:38
     |
3624 |     let mut s: *const libc::c_char = 0 as *const libc::c_char;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `utf8_copy` doesn't need a mutable reference
    --> src/window_copy.rs:3648:36
     |
3648 |                 utf8_copy(&mut ud, &mut gc.data);
     |                                    ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3652:37
     |
3652 |                     s = tty_acs_get(0 as *mut tty, ud.data[0 as libc::c_int as usize]);
     |                                     ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<tty>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_copy.rs:3677:13
     |
3677 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_copy.rs:3738:5
     |
3738 | /     return (strchr(set, *((*ud).data).as_ptr() as libc::c_int)
3739 | |         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int;
     | |_______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
3738 ~     (strchr(set, *((*ud).data).as_ptr() as libc::c_int)
3739 +         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int
     |

warning: `0 as *const _` detected
    --> src/window_copy.rs:3725:36
     |
3725 |     let mut ud: *const utf8_data = 0 as *const utf8_data;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<utf8_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:3739:12
     |
3739 |         != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int;
     |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_copy.rs:3780:5
     |
3780 |     return px;
     |     ^^^^^^^^^^ help: remove `return`: `px`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_copy.rs:3778:9
     |
3778 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:3841:9
     |
3841 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:3973:9
     |
3973 |         cx;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4034:13
     |
4034 |             cx;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4214:9
     |
4214 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4239:9
     |
4239 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4258:9
     |
4258 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4301:9
     |
4301 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4326:9
     |
4326 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4330:9
     |
4330 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4353:9
     |
4353 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/window_copy.rs:4392:12
     |
4392 |         if !(expected == 1 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `expected != 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/window_copy.rs:4388:17
     |
4388 |                 px;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/window_copy.rs:4445:12
     |
4445 |         if !(expected == 0 as libc::c_int) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `expected != 0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: statement with no effect
    --> src/window_copy.rs:4425:9
     |
4425 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4441:17
     |
4441 |                 px;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4451:9
     |
4451 |         px;
     |         ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_copy.rs:4474:13
     |
4474 |             px;
     |             ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window_copy.rs:4496:5
     |
4496 | /     match current_block {
4497 | |         13109137661213826276 => {
4498 | |             while px > 0 as libc::c_int as u_int
4499 | |                 && window_copy_in_set(
...    |
4510 | |         _ => {}
4511 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
4496 ~     if current_block == 13109137661213826276 {
4497 +         while px > 0 as libc::c_int as u_int
4498 +             && window_copy_in_set(
4499 +                 wp,
4500 +                 px.wrapping_sub(1 as libc::c_int as u_int),
4501 +                 py,
4502 +                 separators,
4503 +             ) == 0
4504 +         {
4505 +             px = px.wrapping_sub(1);
4506 +             px;
4507 +         }
4508 +     }
     |

warning: statement with no effect
    --> src/window_copy.rs:4507:17
     |
4507 |                 px;
     |                 ^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4522:13
     |
4522 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4523:12
     |
4523 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4524:15
     |
4524 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4525:15
     |
4525 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4540:38
     |
4540 |     screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                      ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4574:13
     |
4574 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4575:12
     |
4575 |         s: 0 as *mut screen,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4576:15
     |
4576 |         item: 0 as *mut screen_write_collect_item,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4577:15
     |
4577 |         list: 0 as *mut screen_write_collect_line,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen_write_collect_line>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4595:38
     |
4595 |     screen_write_start(&mut ctx, wp, 0 as *mut screen);
     |                                      ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:4612:1
     |
4612 | / pub unsafe extern "C" fn window_copy_add_formats(
4613 | |     mut wp: *mut window_pane,
4614 | |     mut ft: *mut format_tree,
4615 | | ) {
...    |
4633 | |     );
4634 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4652:36
     |
4652 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4655:28
     |
4655 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4655:52
     |
4655 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
    --> src/window_copy.rs:4665:1
     |
4665 | / pub unsafe extern "C" fn window_copy_start_drag(
4666 | |     mut c: *mut client,
4667 | |     mut m: *mut mouse_event,
4668 | | ) {
...    |
4691 | |     window_copy_redraw_screen(wp);
4692 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4669:36
     |
4669 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4675:28
     |
4675 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4675:52
     |
4675 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4697:36
     |
4697 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4698:48
     |
4698 |     let mut data: *mut window_copy_mode_data = 0 as *mut window_copy_mode_data;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_copy_mode_data>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4702:28
     |
4702 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_copy.rs:4702:52
     |
4702 |     wp = cmd_mouse_pane(m, 0 as *mut *mut session, 0 as *mut *mut winlink);
     |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: returning the result of a `let` binding from a block
    --> src/window_tree.rs:1308:9
     |
1280 | /         let mut init = window_mode {
1281 | |             name: b"tree-mode\0" as *const u8 as *const libc::c_char,
1282 | |             init: Some(
1283 | |                 window_tree_init
...    |
1306 | |             command: None,
1307 | |         };
     | |__________- unnecessary `let` binding
1308 |           init
     |           ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1280 ~         
1281 ~         window_mode {
1282 +             name: b"tree-mode\0" as *const u8 as *const libc::c_char,
1283 +             init: Some(
1284 +                 window_tree_init
1285 +                     as unsafe extern "C" fn(
1286 +                         *mut window_pane,
1287 +                         *mut cmd_find_state,
1288 +                         *mut args,
1289 +                     ) -> *mut screen,
1290 +             ),
1291 +             free: Some(window_tree_free as unsafe extern "C" fn(*mut window_pane) -> ()),
1292 +             resize: Some(
1293 +                 window_tree_resize
1294 +                     as unsafe extern "C" fn(*mut window_pane, u_int, u_int) -> (),
1295 +             ),
1296 +             key: Some(
1297 +                 window_tree_key
1298 +                     as unsafe extern "C" fn(
1299 +                         *mut window_pane,
1300 +                         *mut client,
1301 +                         *mut session,
1302 +                         key_code,
1303 +                         *mut mouse_event,
1304 +                     ) -> (),
1305 +             ),
1306 +             key_table: None,
1307 +             command: None,
1308 +         }
     |

warning: unneeded `return` statement
    --> src/window_tree.rs:1353:9
     |
1353 |         return;
     |         ^^^^^^^ help: remove `return`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1322:11
     |
1322 |     *wp = 0 as *mut window_pane;
     |           ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1323:12
     |
1323 |     *wlp = 0 as *mut winlink;
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1337:15
     |
1337 |         *sp = 0 as *mut session;
     |               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1348:15
     |
1348 |         *wp = 0 as *mut window_pane;
     |               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1351:15
     |
1351 |         *sp = 0 as *mut session;
     |               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1352:16
     |
1352 |         *wlp = 0 as *mut winlink;
     |                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_tree.rs:1374:5
     |
1374 |     return item;
     |     ^^^^^^^^^^^^ help: remove `return`: `item`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1359:47
     |
1359 |     let mut item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_tree.rs:1368:9
     |
1368 |     let ref mut fresh1 = *((*data).item_list).offset(fresh0 as isize);
     |     ----^^^^^^^^^^^^^^------------------------------------------------ help: try: `let fresh1 = &mut (*((*data).item_list).offset(fresh0 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: unneeded `return` statement
    --> src/window_tree.rs:1385:5
     |
1385 |     return strcmp((**a).name, (**b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((**a).name, (**b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_tree.rs:1409:5
     |
1409 |     return strcmp((**a).name, (**b).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((**a).name, (**b).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_tree.rs:1417:5
     |
1417 |     return strcmp((*(**a).window).name, (*(**b).window).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).window).name, (*(**b).window).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_tree.rs:1445:5
     |
1445 |     return strcmp((*(**a).window).name, (*(**b).window).name);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `strcmp((*(**a).window).name, (*(**b).window).name)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_tree.rs:1459:5
     |
1459 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1469:47
     |
1469 |     let mut item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1470:39
     |
1470 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1471:39
     |
1471 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1480:9
     |
1480 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1482:9
     |
1482 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_tree.rs:1518:5
     |
1518 |     return result;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `result`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1510:37
     |
1510 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1515:24
     |
1515 |     cp = format_single(0 as *mut cmdq_item, filter, 0 as *mut client, s, wl, wp);
     |                        ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1515:53
     |
1515 |     cp = format_single(0 as *mut cmdq_item, filter, 0 as *mut client, s, wl, wp);
     |                                                     ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this boolean expression can be simplified
    --> src/window_tree.rs:1579:16
     |
1579 |             if !(window_tree_filter_pane(s, wl, wp, filter) == 0) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_tree_filter_pane(s, wl, wp, filter) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/window_tree.rs:1587:20
     |
1587 |                 if !(window_tree_filter_pane(s, wl, wp, filter) == 0) {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `window_tree_filter_pane(s, wl, wp, filter) != 0`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/window_tree.rs:1600:16
     |
1600 |             if !(n == 0 as libc::c_int as u_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `n != 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
    --> src/window_tree.rs:1633:5
     |
1633 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1529:47
     |
1529 |     let mut item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1530:40
     |
1530 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1531:39
     |
1531 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1532:39
     |
1532 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1533:36
     |
1533 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1534:40
     |
1534 |     let mut l: *mut *mut window_pane = 0 as *mut *mut window_pane;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1544:9
     |
1544 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1546:9
     |
1546 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1549:9
     |
1549 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1583:17
     |
1583 |             l = 0 as *mut *mut window_pane;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_tree.rs:1595:25
     |
1595 |                     let ref mut fresh3 = *l.offset(fresh2 as isize);
     |                     ----^^^^^^^^^^^^^^------------------------------ help: try: `let fresh3 = &mut (*l.offset(fresh2 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:1616:21
     |
1616 |                     0 | 1 | _ => {}
     |                     ^^^^^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/window_tree.rs:1622:21
     |
1622 |                     i;
     |                     ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:1631:5
     |
1631 |     (*data).item_size;
     |     ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1642:47
     |
1642 |     let mut item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1643:40
     |
1643 |     let mut mti: *mut mode_tree_item = 0 as *mut mode_tree_item;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1644:39
     |
1644 |     let mut text: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1645:32
     |
1645 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1646:36
     |
1646 |     let mut l: *mut *mut winlink = 0 as *mut *mut winlink;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1657:9
     |
1657 |         0 as *mut cmdq_item,
     |         ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmdq_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1659:9
     |
1659 |         0 as *mut client,
     |         ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<client>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1661:9
     |
1661 |         0 as *mut winlink,
     |         ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1662:9
     |
1662 |         0 as *mut window_pane,
     |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1673:9
     |
1673 |         0 as *mut mode_tree_item,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<mode_tree_item>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1681:9
     |
1681 |     l = 0 as *mut *mut winlink;
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_tree.rs:1692:13
     |
1692 |         let ref mut fresh5 = *l.offset(fresh4 as isize);
     |         ----^^^^^^^^^^^^^^------------------------------ help: try: `let fresh5 = &mut (*l.offset(fresh4 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:1725:9
     |
1725 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/window_tree.rs:1740:13
     |
1740 |             empty;
     |             ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:1743:9
     |
1743 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:1748:9
     |
1748 |         (*data).item_size;
     |         ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1760:31
     |
1760 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1761:36
     |
1761 |     let mut l: *mut *mut session = 0 as *mut *mut session;
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1762:38
     |
1762 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1763:43
     |
1763 |     let mut current: *mut session_group = 0 as *mut session_group;
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session_group>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:1771:9
     |
1771 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1774:25
     |
1774 |     (*data).item_list = 0 as *mut *mut window_tree_itemdata;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1776:9
     |
1776 |     l = 0 as *mut *mut session;
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/window_tree.rs:1797:9
     |
1797 | /         match current_block_11 {
1798 | |             7651349459974463963 => {
1799 | |                 l = xreallocarray(
1800 | |                     l as *mut libc::c_void,
...    |
1809 | |             _ => {}
1810 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1797 ~         if current_block_11 == 7651349459974463963 {
1798 +             l = xreallocarray(
1799 +                 l as *mut libc::c_void,
1800 +                 n.wrapping_add(1 as libc::c_int as u_int) as size_t,
1801 +                 ::core::mem::size_of::<*mut session>() as libc::c_ulong,
1802 +             ) as *mut *mut session;
1803 +             let fresh6 = n;
1804 +             n = n.wrapping_add(1);
1805 +             let ref mut fresh7 = *l.offset(fresh6 as isize);
1806 +             *fresh7 = s;
1807 +         }
     |

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/window_tree.rs:1806:21
     |
1806 |                 let ref mut fresh7 = *l.offset(fresh6 as isize);
     |                 ----^^^^^^^^^^^^^^------------------------------ help: try: `let fresh7 = &mut (*l.offset(fresh6 as isize));`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:1842:9
     |
1842 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/window_tree.rs:1848:9
     |
1848 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:1865:9
     |
1865 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1916:32
     |
1916 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1917:30
     |
1917 |     let mut w: *mut window = 0 as *mut window;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:1947:40
     |
1947 |     let mut label: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:1977:9
     |
1977 |         current;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2075:13
     |
2075 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `window_tree_draw_label` doesn't need a mutable reference
    --> src/window_tree.rs:2114:17
     |
2114 |                 &mut gc,
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/window_tree.rs:2127:13
     |
2127 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2129:13
     |
2129 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2143:36
     |
2143 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2174:40
     |
2174 |     let mut label: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:2204:9
     |
2204 |         current;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2302:13
     |
2302 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: the function `window_tree_draw_label` doesn't need a mutable reference
    --> src/window_tree.rs:2337:17
     |
2337 |                 &mut gc,
     |                 ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: statement with no effect
    --> src/window_tree.rs:2350:13
     |
2350 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2352:13
     |
2352 |             i;
     |             ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2365:32
     |
2365 |     let mut sp: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2366:33
     |
2366 |     let mut wlp: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2367:36
     |
2367 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:2395:9
     |
2395 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unneeded `return` statement
    --> src/window_tree.rs:2437:5
     |
2437 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2404:31
     |
2404 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2405:32
     |
2405 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2406:36
     |
2406 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/window_tree.rs:2407:40
     |
2407 |     let mut cmd: *const libc::c_char = 0 as *const libc::c_char;
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2415:46
     |
2415 |             return (strstr((*s).name, ss) != 0 as *mut libc::c_void as *mut libc::c_char)
     |                                              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2423:20
     |
2423 |                 != 0 as *mut libc::c_void as *mut libc::c_char) as libc::c_int;
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2431:44
     |
2431 |                 return (strstr(cmd, ss) != 0 as *mut libc::c_void as *mut libc::c_char)
     |                                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_tree.rs:2525:5
     |
2525 |     return s;
     |     ^^^^^^^^^ help: remove `return`: `s`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2444:47
     |
2444 |     let mut data: *mut window_tree_modedata = 0 as *mut window_tree_modedata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_modedata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2445:30
     |
2445 |     let mut s: *mut screen = 0 as *mut screen;
     |                              ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<screen>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:2537:9
     |
2537 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_tree.rs:2611:5
     |
2611 |     return target;
     |     ^^^^^^^^^^^^^^ help: remove `return`: `target`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2567:31
     |
2567 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2568:32
     |
2568 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2569:36
     |
2569 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2570:41
     |
2570 |     let mut target: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2572:14
     |
2572 |     target = 0 as *mut libc::c_char;
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:2604:9
     |
2604 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2621:39
     |
2621 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2624:18
     |
2624 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2625:12
     |
2625 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2626:13
     |
2626 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2627:12
     |
2627 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2628:13
     |
2628 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
    --> src/window_tree.rs:2648:5
     |
2648 |     return CMD_RETURN_NORMAL;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `CMD_RETURN_NORMAL`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/window_tree.rs:2693:5
     |
2693 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/window_tree.rs:2676:23
     |
2676 |     (*data).entered = 0 as *const libc::c_char;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:2678:5
     |
2678 |     (*data).references;
     |     ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2706:31
     |
2706 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2707:32
     |
2707 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2708:36
     |
2708 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:2734:9
     |
2734 |         0 | _ => {}
     |         ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: unneeded `return` statement
    --> src/window_tree.rs:2776:5
     |
2776 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_tree.rs:2761:5
     |
2761 |     (*data).references;
     |     ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_tree.rs:2826:5
     |
2826 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
    --> src/window_tree.rs:2811:5
     |
2811 |     (*data).references;
     |     ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
    --> src/window_tree.rs:2906:5
     |
2906 |     return 0xffff00000000 as libc::c_ulonglong;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xffff00000000 as libc::c_ulonglong`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2834:31
     |
2834 |     let mut s: *mut session = 0 as *mut session;
     |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2835:32
     |
2835 |     let mut wl: *mut winlink = 0 as *mut winlink;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2836:36
     |
2836 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:2851:9
     |
2851 |         x;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: manual implementation of an assign operation
    --> src/window_tree.rs:2856:9
     |
2856 |         x = x / (*data).each;
     |         ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `x /= (*data).each`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: statement with no effect
    --> src/window_tree.rs:2876:13
     |
2876 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2898:13
     |
2898 |             loop_0;
     |             ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this boolean expression can be simplified
    --> src/window_tree.rs:3028:16
     |
3028 |             if !(tagged == 0 as libc::c_int as u_int) {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `tagged != 0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2917:47
     |
2917 |     let mut item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2918:51
     |
2918 |     let mut new_item: *mut window_tree_itemdata = 0 as *mut window_tree_itemdata;
     |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_tree_itemdata>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2919:39
     |
2919 |     let mut name: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2920:41
     |
2920 |     let mut prompt: *mut libc::c_char = 0 as *mut libc::c_char;
     |                                         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2923:18
     |
2923 |         current: 0 as *mut cmd_find_state,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2924:12
     |
2924 |         s: 0 as *mut session,
     |            ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2925:13
     |
2925 |         wl: 0 as *mut winlink,
     |             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2926:12
     |
2926 |         w: 0 as *mut window,
     |            ^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2927:13
     |
2927 |         wp: 0 as *mut window_pane,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2935:32
     |
2935 |     let mut ns: *mut session = 0 as *mut session;
     |                                ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<session>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2936:33
     |
2936 |     let mut nwl: *mut winlink = 0 as *mut winlink;
     |                                 ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<winlink>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
    --> src/window_tree.rs:2937:37
     |
2937 |     let mut nwp: *mut window_pane = 0 as *mut window_pane;
     |                                     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<window_pane>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
    --> src/window_tree.rs:2960:13
     |
2960 |             (*data).offset;
     |             ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:2964:13
     |
2964 |             (*data).offset;
     |             ^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: wildcard pattern covers any other pattern as it will match anyway
    --> src/window_tree.rs:2998:17
     |
2998 |                 0 | _ => {}
     |                 ^^^^^
     |
     = help: consider handling `_` separately
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: statement with no effect
    --> src/window_tree.rs:3002:17
     |
3002 |                 (*data).references;
     |                 ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:3035:17
     |
3035 |                 (*data).references;
     |                 ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/window_tree.rs:3074:13
     |
3074 |             (*data).references;
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
    --> src/window_tree.rs:3103:21
     |
3103 |                     0 as *mut cmd_find_state,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<cmd_find_state>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: module has the same name as its containing module
   --> lib.rs:148:1
    |
148 | pub mod xchecks;
    | ^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(clippy::module_inception)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:6:1
   |
6  | / pub unsafe extern "C" fn __c2rust_hash_ldat_struct(
7  | |     mut l: *mut libc::c_void,
8  | |     mut depth: size_t,
9  | | ) -> uint64_t {
10 | |     return 0xabcd0001 as libc::c_uint as uint64_t;
11 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:10:5
   |
10 |     return 0xabcd0001 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0001 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:13:1
   |
13 | / pub unsafe extern "C" fn __c2rust_hash_dst_key_struct(
14 | |     mut l: *mut libc::c_void,
15 | |     mut depth: size_t,
16 | | ) -> uint64_t {
17 | |     return 0xabcd0002 as libc::c_uint as uint64_t;
18 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:17:5
   |
17 |     return 0xabcd0002 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0002 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:20:1
   |
20 | / pub unsafe extern "C" fn __c2rust_hash_evbuffer_struct(
21 | |     mut l: *mut libc::c_void,
22 | |     mut depth: size_t,
23 | | ) -> uint64_t {
24 | |     return 0xabcd0003 as libc::c_uint as uint64_t;
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:24:5
   |
24 |     return 0xabcd0003 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0003 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:27:1
   |
27 | / pub unsafe extern "C" fn __c2rust_hash___locale_data_struct(
28 | |     mut l: *mut libc::c_void,
29 | |     mut depth: size_t,
30 | | ) -> uint64_t {
31 | |     return 0xabcd0004 as libc::c_uint as uint64_t;
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:31:5
   |
31 |     return 0xabcd0004 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0004 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:34:1
   |
34 | / pub unsafe extern "C" fn __c2rust_hash_event_base_struct(
35 | |     mut l: *mut libc::c_void,
36 | |     mut depth: size_t,
37 | | ) -> uint64_t {
38 | |     return 0xabcd0005 as libc::c_uint as uint64_t;
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:38:5
   |
38 |     return 0xabcd0005 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0005 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:41:1
   |
41 | / pub unsafe extern "C" fn __c2rust_hash___mbstate_t_struct(
42 | |     mut l: *mut libc::c_void,
43 | |     mut depth: size_t,
44 | | ) -> uint64_t {
45 | |     return 0xabcd0006 as libc::c_uint as uint64_t;
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:45:5
   |
45 |     return 0xabcd0006 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0006 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xchecks/xchecks.rs:48:1
   |
48 | / pub unsafe extern "C" fn __c2rust_hash_bufferevent_ops_struct(
49 | |     mut l: *mut libc::c_void,
50 | |     mut depth: size_t,
51 | | ) -> uint64_t {
52 | |     return 0xabcd0007 as libc::c_uint as uint64_t;
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xchecks/xchecks.rs:52:5
   |
52 |     return 0xabcd0007 as libc::c_uint as uint64_t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0xabcd0007 as libc::c_uint as uint64_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
  --> src/xmalloc.rs:37:1
   |
37 | / pub unsafe extern "C" fn xmalloc(mut size: size_t) -> *mut libc::c_void {
38 | |     let mut ptr: *mut libc::c_void = 0 as *mut libc::c_void;
39 | |     if size == 0 as libc::c_int as size_t {
40 | |         fatalx(b"xmalloc: zero size\0" as *const u8 as *const libc::c_char);
...  |
50 | |     return ptr;
51 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xmalloc.rs:50:5
   |
50 |     return ptr;
   |     ^^^^^^^^^^^ help: remove `return`: `ptr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/xmalloc.rs:38:38
   |
38 |     let mut ptr: *mut libc::c_void = 0 as *mut libc::c_void;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
  --> src/xmalloc.rs:53:1
   |
53 | / pub unsafe extern "C" fn xcalloc(
54 | |     mut nmemb: size_t,
55 | |     mut size: size_t,
56 | | ) -> *mut libc::c_void {
...  |
71 | |     return ptr;
72 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xmalloc.rs:71:5
   |
71 |     return ptr;
   |     ^^^^^^^^^^^ help: remove `return`: `ptr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/xmalloc.rs:57:38
   |
57 |     let mut ptr: *mut libc::c_void = 0 as *mut libc::c_void;
   |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
  --> src/xmalloc.rs:74:1
   |
74 | / pub unsafe extern "C" fn xrealloc(
75 | |     mut ptr: *mut libc::c_void,
76 | |     mut size: size_t,
77 | | ) -> *mut libc::c_void {
78 | |     return xreallocarray(ptr, 1 as libc::c_int as size_t, size);
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xmalloc.rs:78:5
   |
78 |     return xreallocarray(ptr, 1 as libc::c_int as size_t, size);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xreallocarray(ptr, 1 as libc::c_int as size_t, size)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:81:1
    |
81  | / pub unsafe extern "C" fn xreallocarray(
82  | |     mut ptr: *mut libc::c_void,
83  | |     mut nmemb: size_t,
84  | |     mut size: size_t,
...   |
100 | |     return new_ptr;
101 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:100:5
    |
100 |     return new_ptr;
    |     ^^^^^^^^^^^^^^^ help: remove `return`: `new_ptr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
  --> src/xmalloc.rs:86:42
   |
86 |     let mut new_ptr: *mut libc::c_void = 0 as *mut libc::c_void;
   |                                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:103:1
    |
103 | / pub unsafe extern "C" fn xstrdup(mut str: *const libc::c_char) -> *mut libc::c_char {
104 | |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
105 | |     cp = strdup(str);
106 | |     if cp.is_null() {
...   |
112 | |     return cp;
113 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:112:5
    |
112 |     return cp;
    |     ^^^^^^^^^^ help: remove `return`: `cp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/xmalloc.rs:104:37
    |
104 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:115:1
    |
115 | / pub unsafe extern "C" fn xstrndup(
116 | |     mut str: *const libc::c_char,
117 | |     mut maxlen: size_t,
118 | | ) -> *mut libc::c_char {
...   |
127 | |     return cp;
128 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:127:5
    |
127 |     return cp;
    |     ^^^^^^^^^^ help: remove `return`: `cp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/xmalloc.rs:119:37
    |
119 |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:130:1
    |
130 | / pub unsafe extern "C" fn xvasprintf(
131 | |     mut ret: *mut *mut libc::c_char,
132 | |     mut fmt: *const libc::c_char,
133 | |     mut ap: ::core::ffi::VaList,
...   |
143 | |     return i;
144 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:143:5
    |
143 |     return i;
    |     ^^^^^^^^^ help: remove `return`: `i`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:146:1
    |
146 | / pub unsafe extern "C" fn xvsnprintf(
147 | |     mut str: *mut libc::c_char,
148 | |     mut len: size_t,
149 | |     mut fmt: *const libc::c_char,
...   |
160 | |     return i;
161 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:160:5
    |
160 |     return i;
    |     ^^^^^^^^^ help: remove `return`: `i`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:132:9
    |
128 | /         let mut init = xterm_keys_entry {
129 | |             key: KEYC_F1 as libc::c_int as key_code,
130 | |             template: b"\x1B[1;_P\0" as *const u8 as *const libc::c_char,
131 | |         };
    | |__________- unnecessary `let` binding
132 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
128 ~         
129 ~         xterm_keys_entry {
130 +             key: KEYC_F1 as libc::c_int as key_code,
131 +             template: b"\x1B[1;_P\0" as *const u8 as *const libc::c_char,
132 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:139:9
    |
135 | /         let mut init = xterm_keys_entry {
136 | |             key: KEYC_F1 as libc::c_int as key_code,
137 | |             template: b"\x1BO1;_P\0" as *const u8 as *const libc::c_char,
138 | |         };
    | |__________- unnecessary `let` binding
139 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
135 ~         
136 ~         xterm_keys_entry {
137 +             key: KEYC_F1 as libc::c_int as key_code,
138 +             template: b"\x1BO1;_P\0" as *const u8 as *const libc::c_char,
139 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:146:9
    |
142 | /         let mut init = xterm_keys_entry {
143 | |             key: KEYC_F1 as libc::c_int as key_code,
144 | |             template: b"\x1BO_P\0" as *const u8 as *const libc::c_char,
145 | |         };
    | |__________- unnecessary `let` binding
146 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
142 ~         
143 ~         xterm_keys_entry {
144 +             key: KEYC_F1 as libc::c_int as key_code,
145 +             template: b"\x1BO_P\0" as *const u8 as *const libc::c_char,
146 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:153:9
    |
149 | /         let mut init = xterm_keys_entry {
150 | |             key: KEYC_F2 as libc::c_int as key_code,
151 | |             template: b"\x1B[1;_Q\0" as *const u8 as *const libc::c_char,
152 | |         };
    | |__________- unnecessary `let` binding
153 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
149 ~         
150 ~         xterm_keys_entry {
151 +             key: KEYC_F2 as libc::c_int as key_code,
152 +             template: b"\x1B[1;_Q\0" as *const u8 as *const libc::c_char,
153 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:160:9
    |
156 | /         let mut init = xterm_keys_entry {
157 | |             key: KEYC_F2 as libc::c_int as key_code,
158 | |             template: b"\x1BO1;_Q\0" as *const u8 as *const libc::c_char,
159 | |         };
    | |__________- unnecessary `let` binding
160 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
156 ~         
157 ~         xterm_keys_entry {
158 +             key: KEYC_F2 as libc::c_int as key_code,
159 +             template: b"\x1BO1;_Q\0" as *const u8 as *const libc::c_char,
160 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:167:9
    |
163 | /         let mut init = xterm_keys_entry {
164 | |             key: KEYC_F2 as libc::c_int as key_code,
165 | |             template: b"\x1BO_Q\0" as *const u8 as *const libc::c_char,
166 | |         };
    | |__________- unnecessary `let` binding
167 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
163 ~         
164 ~         xterm_keys_entry {
165 +             key: KEYC_F2 as libc::c_int as key_code,
166 +             template: b"\x1BO_Q\0" as *const u8 as *const libc::c_char,
167 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:174:9
    |
170 | /         let mut init = xterm_keys_entry {
171 | |             key: KEYC_F3 as libc::c_int as key_code,
172 | |             template: b"\x1B[1;_R\0" as *const u8 as *const libc::c_char,
173 | |         };
    | |__________- unnecessary `let` binding
174 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
170 ~         
171 ~         xterm_keys_entry {
172 +             key: KEYC_F3 as libc::c_int as key_code,
173 +             template: b"\x1B[1;_R\0" as *const u8 as *const libc::c_char,
174 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:181:9
    |
177 | /         let mut init = xterm_keys_entry {
178 | |             key: KEYC_F3 as libc::c_int as key_code,
179 | |             template: b"\x1BO1;_R\0" as *const u8 as *const libc::c_char,
180 | |         };
    | |__________- unnecessary `let` binding
181 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
177 ~         
178 ~         xterm_keys_entry {
179 +             key: KEYC_F3 as libc::c_int as key_code,
180 +             template: b"\x1BO1;_R\0" as *const u8 as *const libc::c_char,
181 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:188:9
    |
184 | /         let mut init = xterm_keys_entry {
185 | |             key: KEYC_F3 as libc::c_int as key_code,
186 | |             template: b"\x1BO_R\0" as *const u8 as *const libc::c_char,
187 | |         };
    | |__________- unnecessary `let` binding
188 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
184 ~         
185 ~         xterm_keys_entry {
186 +             key: KEYC_F3 as libc::c_int as key_code,
187 +             template: b"\x1BO_R\0" as *const u8 as *const libc::c_char,
188 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:195:9
    |
191 | /         let mut init = xterm_keys_entry {
192 | |             key: KEYC_F4 as libc::c_int as key_code,
193 | |             template: b"\x1B[1;_S\0" as *const u8 as *const libc::c_char,
194 | |         };
    | |__________- unnecessary `let` binding
195 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
191 ~         
192 ~         xterm_keys_entry {
193 +             key: KEYC_F4 as libc::c_int as key_code,
194 +             template: b"\x1B[1;_S\0" as *const u8 as *const libc::c_char,
195 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:202:9
    |
198 | /         let mut init = xterm_keys_entry {
199 | |             key: KEYC_F4 as libc::c_int as key_code,
200 | |             template: b"\x1BO1;_S\0" as *const u8 as *const libc::c_char,
201 | |         };
    | |__________- unnecessary `let` binding
202 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
198 ~         
199 ~         xterm_keys_entry {
200 +             key: KEYC_F4 as libc::c_int as key_code,
201 +             template: b"\x1BO1;_S\0" as *const u8 as *const libc::c_char,
202 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:209:9
    |
205 | /         let mut init = xterm_keys_entry {
206 | |             key: KEYC_F4 as libc::c_int as key_code,
207 | |             template: b"\x1BO_S\0" as *const u8 as *const libc::c_char,
208 | |         };
    | |__________- unnecessary `let` binding
209 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
205 ~         
206 ~         xterm_keys_entry {
207 +             key: KEYC_F4 as libc::c_int as key_code,
208 +             template: b"\x1BO_S\0" as *const u8 as *const libc::c_char,
209 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:216:9
    |
212 | /         let mut init = xterm_keys_entry {
213 | |             key: KEYC_F5 as libc::c_int as key_code,
214 | |             template: b"\x1B[15;_~\0" as *const u8 as *const libc::c_char,
215 | |         };
    | |__________- unnecessary `let` binding
216 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
212 ~         
213 ~         xterm_keys_entry {
214 +             key: KEYC_F5 as libc::c_int as key_code,
215 +             template: b"\x1B[15;_~\0" as *const u8 as *const libc::c_char,
216 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:223:9
    |
219 | /         let mut init = xterm_keys_entry {
220 | |             key: KEYC_F6 as libc::c_int as key_code,
221 | |             template: b"\x1B[17;_~\0" as *const u8 as *const libc::c_char,
222 | |         };
    | |__________- unnecessary `let` binding
223 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
219 ~         
220 ~         xterm_keys_entry {
221 +             key: KEYC_F6 as libc::c_int as key_code,
222 +             template: b"\x1B[17;_~\0" as *const u8 as *const libc::c_char,
223 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:230:9
    |
226 | /         let mut init = xterm_keys_entry {
227 | |             key: KEYC_F7 as libc::c_int as key_code,
228 | |             template: b"\x1B[18;_~\0" as *const u8 as *const libc::c_char,
229 | |         };
    | |__________- unnecessary `let` binding
230 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
226 ~         
227 ~         xterm_keys_entry {
228 +             key: KEYC_F7 as libc::c_int as key_code,
229 +             template: b"\x1B[18;_~\0" as *const u8 as *const libc::c_char,
230 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:237:9
    |
233 | /         let mut init = xterm_keys_entry {
234 | |             key: KEYC_F8 as libc::c_int as key_code,
235 | |             template: b"\x1B[19;_~\0" as *const u8 as *const libc::c_char,
236 | |         };
    | |__________- unnecessary `let` binding
237 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
233 ~         
234 ~         xterm_keys_entry {
235 +             key: KEYC_F8 as libc::c_int as key_code,
236 +             template: b"\x1B[19;_~\0" as *const u8 as *const libc::c_char,
237 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:244:9
    |
240 | /         let mut init = xterm_keys_entry {
241 | |             key: KEYC_F9 as libc::c_int as key_code,
242 | |             template: b"\x1B[20;_~\0" as *const u8 as *const libc::c_char,
243 | |         };
    | |__________- unnecessary `let` binding
244 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
240 ~         
241 ~         xterm_keys_entry {
242 +             key: KEYC_F9 as libc::c_int as key_code,
243 +             template: b"\x1B[20;_~\0" as *const u8 as *const libc::c_char,
244 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:251:9
    |
247 | /         let mut init = xterm_keys_entry {
248 | |             key: KEYC_F10 as libc::c_int as key_code,
249 | |             template: b"\x1B[21;_~\0" as *const u8 as *const libc::c_char,
250 | |         };
    | |__________- unnecessary `let` binding
251 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
247 ~         
248 ~         xterm_keys_entry {
249 +             key: KEYC_F10 as libc::c_int as key_code,
250 +             template: b"\x1B[21;_~\0" as *const u8 as *const libc::c_char,
251 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:258:9
    |
254 | /         let mut init = xterm_keys_entry {
255 | |             key: KEYC_F11 as libc::c_int as key_code,
256 | |             template: b"\x1B[23;_~\0" as *const u8 as *const libc::c_char,
257 | |         };
    | |__________- unnecessary `let` binding
258 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
254 ~         
255 ~         xterm_keys_entry {
256 +             key: KEYC_F11 as libc::c_int as key_code,
257 +             template: b"\x1B[23;_~\0" as *const u8 as *const libc::c_char,
258 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:265:9
    |
261 | /         let mut init = xterm_keys_entry {
262 | |             key: KEYC_F12 as libc::c_int as key_code,
263 | |             template: b"\x1B[24;_~\0" as *const u8 as *const libc::c_char,
264 | |         };
    | |__________- unnecessary `let` binding
265 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
261 ~         
262 ~         xterm_keys_entry {
263 +             key: KEYC_F12 as libc::c_int as key_code,
264 +             template: b"\x1B[24;_~\0" as *const u8 as *const libc::c_char,
265 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:272:9
    |
268 | /         let mut init = xterm_keys_entry {
269 | |             key: KEYC_UP as libc::c_int as key_code,
270 | |             template: b"\x1B[1;_A\0" as *const u8 as *const libc::c_char,
271 | |         };
    | |__________- unnecessary `let` binding
272 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
268 ~         
269 ~         xterm_keys_entry {
270 +             key: KEYC_UP as libc::c_int as key_code,
271 +             template: b"\x1B[1;_A\0" as *const u8 as *const libc::c_char,
272 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:279:9
    |
275 | /         let mut init = xterm_keys_entry {
276 | |             key: KEYC_DOWN as libc::c_int as key_code,
277 | |             template: b"\x1B[1;_B\0" as *const u8 as *const libc::c_char,
278 | |         };
    | |__________- unnecessary `let` binding
279 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
275 ~         
276 ~         xterm_keys_entry {
277 +             key: KEYC_DOWN as libc::c_int as key_code,
278 +             template: b"\x1B[1;_B\0" as *const u8 as *const libc::c_char,
279 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:286:9
    |
282 | /         let mut init = xterm_keys_entry {
283 | |             key: KEYC_RIGHT as libc::c_int as key_code,
284 | |             template: b"\x1B[1;_C\0" as *const u8 as *const libc::c_char,
285 | |         };
    | |__________- unnecessary `let` binding
286 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
282 ~         
283 ~         xterm_keys_entry {
284 +             key: KEYC_RIGHT as libc::c_int as key_code,
285 +             template: b"\x1B[1;_C\0" as *const u8 as *const libc::c_char,
286 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:293:9
    |
289 | /         let mut init = xterm_keys_entry {
290 | |             key: KEYC_LEFT as libc::c_int as key_code,
291 | |             template: b"\x1B[1;_D\0" as *const u8 as *const libc::c_char,
292 | |         };
    | |__________- unnecessary `let` binding
293 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
289 ~         
290 ~         xterm_keys_entry {
291 +             key: KEYC_LEFT as libc::c_int as key_code,
292 +             template: b"\x1B[1;_D\0" as *const u8 as *const libc::c_char,
293 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:300:9
    |
296 | /         let mut init = xterm_keys_entry {
297 | |             key: KEYC_HOME as libc::c_int as key_code,
298 | |             template: b"\x1B[1;_H\0" as *const u8 as *const libc::c_char,
299 | |         };
    | |__________- unnecessary `let` binding
300 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
296 ~         
297 ~         xterm_keys_entry {
298 +             key: KEYC_HOME as libc::c_int as key_code,
299 +             template: b"\x1B[1;_H\0" as *const u8 as *const libc::c_char,
300 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:307:9
    |
303 | /         let mut init = xterm_keys_entry {
304 | |             key: KEYC_END as libc::c_int as key_code,
305 | |             template: b"\x1B[1;_F\0" as *const u8 as *const libc::c_char,
306 | |         };
    | |__________- unnecessary `let` binding
307 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
303 ~         
304 ~         xterm_keys_entry {
305 +             key: KEYC_END as libc::c_int as key_code,
306 +             template: b"\x1B[1;_F\0" as *const u8 as *const libc::c_char,
307 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:314:9
    |
310 | /         let mut init = xterm_keys_entry {
311 | |             key: KEYC_PPAGE as libc::c_int as key_code,
312 | |             template: b"\x1B[5;_~\0" as *const u8 as *const libc::c_char,
313 | |         };
    | |__________- unnecessary `let` binding
314 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
310 ~         
311 ~         xterm_keys_entry {
312 +             key: KEYC_PPAGE as libc::c_int as key_code,
313 +             template: b"\x1B[5;_~\0" as *const u8 as *const libc::c_char,
314 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:321:9
    |
317 | /         let mut init = xterm_keys_entry {
318 | |             key: KEYC_NPAGE as libc::c_int as key_code,
319 | |             template: b"\x1B[6;_~\0" as *const u8 as *const libc::c_char,
320 | |         };
    | |__________- unnecessary `let` binding
321 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
317 ~         
318 ~         xterm_keys_entry {
319 +             key: KEYC_NPAGE as libc::c_int as key_code,
320 +             template: b"\x1B[6;_~\0" as *const u8 as *const libc::c_char,
321 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:328:9
    |
324 | /         let mut init = xterm_keys_entry {
325 | |             key: KEYC_IC as libc::c_int as key_code,
326 | |             template: b"\x1B[2;_~\0" as *const u8 as *const libc::c_char,
327 | |         };
    | |__________- unnecessary `let` binding
328 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
324 ~         
325 ~         xterm_keys_entry {
326 +             key: KEYC_IC as libc::c_int as key_code,
327 +             template: b"\x1B[2;_~\0" as *const u8 as *const libc::c_char,
328 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:335:9
    |
331 | /         let mut init = xterm_keys_entry {
332 | |             key: KEYC_DC as libc::c_int as key_code,
333 | |             template: b"\x1B[3;_~\0" as *const u8 as *const libc::c_char,
334 | |         };
    | |__________- unnecessary `let` binding
335 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
331 ~         
332 ~         xterm_keys_entry {
333 +             key: KEYC_DC as libc::c_int as key_code,
334 +             template: b"\x1B[3;_~\0" as *const u8 as *const libc::c_char,
335 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:342:9
    |
338 | /         let mut init = xterm_keys_entry {
339 | |             key: '!' as i32 as key_code,
340 | |             template: b"\x1B[27;_;33~\0" as *const u8 as *const libc::c_char,
341 | |         };
    | |__________- unnecessary `let` binding
342 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
338 ~         
339 ~         xterm_keys_entry {
340 +             key: '!' as i32 as key_code,
341 +             template: b"\x1B[27;_;33~\0" as *const u8 as *const libc::c_char,
342 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:349:9
    |
345 | /         let mut init = xterm_keys_entry {
346 | |             key: '#' as i32 as key_code,
347 | |             template: b"\x1B[27;_;35~\0" as *const u8 as *const libc::c_char,
348 | |         };
    | |__________- unnecessary `let` binding
349 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
345 ~         
346 ~         xterm_keys_entry {
347 +             key: '#' as i32 as key_code,
348 +             template: b"\x1B[27;_;35~\0" as *const u8 as *const libc::c_char,
349 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:356:9
    |
352 | /         let mut init = xterm_keys_entry {
353 | |             key: '(' as i32 as key_code,
354 | |             template: b"\x1B[27;_;40~\0" as *const u8 as *const libc::c_char,
355 | |         };
    | |__________- unnecessary `let` binding
356 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
352 ~         
353 ~         xterm_keys_entry {
354 +             key: '(' as i32 as key_code,
355 +             template: b"\x1B[27;_;40~\0" as *const u8 as *const libc::c_char,
356 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:363:9
    |
359 | /         let mut init = xterm_keys_entry {
360 | |             key: ')' as i32 as key_code,
361 | |             template: b"\x1B[27;_;41~\0" as *const u8 as *const libc::c_char,
362 | |         };
    | |__________- unnecessary `let` binding
363 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
359 ~         
360 ~         xterm_keys_entry {
361 +             key: ')' as i32 as key_code,
362 +             template: b"\x1B[27;_;41~\0" as *const u8 as *const libc::c_char,
363 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:370:9
    |
366 | /         let mut init = xterm_keys_entry {
367 | |             key: '+' as i32 as key_code,
368 | |             template: b"\x1B[27;_;43~\0" as *const u8 as *const libc::c_char,
369 | |         };
    | |__________- unnecessary `let` binding
370 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
366 ~         
367 ~         xterm_keys_entry {
368 +             key: '+' as i32 as key_code,
369 +             template: b"\x1B[27;_;43~\0" as *const u8 as *const libc::c_char,
370 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:377:9
    |
373 | /         let mut init = xterm_keys_entry {
374 | |             key: ',' as i32 as key_code,
375 | |             template: b"\x1B[27;_;44~\0" as *const u8 as *const libc::c_char,
376 | |         };
    | |__________- unnecessary `let` binding
377 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
373 ~         
374 ~         xterm_keys_entry {
375 +             key: ',' as i32 as key_code,
376 +             template: b"\x1B[27;_;44~\0" as *const u8 as *const libc::c_char,
377 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:384:9
    |
380 | /         let mut init = xterm_keys_entry {
381 | |             key: '-' as i32 as key_code,
382 | |             template: b"\x1B[27;_;45~\0" as *const u8 as *const libc::c_char,
383 | |         };
    | |__________- unnecessary `let` binding
384 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
380 ~         
381 ~         xterm_keys_entry {
382 +             key: '-' as i32 as key_code,
383 +             template: b"\x1B[27;_;45~\0" as *const u8 as *const libc::c_char,
384 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:391:9
    |
387 | /         let mut init = xterm_keys_entry {
388 | |             key: '.' as i32 as key_code,
389 | |             template: b"\x1B[27;_;46~\0" as *const u8 as *const libc::c_char,
390 | |         };
    | |__________- unnecessary `let` binding
391 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
387 ~         
388 ~         xterm_keys_entry {
389 +             key: '.' as i32 as key_code,
390 +             template: b"\x1B[27;_;46~\0" as *const u8 as *const libc::c_char,
391 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:398:9
    |
394 | /         let mut init = xterm_keys_entry {
395 | |             key: '0' as i32 as key_code,
396 | |             template: b"\x1B[27;_;48~\0" as *const u8 as *const libc::c_char,
397 | |         };
    | |__________- unnecessary `let` binding
398 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
394 ~         
395 ~         xterm_keys_entry {
396 +             key: '0' as i32 as key_code,
397 +             template: b"\x1B[27;_;48~\0" as *const u8 as *const libc::c_char,
398 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:405:9
    |
401 | /         let mut init = xterm_keys_entry {
402 | |             key: '1' as i32 as key_code,
403 | |             template: b"\x1B[27;_;49~\0" as *const u8 as *const libc::c_char,
404 | |         };
    | |__________- unnecessary `let` binding
405 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
401 ~         
402 ~         xterm_keys_entry {
403 +             key: '1' as i32 as key_code,
404 +             template: b"\x1B[27;_;49~\0" as *const u8 as *const libc::c_char,
405 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:412:9
    |
408 | /         let mut init = xterm_keys_entry {
409 | |             key: '2' as i32 as key_code,
410 | |             template: b"\x1B[27;_;50~\0" as *const u8 as *const libc::c_char,
411 | |         };
    | |__________- unnecessary `let` binding
412 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
408 ~         
409 ~         xterm_keys_entry {
410 +             key: '2' as i32 as key_code,
411 +             template: b"\x1B[27;_;50~\0" as *const u8 as *const libc::c_char,
412 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:419:9
    |
415 | /         let mut init = xterm_keys_entry {
416 | |             key: '3' as i32 as key_code,
417 | |             template: b"\x1B[27;_;51~\0" as *const u8 as *const libc::c_char,
418 | |         };
    | |__________- unnecessary `let` binding
419 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
415 ~         
416 ~         xterm_keys_entry {
417 +             key: '3' as i32 as key_code,
418 +             template: b"\x1B[27;_;51~\0" as *const u8 as *const libc::c_char,
419 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:426:9
    |
422 | /         let mut init = xterm_keys_entry {
423 | |             key: '4' as i32 as key_code,
424 | |             template: b"\x1B[27;_;52~\0" as *const u8 as *const libc::c_char,
425 | |         };
    | |__________- unnecessary `let` binding
426 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
422 ~         
423 ~         xterm_keys_entry {
424 +             key: '4' as i32 as key_code,
425 +             template: b"\x1B[27;_;52~\0" as *const u8 as *const libc::c_char,
426 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:433:9
    |
429 | /         let mut init = xterm_keys_entry {
430 | |             key: '5' as i32 as key_code,
431 | |             template: b"\x1B[27;_;53~\0" as *const u8 as *const libc::c_char,
432 | |         };
    | |__________- unnecessary `let` binding
433 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
429 ~         
430 ~         xterm_keys_entry {
431 +             key: '5' as i32 as key_code,
432 +             template: b"\x1B[27;_;53~\0" as *const u8 as *const libc::c_char,
433 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:440:9
    |
436 | /         let mut init = xterm_keys_entry {
437 | |             key: '6' as i32 as key_code,
438 | |             template: b"\x1B[27;_;54~\0" as *const u8 as *const libc::c_char,
439 | |         };
    | |__________- unnecessary `let` binding
440 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
436 ~         
437 ~         xterm_keys_entry {
438 +             key: '6' as i32 as key_code,
439 +             template: b"\x1B[27;_;54~\0" as *const u8 as *const libc::c_char,
440 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:447:9
    |
443 | /         let mut init = xterm_keys_entry {
444 | |             key: '7' as i32 as key_code,
445 | |             template: b"\x1B[27;_;55~\0" as *const u8 as *const libc::c_char,
446 | |         };
    | |__________- unnecessary `let` binding
447 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
443 ~         
444 ~         xterm_keys_entry {
445 +             key: '7' as i32 as key_code,
446 +             template: b"\x1B[27;_;55~\0" as *const u8 as *const libc::c_char,
447 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:454:9
    |
450 | /         let mut init = xterm_keys_entry {
451 | |             key: '8' as i32 as key_code,
452 | |             template: b"\x1B[27;_;56~\0" as *const u8 as *const libc::c_char,
453 | |         };
    | |__________- unnecessary `let` binding
454 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
450 ~         
451 ~         xterm_keys_entry {
452 +             key: '8' as i32 as key_code,
453 +             template: b"\x1B[27;_;56~\0" as *const u8 as *const libc::c_char,
454 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:461:9
    |
457 | /         let mut init = xterm_keys_entry {
458 | |             key: '9' as i32 as key_code,
459 | |             template: b"\x1B[27;_;57~\0" as *const u8 as *const libc::c_char,
460 | |         };
    | |__________- unnecessary `let` binding
461 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
457 ~         
458 ~         xterm_keys_entry {
459 +             key: '9' as i32 as key_code,
460 +             template: b"\x1B[27;_;57~\0" as *const u8 as *const libc::c_char,
461 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:468:9
    |
464 | /         let mut init = xterm_keys_entry {
465 | |             key: ':' as i32 as key_code,
466 | |             template: b"\x1B[27;_;58~\0" as *const u8 as *const libc::c_char,
467 | |         };
    | |__________- unnecessary `let` binding
468 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
464 ~         
465 ~         xterm_keys_entry {
466 +             key: ':' as i32 as key_code,
467 +             template: b"\x1B[27;_;58~\0" as *const u8 as *const libc::c_char,
468 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:475:9
    |
471 | /         let mut init = xterm_keys_entry {
472 | |             key: ';' as i32 as key_code,
473 | |             template: b"\x1B[27;_;59~\0" as *const u8 as *const libc::c_char,
474 | |         };
    | |__________- unnecessary `let` binding
475 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
471 ~         
472 ~         xterm_keys_entry {
473 +             key: ';' as i32 as key_code,
474 +             template: b"\x1B[27;_;59~\0" as *const u8 as *const libc::c_char,
475 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:482:9
    |
478 | /         let mut init = xterm_keys_entry {
479 | |             key: '<' as i32 as key_code,
480 | |             template: b"\x1B[27;_;60~\0" as *const u8 as *const libc::c_char,
481 | |         };
    | |__________- unnecessary `let` binding
482 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
478 ~         
479 ~         xterm_keys_entry {
480 +             key: '<' as i32 as key_code,
481 +             template: b"\x1B[27;_;60~\0" as *const u8 as *const libc::c_char,
482 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:489:9
    |
485 | /         let mut init = xterm_keys_entry {
486 | |             key: '=' as i32 as key_code,
487 | |             template: b"\x1B[27;_;61~\0" as *const u8 as *const libc::c_char,
488 | |         };
    | |__________- unnecessary `let` binding
489 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
485 ~         
486 ~         xterm_keys_entry {
487 +             key: '=' as i32 as key_code,
488 +             template: b"\x1B[27;_;61~\0" as *const u8 as *const libc::c_char,
489 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:496:9
    |
492 | /         let mut init = xterm_keys_entry {
493 | |             key: '>' as i32 as key_code,
494 | |             template: b"\x1B[27;_;62~\0" as *const u8 as *const libc::c_char,
495 | |         };
    | |__________- unnecessary `let` binding
496 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
492 ~         
493 ~         xterm_keys_entry {
494 +             key: '>' as i32 as key_code,
495 +             template: b"\x1B[27;_;62~\0" as *const u8 as *const libc::c_char,
496 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:503:9
    |
499 | /         let mut init = xterm_keys_entry {
500 | |             key: '?' as i32 as key_code,
501 | |             template: b"\x1B[27;_;63~\0" as *const u8 as *const libc::c_char,
502 | |         };
    | |__________- unnecessary `let` binding
503 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
499 ~         
500 ~         xterm_keys_entry {
501 +             key: '?' as i32 as key_code,
502 +             template: b"\x1B[27;_;63~\0" as *const u8 as *const libc::c_char,
503 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:510:9
    |
506 | /         let mut init = xterm_keys_entry {
507 | |             key: '\'' as i32 as key_code,
508 | |             template: b"\x1B[27;_;39~\0" as *const u8 as *const libc::c_char,
509 | |         };
    | |__________- unnecessary `let` binding
510 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
506 ~         
507 ~         xterm_keys_entry {
508 +             key: '\'' as i32 as key_code,
509 +             template: b"\x1B[27;_;39~\0" as *const u8 as *const libc::c_char,
510 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:517:9
    |
513 | /         let mut init = xterm_keys_entry {
514 | |             key: '\r' as i32 as key_code,
515 | |             template: b"\x1B[27;_;13~\0" as *const u8 as *const libc::c_char,
516 | |         };
    | |__________- unnecessary `let` binding
517 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
513 ~         
514 ~         xterm_keys_entry {
515 +             key: '\r' as i32 as key_code,
516 +             template: b"\x1B[27;_;13~\0" as *const u8 as *const libc::c_char,
517 +         }
    |

warning: returning the result of a `let` binding from a block
   --> src/xterm_keys.rs:524:9
    |
520 | /         let mut init = xterm_keys_entry {
521 | |             key: '\t' as i32 as key_code,
522 | |             template: b"\x1B[27;_;9~\0" as *const u8 as *const libc::c_char,
523 | |         };
    | |__________- unnecessary `let` binding
524 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
520 ~         
521 ~         xterm_keys_entry {
522 +             key: '\t' as i32 as key_code,
523 +             template: b"\x1B[27;_;9~\0" as *const u8 as *const libc::c_char,
524 +         }
    |

warning: unneeded `return` statement
   --> src/xterm_keys.rs:563:5
    |
563 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement with no effect
   --> src/xterm_keys.rs:552:13
    |
552 |             pos;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
   --> src/xterm_keys.rs:607:5
    |
607 |     return 0 as libc::c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xterm_keys.rs:610:1
    |
610 | / pub unsafe extern "C" fn xterm_keys_find(
611 | |     mut buf: *const libc::c_char,
612 | |     mut len: size_t,
613 | |     mut size: *mut size_t,
...   |
638 | |     return -(1 as libc::c_int);
639 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xterm_keys.rs:638:5
    |
638 |     return -(1 as libc::c_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/xterm_keys.rs:616:46
    |
616 |     let mut entry: *const xterm_keys_entry = 0 as *const xterm_keys_entry;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<xterm_keys_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/xterm_keys.rs:630:13
    |
630 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/xterm_keys.rs:641:1
    |
641 | / pub unsafe extern "C" fn xterm_keys_lookup(mut key: key_code) -> *mut libc::c_char {
642 | |     let mut entry: *const xterm_keys_entry = 0 as *const xterm_keys_entry;
643 | |     let mut i: u_int = 0;
644 | |     let mut modifiers: key_code = 0;
...   |
692 | |     return out;
693 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xterm_keys.rs:692:5
    |
692 |     return out;
    |     ^^^^^^^^^^^ help: remove `return`: `out`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
   --> src/xterm_keys.rs:642:46
    |
642 |     let mut entry: *const xterm_keys_entry = 0 as *const xterm_keys_entry;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<xterm_keys_entry>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/xterm_keys.rs:645:38
    |
645 |     let mut out: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/xterm_keys.rs:657:16
    |
657 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/xterm_keys.rs:662:16
    |
662 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/xterm_keys.rs:679:9
    |
679 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/xterm_keys.rs:685:16
    |
685 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `fatal` redeclared with a different signature
   --> src/compat/getdtablecount.rs:21:5
    |
21  |     fn fatal(_: *const libc::c_char, _: ...);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/client.rs:188:5
    |
188 |     fn fatal(_: *const libc::c_char, _: ...) -> !;
    |     ---------------------------------------------- `fatal` previously declared here
    |
    = note: `#[warn(clashing_extern_declarations)]` on by default
    = note: expected `unsafe extern "C" fn(*const i8, ...) -> !`
               found `unsafe extern "C" fn(*const i8, ...)`

warning: `environ_set` redeclared with a different signature
  --> src/environ.rs:40:5
   |
40 | /     fn environ_set(
41 | |         _: *mut environ,
42 | |         _: *const libc::c_char,
43 | |         _: *const libc::c_char,
44 | |         _: ...
45 | |     );
   | |______^ this signature doesn't match the previous declaration
   |
  ::: src/cmd_set_environment.rs:18:5
   |
18 | /     fn environ_set(
19 | |         _: *mut environ,
20 | |         _: *const libc::c_char,
21 | |         _: *const libc::c_char,
22 | |         _: ...
23 | |     );
   | |______- `environ_set` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::cmd_set_environment::environ, *const i8, *const i8, ...)`
              found `unsafe extern "C" fn(*mut src::environ::environ, *const i8, *const i8, ...)`

warning: `format_add` redeclared with a different signature
   --> src/format.rs:114:5
    |
114 | /     fn format_add(
115 | |         _: *mut format_tree,
116 | |         _: *const libc::c_char,
117 | |         _: *const libc::c_char,
118 | |         _: ...
119 | |     );
    | |______^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_list_clients.rs:24:5
    |
24  | /     fn format_add(
25  | |         _: *mut format_tree,
26  | |         _: *const libc::c_char,
27  | |         _: *const libc::c_char,
28  | |         _: ...
29  | |     );
    | |______- `format_add` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_list_clients::format_tree, *const i8, *const i8, ...)`
               found `unsafe extern "C" fn(*mut src::format::format_tree, *const i8, *const i8, ...)`

warning: `server_client_unref` redeclared with a different signature
   --> src/format.rs:150:5
    |
150 |     fn server_client_unref(_: *mut client);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_if_shell.rs:64:5
    |
64  |     fn server_client_unref(_: *mut client);
    |     --------------------------------------- `server_client_unref` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_if_shell::client)`
               found `unsafe extern "C" fn(*mut src::format::client)`

warning: `server_status_client` redeclared with a different signature
   --> src/format.rs:151:5
    |
151 |     fn server_status_client(_: *mut client);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_refresh_client.rs:27:5
    |
27  |     fn server_status_client(_: *mut client);
    |     ---------------------------------------- `server_status_client` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_refresh_client::client)`
               found `unsafe extern "C" fn(*mut src::format::client)`

warning: `server_status_window` redeclared with a different signature
  --> src/input.rs:96:5
   |
96 |     fn server_status_window(_: *mut window);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/cmd_rename_window.rs:36:5
   |
36 |     fn server_status_window(_: *mut window);
   |     ---------------------------------------- `server_status_window` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::cmd_rename_window::window)`
              found `unsafe extern "C" fn(*mut src::input::window)`

warning: `window_pane_reset_palette` redeclared with a different signature
   --> src/input.rs:142:5
    |
142 |     fn window_pane_reset_palette(_: *mut window_pane);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_send_keys.rs:52:5
    |
52  |     fn window_pane_reset_palette(_: *mut window_pane);
    |     -------------------------------------------------- `window_pane_reset_palette` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_send_keys::window_pane)`
               found `unsafe extern "C" fn(*mut src::input::window_pane)`

warning: `window_set_name` redeclared with a different signature
   --> src/input.rs:143:5
    |
143 |     fn window_set_name(_: *mut window, _: *const libc::c_char);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_break_pane.rs:49:5
    |
49  |     fn window_set_name(_: *mut window, _: *const libc::c_char);
    |     ----------------------------------------------------------- `window_set_name` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_break_pane::window, *const i8)`
               found `unsafe extern "C" fn(*mut src::input::window, *const i8)`

warning: `screen_write_start` redeclared with a different signature
  --> src/mode_tree.rs:88:5
   |
88 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:99:5
   |
99 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
              found `unsafe extern "C" fn(*mut src::mode_tree::screen_write_ctx, *mut src::mode_tree::window_pane, *mut src::mode_tree::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/mode_tree.rs:89:5
    |
89  |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::mode_tree::screen_write_ctx)`

warning: `screen_write_clearendofline` redeclared with a different signature
   --> src/mode_tree.rs:104:5
    |
104 |     fn screen_write_clearendofline(_: *mut screen_write_ctx, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:116:5
    |
116 |     fn screen_write_clearendofline(_: *mut screen_write_ctx, _: u_int);
    |     ------------------------------------------------------------------- `screen_write_clearendofline` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32)`
               found `unsafe extern "C" fn(*mut src::mode_tree::screen_write_ctx, u32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/mode_tree.rs:105:5
    |
105 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::mode_tree::screen_write_ctx, u32, u32)`

warning: `screen_write_clearscreen` redeclared with a different signature
   --> src/mode_tree.rs:106:5
    |
106 |     fn screen_write_clearscreen(_: *mut screen_write_ctx, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:126:5
    |
126 |     fn screen_write_clearscreen(_: *mut screen_write_ctx, _: u_int);
    |     ---------------------------------------------------------------- `screen_write_clearscreen` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32)`
               found `unsafe extern "C" fn(*mut src::mode_tree::screen_write_ctx, u32)`

warning: `screen_write_start` redeclared with a different signature
  --> src/screen_redraw.rs:78:5
   |
78 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:99:5
   |
99 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
              found `unsafe extern "C" fn(*mut src::screen_redraw::screen_write_ctx, *mut src::screen_redraw::window_pane, *mut src::screen_redraw::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/screen_redraw.rs:79:5
    |
79  |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::screen_redraw::screen_write_ctx)`

warning: `screen_write_clearline` redeclared with a different signature
   --> src/screen_redraw.rs:88:5
    |
88  |     fn screen_write_clearline(_: *mut screen_write_ctx, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:115:5
    |
115 |     fn screen_write_clearline(_: *mut screen_write_ctx, _: u_int);
    |     -------------------------------------------------------------- `screen_write_clearline` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32)`
               found `unsafe extern "C" fn(*mut src::screen_redraw::screen_write_ctx, u32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/screen_redraw.rs:89:5
    |
89  |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::screen_redraw::screen_write_ctx, u32, u32)`

warning: `notify_pane` redeclared with a different signature
  --> src/server_fn.rs:44:5
   |
44 |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:88:5
   |
88 |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
   |     ------------------------------------------------------------ `notify_pane` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*const i8, *mut src::input::window_pane)`
              found `unsafe extern "C" fn(*const i8, *mut src::server_fn::window_pane)`

warning: `screen_write_start` redeclared with a different signature
  --> src/server_fn.rs:59:5
   |
59 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:99:5
   |
99 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
              found `unsafe extern "C" fn(*mut src::server_fn::screen_write_ctx, *mut src::server_fn::window_pane, *mut src::server_fn::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/server_fn.rs:60:5
    |
60  |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::server_fn::screen_write_ctx)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/server_fn.rs:68:5
    |
68  |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::server_fn::screen_write_ctx, u32, u32)`

warning: `screen_write_scrollregion` redeclared with a different signature
   --> src/server_fn.rs:69:5
    |
69  |     fn screen_write_scrollregion(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:120:5
    |
120 |     fn screen_write_scrollregion(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     --------------------------------------------------------------------------- `screen_write_scrollregion` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::server_fn::screen_write_ctx, u32, u32)`

warning: `screen_write_linefeed` redeclared with a different signature
   --> src/server_fn.rs:70:5
    |
70  |     fn screen_write_linefeed(_: *mut screen_write_ctx, _: libc::c_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:121:5
    |
121 |     fn screen_write_linefeed(_: *mut screen_write_ctx, _: libc::c_int, _: u_int);
    |     ----------------------------------------------------------------------------- `screen_write_linefeed` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, i32, u32)`
               found `unsafe extern "C" fn(*mut src::server_fn::screen_write_ctx, i32, u32)`

warning: `window_update_activity` redeclared with a different signature
   --> src/session.rs:93:5
    |
93  |     fn window_update_activity(_: *mut window);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:137:5
    |
137 |     fn window_update_activity(_: *mut window);
    |     ------------------------------------------ `window_update_activity` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::window)`
               found `unsafe extern "C" fn(*mut src::session::window)`

warning: `screen_write_start` redeclared with a different signature
   --> src/status.rs:106:5
    |
106 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:99:5
    |
99  |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
    |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
               found `unsafe extern "C" fn(*mut src::status::screen_write_ctx, *mut src::status::window_pane, *mut src::status::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/status.rs:107:5
    |
107 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::status::screen_write_ctx)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/status.rs:133:5
    |
133 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::status::screen_write_ctx, u32, u32)`

warning: `format_create` redeclared with a different signature
   --> src/variadic.rs:103:5
    |
103 | /     fn format_create(
104 | |         _: *mut client,
105 | |         _: *mut cmdq_item,
106 | |         _: libc::c_int,
107 | |         _: libc::c_int,
108 | |     ) -> *mut format_tree;
    | |__________________________^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:49:5
    |
49  | /     fn format_create(
50  | |         _: *mut client,
51  | |         _: *mut cmdq_item,
52  | |         _: libc::c_int,
53  | |         _: libc::c_int,
54  | |     ) -> *mut format_tree;
    | |__________________________- `format_create` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::client, *mut src::cfg::cmdq_item, i32, i32) -> *mut src::cfg::format_tree`
               found `unsafe extern "C" fn(*mut src::variadic::client, *mut src::variadic::cmdq_item, i32, i32) -> *mut src::variadic::format_tree`

warning: `options_default` redeclared with a different signature
   --> src/variadic.rs:110:5
    |
110 | /     fn options_default(
111 | |         _: *mut options,
112 | |         _: *const options_table_entry,
113 | |     ) -> *mut options_entry;
    | |____________________________^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_set_option.rs:47:5
    |
47  | /     fn options_default(
48  | |         _: *mut options,
49  | |         _: *const options_table_entry,
50  | |     ) -> *mut options_entry;
    | |____________________________- `options_default` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_set_option::options, *const src::cmd_set_option::options_table_entry) -> *mut src::cmd_set_option::options_entry`
               found `unsafe extern "C" fn(*mut src::variadic::options, *const src::variadic::options_table_entry) -> *mut src::variadic::options_entry`

warning: `options_get_only` redeclared with a different signature
   --> src/variadic.rs:114:5
    |
114 |     fn options_get_only(_: *mut options, _: *const libc::c_char) -> *mut options_entry;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd.rs:47:5
    |
47  |     fn options_get_only(_: *mut options, _: *const libc::c_char) -> *mut options_entry;
    |     ----------------------------------------------------------------------------------- `options_get_only` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd::options, *const i8) -> *mut src::cmd::options_entry`
               found `unsafe extern "C" fn(*mut src::variadic::options, *const i8) -> *mut src::variadic::options_entry`

warning: `cmdq_get_command` redeclared with a different signature
   --> src/variadic.rs:117:5
    |
117 | /     fn cmdq_get_command(
118 | |         _: *mut cmd_list,
119 | |         _: *mut cmd_find_state,
120 | |         _: *mut mouse_event,
121 | |         _: libc::c_int,
122 | |     ) -> *mut cmdq_item;
    | |________________________^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:58:5
    |
58  | /     fn cmdq_get_command(
59  | |         _: *mut cmd_list,
60  | |         _: *mut cmd_find_state,
61  | |         _: *mut mouse_event,
62  | |         _: libc::c_int,
63  | |     ) -> *mut cmdq_item;
    | |________________________- `cmdq_get_command` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::cmd_list, *mut src::cfg::cmd_find_state, *mut src::cfg::mouse_event, i32) -> *mut src::cfg::cmdq_item`
               found `unsafe extern "C" fn(*mut src::variadic::cmd_list, *mut src::variadic::cmd_find_state, *mut src::variadic::mouse_event, i32) -> *mut src::variadic::cmdq_item`

warning: `cmdq_insert_after` redeclared with a different signature
   --> src/variadic.rs:123:5
    |
123 |     fn cmdq_insert_after(_: *mut cmdq_item, _: *mut cmdq_item);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:69:5
    |
69  |     fn cmdq_insert_after(_: *mut cmdq_item, _: *mut cmdq_item);
    |     ----------------------------------------------------------- `cmdq_insert_after` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::cmdq_item, *mut src::cfg::cmdq_item)`
               found `unsafe extern "C" fn(*mut src::variadic::cmdq_item, *mut src::variadic::cmdq_item)`

warning: `cmdq_append` redeclared with a different signature
   --> src/variadic.rs:124:5
    |
124 |     fn cmdq_append(_: *mut client, _: *mut cmdq_item);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:70:5
    |
70  |     fn cmdq_append(_: *mut client, _: *mut cmdq_item);
    |     -------------------------------------------------- `cmdq_append` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::client, *mut src::cfg::cmdq_item)`
               found `unsafe extern "C" fn(*mut src::variadic::client, *mut src::variadic::cmdq_item)`

warning: `server_client_push_stdout` redeclared with a different signature
   --> src/variadic.rs:125:5
    |
125 |     fn server_client_push_stdout(_: *mut client);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_capture_pane.rs:55:5
    |
55  |     fn server_client_push_stdout(_: *mut client);
    |     --------------------------------------------- `server_client_push_stdout` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_capture_pane::client)`
               found `unsafe extern "C" fn(*mut src::variadic::client)`

warning: `server_client_push_stderr` redeclared with a different signature
   --> src/variadic.rs:126:5
    |
126 |     fn server_client_push_stderr(_: *mut client);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_load_buffer.rs:54:5
    |
54  |     fn server_client_push_stderr(_: *mut client);
    |     --------------------------------------------- `server_client_push_stderr` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_load_buffer::client)`
               found `unsafe extern "C" fn(*mut src::variadic::client)`

warning: `status_message_clear` redeclared with a different signature
   --> src/variadic.rs:127:5
    |
127 |     fn status_message_clear(_: *mut client);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/server_client.rs:219:5
    |
219 |     fn status_message_clear(_: *mut client);
    |     ---------------------------------------- `status_message_clear` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::server_client::client)`
               found `unsafe extern "C" fn(*mut src::variadic::client)`

warning: `screen_write_putc` redeclared with a different signature
   --> src/variadic.rs:135:5
    |
135 |     fn screen_write_putc(_: *mut screen_write_ctx, _: *const grid_cell, _: u_char);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/status.rs:124:5
    |
124 |     fn screen_write_putc(_: *mut screen_write_ctx, _: *const grid_cell, _: u_char);
    |     ------------------------------------------------------------------------------- `screen_write_putc` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::status::screen_write_ctx, *const src::status::grid_cell, u8)`
               found `unsafe extern "C" fn(*mut src::variadic::screen_write_ctx, *const src::variadic::grid_cell, u8)`

warning: `screen_write_cell` redeclared with a different signature
   --> src/variadic.rs:136:5
    |
136 |     fn screen_write_cell(_: *mut screen_write_ctx, _: *const grid_cell);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/status.rs:134:5
    |
134 |     fn screen_write_cell(_: *mut screen_write_ctx, _: *const grid_cell);
    |     -------------------------------------------------------------------- `screen_write_cell` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::status::screen_write_ctx, *const src::status::grid_cell)`
               found `unsafe extern "C" fn(*mut src::variadic::screen_write_ctx, *const src::variadic::grid_cell)`

warning: `window_pane_set_mode` redeclared with a different signature
   --> src/variadic.rs:138:5
    |
138 | /     fn window_pane_set_mode(
139 | |         _: *mut window_pane,
140 | |         _: *const window_mode,
141 | |         _: *mut cmd_find_state,
142 | |         _: *mut args,
143 | |     ) -> libc::c_int;
    | |_____________________^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:80:5
    |
80  | /     fn window_pane_set_mode(
81  | |         _: *mut window_pane,
82  | |         _: *const window_mode,
83  | |         _: *mut cmd_find_state,
84  | |         _: *mut args,
85  | |     ) -> libc::c_int;
    | |_____________________- `window_pane_set_mode` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::window_pane, *const src::cfg::window_mode, *mut src::cfg::cmd_find_state, *mut src::cfg::args) -> i32`
               found `unsafe extern "C" fn(*mut src::variadic::window_pane, *const src::variadic::window_mode, *mut src::variadic::cmd_find_state, *mut src::variadic::args) -> i32`

warning: `window_pane_reset_mode` redeclared with a different signature
   --> src/variadic.rs:144:5
    |
144 |     fn window_pane_reset_mode(_: *mut window_pane);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cmd_capture_pane.rs:69:5
    |
69  |     fn window_pane_reset_mode(_: *mut window_pane);
    |     ----------------------------------------------- `window_pane_reset_mode` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cmd_capture_pane::window_pane)`
               found `unsafe extern "C" fn(*mut src::variadic::window_pane)`

warning: `window_copy_init_for_output` redeclared with a different signature
   --> src/variadic.rs:146:5
    |
146 |     fn window_copy_init_for_output(_: *mut window_pane);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/cfg.rs:87:5
    |
87  |     fn window_copy_init_for_output(_: *mut window_pane);
    |     ---------------------------------------------------- `window_copy_init_for_output` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::cfg::window_pane)`
               found `unsafe extern "C" fn(*mut src::variadic::window_pane)`

warning: `notify_pane` redeclared with a different signature
   --> src/window.rs:132:5
    |
132 |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:88:5
    |
88  |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
    |     ------------------------------------------------------------ `notify_pane` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*const i8, *mut src::input::window_pane)`
               found `unsafe extern "C" fn(*const i8, *mut src::window::window_pane)`

warning: `alerts_queue` redeclared with a different signature
   --> src/window.rs:159:5
    |
159 |     fn alerts_queue(_: *mut window, _: libc::c_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:95:5
    |
95  |     fn alerts_queue(_: *mut window, _: libc::c_int);
    |     ------------------------------------------------ `alerts_queue` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::window, i32)`
               found `unsafe extern "C" fn(*mut src::window::window, i32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/window_buffer.rs:72:5
    |
72  |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_buffer::screen_write_ctx, u32, u32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/window_client.rs:67:5
    |
67  |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_client::screen_write_ctx, u32, u32)`

warning: `screen_write_start` redeclared with a different signature
  --> src/window_clock.rs:54:5
   |
54 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:99:5
   |
99 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
   |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
              found `unsafe extern "C" fn(*mut src::window_clock::screen_write_ctx, *mut src::window_clock::window_pane, *mut src::window_clock::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/window_clock.rs:55:5
    |
55  |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::window_clock::screen_write_ctx)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/window_clock.rs:63:5
    |
63  |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_clock::screen_write_ctx, u32, u32)`

warning: `screen_write_clearscreen` redeclared with a different signature
   --> src/window_clock.rs:64:5
    |
64  |     fn screen_write_clearscreen(_: *mut screen_write_ctx, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:126:5
    |
126 |     fn screen_write_clearscreen(_: *mut screen_write_ctx, _: u_int);
    |     ---------------------------------------------------------------- `screen_write_clearscreen` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32)`
               found `unsafe extern "C" fn(*mut src::window_clock::screen_write_ctx, u32)`

warning: `notify_pane` redeclared with a different signature
  --> src/window_copy.rs:91:5
   |
91 |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
   |
  ::: src/input.rs:88:5
   |
88 |     fn notify_pane(_: *const libc::c_char, _: *mut window_pane);
   |     ------------------------------------------------------------ `notify_pane` previously declared here
   |
   = note: expected `unsafe extern "C" fn(*const i8, *mut src::input::window_pane)`
              found `unsafe extern "C" fn(*const i8, *mut src::window_copy::window_pane)`

warning: `screen_write_start` redeclared with a different signature
   --> src/window_copy.rs:122:5
    |
122 |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:99:5
    |
99  |     fn screen_write_start(_: *mut screen_write_ctx, _: *mut window_pane, _: *mut screen);
    |     ------------------------------------------------------------------------------------- `screen_write_start` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut src::input::window_pane, *mut src::input::screen)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, *mut src::window_copy::window_pane, *mut src::window_copy::screen)`

warning: `screen_write_stop` redeclared with a different signature
   --> src/window_copy.rs:123:5
    |
123 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:100:5
    |
100 |     fn screen_write_stop(_: *mut screen_write_ctx);
    |     ----------------------------------------------- `screen_write_stop` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx)`

warning: `screen_write_vnputs` redeclared with a different signature
   --> src/window_copy.rs:138:5
    |
138 | /     fn screen_write_vnputs(
139 | |         _: *mut screen_write_ctx,
140 | |         _: ssize_t,
141 | |         _: *const grid_cell,
142 | |         _: *const libc::c_char,
143 | |         _: ::core::ffi::VaList,
144 | |     );
    | |______^ this signature doesn't match the previous declaration
    |
   ::: src/variadic.rs:128:5
    |
128 | /     fn screen_write_vnputs(
129 | |         _: *mut screen_write_ctx,
130 | |         _: ssize_t,
131 | |         _: *const grid_cell,
132 | |         _: *const libc::c_char,
133 | |         _: ::core::ffi::VaList,
134 | |     );
    | |______- `screen_write_vnputs` previously declared here
    |
    = note: expected `for<'r, 's> unsafe extern "C" fn(*mut src::variadic::screen_write_ctx, i64, *const src::variadic::grid_cell, *const i8, std::ffi::VaList<'r, 's>)`
               found `for<'r, 's> unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, i64, *const src::window_copy::grid_cell, *const i8, std::ffi::VaList<'r, 's>)`

warning: `screen_write_insertline` redeclared with a different signature
   --> src/window_copy.rs:156:5
    |
156 |     fn screen_write_insertline(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:113:5
    |
113 |     fn screen_write_insertline(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_insertline` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, u32, u32)`

warning: `screen_write_deleteline` redeclared with a different signature
   --> src/window_copy.rs:157:5
    |
157 |     fn screen_write_deleteline(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:114:5
    |
114 |     fn screen_write_deleteline(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_deleteline` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, u32, u32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/window_copy.rs:158:5
    |
158 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, u32, u32)`

warning: `screen_write_linefeed` redeclared with a different signature
   --> src/window_copy.rs:159:5
    |
159 |     fn screen_write_linefeed(_: *mut screen_write_ctx, _: libc::c_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:121:5
    |
121 |     fn screen_write_linefeed(_: *mut screen_write_ctx, _: libc::c_int, _: u_int);
    |     ----------------------------------------------------------------------------- `screen_write_linefeed` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, i32, u32)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, i32, u32)`

warning: `screen_write_carriagereturn` redeclared with a different signature
   --> src/window_copy.rs:160:5
    |
160 |     fn screen_write_carriagereturn(_: *mut screen_write_ctx);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:123:5
    |
123 |     fn screen_write_carriagereturn(_: *mut screen_write_ctx);
    |     --------------------------------------------------------- `screen_write_carriagereturn` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx)`

warning: `screen_write_setselection` redeclared with a different signature
   --> src/window_copy.rs:161:5
    |
161 |     fn screen_write_setselection(_: *mut screen_write_ctx, _: *mut u_char, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:130:5
    |
130 |     fn screen_write_setselection(_: *mut screen_write_ctx, _: *mut u_char, _: u_int);
    |     --------------------------------------------------------------------------------- `screen_write_setselection` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, *mut u8, u32)`
               found `unsafe extern "C" fn(*mut src::window_copy::screen_write_ctx, *mut u8, u32)`

warning: `screen_write_cursormove` redeclared with a different signature
   --> src/window_tree.rs:101:5
    |
101 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration
    |
   ::: src/input.rs:118:5
    |
118 |     fn screen_write_cursormove(_: *mut screen_write_ctx, _: u_int, _: u_int);
    |     ------------------------------------------------------------------------- `screen_write_cursormove` previously declared here
    |
    = note: expected `unsafe extern "C" fn(*mut src::input::screen_write_ctx, u32, u32)`
               found `unsafe extern "C" fn(*mut src::window_tree::screen_write_ctx, u32, u32)`

warning: unused unary operation that must be used
   --> src/arguments.rs:108:21
    |
108 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
    = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
    |
108 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:132:17
    |
132 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
132 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:160:21
    |
160 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
160 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:184:17
    |
184 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
184 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:331:17
    |
331 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
331 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:369:21
    |
369 |                     !((*oleft).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
369 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:394:17
    |
394 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
394 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:420:17
    |
420 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
420 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:458:21
    |
458 |                     !((*oright).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
458 |                     let _ = !((*oright).entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/arguments.rs:483:17
    |
483 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
483 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: path statement with no effect
   --> src/arguments.rs:749:9
    |
749 |         i;
    |         ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
    --> src/cfg.rs:1167:9
     |
1167 |         p;
     |         ^^

warning: path statement with no effect
    --> src/cfg.rs:1292:9
     |
1292 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cfg.rs:1376:13
     |
1376 |             p;
     |             ^^

warning: path statement with no effect
    --> src/cfg.rs:1426:21
     |
1426 |                     found;
     |                     ^^^^^^

warning: path statement with no effect
    --> src/cfg.rs:1467:9
     |
1467 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cfg.rs:1497:9
     |
1497 |         i;
     |         ^^

warning: path statement with no effect
    --> src/client.rs:1797:13
     |
1797 |             i;
     |             ^^

warning: path statement with no effect
    --> src/client.rs:1976:9
     |
1976 |         ss;
     |         ^^^

warning: path statement with no effect
    --> src/cmd.rs:1147:9
     |
1147 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1183:9
     |
1183 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1208:9
     |
1208 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1225:9
     |
1225 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1257:9
     |
1257 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1300:9
     |
1300 |         idx;
     |         ^^^^

warning: path statement with no effect
    --> src/cmd.rs:1323:9
     |
1323 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1330:9
     |
1330 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1345:9
     |
1345 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1402:17
     |
1402 |                 entryp;
     |                 ^^^^^^^

warning: path statement with no effect
    --> src/cmd.rs:1440:13
     |
1440 |             entryp;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/cmd.rs:1534:9
     |
1534 |         y;
     |         ^^

warning: path statement with no effect
    --> src/cmd.rs:1648:25
     |
1648 |                         ptr;
     |                         ^^^^

warning: path statement with no effect
    --> src/cmd.rs:1652:29
     |
1652 | ...                   ptr;
     |                       ^^^^

warning: path statement with no effect
    --> src/cmd.rs:1683:29
     |
1683 | ...                   cp;
     |                       ^^^

warning: path statement with no effect
    --> src/cmd_capture_pane.rs:1090:13
     |
1090 |             i;
     |             ^^

warning: path statement with no effect
    --> src/cmd_capture_pane.rs:1234:9
     |
1234 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd_find.rs:1224:13
     |
1224 |             i;
     |             ^^

warning: path statement with no effect
    --> src/cmd_find.rs:1308:9
     |
1308 |         i;
     |         ^^

warning: path statement with no effect
    --> src/cmd_find.rs:2349:21
     |
2349 |                     session;
     |                     ^^^^^^^^

warning: path statement with no effect
    --> src/cmd_find.rs:2354:21
     |
2354 |                     window;
     |                     ^^^^^^^

warning: path statement with no effect
   --> src/cmd_list.rs:978:21
    |
978 |                     new_argc;
    |                     ^^^^^^^^^

warning: path statement with no effect
   --> src/cmd_list.rs:993:9
    |
993 |         i;
    |         ^^

warning: path statement with no effect
    --> src/cmd_list_clients.rs:1013:13
     |
1013 |             idx;
     |             ^^^^

warning: path statement with no effect
    --> src/cmd_list_keys.rs:1202:9
     |
1202 |         entryp;
     |         ^^^^^^^

warning: path statement with no effect
    --> src/cmd_list_panes.rs:1059:9
     |
1059 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cmd_list_sessions.rs:1002:9
     |
1002 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cmd_list_windows.rs:1037:9
     |
1037 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cmd_new_session.rs:1371:37
     |
1371 | ...                   sy;
     |                       ^^^

warning: path statement with no effect
    --> src/cmd_queue.rs:1347:17
     |
1347 |                 items;
     |                 ^^^^^^

warning: path statement with no effect
    --> src/cmd_resize_pane.rs:1115:9
     |
1115 |         y;
     |         ^^

warning: path statement with no effect
    --> src/cmd_resize_pane.rs:1123:9
     |
1123 |         ly;
     |         ^^^

warning: path statement with no effect
    --> src/cmd_resize_pane.rs:1135:17
     |
1135 |                 sx;
     |                 ^^^

warning: path statement with no effect
    --> src/cmd_resize_pane.rs:1141:17
     |
1141 |                 sy;
     |                 ^^^

warning: path statement with no effect
    --> src/cmd_send_keys.rs:1182:21
     |
1182 |                     uc;
     |                     ^^^

warning: path statement with no effect
    --> src/cmd_send_keys.rs:1187:13
     |
1187 |             i;
     |             ^^

warning: path statement with no effect
    --> src/cmd_send_keys.rs:1190:9
     |
1190 |         np;
     |         ^^^

warning: path statement with no effect
    --> src/cmd_set_option.rs:1725:13
     |
1725 |             n;
     |             ^^

warning: path statement with no effect
    --> src/cmd_set_option.rs:1727:13
     |
1727 |             cp;
     |             ^^^

warning: path statement with no effect
    --> src/cmd_show_messages.rs:1223:9
     |
1223 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cmd_show_messages.rs:1232:13
     |
1232 |             i;
     |             ^^

warning: path statement with no effect
    --> src/cmd_show_messages.rs:1266:9
     |
1266 |         n;
     |         ^^

warning: path statement with no effect
    --> src/cmd_show_options.rs:1110:17
     |
1110 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/cmd_show_options.rs:1222:21
     |
1222 |                     idx;
     |                     ^^^^

warning: path statement with no effect
    --> src/cmd_source_file.rs:1064:9
     |
1064 |         i;
     |         ^^

warning: unused unary operation that must be used
   --> src/cmd_string.rs:978:5
    |
978 |     *p;
    |     ^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
978 |     let _ = *p;
    |     +++++++

warning: path statement with no effect
    --> src/cmd_string.rs:1108:25
     |
1108 |                         argc;
     |                         ^^^^^

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1117:17
     |
1117 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1117 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1155:21
     |
1155 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1155 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1180:17
     |
1180 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1180 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1206:17
     |
1206 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1206 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1244:21
     |
1244 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1244 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1269:17
     |
1269 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1269 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1391:21
     |
1391 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1391 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1415:17
     |
1415 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1415 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1443:21
     |
1443 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1443 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/cmd_wait_for.rs:1467:17
     |
1467 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1467 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
   --> src/colour.rs:206:13
    |
206 |             cp;
    |             ^^^

warning: path statement with no effect
  --> src/compat/fparseln.rs:73:9
   |
73 |         ne;
   |         ^^^

warning: unused unary operation that must be used
   --> src/compat/fparseln.rs:112:13
    |
112 |             *lineno;
    |             ^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
112 |             let _ = *lineno;
    |             +++++++

warning: path statement with no effect
   --> src/compat/fparseln.rs:130:21
    |
130 |                     cp;
    |                     ^^^

warning: path statement with no effect
   --> src/compat/fparseln.rs:139:17
    |
139 |                 s;
    |                 ^^

warning: path statement with no effect
   --> src/compat/fparseln.rs:149:17
    |
149 |                 s;
    |                 ^^

warning: path statement with no effect
   --> src/compat/fparseln.rs:218:17
    |
218 |                 cp;
    |                 ^^^

warning: path statement with no effect
  --> src/compat/getopt.rs:92:13
   |
92 |             BSDoptind;
   |             ^^^^^^^^^^

warning: path statement with no effect
   --> src/compat/getopt.rs:111:13
    |
111 |             BSDoptind;
    |             ^^^^^^^^^^

warning: path statement with no effect
   --> src/compat/getopt.rs:128:13
    |
128 |             BSDoptind;
    |             ^^^^^^^^^^

warning: path statement with no effect
   --> src/compat/getopt.rs:156:9
    |
156 |         BSDoptind;
    |         ^^^^^^^^^^

warning: path statement with no effect
   --> src/compat/imsg.rs:320:25
    |
320 |                         i;
    |                         ^^

warning: path statement with no effect
   --> src/compat/imsg.rs:434:9
    |
434 |         i;
    |         ^^

warning: path statement with no effect
   --> src/compat/imsg.rs:451:9
    |
451 |         i;
    |         ^^

warning: path statement with no effect
   --> src/compat/imsg_buffer.rs:239:9
    |
239 |         i;
    |         ^^

warning: path statement with no effect
   --> src/compat/imsg_buffer.rs:359:9
    |
359 |         i;
    |         ^^

warning: path statement with no effect
   --> src/compat/unvis.rs:188:21
    |
188 |                     dst;
    |                     ^^^^

warning: path statement with no effect
   --> src/compat/unvis.rs:193:21
    |
193 |                     dst;
    |                     ^^^^

warning: path statement with no effect
   --> src/compat/unvis.rs:207:9
    |
207 |         dst;
    |         ^^^^

warning: path statement with no effect
   --> src/compat/unvis.rs:242:21
    |
242 |                     dst;
    |                     ^^^^

warning: path statement with no effect
   --> src/compat/unvis.rs:250:21
    |
250 |                     dst;
    |                     ^^^^

warning: path statement with no effect
   --> src/compat/unvis.rs:269:9
    |
269 |         dst;
    |         ^^^^

warning: path statement with no effect
    --> src/compat/vis.rs:1014:13
     |
1014 |             src;
     |             ^^^^

warning: path statement with no effect
    --> src/compat/vis.rs:1028:17
     |
1028 |                 src;
     |                 ^^^^

warning: path statement with no effect
    --> src/compat/vis.rs:1093:9
     |
1093 |         len;
     |         ^^^^

warning: path statement with no effect
   --> src/control_notify.rs:970:13
    |
970 |             i;
    |             ^^

warning: unused unary operation that must be used
   --> src/environ.rs:981:17
    |
981 |                 !((*tmp).entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
981 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1019:21
     |
1019 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1019 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1044:17
     |
1044 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1044 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1070:17
     |
1070 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1070 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1108:21
     |
1108 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1108 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1133:17
     |
1133 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1133 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1183:21
     |
1183 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1183 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1207:17
     |
1207 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1207 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1235:21
     |
1235 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1235 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/environ.rs:1259:17
     |
1259 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1259 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/environ.rs:1611:5
     |
1611 |     value;
     |     ^^^^^^

warning: path statement with no effect
    --> src/environ.rs:1667:9
     |
1667 |         idx;
     |         ^^^^

warning: unused unary operation that must be used
    --> src/format.rs:1323:21
     |
1323 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1323 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1347:17
     |
1347 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1347 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1375:21
     |
1375 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1375 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1399:17
     |
1399 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1399 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1568:17
     |
1568 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1568 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1606:21
     |
1606 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1606 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1631:17
     |
1631 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1631 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1657:17
     |
1657 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1657 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1695:21
     |
1695 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1695 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1720:17
     |
1720 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1720 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:1999:17
     |
1999 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1999 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2037:21
     |
2037 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2037 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2062:17
     |
2062 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2062 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2088:17
     |
2088 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2088 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2126:21
     |
2126 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2126 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2151:17
     |
2151 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2151 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2224:21
     |
2224 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2224 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2248:17
     |
2248 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2248 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2276:21
     |
2276 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2276 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/format.rs:2300:17
     |
2300 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2300 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/format.rs:2774:9
     |
2774 |         idx;
     |         ^^^^

warning: path statement with no effect
    --> src/format.rs:2890:9
     |
2890 |         i;
     |         ^^

warning: path statement with no effect
    --> src/format.rs:2931:9
     |
2931 |         i;
     |         ^^

warning: path statement with no effect
    --> src/format.rs:3294:13
     |
3294 |             brackets;
     |             ^^^^^^^^^

warning: path statement with no effect
    --> src/format.rs:3298:13
     |
3298 |             brackets;
     |             ^^^^^^^^^

warning: path statement with no effect
    --> src/format.rs:3304:9
     |
3304 |         s;
     |         ^^

warning: path statement with no effect
    --> src/format.rs:3457:21
     |
3457 |                     copy;
     |                     ^^^^^

warning: path statement with no effect
    --> src/format.rs:3472:25
     |
3472 |                         copy;
     |                         ^^^^^

warning: path statement with no effect
    --> src/format.rs:3691:13
     |
3691 |             fmt;
     |             ^^^^

warning: path statement with no effect
    --> src/format.rs:3702:29
     |
3702 | ...                   brackets;
     |                       ^^^^^^^^^

warning: path statement with no effect
    --> src/format.rs:3713:25
     |
3713 |                         ptr;
     |                         ^^^^

warning: path statement with no effect
    --> src/format.rs:3754:29
     |
3754 | ...                   brackets;
     |                       ^^^^^^^^^

warning: path statement with no effect
    --> src/format.rs:3765:25
     |
3765 |                         ptr;
     |                         ^^^^

warning: path statement with no effect
   --> src/grid.rs:215:13
    |
215 |             new_extdsize;
    |             ^^^^^^^^^^^^^

warning: path statement with no effect
   --> src/grid.rs:218:9
    |
218 |         px;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:249:9
    |
249 |         px;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:369:9
    |
369 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:454:13
    |
454 |             xx;
    |             ^^^

warning: path statement with no effect
   --> src/grid.rs:457:9
    |
457 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:550:5
    |
550 |     upper;
    |     ^^^^^^

warning: path statement with no effect
   --> src/grid.rs:553:5
    |
553 |     lower;
    |     ^^^^^^

warning: path statement with no effect
   --> src/grid.rs:600:9
    |
600 |         xx;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:770:9
    |
770 |         i;
    |         ^^

warning: path statement with no effect
   --> src/grid.rs:829:21
    |
829 |                     xx;
    |                     ^^^

warning: path statement with no effect
   --> src/grid.rs:834:9
    |
834 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:877:9
    |
877 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:934:9
    |
934 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:950:9
    |
950 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid.rs:996:9
    |
996 |         xx;
    |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1204:13
     |
1204 |             i;
     |             ^^

warning: path statement with no effect
    --> src/grid.rs:1218:9
     |
1218 |         i;
     |         ^^

warning: path statement with no effect
    --> src/grid.rs:1246:13
     |
1246 |             i;
     |             ^^

warning: path statement with no effect
    --> src/grid.rs:1285:13
     |
1285 |             i;
     |             ^^

warning: path statement with no effect
    --> src/grid.rs:1324:13
     |
1324 |             i;
     |             ^^

warning: path statement with no effect
    --> src/grid.rs:1464:9
     |
1464 |         xx;
     |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1472:13
     |
1472 |             off;
     |             ^^^^

warning: path statement with no effect
    --> src/grid.rs:1539:9
     |
1539 |         sy;
     |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1541:9
     |
1541 |         dy;
     |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1543:9
     |
1543 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1650:13
     |
1650 |             at;
     |             ^^^

warning: path statement with no effect
    --> src/grid.rs:1661:17
     |
1661 |                 at;
     |                 ^^^

warning: path statement with no effect
    --> src/grid.rs:1663:17
     |
1663 |                 want;
     |                 ^^^^^

warning: path statement with no effect
    --> src/grid.rs:1666:13
     |
1666 |             lines;
     |             ^^^^^^

warning: path statement with no effect
    --> src/grid.rs:1688:9
     |
1688 |         lines;
     |         ^^^^^^

warning: path statement with no effect
    --> src/grid.rs:1698:9
     |
1698 |         i;
     |         ^^

warning: path statement with no effect
    --> src/grid.rs:1752:17
     |
1752 |                 lines;
     |                 ^^^^^^

warning: path statement with no effect
    --> src/grid.rs:1757:13
     |
1757 |             i;
     |             ^^

warning: path statement with no effect
    --> src/grid.rs:1770:13
     |
1770 |             line;
     |             ^^^^^

warning: path statement with no effect
    --> src/grid.rs:1777:9
     |
1777 |         xx;
     |         ^^^

warning: path statement with no effect
    --> src/grid.rs:1779:9
     |
1779 |         i;
     |         ^^

warning: path statement with no effect
    --> src/grid.rs:1872:21
     |
1872 |                     i;
     |                     ^^

warning: path statement with no effect
    --> src/grid.rs:1886:9
     |
1886 |         yy;
     |         ^^^

warning: path statement with no effect
   --> src/grid_view.rs:138:9
    |
138 |         yy;
    |         ^^^

warning: path statement with no effect
   --> src/grid_view.rs:156:9
    |
156 |         yy;
    |         ^^^

warning: unused unary operation that must be used
    --> src/hooks.rs:1073:17
     |
1073 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1073 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1111:21
     |
1111 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1111 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1136:17
     |
1136 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1136 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1162:17
     |
1162 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1162 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1200:21
     |
1200 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1200 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1225:17
     |
1225 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1225 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1290:21
     |
1290 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1290 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1314:17
     |
1314 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1314 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1342:21
     |
1342 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1342 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/hooks.rs:1366:17
     |
1366 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1366 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/input.rs:3839:9
     |
3839 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:3925:13
     |
3925 |             itr;
     |             ^^^^

warning: path statement with no effect
    --> src/input.rs:3971:9
     |
3971 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:4039:9
     |
4039 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:4444:25
     |
4444 |                         cx;
     |                         ^^^

warning: path statement with no effect
    --> src/input.rs:4808:25
     |
4808 |                         i;
     |                         ^^

warning: path statement with no effect
    --> src/input.rs:4885:25
     |
4885 |                         _start;
     |                         ^^^^^^^

warning: path statement with no effect
    --> src/input.rs:4953:9
     |
4953 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5023:9
     |
5023 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5051:9
     |
5051 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5139:9
     |
5139 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5159:17
     |
5159 |                 m;
     |                 ^^

warning: path statement with no effect
    --> src/input.rs:5172:17
     |
5172 |                 m;
     |                 ^^

warning: path statement with no effect
    --> src/input.rs:5189:17
     |
5189 |                 m;
     |                 ^^

warning: path statement with no effect
    --> src/input.rs:5230:17
     |
5230 |                 m;
     |                 ^^

warning: path statement with no effect
    --> src/input.rs:5240:9
     |
5240 |         m;
     |         ^^

warning: unused unary operation that must be used
    --> src/input.rs:5276:9
     |
5276 |         *i;
     |         ^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
5276 |         let _ = *i;
     |         +++++++

warning: path statement with no effect
    --> src/input.rs:5351:9
     |
5351 |         n;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5452:21
     |
5452 |                     i;
     |                     ^^

warning: path statement with no effect
    --> src/input.rs:5571:9
     |
5571 |         i;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5656:9
     |
5656 |         p;
     |         ^^

warning: path statement with no effect
    --> src/input.rs:5944:5
     |
5944 |     end;
     |     ^^^^

warning: path statement with no effect
    --> src/input.rs:5999:13
     |
5999 |             s;
     |             ^^

warning: path statement with no effect
    --> src/input_keys.rs:1821:9
     |
1821 |         i;
     |         ^^

warning: unused unary operation that must be used
   --> src/key_bindings.rs:979:21
    |
979 |                     !((*tmp).entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
979 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1003:17
     |
1003 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1003 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1031:21
     |
1031 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1031 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1055:17
     |
1055 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1055 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1110:17
     |
1110 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1110 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1148:21
     |
1148 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1148 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1173:17
     |
1173 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1173 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1199:17
     |
1199 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1199 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1237:21
     |
1237 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1237 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1262:17
     |
1262 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1262 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1527:21
     |
1527 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1527 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1551:17
     |
1551 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1551 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1579:21
     |
1579 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1579 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1603:17
     |
1603 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1603 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1677:17
     |
1677 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1677 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1715:21
     |
1715 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1715 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1740:17
     |
1740 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1740 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1766:17
     |
1766 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1766 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1804:21
     |
1804 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1804 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/key_bindings.rs:1829:17
     |
1829 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1829 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/key_bindings.rs:2600:9
     |
2600 |         i;
     |         ^^

warning: path statement with no effect
   --> src/key_string.rs:941:9
    |
941 |         i;
    |         ^^

warning: path statement with no effect
    --> src/key_string.rs:1025:9
     |
1025 |         string;
     |         ^^^^^^^

warning: path statement with no effect
    --> src/key_string.rs:1051:17
     |
1051 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/key_string.rs:1197:9
     |
1197 |         i;
     |         ^^

warning: path statement with no effect
    --> src/layout.rs:1278:17
     |
1278 |                 change;
     |                 ^^^^^^^

warning: path statement with no effect
    --> src/layout.rs:1283:17
     |
1283 |                 change;
     |                 ^^^^^^^

warning: path statement with no effect
    --> src/layout.rs:1640:9
     |
1640 |         count;
     |         ^^^^^^

warning: path statement with no effect
    --> src/layout.rs:1670:13
     |
1670 |             idx;
     |             ^^^^

warning: path statement with no effect
    --> src/layout.rs:1705:9
     |
1705 |         count;
     |         ^^^^^^

warning: path statement with no effect
    --> src/layout.rs:1768:9
     |
1768 |         idx;
     |         ^^^^

warning: path statement with no effect
    --> src/layout.rs:2037:9
     |
2037 |         number;
     |         ^^^^^^^

warning: path statement with no effect
   --> src/layout_custom.rs:965:9
    |
965 |         layout;
    |         ^^^^^^^

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1208:9
     |
1208 |         *layout;
     |         ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1208 |         let _ = *layout;
     |         +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1214:5
     |
1214 |     *layout;
     |     ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1214 |     let _ = *layout;
     |     +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1219:9
     |
1219 |         *layout;
     |         ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1219 |         let _ = *layout;
     |         +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1225:5
     |
1225 |     *layout;
     |     ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1225 |     let _ = *layout;
     |     +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1230:9
     |
1230 |         *layout;
     |         ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1230 |         let _ = *layout;
     |         +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1236:5
     |
1236 |     *layout;
     |     ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1236 |     let _ = *layout;
     |     +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1241:9
     |
1241 |         *layout;
     |         ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1241 |         let _ = *layout;
     |         +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1246:9
     |
1246 |         *layout;
     |         ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1246 |         let _ = *layout;
     |         +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1252:13
     |
1252 |             *layout;
     |             ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1252 |             let _ = *layout;
     |             +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1285:17
     |
1285 |                 *layout;
     |                 ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1285 |                 let _ = *layout;
     |                 +++++++

warning: unused unary operation that must be used
    --> src/layout_custom.rs:1322:5
     |
1322 |     *layout;
     |     ^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1322 |     let _ = *layout;
     |     +++++++

warning: path statement with no effect
   --> src/layout_set.rs:998:9
    |
998 |         i;
    |         ^^

warning: path statement with no effect
    --> src/layout_set.rs:1062:13
     |
1062 |             layout;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/layout_set.rs:1158:5
     |
1158 |     n;
     |     ^^

warning: path statement with no effect
    --> src/layout_set.rs:1271:17
     |
1271 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1275:17
     |
1275 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1291:9
     |
1291 |         j;
     |         ^^

warning: path statement with no effect
    --> src/layout_set.rs:1351:5
     |
1351 |     n;
     |     ^^

warning: path statement with no effect
    --> src/layout_set.rs:1464:17
     |
1464 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1468:17
     |
1468 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1484:9
     |
1484 |         j;
     |         ^^

warning: path statement with no effect
    --> src/layout_set.rs:1543:9
     |
1543 |         rows;
     |         ^^^^^

warning: path statement with no effect
    --> src/layout_set.rs:1546:13
     |
1546 |             columns;
     |             ^^^^^^^^

warning: path statement with no effect
    --> src/layout_set.rs:1616:17
     |
1616 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1620:17
     |
1620 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/layout_set.rs:1636:9
     |
1636 |         j;
     |         ^^

warning: path statement with no effect
   --> src/log.rs:107:5
    |
107 |     log_level;
    |     ^^^^^^^^^^

warning: path statement with no effect
    --> src/mode_tree.rs:1324:13
     |
1324 |             i;
     |             ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1408:9
     |
1408 |         i;
     |         ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1436:13
     |
1436 |             tagged;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/mode_tree.rs:1439:9
     |
1439 |         i;
     |         ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1466:9
     |
1466 |         i;
     |         ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1507:13
     |
1507 |             i;
     |             ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1858:21
     |
1858 |                     j;
     |                     ^^

warning: path statement with no effect
    --> src/mode_tree.rs:1921:9
     |
1921 |         i;
     |         ^^

warning: path statement with no effect
    --> src/mode_tree.rs:2232:17
     |
2232 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/mode_tree.rs:2245:17
     |
2245 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/mode_tree.rs:2283:17
     |
2283 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/mode_tree.rs:2297:17
     |
2297 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/names.rs:1149:9
     |
1149 |         name;
     |         ^^^^^

warning: unused unary operation that must be used
    --> src/options.rs:1066:17
     |
1066 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1066 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1104:21
     |
1104 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1104 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1129:17
     |
1129 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1129 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1155:17
     |
1155 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1155 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1193:21
     |
1193 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1193 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1218:17
     |
1218 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1218 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1267:21
     |
1267 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1267 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1291:17
     |
1291 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1291 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1319:21
     |
1319 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1319 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/options.rs:1343:17
     |
1343 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1343 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/options.rs:1707:13
     |
1707 |             i;
     |             ^^

warning: path statement with no effect
    --> src/options.rs:1782:13
     |
1782 |             i;
     |             ^^

warning: path statement with no effect
    --> src/options.rs:1862:13
     |
1862 |             i;
     |             ^^

warning: path statement with no effect
    --> src/options.rs:2080:13
     |
2080 |             oe;
     |             ^^^

warning: unused unary operation that must be used
   --> src/paste.rs:130:17
    |
130 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
130 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:171:21
    |
171 |                     !((*oleft).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
171 |                     let _ = !((*oleft).name_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:198:17
    |
198 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
198 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:224:17
    |
224 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
224 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:267:21
    |
267 |                     !((*oright).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
267 |                     let _ = !((*oright).name_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:294:17
    |
294 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
294 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:474:21
    |
474 |                     !((*tmp).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
474 |                     let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:499:17
    |
499 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
499 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:531:21
    |
531 |                     !((*tmp).name_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
531 |                     let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:556:17
    |
556 |                 !((*tmp).name_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
556 |                 let _ = !((*tmp).name_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:665:21
    |
665 |                     !((*tmp).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
665 |                     let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:690:17
    |
690 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
690 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:722:21
    |
722 |                     !((*tmp).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
722 |                     let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:747:17
    |
747 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
747 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:911:17
    |
911 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
911 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:952:21
    |
952 |                     !((*oleft).time_entry.rbe_parent).is_null();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
952 |                     let _ = !((*oleft).time_entry.rbe_parent).is_null();
    |                     +++++++

warning: unused unary operation that must be used
   --> src/paste.rs:979:17
    |
979 |                 !((*tmp).time_entry.rbe_parent).is_null();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
    |
help: use `let _ = ...` to ignore the resulting value
    |
979 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
    |                 +++++++

warning: unused unary operation that must be used
    --> src/paste.rs:1005:17
     |
1005 |                 !((*tmp).time_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1005 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/paste.rs:1048:21
     |
1048 |                     !((*oright).time_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1048 |                     let _ = !((*oright).time_entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/paste.rs:1075:17
     |
1075 |                 !((*tmp).time_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1075 |                 let _ = !((*tmp).time_entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/paste.rs:1184:9
     |
1184 |         paste_num_automatic;
     |         ^^^^^^^^^^^^^^^^^^^^

warning: path statement with no effect
    --> src/paste.rs:1229:9
     |
1229 |         paste_next_index;
     |         ^^^^^^^^^^^^^^^^^

warning: path statement with no effect
    --> src/paste.rs:1238:5
     |
1238 |     paste_num_automatic;
     |     ^^^^^^^^^^^^^^^^^^^^

warning: path statement with no effect
    --> src/paste.rs:1296:9
     |
1296 |         paste_num_automatic;
     |         ^^^^^^^^^^^^^^^^^^^^

warning: path statement with no effect
   --> src/screen.rs:415:13
    |
415 |             i;
    |             ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1521:9
     |
1521 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1733:13
     |
1733 |             i;
     |             ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1736:9
     |
1736 |         j;
     |         ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1771:17
     |
1771 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1804:9
     |
1804 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1913:25
     |
1913 |                         i;
     |                         ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1916:21
     |
1916 |                     j;
     |                     ^^

warning: path statement with no effect
    --> src/screen_redraw.rs:1921:13
     |
1921 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1108:9
     |
1108 |         y;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1242:13
     |
1242 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1253:17
     |
1253 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1256:13
     |
1256 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1266:21
     |
1266 |                     size;
     |                     ^^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1285:17
     |
1285 |                 size;
     |                 ^^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1289:13
     |
1289 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/screen_write.rs:1348:13
     |
1348 |             xx;
     |             ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1351:9
     |
1351 |         cy;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1354:9
     |
1354 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1407:13
     |
1407 |             cx;
     |             ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1409:13
     |
1409 |             xx;
     |             ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1412:9
     |
1412 |         cy;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1414:9
     |
1414 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1457:9
     |
1457 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1507:9
     |
1507 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1556:9
     |
1556 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1569:9
     |
1569 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1577:9
     |
1577 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1588:9
     |
1588 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:1862:13
     |
1862 |             xx;
     |             ^^^

warning: path statement with no effect
    --> src/screen_write.rs:1865:9
     |
1865 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:2445:9
     |
2445 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:2685:9
     |
2685 |         i;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:2724:9
     |
2724 |         y;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:2814:13
     |
2814 |             items;
     |             ^^^^^^

warning: path statement with no effect
    --> src/screen_write.rs:2827:9
     |
2827 |         y;
     |         ^^

warning: path statement with no effect
    --> src/screen_write.rs:2897:13
     |
2897 |             xx;
     |             ^^^

warning: path statement with no effect
    --> src/screen_write.rs:2925:9
     |
2925 |         xx;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:3138:9
     |
3138 |         xx;
     |         ^^^

warning: path statement with no effect
    --> src/screen_write.rs:3252:9
     |
3252 |         n;
     |         ^^

warning: path statement with no effect
    --> src/server.rs:1705:13
     |
1705 |             n;
     |             ^^

warning: path statement with no effect
    --> src/server_client.rs:1388:13
     |
1388 |             n;
     |             ^^

warning: path statement with no effect
    --> src/server_client.rs:1983:13
     |
1983 |             y;
     |             ^^

warning: unused unary operation that must be used
    --> src/session.rs:1066:17
     |
1066 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1066 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1104:21
     |
1104 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1104 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1129:17
     |
1129 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1129 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1155:17
     |
1155 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1155 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1193:21
     |
1193 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1193 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1218:17
     |
1218 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1218 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1304:21
     |
1304 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1304 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1328:17
     |
1328 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1328 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1356:21
     |
1356 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1356 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1380:17
     |
1380 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1380 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1758:21
     |
1758 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1758 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1782:17
     |
1782 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1782 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1810:21
     |
1810 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1810 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1834:17
     |
1834 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1834 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1872:17
     |
1872 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1872 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1910:21
     |
1910 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1910 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1935:17
     |
1935 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1935 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1961:17
     |
1961 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1961 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/session.rs:1999:21
     |
1999 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1999 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/session.rs:2024:17
     |
2024 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2024 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/session.rs:2942:9
     |
2942 |         n;
     |         ^^

warning: path statement with no effect
    --> src/session.rs:3101:9
     |
3101 |         new_idx;
     |         ^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1359:9
     |
1359 |         i;
     |         ^^

warning: path statement with no effect
    --> src/status.rs:1743:9
     |
1743 |         offset;
     |         ^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1841:25
     |
1841 |                         wlavailable;
     |                         ^^^^^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1848:25
     |
1848 |                         wlavailable;
     |                         ^^^^^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1859:25
     |
1859 |                         wlstart;
     |                         ^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1861:25
     |
1861 |                         wlavailable;
     |                         ^^^^^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:1991:25
     |
1991 |                         wloffset;
     |                         ^^^^^^^^^

warning: path statement with no effect
    --> src/status.rs:2250:9
     |
2250 |         offset;
     |         ^^^^^^^

warning: path statement with no effect
    --> src/status.rs:2529:9
     |
2529 |         offset;
     |         ^^^^^^^

warning: path statement with no effect
    --> src/status.rs:2593:13
     |
2593 |             i;
     |             ^^

warning: path statement with no effect
    --> src/status.rs:2868:37
     |
2868 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:2916:41
     |
2916 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:2934:45
     |
2934 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:2960:45
     |
2960 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3069:37
     |
3069 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3080:37
     |
3080 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3089:37
     |
3089 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3191:41
     |
3191 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3199:41
     |
3199 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:3205:41
     |
3205 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:3213:41
     |
3213 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3219:41
     |
3219 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3223:41
     |
3223 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3245:45
     |
3245 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:3299:53
     |
3299 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3415:37
     |
3415 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3463:41
     |
3463 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:3481:45
     |
3481 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3507:45
     |
3507 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3616:37
     |
3616 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3627:37
     |
3627 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3636:37
     |
3636 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3738:41
     |
3738 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3746:41
     |
3746 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:3752:41
     |
3752 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:3760:41
     |
3760 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3766:41
     |
3766 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3770:41
     |
3770 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:3792:45
     |
3792 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:3846:53
     |
3846 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:3962:37
     |
3962 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4010:41
     |
4010 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:4028:45
     |
4028 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4054:45
     |
4054 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4163:37
     |
4163 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4174:37
     |
4174 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4183:37
     |
4183 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4285:41
     |
4285 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4293:41
     |
4293 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:4299:41
     |
4299 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:4307:41
     |
4307 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4313:41
     |
4313 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4317:41
     |
4317 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4339:45
     |
4339 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:4393:53
     |
4393 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4509:37
     |
4509 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4557:41
     |
4557 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:4575:45
     |
4575 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4601:45
     |
4601 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4710:37
     |
4710 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4721:37
     |
4721 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4730:37
     |
4730 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4832:41
     |
4832 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:4840:41
     |
4840 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:4846:41
     |
4846 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:4854:41
     |
4854 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4860:41
     |
4860 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4864:41
     |
4864 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:4886:45
     |
4886 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:4940:53
     |
4940 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5056:37
     |
5056 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5104:41
     |
5104 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:5122:45
     |
5122 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5148:45
     |
5148 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5257:37
     |
5257 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5268:37
     |
5268 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5277:37
     |
5277 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5379:41
     |
5379 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5387:41
     |
5387 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:5393:41
     |
5393 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:5401:41
     |
5401 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5407:41
     |
5407 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5411:41
     |
5411 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5433:45
     |
5433 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:5487:53
     |
5487 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5603:37
     |
5603 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5651:41
     |
5651 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:5669:45
     |
5669 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5695:45
     |
5695 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5804:37
     |
5804 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5815:37
     |
5815 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5824:37
     |
5824 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5926:41
     |
5926 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:5934:41
     |
5934 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:5940:41
     |
5940 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:5948:41
     |
5948 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5954:41
     |
5954 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5958:41
     |
5958 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:5980:45
     |
5980 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:6034:53
     |
6034 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6150:37
     |
6150 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6198:41
     |
6198 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:6216:45
     |
6216 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6242:45
     |
6242 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6351:37
     |
6351 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6362:37
     |
6362 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6371:37
     |
6371 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6473:41
     |
6473 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6481:41
     |
6481 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:6487:41
     |
6487 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:6495:41
     |
6495 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:6501:41
     |
6501 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:6505:41
     |
6505 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:6527:45
     |
6527 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:6581:53
     |
6581 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6697:37
     |
6697 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6745:41
     |
6745 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:6763:45
     |
6763 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6789:45
     |
6789 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6898:37
     |
6898 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6909:37
     |
6909 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:6918:37
     |
6918 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7020:41
     |
7020 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7028:41
     |
7028 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:7034:41
     |
7034 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:7042:41
     |
7042 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7048:41
     |
7048 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7052:41
     |
7052 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7074:45
     |
7074 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:7128:53
     |
7128 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7244:37
     |
7244 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7292:41
     |
7292 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:7310:45
     |
7310 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7336:45
     |
7336 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7445:37
     |
7445 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7456:37
     |
7456 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7465:37
     |
7465 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7567:41
     |
7567 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7575:41
     |
7575 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:7581:41
     |
7581 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:7589:41
     |
7589 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7595:41
     |
7595 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7599:41
     |
7599 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:7621:45
     |
7621 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:7675:53
     |
7675 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7791:37
     |
7791 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7839:41
     |
7839 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:7857:45
     |
7857 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7883:45
     |
7883 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:7992:37
     |
7992 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8003:37
     |
8003 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8012:37
     |
8012 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8114:41
     |
8114 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8122:41
     |
8122 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:8128:41
     |
8128 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:8136:41
     |
8136 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8142:41
     |
8142 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8146:41
     |
8146 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8168:45
     |
8168 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:8222:53
     |
8222 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8338:37
     |
8338 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8386:41
     |
8386 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:8404:45
     |
8404 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8430:45
     |
8430 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8539:37
     |
8539 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8550:37
     |
8550 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8559:37
     |
8559 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8661:41
     |
8661 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8669:41
     |
8669 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:8675:41
     |
8675 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:8683:41
     |
8683 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8689:41
     |
8689 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8693:41
     |
8693 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:8715:45
     |
8715 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:8769:53
     |
8769 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8885:37
     |
8885 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8933:41
     |
8933 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:8951:45
     |
8951 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:8977:45
     |
8977 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9086:37
     |
9086 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9097:37
     |
9097 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9106:37
     |
9106 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9208:41
     |
9208 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9216:41
     |
9216 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:9222:41
     |
9222 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:9230:41
     |
9230 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9236:41
     |
9236 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9240:41
     |
9240 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9262:45
     |
9262 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:9316:53
     |
9316 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9432:37
     |
9432 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9480:41
     |
9480 | ...                   n;
     |                       ^^

warning: path statement with no effect
    --> src/status.rs:9498:45
     |
9498 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9524:45
     |
9524 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9633:37
     |
9633 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9644:37
     |
9644 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9653:37
     |
9653 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9755:41
     |
9755 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9763:41
     |
9763 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:9769:41
     |
9769 | ...                   first;
     |                       ^^^^^^

warning: path statement with no effect
    --> src/status.rs:9777:41
     |
9777 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9783:41
     |
9783 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9787:41
     |
9787 | ...                   last;
     |                       ^^^^^

warning: path statement with no effect
    --> src/status.rs:9809:45
     |
9809 | ...                   ud;
     |                       ^^^

warning: path statement with no effect
    --> src/status.rs:9863:53
     |
9863 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
    --> src/status.rs:9979:37
     |
9979 | ...                   idx;
     |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10027:41
      |
10027 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:10045:45
      |
10045 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10071:45
      |
10071 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10180:37
      |
10180 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10191:37
      |
10191 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10200:37
      |
10200 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10302:41
      |
10302 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10310:41
      |
10310 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:10316:41
      |
10316 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:10324:41
      |
10324 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10330:41
      |
10330 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10334:41
      |
10334 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10356:45
      |
10356 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:10410:53
      |
10410 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10526:37
      |
10526 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10574:41
      |
10574 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:10592:45
      |
10592 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10618:45
      |
10618 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10727:37
      |
10727 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10738:37
      |
10738 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10747:37
      |
10747 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10849:41
      |
10849 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:10857:41
      |
10857 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:10863:41
      |
10863 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:10871:41
      |
10871 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10877:41
      |
10877 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10881:41
      |
10881 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:10903:45
      |
10903 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:10957:53
      |
10957 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11073:37
      |
11073 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11121:41
      |
11121 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:11139:45
      |
11139 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11165:45
      |
11165 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11274:37
      |
11274 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11285:37
      |
11285 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11294:37
      |
11294 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11396:41
      |
11396 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11404:41
      |
11404 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:11410:41
      |
11410 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:11418:41
      |
11418 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11424:41
      |
11424 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11428:41
      |
11428 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11450:45
      |
11450 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:11504:53
      |
11504 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11620:37
      |
11620 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11668:41
      |
11668 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:11686:45
      |
11686 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11712:45
      |
11712 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11821:37
      |
11821 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11832:37
      |
11832 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11841:37
      |
11841 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11943:41
      |
11943 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:11951:41
      |
11951 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:11957:41
      |
11957 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:11965:41
      |
11965 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11971:41
      |
11971 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11975:41
      |
11975 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:11997:45
      |
11997 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:12051:53
      |
12051 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12167:37
      |
12167 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12215:41
      |
12215 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:12233:45
      |
12233 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12259:45
      |
12259 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12368:37
      |
12368 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12379:37
      |
12379 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12388:37
      |
12388 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12490:41
      |
12490 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12498:41
      |
12498 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:12504:41
      |
12504 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:12512:41
      |
12512 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:12518:41
      |
12518 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:12522:41
      |
12522 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:12544:45
      |
12544 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:12598:53
      |
12598 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12714:37
      |
12714 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12762:41
      |
12762 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:12780:45
      |
12780 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12806:45
      |
12806 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12915:37
      |
12915 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12926:37
      |
12926 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:12935:37
      |
12935 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13037:41
      |
13037 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13045:41
      |
13045 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:13051:41
      |
13051 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:13059:41
      |
13059 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13065:41
      |
13065 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13069:41
      |
13069 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13091:45
      |
13091 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:13145:53
      |
13145 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13261:37
      |
13261 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13309:41
      |
13309 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:13327:45
      |
13327 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13353:45
      |
13353 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13462:37
      |
13462 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13473:37
      |
13473 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13482:37
      |
13482 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13584:41
      |
13584 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13592:41
      |
13592 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:13598:41
      |
13598 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:13606:41
      |
13606 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13612:41
      |
13612 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13616:41
      |
13616 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:13638:45
      |
13638 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:13692:53
      |
13692 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13808:37
      |
13808 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13856:41
      |
13856 | ...                   n;
      |                       ^^

warning: path statement with no effect
     --> src/status.rs:13874:45
      |
13874 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:13900:45
      |
13900 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:14009:37
      |
14009 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:14020:37
      |
14020 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:14029:37
      |
14029 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:14131:41
      |
14131 | ...                   idx;
      |                       ^^^^

warning: path statement with no effect
     --> src/status.rs:14139:41
      |
14139 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:14145:41
      |
14145 | ...                   first;
      |                       ^^^^^^

warning: path statement with no effect
     --> src/status.rs:14153:41
      |
14153 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:14159:41
      |
14159 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:14163:41
      |
14163 | ...                   last;
      |                       ^^^^^

warning: path statement with no effect
     --> src/status.rs:14185:45
      |
14185 | ...                   ud;
      |                       ^^^

warning: path statement with no effect
     --> src/status.rs:14239:53
      |
14239 | ...                   idx;
      |                       ^^^^

warning: unused unary operation that must be used
     --> src/status.rs:14419:5
      |
14419 |     *idx;
      |     ^^^^ the unary operation produces a value
      |
help: use `let _ = ...` to ignore the resulting value
      |
14419 |     let _ = *idx;
      |     +++++++

warning: unused unary operation that must be used
     --> src/status.rs:14431:5
      |
14431 |     *idx;
      |     ^^^^ the unary operation produces a value
      |
help: use `let _ = ...` to ignore the resulting value
      |
14431 |     let _ = *idx;
      |     +++++++

warning: path statement with no effect
     --> src/status.rs:14511:9
      |
14511 |         cmdent;
      |         ^^^^^^^

warning: path statement with no effect
     --> src/status.rs:14527:9
      |
14527 |         oe;
      |         ^^^

warning: path statement with no effect
     --> src/status.rs:14543:9
      |
14543 |         layout;
      |         ^^^^^^^

warning: path statement with no effect
     --> src/status.rs:14574:13
      |
14574 |             j;
      |             ^^

warning: path statement with no effect
     --> src/status.rs:14577:9
      |
14577 |         i;
      |         ^^

warning: path statement with no effect
     --> src/status.rs:14787:13
      |
14787 |             i;
      |             ^^

warning: path statement with no effect
   --> src/tmux.rs:672:9
    |
672 |         ptr;
    |         ^^^^

warning: path statement with no effect
   --> src/tmux.rs:679:9
    |
679 |         progname;
    |         ^^^^^^^^^

warning: path statement with no effect
   --> src/tmux.rs:961:9
    |
961 |         var;
    |         ^^^^

warning: path statement with no effect
    --> src/tmux.rs:1001:9
     |
1001 |         oe;
     |         ^^^

warning: path statement with no effect
    --> src/tty.rs:1778:9
     |
1778 |         i;
     |         ^^

warning: path statement with no effect
    --> src/tty.rs:2160:13
     |
2160 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty.rs:2167:13
     |
2167 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty.rs:2298:9
     |
2298 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/tty.rs:2495:17
     |
2495 |                 ux;
     |                 ^^^

warning: path statement with no effect
    --> src/tty.rs:2497:17
     |
2497 |                 j;
     |                 ^^

warning: path statement with no effect
    --> src/tty.rs:2505:17
     |
2505 |                 j;
     |                 ^^

warning: path statement with no effect
    --> src/tty.rs:2518:9
     |
2518 |         i;
     |         ^^

warning: path statement with no effect
    --> src/tty.rs:2528:17
     |
2528 |                 len;
     |                 ^^^^

warning: path statement with no effect
    --> src/tty.rs:2530:17
     |
2530 |                 width;
     |                 ^^^^^^

warning: path statement with no effect
    --> src/tty.rs:2835:13
     |
2835 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty.rs:2948:13
     |
2948 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty.rs:2951:9
     |
2951 |         j;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3245:9
     |
3245 |         s;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3283:9
     |
3283 |         i;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3299:9
     |
3299 |         i;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3315:13
     |
3315 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3355:9
     |
3355 |         buf;
     |         ^^^^

warning: path statement with no effect
    --> src/tty_keys.rs:3357:9
     |
3357 |         len;
     |         ^^^^

warning: unused unary operation that must be used
    --> src/tty_keys.rs:3359:9
     |
3359 |         *size;
     |         ^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
3359 |         let _ = *size;
     |         +++++++

warning: path statement with no effect
    --> src/tty_keys.rs:3442:13
     |
3442 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3620:29
     |
3620 | ...                   size;
     |                       ^^^^^

warning: path statement with no effect
    --> src/tty_keys.rs:3797:13
     |
3797 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3879:9
     |
3879 |         x;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3881:9
     |
3881 |         y;
     |         ^^

warning: path statement with no effect
    --> src/tty_keys.rs:3960:9
     |
3960 |         i;
     |         ^^

warning: path statement with no effect
    --> src/tty_term.rs:1838:17
     |
1838 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/tty_term.rs:1842:17
     |
1842 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/tty_term.rs:1855:9
     |
1855 |         ptr;
     |         ^^^^

warning: path statement with no effect
    --> src/tty_term.rs:1970:13
     |
1970 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty_term.rs:2081:13
     |
2081 |             i;
     |             ^^

warning: path statement with no effect
    --> src/tty_term.rs:2095:17
     |
2095 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/tty_term.rs:2188:17
     |
2188 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/tty_term.rs:2217:9
     |
2217 |         i;
     |         ^^

warning: path statement with no effect
  --> src/utf8.rs:83:9
   |
83 |         i;
   |         ^^

warning: path statement with no effect
   --> src/utf8.rs:259:21
    |
259 |                     i;
    |                     ^^

warning: path statement with no effect
   --> src/utf8.rs:282:9
    |
282 |         src;
    |         ^^^^

warning: path statement with no effect
   --> src/utf8.rs:339:13
    |
339 |             s;
    |             ^^

warning: path statement with no effect
   --> src/utf8.rs:389:21
    |
389 |                     i;
    |                     ^^

warning: path statement with no effect
   --> src/utf8.rs:408:9
    |
408 |         src;
    |         ^^^^

warning: path statement with no effect
   --> src/utf8.rs:424:9
    |
424 |         i;
    |         ^^

warning: path statement with no effect
   --> src/utf8.rs:443:9
    |
443 |         i;
    |         ^^

warning: path statement with no effect
   --> src/utf8.rs:473:17
    |
473 |                 n;
    |                 ^^

warning: path statement with no effect
   --> src/utf8.rs:482:9
    |
482 |         n;
    |         ^^

warning: path statement with no effect
   --> src/utf8.rs:484:9
    |
484 |         src;
    |         ^^^^

warning: path statement with no effect
   --> src/utf8.rs:513:9
    |
513 |         src;
    |         ^^^^

warning: path statement with no effect
   --> src/utf8.rs:557:13
    |
557 |             width;
    |             ^^^^^^

warning: path statement with no effect
   --> src/utf8.rs:560:9
    |
560 |         s;
    |         ^^

warning: path statement with no effect
   --> src/utf8.rs:583:13
    |
583 |             next;
    |             ^^^^^

warning: path statement with no effect
   --> src/utf8.rs:604:9
    |
604 |         end;
    |         ^^^^

warning: path statement with no effect
   --> src/utf8.rs:615:13
    |
615 |             next;
    |             ^^^^^

warning: path statement with no effect
   --> src/utf8.rs:623:13
    |
623 |             next;
    |             ^^^^^

warning: path statement with no effect
   --> src/utf8.rs:656:9
    |
656 |         i;
    |         ^^

warning: path statement with no effect
    --> src/variadic.rs:1291:5
     |
1291 |     cfg_ncauses;
     |     ^^^^^^^^^^^^

warning: path statement with no effect
    --> src/variadic.rs:1634:17
     |
1634 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1638:17
     |
1638 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1680:13
     |
1680 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1691:17
     |
1691 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1694:13
     |
1694 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1703:17
     |
1703 |                 size;
     |                 ^^^^^

warning: path statement with no effect
    --> src/variadic.rs:1706:13
     |
1706 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1794:13
     |
1794 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1805:17
     |
1805 |                 ptr;
     |                 ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1808:13
     |
1808 |             ptr;
     |             ^^^^

warning: path statement with no effect
    --> src/variadic.rs:1818:21
     |
1818 |                     size;
     |                     ^^^^^

warning: path statement with no effect
    --> src/variadic.rs:1835:17
     |
1835 |                 size;
     |                 ^^^^^

warning: path statement with no effect
    --> src/variadic.rs:1839:13
     |
1839 |             ptr;
     |             ^^^^

warning: unused unary operation that must be used
    --> src/window.rs:1452:21
     |
1452 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1452 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1476:17
     |
1476 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1476 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1504:21
     |
1504 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1504 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1528:17
     |
1528 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1528 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1587:17
     |
1587 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1587 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1625:21
     |
1625 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1625 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1650:17
     |
1650 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1650 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1676:17
     |
1676 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1676 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1714:21
     |
1714 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1714 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1739:17
     |
1739 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1739 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1817:17
     |
1817 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1817 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1855:21
     |
1855 |                     !((*oleft).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1855 |                     let _ = !((*oleft).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1880:17
     |
1880 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1880 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1906:17
     |
1906 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1906 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1944:21
     |
1944 |                     !((*oright).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1944 |                     let _ = !((*oright).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:1969:17
     |
1969 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
1969 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2019:21
     |
2019 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2019 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2043:17
     |
2043 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2043 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2071:21
     |
2071 |                     !((*tmp).entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2071 |                     let _ = !((*tmp).entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2095:17
     |
2095 |                 !((*tmp).entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2095 |                 let _ = !((*tmp).entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2489:21
     |
2489 |                     !((*tmp).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2489 |                     let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2514:17
     |
2514 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2514 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2546:21
     |
2546 |                     !((*tmp).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2546 |                     let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2571:17
     |
2571 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2571 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2609:17
     |
2609 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2609 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2650:21
     |
2650 |                     !((*oleft).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2650 |                     let _ = !((*oleft).tree_entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2677:17
     |
2677 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2677 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2703:17
     |
2703 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2703 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2746:21
     |
2746 |                     !((*oright).tree_entry.rbe_parent).is_null();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2746 |                     let _ = !((*oright).tree_entry.rbe_parent).is_null();
     |                     +++++++

warning: unused unary operation that must be used
    --> src/window.rs:2773:17
     |
2773 |                 !((*tmp).tree_entry.rbe_parent).is_null();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
2773 |                 let _ = !((*tmp).tree_entry.rbe_parent).is_null();
     |                 +++++++

warning: path statement with no effect
    --> src/window.rs:3009:13
     |
3009 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window.rs:3025:9
     |
3025 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:3127:9
     |
3127 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:3143:9
     |
3143 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:3894:9
     |
3894 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:3911:9
     |
3911 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:3927:9
     |
3927 |         n;
     |         ^^

warning: unused unary operation that must be used
    --> src/window.rs:3948:9
     |
3948 |         *i;
     |         ^^ the unary operation produces a value
     |
help: use `let _ = ...` to ignore the resulting value
     |
3948 |         let _ = *i;
     |         +++++++

warning: path statement with no effect
    --> src/window.rs:3961:9
     |
3961 |         n;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:4421:9
     |
4421 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:5029:13
     |
5029 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window.rs:5056:9
     |
5056 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window.rs:5356:9
     |
5356 |         last;
     |         ^^^^^

warning: path statement with no effect
    --> src/window.rs:5374:9
     |
5374 |         last;
     |         ^^^^^

warning: path statement with no effect
    --> src/window_buffer.rs:1199:9
     |
1199 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_buffer.rs:1305:9
     |
1305 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_buffer.rs:1348:13
     |
1348 |             end;
     |             ^^^^

warning: path statement with no effect
    --> src/window_buffer.rs:1367:9
     |
1367 |         end;
     |         ^^^^

warning: path statement with no effect
    --> src/window_buffer.rs:1369:9
     |
1369 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_buffer.rs:1480:9
     |
1480 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_client.rs:1278:9
     |
1278 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_client.rs:1400:9
     |
1400 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_client.rs:1535:9
     |
1535 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_clock.rs:1829:25
     |
1829 |                         i;
     |                         ^^

warning: path statement with no effect
    --> src/window_clock.rs:1832:21
     |
1832 |                     j;
     |                     ^^

warning: path statement with no effect
    --> src/window_clock.rs:1839:9
     |
1839 |         ptr;
     |         ^^^^

warning: path statement with no effect
    --> src/window_copy.rs:1285:9
     |
1285 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_copy.rs:1535:9
     |
1535 |         oy;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1541:9
     |
1541 |         oy;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1560:9
     |
1560 |         oy;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1564:9
     |
1564 |         oy;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1724:17
     |
1724 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1741:17
     |
1741 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1777:17
     |
1777 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1786:17
     |
1786 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1795:17
     |
1795 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1804:17
     |
1804 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1834:21
     |
1834 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1844:17
     |
1844 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1873:25
     |
1873 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1880:25
     |
1880 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1887:25
     |
1887 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1894:25
     |
1894 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1908:25
     |
1908 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1915:25
     |
1915 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1922:25
     |
1922 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1929:25
     |
1929 |                         np;
     |                         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1951:17
     |
1951 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1963:17
     |
1963 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1975:17
     |
1975 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:1988:17
     |
1988 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2001:17
     |
2001 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2033:21
     |
2033 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2043:17
     |
2043 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2052:17
     |
2052 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2064:17
     |
2064 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2077:17
     |
2077 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2105:17
     |
2105 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2117:17
     |
2117 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2127:21
     |
2127 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2133:21
     |
2133 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2144:21
     |
2144 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2150:21
     |
2150 |                     np;
     |                     ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2164:17
     |
2164 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2229:17
     |
2229 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2240:17
     |
2240 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2251:17
     |
2251 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2262:17
     |
2262 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2274:17
     |
2274 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2286:17
     |
2286 |                 np;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2509:13
     |
2509 |             bx;
     |             ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2516:9
     |
2516 |         ax;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2546:17
     |
2546 |                 bx;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2554:9
     |
2554 |         ax;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2596:9
     |
2596 |         ptr;
     |         ^^^^

warning: path statement with no effect
    --> src/window_copy.rs:2624:13
     |
2624 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window_copy.rs:2640:17
     |
2640 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/window_copy.rs:2645:17
     |
2645 |                 i;
     |                 ^^

warning: path statement with no effect
    --> src/window_copy.rs:2910:13
     |
2910 |             nfound;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_copy.rs:2928:17
     |
2928 |                 _start;
     |                 ^^^^^^^

warning: path statement with no effect
    --> src/window_copy.rs:2931:13
     |
2931 |             px;
     |             ^^^

warning: path statement with no effect
    --> src/window_copy.rs:2934:9
     |
2934 |         py;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:3092:9
     |
3092 |         yy;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:3142:9
     |
3142 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_copy.rs:3443:9
     |
3443 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_copy.rs:3677:13
     |
3677 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window_copy.rs:3778:9
     |
3778 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:3841:9
     |
3841 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:3973:9
     |
3973 |         cx;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4034:13
     |
4034 |             cx;
     |             ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4214:9
     |
4214 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4239:9
     |
4239 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4258:9
     |
4258 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4301:9
     |
4301 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4326:9
     |
4326 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4330:9
     |
4330 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4353:9
     |
4353 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4388:17
     |
4388 |                 px;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4425:9
     |
4425 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4441:17
     |
4441 |                 px;
     |                 ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4451:9
     |
4451 |         px;
     |         ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4474:13
     |
4474 |             px;
     |             ^^^

warning: path statement with no effect
    --> src/window_copy.rs:4507:17
     |
4507 |                 px;
     |                 ^^^

warning: path statement with no effect
    --> src/window_tree.rs:1622:21
     |
1622 |                     i;
     |                     ^^

warning: path statement with no effect
    --> src/window_tree.rs:1740:13
     |
1740 |             empty;
     |             ^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:1743:9
     |
1743 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_tree.rs:1771:9
     |
1771 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_tree.rs:1848:9
     |
1848 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_tree.rs:1977:9
     |
1977 |         current;
     |         ^^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2075:13
     |
2075 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2127:13
     |
2127 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2129:13
     |
2129 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window_tree.rs:2204:9
     |
2204 |         current;
     |         ^^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2302:13
     |
2302 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2350:13
     |
2350 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2352:13
     |
2352 |             i;
     |             ^^

warning: path statement with no effect
    --> src/window_tree.rs:2537:9
     |
2537 |         i;
     |         ^^

warning: path statement with no effect
    --> src/window_tree.rs:2851:9
     |
2851 |         x;
     |         ^^

warning: path statement with no effect
    --> src/window_tree.rs:2876:13
     |
2876 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
    --> src/window_tree.rs:2898:13
     |
2898 |             loop_0;
     |             ^^^^^^^

warning: path statement with no effect
   --> src/xterm_keys.rs:552:13
    |
552 |             pos;
    |             ^^^^

warning: path statement with no effect
   --> src/xterm_keys.rs:630:13
    |
630 |             i;
    |             ^^

warning: path statement with no effect
   --> src/xterm_keys.rs:679:9
    |
679 |         i;
    |         ^^

warning: `tmux` (lib) generated 8981 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 47.67s
