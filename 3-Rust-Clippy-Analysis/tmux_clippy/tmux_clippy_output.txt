    Checking tmux_clippy v0.1.0 (/mnt/c/Users/mazin/Downloads/School/Research/datasets/3-Rust-Clippy-Analysis/tmux_clippy)
error: extern blocks must be unsafe
  --> src/alerts.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
50 | |     fn log_debug(_: *const libc::c_char, _: ...);
51 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/alerts.rs:1244:3
     |
1244 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1244 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/alerts.rs:1286:3
     |
1286 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1286 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/alerts.rs:1331:3
     |
1331 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1331 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/alerts.rs:1567:33
     |
1567 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
     |                                 ^^^^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1567 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
     |                                 +++++++                            +

error: extern blocks must be unsafe
  --> src/arguments.rs:2:1
   |
2  | / extern "C" {
3  | |     fn free(_: *mut libc::c_void);
4  | |     fn strchr(_: *const libc::c_char, _: libc::c_int) -> *mut libc::c_char;
5  | |     fn strcspn(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_ulong;
...  |
37 | |     );
38 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/arguments.rs:584:3
    |
584 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
584 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:618:3
    |
618 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
618 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:637:3
    |
637 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
637 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:753:3
    |
753 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
753 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:758:3
    |
758 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
758 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:781:3
    |
781 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
781 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arguments.rs:793:3
    |
793 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
793 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/attributes.rs:2:1
   |
2  | / extern "C" {
3  | |     fn strchr(_: *const libc::c_char, _: libc::c_int) -> *mut libc::c_char;
4  | |     fn strcspn(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_ulong;
5  | |     fn strspn(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_ulong;
...  |
18 | |     ) -> libc::c_int;
19 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/attributes.rs:21:3
   |
21 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
21 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/attributes.rs:81:3
   |
81 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
81 | #[unsafe(no_mangle)]
   |   +++++++         +

error: extern blocks must be unsafe
  --> src/cfg.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type _IO_wide_data;
4  | |     pub type _IO_codecvt;
5  | |     pub type _IO_marker;
...  |
91 | |     fn log_debug(_: *const libc::c_char, _: ...);
92 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1058:3
     |
1058 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1058 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1060:3
     |
1060 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1060 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1063:3
     |
1063 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1063 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1092:3
     |
1092 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1092 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1097:3
     |
1097 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1097 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1322:3
     |
1322 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1322 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1455:3
     |
1455 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1455 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cfg.rs:1473:3
     |
1473 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1473 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/client.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type sockaddr_x25;
4   | |     pub type sockaddr_ns;
5   | |     pub type sockaddr_iso;
...   |
189 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
190 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/client.rs:1614:3
     |
1614 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1614 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/cmd.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
151 | |     static cmd_wait_for_entry: cmd_entry;
152 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1035:3
     |
1035 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1035 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1124:3
     |
1124 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1124 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1151:3
     |
1151 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1151 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1187:3
     |
1187 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1187 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1212:3
     |
1212 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1212 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1229:3
     |
1229 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1229 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1350:3
     |
1350 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1350 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1497:3
     |
1497 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1497 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1515:3
     |
1515 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1515 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1552:3
     |
1552 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1552 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1576:3
     |
1576 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1576 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd.rs:1600:3
     |
1600 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1600 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_attach_session.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
66 | |     fn session_set_current(_: *mut session, _: *mut winlink) -> libc::c_int;
67 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_attach_session.rs:990:3
    |
990 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
990 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_attach_session.rs:1025:3
     |
1025 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1025 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_bind_key.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
33 | |     fn key_string_lookup_string(_: *const libc::c_char) -> key_code;
34 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_bind_key.rs:917:3
    |
917 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
917 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_break_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
59 | |     fn session_select(_: *mut session, _: libc::c_int) -> libc::c_int;
60 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_break_pane.rs:943:3
    |
943 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
943 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_capture_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
70 | |     static window_copy_mode: window_mode;
71 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_capture_pane.rs:956:3
    |
956 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
956 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_capture_pane.rs:994:3
    |
994 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
994 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_choose_tree.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
27 | |     static window_client_mode: window_mode;
28 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_choose_tree.rs:911:3
    |
911 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
911 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_choose_tree.rs:949:3
    |
949 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
949 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_choose_tree.rs:987:3
    |
987 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
987 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_command_prompt.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
74 | |     );
75 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_command_prompt.rs:969:3
    |
969 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
969 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_confirm_before.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
63 | |     );
64 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_confirm_before.rs:952:3
    |
952 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
952 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_copy_mode.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
32 | |     fn window_copy_start_drag(_: *mut client, _: *mut mouse_event);
33 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_copy_mode.rs:916:3
    |
916 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
916 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_copy_mode.rs:953:3
    |
953 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
953 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_detach_client.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
26 | |     fn server_client_exec(_: *mut client, _: *const libc::c_char);
27 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_detach_client.rs:945:3
    |
945 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
945 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_detach_client.rs:983:3
    |
983 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
983 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_display_message.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
47 | |     fn status_message_set(_: *mut client, _: *const libc::c_char, _: ...);
48 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_display_message.rs:931:3
    |
931 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
931 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_display_panes.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
63 | |     fn server_client_set_identify(_: *mut client, _: u_int);
64 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_display_panes.rs:947:3
    |
947 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
947 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/cmd_find.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
103 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
104 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1164:3
     |
1164 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1164 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1757:3
     |
1757 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1757 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1770:3
     |
1770 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1770 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1781:3
     |
1781 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1781 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1809:3
     |
1809 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1809 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1820:3
     |
1820 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1820 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1865:3
     |
1865 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1865 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1885:3
     |
1885 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1885 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1905:3
     |
1905 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1905 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1930:3
     |
1930 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1930 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1957:3
     |
1957 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1957 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1979:3
     |
1979 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1979 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:1999:3
     |
1999 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1999 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:2029:3
     |
2029 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2029 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:2055:3
     |
2055 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2055 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:2122:3
     |
2122 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2122 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_find.rs:2614:3
     |
2614 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2614 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_find_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
36 | |     static window_tree_mode: window_mode;
37 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_find_window.rs:920:3
    |
920 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
920 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_if_shell.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
64 | |     fn server_client_unref(_: *mut client);
65 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_if_shell.rs:988:3
    |
988 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
988 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_join_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
46 | |     fn session_select(_: *mut session, _: libc::c_int) -> libc::c_int;
47 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_join_pane.rs:930:3
    |
930 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
930 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_join_pane.rs:971:3
    |
971 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
971 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_kill_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
21 | |     fn layout_close_pane(_: *mut window_pane);
22 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_kill_pane.rs:905:3
    |
905 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
905 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_kill_server.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
17 | |     fn getpid() -> __pid_t;
18 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_kill_server.rs:901:3
    |
901 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
901 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_kill_server.rs:935:3
    |
935 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
935 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_kill_session.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
24 | |     fn session_destroy(_: *mut session, _: *const libc::c_char);
25 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_kill_session.rs:913:3
    |
913 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
913 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_kill_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
23 | |     fn session_is_linked(_: *mut session, _: *mut window) -> libc::c_int;
24 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_kill_window.rs:907:3
    |
907 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
907 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_kill_window.rs:944:3
    |
944 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
944 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
38 | |     fn cmd_print(_: *mut cmd) -> *mut libc::c_char;
39 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list.rs:922:3
    |
922 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
922 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_list.rs:1031:3
     |
1031 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1031 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_list.rs:1059:3
     |
1059 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1059 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_buffers.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
29 | |     fn cmdq_print(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
30 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_buffers.rs:913:3
    |
913 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
913 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_clients.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
41 | |     static mut clients: clients;
42 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_clients.rs:931:3
    |
931 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
931 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_keys.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
63 | |     fn utf8_padcstr(_: *const libc::c_char, _: u_int) -> *mut libc::c_char;
64 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_keys.rs:952:3
    |
952 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
952 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_list_keys.rs:986:3
    |
986 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
986 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_panes.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
45 | |     fn sessions_RB_MINMAX(_: *mut sessions, _: libc::c_int) -> *mut session;
46 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_panes.rs:934:3
    |
934 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
934 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_sessions.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
42 | |     fn sessions_RB_NEXT(_: *mut session) -> *mut session;
43 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_sessions.rs:931:3
    |
931 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
931 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_list_windows.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
45 | |     fn sessions_RB_NEXT(_: *mut session) -> *mut session;
46 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_list_windows.rs:934:3
    |
934 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
934 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_load_buffer.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type _IO_wide_data;
4  | |     pub type _IO_codecvt;
5  | |     pub type _IO_marker;
...  |
67 | |     fn utf8_sanitize(_: *const libc::c_char) -> *mut libc::c_char;
68 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_load_buffer.rs:996:3
    |
996 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
996 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_lock_server.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
25 | |     fn recalculate_sizes();
26 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_lock_server.rs:909:3
    |
909 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
909 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_lock_server.rs:943:3
    |
943 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
943 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_lock_server.rs:980:3
    |
980 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
980 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_move_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
41 | |     fn session_renumber_windows(_: *mut session);
42 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_move_window.rs:925:3
    |
925 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
925 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_move_window.rs:963:3
    |
963 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
963 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/cmd_new_session.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
114 | |     fn fatal(_: *const libc::c_char, _: ...) -> !;
115 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/cmd_new_session.rs:1063:3
     |
1063 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1063 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_new_session.rs:1102:3
     |
1102 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1102 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_new_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
66 | |     fn session_select(_: *mut session, _: libc::c_int) -> libc::c_int;
67 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_new_window.rs:965:3
    |
965 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
965 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_paste_buffer.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
34 | |     fn cmdq_error(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
35 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_paste_buffer.rs:918:3
    |
918 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
918 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_pipe_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
92 | |     fn log_debug(_: *const libc::c_char, _: ...);
93 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_pipe_pane.rs:994:3
    |
994 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
994 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_queue.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
72 | |     fn log_debug(_: *const libc::c_char, _: ...);
73 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_queue.rs:979:3
    |
979 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
979 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1002:3
     |
1002 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1002 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1089:3
     |
1089 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1089 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1242:3
     |
1242 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1242 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1270:3
     |
1270 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1270 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1379:3
     |
1379 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1379 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_queue.rs:1409:33
     |
1409 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
     |                                 ^^^^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1409 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
     |                                 +++++++                            +

error: extern blocks must be unsafe
  --> src/cmd_refresh_client.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
28 | |     fn recalculate_sizes();
29 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_refresh_client.rs:912:3
    |
912 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
912 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_rename_session.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
38 | |     fn session_check_name(_: *const libc::c_char) -> libc::c_int;
39 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_rename_session.rs:927:3
    |
927 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
927 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_rename_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
37 | |     fn window_set_name(_: *mut window, _: *const libc::c_char);
38 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_rename_window.rs:921:3
    |
921 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
921 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_resize_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
45 | |     fn layout_resize_pane_to(_: *mut window_pane, _: layout_type, _: u_int);
46 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_resize_pane.rs:929:3
    |
929 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
929 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_respawn_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
52 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
53 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_respawn_pane.rs:951:3
    |
951 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
951 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_respawn_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
57 | |     fn layout_free(_: *mut window);
58 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_respawn_window.rs:956:3
    |
956 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
956 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_rotate_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
26 | |     fn window_pane_resize(_: *mut window_pane, _: u_int, _: u_int);
27 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_rotate_window.rs:910:3
    |
910 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
910 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_run_shell.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
67 | |     fn window_copy_add(_: *mut window_pane, _: *const libc::c_char, _: ...);
68 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_run_shell.rs:989:3
    |
989 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
989 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_save_buffer.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
...  |
60 | |     ) -> *mut libc::c_char;
61 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_save_buffer.rs:981:3
    |
981 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
981 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_save_buffer.rs:1015:3
     |
1015 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1015 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_select_layout.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
27 | |     fn layout_set_previous(_: *mut window) -> u_int;
28 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_select_layout.rs:911:3
    |
911 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
911 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_select_layout.rs:949:3
    |
949 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
949 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_select_layout.rs:986:3
    |
986 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
986 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_select_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
73 | |     fn style_tostring(_: *mut grid_cell) -> *const libc::c_char;
74 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_select_pane.rs:957:3
    |
957 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
957 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_select_pane.rs:995:3
    |
995 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
995 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_select_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
31 | |     fn session_last(_: *mut session) -> libc::c_int;
32 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_select_window.rs:915:3
    |
915 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
915 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_select_window.rs:952:3
    |
952 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
952 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_select_window.rs:989:3
    |
989 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
989 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_select_window.rs:1026:3
     |
1026 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1026 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_send_keys.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
61 | |     fn utf8_fromcstr(_: *const libc::c_char) -> *mut utf8_data;
62 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_send_keys.rs:950:3
    |
950 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
950 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_send_keys.rs:988:3
    |
988 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
988 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_set_buffer.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
43 | |     fn cmdq_error(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
44 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_set_buffer.rs:927:3
    |
927 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
927 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_set_buffer.rs:962:3
    |
962 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
962 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_set_environment.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
28 | |     fn cmdq_error(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
29 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_set_environment.rs:912:3
    |
912 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
912 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_set_hook.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
33 | |     ) -> *mut cmd_list;
34 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_set_hook.rs:932:3
    |
932 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
932 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/cmd_set_hook.rs:970:3
    |
970 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
970 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/cmd_set_option.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
123 | |     fn sessions_RB_NEXT(_: *mut session) -> *mut session;
124 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/cmd_set_option.rs:1052:3
     |
1052 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1052 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_set_option.rs:1090:3
     |
1090 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1090 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_show_environment.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
26 | |     fn cmdq_error(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
27 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_show_environment.rs:925:3
    |
925 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
925 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_show_messages.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
29 | |     fn cmdq_print(_: *mut cmdq_item, _: *const libc::c_char, _: ...);
30 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/cmd_show_messages.rs:1161:3
     |
1161 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1161 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_show_options.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
69 | |     ) -> libc::c_int;
70 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_show_options.rs:982:3
    |
982 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
982 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_show_options.rs:1020:3
     |
1020 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1020 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_source_file.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type stat;
4  | |     pub type dirent;
5  | |     pub type event_base;
...  |
58 | |     fn log_debug(_: *const libc::c_char, _: ...);
59 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_source_file.rs:962:3
    |
962 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
962 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/cmd_split_window.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
105 | |     fn session_select(_: *mut session, _: libc::c_int) -> libc::c_int;
106 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/cmd_split_window.rs:1004:3
     |
1004 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1004 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_string.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
52 | |     ) -> *mut cmd_list;
53 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_string.rs:980:3
    |
980 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
980 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_string.rs:1159:3
     |
1159 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1159 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_swap_pane.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
21 | |     fn window_pane_visible(_: *mut window_pane) -> libc::c_int;
22 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_swap_pane.rs:905:3
    |
905 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
905 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_swap_window.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
22 | |     fn session_group_synchronize_from(_: *mut session);
23 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_swap_window.rs:927:3
    |
927 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
927 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_switch_client.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
49 | |     fn session_set_current(_: *mut session, _: *mut winlink) -> libc::c_int;
50 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_switch_client.rs:933:3
    |
933 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
933 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_unbind_key.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
22 | |     fn key_string_lookup_string(_: *const libc::c_char) -> key_code;
23 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_unbind_key.rs:906:3
    |
906 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
906 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/cmd_wait_for.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
23 | |     fn log_debug(_: *const libc::c_char, _: ...);
24 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/cmd_wait_for.rs:954:3
    |
954 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
954 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/cmd_wait_for.rs:1708:3
     |
1708 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1708 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/colour.rs:2:1
   |
2  | / extern "C" {
3  | |     fn __ctype_b_loc() -> *mut *const libc::c_ushort;
4  | |     fn strcmp(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_int;
5  | |     fn strlen(_: *const libc::c_char) -> libc::c_ulong;
...  |
24 | |     ) -> libc::c_int;
25 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/colour.rs:61:3
   |
61 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
61 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/colour.rs:120:3
    |
120 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
120 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/colour.rs:130:3
    |
130 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
130 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/colour.rs:141:3
    |
141 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
141 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/colour.rs:190:3
    |
190 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
190 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/colour.rs:342:3
    |
342 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
342 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/control.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
49 | |     fn control_write(_: *mut client, _: *const libc::c_char, _: ...);
50 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/control.rs:939:3
    |
939 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
939 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/control.rs:964:3
    |
964 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
964 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/control_notify.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
38 | |     fn control_write_buffer(_: *mut client, _: *mut evbuffer);
39 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/control_notify.rs:930:3
    |
930 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
930 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/control_notify.rs:976:3
    |
976 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
976 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/control_notify.rs:991:3
    |
991 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
991 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1031:3
     |
1031 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1031 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1047:3
     |
1047 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1047 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1077:3
     |
1077 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1077 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1107:3
     |
1107 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1107 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1137:3
     |
1137 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1137 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1171:3
     |
1171 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1171 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1187:3
     |
1187 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1187 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1201:3
     |
1201 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1201 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/control_notify.rs:1215:3
     |
1215 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1215 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/environ.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
45 | |     );
46 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/environ.rs:949:3
    |
949 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
949 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1143:3
     |
1143 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1143 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1265:3
     |
1265 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1265 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1358:3
     |
1358 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1358 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1377:3
     |
1377 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1377 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1400:3
     |
1400 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1400 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1421:3
     |
1421 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1421 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1457:3
     |
1457 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1457 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1474:3
     |
1474 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1474 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1503:3
     |
1503 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1503 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1513:3
     |
1513 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1513 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1532:3
     |
1532 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1532 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1536:3
     |
1536 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1536 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1542:3
     |
1542 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1542 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1563:3
     |
1563 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1563 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1581:3
     |
1581 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1581 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1599:3
     |
1599 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1599 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1620:3
     |
1620 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1620 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1635:3
     |
1635 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1635 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1670:3
     |
1670 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1670 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/environ.rs:1686:3
     |
1686 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1686 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/format.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
172 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
173 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/format.rs:1758:3
     |
1758 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1758 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1777:3
     |
1777 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1777 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1870:3
     |
1870 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1870 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1906:3
     |
1906 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1906 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1929:3
     |
1929 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1929 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1946:3
     |
1946 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1946 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:1967:3
     |
1967 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1967 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:2161:3
     |
2161 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2161 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:2184:3
     |
2184 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2184 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:2588:3
     |
2588 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2588 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3003:3
     |
3003 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3003 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3100:3
     |
3100 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3100 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3326:3
     |
3326 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3326 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3636:3
     |
3636 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3636 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3659:3
     |
3659 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3659 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3839:3
     |
3839 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3839 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:3860:3
     |
3860 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3860 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:4191:3
     |
4191 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4191 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:4323:3
     |
4323 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4323 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/format.rs:4647:3
     |
4647 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4647 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/grid.rs:2:1
   |
2  | / extern "C" {
3  | |     fn free(_: *mut libc::c_void);
4  | |     fn memcpy(
5  | |         _: *mut libc::c_void,
...  |
43 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
44 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/grid.rs:124:3
    |
124 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
124 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:326:3
    |
326 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
326 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:368:3
    |
368 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
368 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:393:3
    |
393 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
393 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:399:3
    |
399 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
399 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:457:3
    |
457 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
457 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:484:3
    |
484 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
484 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:501:3
    |
501 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
501 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:521:3
    |
521 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
521 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:611:3
    |
611 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
611 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:665:3
    |
665 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
665 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:688:3
    |
688 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
688 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:723:3
    |
723 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
723 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:769:3
    |
769 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
769 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:833:3
    |
833 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
833 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:876:3
    |
876 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
876 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid.rs:949:3
    |
949 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
949 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/grid.rs:1343:3
     |
1343 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1343 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/grid.rs:1474:3
     |
1474 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1474 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/grid.rs:1801:3
     |
1801 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1801 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/grid_view.rs:2:1
   |
2  | / extern "C" {
3  | |     fn grid_collect_history(_: *mut grid);
4  | |     fn grid_scroll_history(_: *mut grid, _: u_int);
5  | |     fn grid_scroll_history_region(_: *mut grid, _: u_int, _: u_int, _: u_int);
...  |
28 | |     ) -> *mut libc::c_char;
29 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/grid_view.rs:95:3
   |
95 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
95 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:104:3
    |
104 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
104 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:113:3
    |
113 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
113 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:124:3
    |
124 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
124 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:170:3
    |
170 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
170 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:183:3
    |
183 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
183 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:213:3
    |
213 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
213 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:230:3
    |
230 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
230 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:248:3
    |
248 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
248 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:279:3
    |
279 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
279 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:305:3
    |
305 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
305 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:330:3
    |
330 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
330 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:355:3
    |
355 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
355 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/grid_view.rs:384:3
    |
384 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
384 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/hooks.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
20 | |     fn cmd_list_free(_: *mut cmd_list);
21 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1431:3
     |
1431 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1431 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1438:3
     |
1438 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1438 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1455:3
     |
1455 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1455 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1471:3
     |
1471 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1471 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1475:3
     |
1475 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1475 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1479:3
     |
1479 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1479 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1500:3
     |
1500 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1500 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/hooks.rs:1528:3
     |
1528 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1528 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/input.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
151 | |     fn input_reply(_: *mut input_ctx, _: *const libc::c_char, _: ...);
152 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/input.rs:3797:3
     |
3797 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3797 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/input.rs:3825:3
     |
3825 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3825 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/input.rs:3847:3
     |
3847 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3847 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/input.rs:3865:3
     |
3865 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3865 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/input.rs:3882:3
     |
3882 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3882 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/input_keys.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
41 | |     fn log_debug(_: *const libc::c_char, _: ...);
42 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/input_keys.rs:1705:3
     |
1705 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1705 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/job.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
66 | |     fn fatal(_: *const libc::c_char, _: ...) -> !;
67 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/job.rs:1004:3
     |
1004 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1004 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/job.rs:1011:3
     |
1011 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1011 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/job.rs:1158:3
     |
1158 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1158 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/job.rs:1230:3
     |
1230 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1230 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/key_bindings.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
44 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
45 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/key_bindings.rs:939:3
    |
939 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
939 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1061:3
     |
1061 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1061 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1078:3
     |
1078 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1078 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1272:3
     |
1272 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1272 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1365:3
     |
1365 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1365 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1401:3
     |
1401 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1401 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1420:3
     |
1420 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1420 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1441:3
     |
1441 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1441 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1464:3
     |
1464 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1464 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1487:3
     |
1487 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1487 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1609:3
     |
1609 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1609 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1645:3
     |
1645 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1645 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1839:3
     |
1839 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1839 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1932:3
     |
1932 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1932 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1953:3
     |
1953 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1953 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1974:3
     |
1974 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1974 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:1993:3
     |
1993 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1993 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2014:3
     |
2014 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2014 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2031:3
     |
2031 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2031 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2038:3
     |
2038 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2038 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2045:3
     |
2045 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2045 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2058:3
     |
2058 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2058 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2090:3
     |
2090 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2090 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2113:3
     |
2113 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2113 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2152:3
     |
2152 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2152 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2187:3
     |
2187 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2187 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2204:3
     |
2204 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2204 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_bindings.rs:2610:3
     |
2610 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2610 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/key_string.rs:2:1
   |
2  | / extern "C" {
3  | |     fn memcpy(
4  | |         _: *mut libc::c_void,
5  | |         _: *const libc::c_void,
...  |
32 | |     fn utf8_split(_: wchar_t, _: *mut utf8_data) -> utf8_state;
33 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/key_string.rs:980:3
    |
980 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
980 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/key_string.rs:1090:3
     |
1090 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1090 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/layout.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
22 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
23 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/layout.rs:906:3
    |
906 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
906 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/layout.rs:936:3
    |
936 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
936 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/layout.rs:963:3
    |
963 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
963 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1015:3
     |
1015 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1015 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1028:3
     |
1028 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1028 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1039:3
     |
1039 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1039 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1055:3
     |
1055 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1055 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1116:3
     |
1116 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1116 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1172:3
     |
1172 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1172 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1245:3
     |
1245 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1245 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1289:3
     |
1289 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1289 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1358:3
     |
1358 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1358 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1373:3
     |
1373 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1373 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1377:3
     |
1377 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1377 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1421:3
     |
1421 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1421 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1454:3
     |
1454 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1454 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1573:3
     |
1573 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1573 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:1772:3
     |
1772 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1772 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:2012:3
     |
2012 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2012 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:2022:3
     |
2022 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2022 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout.rs:2084:3
     |
2084 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2084 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/layout_custom.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
50 | |     fn layout_resize(_: *mut window, _: u_int, _: u_int);
51 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/layout_custom.rs:969:3
    |
969 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
969 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout_custom.rs:1071:3
     |
1071 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1071 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/layout_set.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
40 | |     fn layout_spread_cell(_: *mut window, _: *mut layout_cell) -> libc::c_int;
41 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/layout_set.rs:979:3
    |
979 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
979 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout_set.rs:1002:3
     |
1002 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1002 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout_set.rs:1022:3
     |
1022 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1022 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/layout_set.rs:1045:3
     |
1045 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1045 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/log.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type _IO_wide_data;
4  | |     pub type _IO_codecvt;
5  | |     pub type _IO_marker;
...  |
36 | |     fn log_debug(_: *const libc::c_char, _: ...);
37 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/log.rs:104:3
    |
104 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
104 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/log.rs:109:3
    |
109 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
109 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/log.rs:113:3
    |
113 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
113 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/log.rs:143:3
    |
143 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
143 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/log.rs:155:3
    |
155 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
155 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/log.rs:163:3
    |
163 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
163 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/mode_tree.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
112 | |     fn style_apply(_: *mut grid_cell, _: *mut options, _: *const libc::c_char);
113 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1338:3
     |
1338 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1338 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1359:3
     |
1359 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1359 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1382:3
     |
1382 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1382 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1388:3
     |
1388 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1388 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1396:3
     |
1396 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1396 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1425:3
     |
1425 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1425 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1443:3
     |
1443 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1443 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1473:3
     |
1473 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1473 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1530:3
     |
1530 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1530 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1545:3
     |
1545 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1545 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1607:3
     |
1607 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1607 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1621:3
     |
1621 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1621 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1633:3
     |
1633 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1633 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1688:3
     |
1688 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1688 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:1711:3
     |
1711 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1711 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:2126:3
     |
2126 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2126 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/mode_tree.rs:2390:3
     |
2390 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2390 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/names.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
72 | |     fn log_debug(_: *const libc::c_char, _: ...);
73 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/names.rs:996:3
    |
996 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
996 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/names.rs:1092:3
     |
1092 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1092 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/names.rs:1125:3
     |
1125 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1125 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/notify.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
88 | |     fn log_debug(_: *const libc::c_char, _: ...);
89 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/notify.rs:1247:3
     |
1247 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1247 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1261:3
     |
1261 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1261 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1285:3
     |
1285 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1285 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1313:3
     |
1313 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1313 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1337:3
     |
1337 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1337 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1355:3
     |
1355 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1355 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/notify.rs:1379:3
     |
1379 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1379 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/options.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
67 | |     fn style_tostring(_: *mut grid_cell) -> *const libc::c_char;
68 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/options.rs:1538:3
     |
1538 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1538 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1553:3
     |
1553 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1553 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1564:3
     |
1564 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1564 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1580:3
     |
1580 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1580 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1584:3
     |
1584 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1584 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1588:3
     |
1588 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1588 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1610:3
     |
1610 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1610 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1626:3
     |
1626 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1626 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1636:3
     |
1636 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1636 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1668:3
     |
1668 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1668 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1687:3
     |
1687 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1687 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1714:3
     |
1714 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1714 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1718:3
     |
1718 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1718 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1724:3
     |
1724 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1724 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1733:3
     |
1733 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1733 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1749:3
     |
1749 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1749 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1813:3
     |
1813 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1813 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1829:3
     |
1829 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1829 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1871:3
     |
1871 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1871 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1883:3
     |
1883 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1883 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:1985:3
     |
1985 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1985 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2024:3
     |
2024 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2024 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2045:3
     |
2045 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2045 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2090:3
     |
2090 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2090 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2113:3
     |
2113 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2113 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2131:3
     |
2131 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2131 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2159:3
     |
2159 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2159 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2177:3
     |
2177 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2177 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2216:3
     |
2216 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2216 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2282:3
     |
2282 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2282 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2343:3
     |
2343 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2343 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/options.rs:2374:3
     |
2374 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2374 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/options_table.rs:84:3
   |
84 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
84 | #[unsafe(no_mangle)]
   |   +++++++         +

error: extern blocks must be unsafe
  --> src/osdep_linux.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
...  |
30 | |     ) -> libc::c_int;
31 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/osdep_linux.rs:74:3
   |
74 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
74 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/osdep_linux.rs:124:3
    |
124 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
124 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/osdep_linux.rs:160:3
    |
160 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
160 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/paste.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type options;
4  | |     fn free(_: *mut libc::c_void);
5  | |     fn strcmp(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_int;
...  |
27 | |     ) -> libc::c_int;
28 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/paste.rs:1103:3
     |
1103 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1103 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1109:3
     |
1109 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1109 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1113:3
     |
1113 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1113 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1117:3
     |
1117 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1117 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1127:3
     |
1127 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1127 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1134:3
     |
1134 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1134 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1148:3
     |
1148 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1148 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1178:3
     |
1178 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1178 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1190:3
     |
1190 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1190 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1246:3
     |
1246 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1246 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1302:3
     |
1302 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1302 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/paste.rs:1346:3
     |
1346 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1346 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/proc.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     fn uname(__name: *mut utsname) -> libc::c_int;
5  | |     fn __errno_location() -> *mut libc::c_int;
...  |
55 | |     fn log_debug(_: *const libc::c_char, _: ...);
56 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/proc.rs:555:3
    |
555 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
555 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:591:3
    |
591 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
591 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:635:3
    |
635 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
635 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:651:3
    |
651 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
651 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:655:3
    |
655 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
655 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:791:3
    |
791 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
791 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:832:3
    |
832 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
832 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:871:3
    |
871 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
871 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:879:3
    |
879 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
879 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/proc.rs:883:3
    |
883 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
883 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/resize.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
34 | |     fn log_debug(_: *const libc::c_char, _: ...);
35 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/resize.rs:934:3
    |
934 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
934 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/screen.rs:2:1
   |
2  | / extern "C" {
3  | |     fn calloc(_: libc::c_ulong, _: libc::c_ulong) -> *mut libc::c_void;
4  | |     fn free(_: *mut libc::c_void);
5  | |     fn memcpy(
...  |
30 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
31 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/screen.rs:174:3
    |
174 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
174 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:189:3
    |
189 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
189 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:206:3
    |
206 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
206 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:214:3
    |
214 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
214 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:235:3
    |
235 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
235 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:241:3
    |
241 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
241 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:249:3
    |
249 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
249 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:262:3
    |
262 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
262 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:284:3
    |
284 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
284 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:305:3
    |
305 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
305 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:422:3
    |
422 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
422 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:446:3
    |
446 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
446 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:453:3
    |
453 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
453 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:458:3
    |
458 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
458 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/screen.rs:540:3
    |
540 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
540 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/screen_redraw.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
99  | |     fn style_apply(_: *mut grid_cell, _: *mut options, _: *const libc::c_char);
100 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/screen_redraw.rs:1402:3
     |
1402 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1402 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_redraw.rs:1436:3
     |
1436 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1436 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_redraw.rs:1496:3
     |
1496 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1496 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/screen_write.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
105 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
106 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1077:3
     |
1077 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1077 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1141:3
     |
1141 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1141 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1159:3
     |
1159 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1159 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1177:3
     |
1177 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1177 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1203:3
     |
1203 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1203 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1294:3
     |
1294 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1294 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1357:3
     |
1357 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1357 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1417:3
     |
1417 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1417 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1466:3
     |
1466 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1466 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1521:3
     |
1521 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1521 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1592:3
     |
1592 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1592 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1684:3
     |
1684 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1684 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1692:3
     |
1692 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1692 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1700:3
     |
1700 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1700 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1725:3
     |
1725 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1725 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1756:3
     |
1756 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1756 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1777:3
     |
1777 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1777 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1794:3
     |
1794 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1794 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1818:3
     |
1818 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1818 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1883:3
     |
1883 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1883 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1929:3
     |
1929 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1929 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:1975:3
     |
1975 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1975 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2021:3
     |
2021 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2021 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2087:3
     |
2087 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2087 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2153:3
     |
2153 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2153 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2197:3
     |
2197 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2197 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2248:3
     |
2248 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2248 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2302:3
     |
2302 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2302 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2318:3
     |
2318 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2318 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2354:3
     |
2354 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2354 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2376:3
     |
2376 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2376 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2418:3
     |
2418 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2418 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2449:3
     |
2449 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2449 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2454:3
     |
2454 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2454 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2517:3
     |
2517 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2517 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2579:3
     |
2579 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2579 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2623:3
     |
2623 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2623 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2843:3
     |
2843 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2843 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:2928:3
     |
2928 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2928 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:3001:3
     |
3001 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3001 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:3386:3
     |
3386 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3386 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/screen_write.rs:3416:3
     |
3416 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3416 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/server.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type sockaddr_x25;
4   | |     pub type sockaddr_ns;
5   | |     pub type sockaddr_iso;
...   |
157 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
158 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/server.rs:1299:3
     |
1299 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1299 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1304:3
     |
1304 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1304 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1343:3
     |
1343 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1343 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1353:3
     |
1353 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1353 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1365:3
     |
1365 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1365 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1369:3
     |
1369 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1369 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1386:3
     |
1386 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1386 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1467:3
     |
1467 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1467 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1677:3
     |
1677 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1677 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server.rs:1785:3
     |
1785 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1785 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/server_client.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
258 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
259 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1379:3
     |
1379 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1379 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1401:3
     |
1401 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1401 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1435:3
     |
1435 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1435 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1450:3
     |
1450 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1450 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1467:3
     |
1467 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1467 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1480:3
     |
1480 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1480 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1505:3
     |
1505 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1505 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1602:3
     |
1602 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1602 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1625:3
     |
1625 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1625 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1705:3
     |
1705 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1705 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1750:3
     |
1750 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1750 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1766:3
     |
1766 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1766 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:1782:3
     |
1782 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1782 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:2376:3
     |
2376 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2376 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:2635:3
     |
2635 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2635 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:3661:3
     |
3661 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3661 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:3745:3
     |
3745 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3745 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:3822:3
     |
3822 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3822 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_client.rs:3840:3
     |
3840 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3840 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/server_fn.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
94 | |     fn session_renumber_windows(_: *mut session);
95 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1276:3
     |
1276 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1276 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1280:3
     |
1280 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1280 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1284:3
     |
1284 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1284 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1295:3
     |
1295 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1295 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1309:3
     |
1309 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1309 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1320:3
     |
1320 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1320 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1334:3
     |
1334 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1334 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1345:3
     |
1345 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1345 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1356:3
     |
1356 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1356 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1367:3
     |
1367 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1367 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1378:3
     |
1378 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1378 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1389:3
     |
1389 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1389 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1422:3
     |
1422 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1422 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1435:3
     |
1435 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1435 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1481:3
     |
1481 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1481 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1546:3
     |
1546 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1546 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1557:3
     |
1557 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1557 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1714:3
     |
1714 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1714 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1752:3
     |
1752 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1752 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1776:3
     |
1776 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1776 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/server_fn.rs:1816:3
     |
1816 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1816 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/session.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
110 | |     fn fatal(_: *const libc::c_char, _: ...) -> !;
111 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/session.rs:1025:3
     |
1025 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1025 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1030:3
     |
1030 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1030 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1034:3
     |
1034 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1034 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1228:3
     |
1228 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1228 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1264:3
     |
1264 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1264 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1386:3
     |
1386 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1386 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1403:3
     |
1403 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1403 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1496:3
     |
1496 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1496 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1517:3
     |
1517 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1517 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1538:3
     |
1538 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1538 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1559:3
     |
1559 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1559 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1578:3
     |
1578 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1578 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1585:3
     |
1585 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1585 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1606:3
     |
1606 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1606 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1699:3
     |
1699 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1699 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1718:3
     |
1718 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1718 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:1840:3
     |
1840 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1840 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2034:3
     |
2034 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2034 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2057:3
     |
2057 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2057 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2093:3
     |
2093 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2093 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2110:3
     |
2110 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2110 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2133:3
     |
2133 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2133 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2140:3
     |
2140 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2140 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2152:3
     |
2152 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2152 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2229:3
     |
2229 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2229 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2251:3
     |
2251 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2251 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2263:3
     |
2263 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2263 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2371:3
     |
2371 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2371 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2387:3
     |
2387 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2387 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2441:3
     |
2441 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2441 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2479:3
     |
2479 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2479 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2505:3
     |
2505 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2505 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2566:3
     |
2566 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2566 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2581:3
     |
2581 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2581 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2596:3
     |
2596 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2596 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2655:3
     |
2655 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2655 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2674:3
     |
2674 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2674 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2706:3
     |
2706 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2706 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2721:3
     |
2721 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2721 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2744:3
     |
2744 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2744 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2781:3
     |
2781 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2781 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2807:3
     |
2807 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2807 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2816:3
     |
2816 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2816 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2828:3
     |
2828 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2828 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2847:3
     |
2847 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2847 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2866:3
     |
2866 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2866 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2886:3
     |
2886 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2886 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2905:3
     |
2905 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2905 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2934:3
     |
2934 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2934 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2947:3
     |
2947 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2947 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:2967:3
     |
2967 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2967 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/session.rs:3064:3
     |
3064 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3064 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/status.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
...   |
153 | |     fn style_apply_update(_: *mut grid_cell, _: *mut options, _: *const libc::c_char);
154 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/status.rs:1278:3
     |
1278 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1278 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1330:3
     |
1330 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1330 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1394:3
     |
1394 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1394 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1428:3
     |
1428 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1428 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1437:3
     |
1437 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1437 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1453:3
     |
1453 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1453 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1464:3
     |
1464 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1464 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1531:3
     |
1531 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1531 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:1559:3
     |
1559 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1559 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2114:3
     |
2114 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2114 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2127:3
     |
2127 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2127 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2136:3
     |
2136 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2136 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2272:3
     |
2272 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2272 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2344:3
     |
2344 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2344 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2360:3
     |
2360 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2360 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2383:3
     |
2383 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2383 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/status.rs:2769:3
     |
2769 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2769 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/style.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type options;
4  | |     fn memcpy(
5  | |         _: *mut libc::c_void,
...  |
30 | |     static grid_default_cell: grid_cell;
31 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/style.rs:54:3
   |
54 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
54 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/style.rs:213:3
    |
213 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
213 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/style.rs:266:3
    |
266 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
266 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/style.rs:283:3
    |
283 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
283 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/style.rs:301:3
    |
301 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
301 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/tmux.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
...   |
103 | |     fn log_add_level();
104 | | }
    | |_^

error: unsafe attribute used without unsafe
   --> src/tmux.rs:613:3
    |
613 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
613 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:615:3
    |
615 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
615 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:617:3
    |
617 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
617 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:619:3
    |
619 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
619 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:621:3
    |
621 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
621 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:623:3
    |
623 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
623 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:625:3
    |
625 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
625 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:627:3
    |
627 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
627 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:629:3
    |
629 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
629 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:665:3
    |
665 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
665 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:778:3
    |
778 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
778 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tmux.rs:791:3
    |
791 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
791 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/tty.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type screen_titles;
4   | |     pub type event_base;
5   | |     pub type evbuffer;
...   |
164 | |     ) -> libc::c_int;
165 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tty.rs:1291:3
     |
1291 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1291 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1311:3
     |
1311 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1311 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1340:3
     |
1340 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1340 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1377:3
     |
1377 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1377 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1506:3
     |
1506 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1506 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1568:3
     |
1568 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1568 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1651:3
     |
1651 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1651 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1723:3
     |
1723 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1723 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1743:3
     |
1743 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1743 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1749:3
     |
1749 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1749 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1756:3
     |
1756 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1756 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1781:3
     |
1781 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1781 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1785:3
     |
1785 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1785 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1796:3
     |
1796 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1796 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1808:3
     |
1808 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1808 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1821:3
     |
1821 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1821 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1831:3
     |
1831 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1831 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1867:3
     |
1867 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1867 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1873:3
     |
1873 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1873 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1917:3
     |
1917 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1917 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1961:3
     |
1961 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1961 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:1987:3
     |
1987 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1987 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2301:3
     |
2301 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2301 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2353:3
     |
2353 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2353 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2581:3
     |
2581 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2581 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2609:3
     |
2609 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2609 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2628:3
     |
2628 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2628 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2647:3
     |
2647 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2647 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2662:3
     |
2662 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2662 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2684:3
     |
2684 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2684 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2706:3
     |
2706 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2706 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2715:3
     |
2715 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2715 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2727:3
     |
2727 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2727 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2744:3
     |
2744 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2744 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2768:3
     |
2768 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2768 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2804:3
     |
2804 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2804 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2842:3
     |
2842 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2842 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2872:3
     |
2872 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2872 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2900:3
     |
2900 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2900 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2924:3
     |
2924 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2924 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2954:3
     |
2954 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2954 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2971:3
     |
2971 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2971 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:2977:3
     |
2977 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2977 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3001:3
     |
3001 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3001 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3039:3
     |
3039 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3039 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3100:3
     |
3100 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3100 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3148:3
     |
3148 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3148 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3242:3
     |
3242 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3242 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty.rs:3359:3
     |
3359 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3359 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/tty_acs.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
24 | |     fn tty_term_number(_: *mut tty_term, _: tty_code_code) -> libc::c_int;
25 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/tty_acs.rs:1361:3
     |
1361 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1361 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_acs.rs:1376:3
     |
1376 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1376 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/tty_keys.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
63 | |     fn log_debug(_: *const libc::c_char, _: ...);
64 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/tty_keys.rs:3258:3
     |
3258 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3258 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_keys.rs:3319:3
     |
3319 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3319 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_keys.rs:3464:3
     |
3464 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3464 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/tty_term.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type options;
4  | |     pub type options_entry;
5  | |     fn tigetflag(_: *const libc::c_char) -> libc::c_int;
...  |
66 | |     ) -> libc::c_int;
67 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/tty_term.rs:351:3
    |
351 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
351 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:1816:3
     |
1816 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1816 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:1976:3
     |
1976 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1976 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2196:3
     |
2196 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2196 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2223:3
     |
2223 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2223 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2231:3
     |
2231 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2231 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2249:3
     |
2249 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2249 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2268:3
     |
2268 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2268 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2288:3
     |
2288 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2288 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2309:3
     |
2309 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2309 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2328:3
     |
2328 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2328 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2348:3
     |
2348 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2348 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2366:3
     |
2366 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2366 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tty_term.rs:2384:3
     |
2384 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2384 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/utf8.rs:2:1
   |
2  | / extern "C" {
3  | |     fn __errno_location() -> *mut libc::c_int;
4  | |     fn __ctype_get_mb_cur_max() -> size_t;
5  | |     fn free(_: *mut libc::c_void);
...  |
31 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
32 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/utf8.rs:53:3
   |
53 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
53 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/utf8.rs:71:3
   |
71 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
71 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/utf8.rs:86:3
   |
86 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
86 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:114:3
    |
114 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
114 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:171:3
    |
171 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
171 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:199:3
    |
199 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
199 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:221:3
    |
221 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
221 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:287:3
    |
287 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
287 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:305:3
    |
305 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
305 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:344:3
    |
344 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
344 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:418:3
    |
418 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
418 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:428:3
    |
428 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
428 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:447:3
    |
447 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
447 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:494:3
    |
494 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
494 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:523:3
    |
523 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
523 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:564:3
    |
564 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
564 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:590:3
    |
590 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
590 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/utf8.rs:630:3
    |
630 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
630 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/variadic.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
176 | |     fn prctl(__option: libc::c_int, _: ...) -> libc::c_int;
177 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1267:3
     |
1267 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1267 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1284:3
     |
1284 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1284 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1301:3
     |
1301 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1301 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1330:3
     |
1330 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1330 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1375:3
     |
1375 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1375 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1391:3
     |
1391 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1391 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1413:3
     |
1413 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1413 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1439:3
     |
1439 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1439 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1464:3
     |
1464 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1464 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1510:3
     |
1510 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1510 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1523:3
     |
1523 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1523 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1529:3
     |
1529 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1529 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1546:3
     |
1546 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1546 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1562:3
     |
1562 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1562 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1610:3
     |
1610 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1610 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1654:3
     |
1654 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1654 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1712:3
     |
1712 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1712 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1723:3
     |
1723 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1723 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1735:3
     |
1735 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1735 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1844:3
     |
1844 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1844 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1896:3
     |
1896 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1896 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:1961:3
     |
1961 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1961 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:2009:3
     |
2009 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2009 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:2019:3
     |
2019 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2019 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:2031:3
     |
2031 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2031 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/variadic.rs:2044:3
     |
2044 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2044 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/window.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
210 | |     fn style_equal(_: *const grid_cell, _: *const grid_cell) -> libc::c_int;
211 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/window.rs:1230:3
     |
1230 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1230 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1234:3
     |
1234 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1234 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1241:3
     |
1241 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1241 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1260:3
     |
1260 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1260 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1281:3
     |
1281 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1281 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1302:3
     |
1302 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1302 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1395:3
     |
1395 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1395 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1412:3
     |
1412 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1412 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1534:3
     |
1534 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1534 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1555:3
     |
1555 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1555 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1749:3
     |
1749 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1749 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1785:3
     |
1785 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1785 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:1979:3
     |
1979 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1979 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2101:3
     |
2101 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2101 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2194:3
     |
2194 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2194 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2230:3
     |
2230 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2230 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2249:3
     |
2249 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2249 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2270:3
     |
2270 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2270 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2291:3
     |
2291 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2291 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2308:3
     |
2308 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2308 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2329:3
     |
2329 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2329 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2352:3
     |
2352 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2352 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2445:3
     |
2445 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2445 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2577:3
     |
2577 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2577 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2783:3
     |
2783 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2783 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2819:3
     |
2819 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2819 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2838:3
     |
2838 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2838 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2859:3
     |
2859 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2859 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2882:3
     |
2882 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2882 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2899:3
     |
2899 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2899 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2906:3
     |
2906 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2906 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2913:3
     |
2913 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2913 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2920:3
     |
2920 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2920 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2935:3
     |
2935 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2935 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:2980:3
     |
2980 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2980 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3017:3
     |
3017 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3017 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3030:3
     |
3030 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3030 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3052:3
     |
3052 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3052 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3084:3
     |
3084 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3084 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3107:3
     |
3107 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3107 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3111:3
     |
3111 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3111 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3115:3
     |
3115 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3115 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3131:3
     |
3131 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3131 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3147:3
     |
3147 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3147 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3165:3
     |
3165 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3165 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3188:3
     |
3188 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3188 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3210:3
     |
3210 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3210 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3345:3
     |
3345 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3345 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3350:3
     |
3350 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3350 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3377:3
     |
3377 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3377 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3448:3
     |
3448 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3448 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3472:3
     |
3472 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3472 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3488:3
     |
3488 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3488 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3510:3
     |
3510 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3510 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3524:3
     |
3524 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3524 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3533:3
     |
3533 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3533 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3548:3
     |
3548 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3548 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3588:3
     |
3588 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3588 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3626:3
     |
3626 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3626 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3646:3
     |
3646 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3646 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3694:3
     |
3694 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3694 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3722:3
     |
3722 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3722 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3742:3
     |
3742 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3742 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3828:3
     |
3828 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3828 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3863:3
     |
3863 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3863 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3877:3
     |
3877 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3877 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3899:3
     |
3899 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3899 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3915:3
     |
3915 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3915 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3931:3
     |
3931 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3931 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3953:3
     |
3953 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3953 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3966:3
     |
3966 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3966 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:3980:3
     |
3980 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3980 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4026:3
     |
4026 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4026 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4048:3
     |
4048 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4048 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4352:3
     |
4352 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4352 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4639:3
     |
4639 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4639 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4661:3
     |
4661 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4661 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4710:3
     |
4710 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4710 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4766:3
     |
4766 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4766 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4785:3
     |
4785 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4785 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4796:3
     |
4796 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4796 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4805:3
     |
4805 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4805 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4860:3
     |
4860 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4860 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4904:3
     |
4904 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4904 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4918:3
     |
4918 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4918 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:4985:3
     |
4985 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4985 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5001:3
     |
5001 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5001 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5060:3
     |
5060 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5060 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5137:3
     |
5137 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5137 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5213:3
     |
5213 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5213 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5274:3
     |
5274 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5274 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5332:3
     |
5332 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5332 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window.rs:5350:3
     |
5350 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5350 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/window_buffer.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
121 | |     );
122 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/window_buffer.rs:1075:3
     |
1075 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1075 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/window_client.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
116 | |     );
117 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/window_client.rs:1104:3
     |
1104 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1104 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/window_clock.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type event_base;
4  | |     pub type evbuffer;
5  | |     pub type bufferevent_ops;
...  |
68 | |     fn window_pane_reset_mode(_: *mut window_pane);
69 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/window_clock.rs:987:3
    |
987 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
987 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_clock.rs:1023:3
     |
1023 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1023 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/window_copy.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
179 | |     fn style_apply(_: *mut grid_cell, _: *mut options, _: *const libc::c_char);
180 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:1160:3
     |
1160 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1160 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:1251:3
     |
1251 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1251 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:1290:3
     |
1290 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1290 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:1324:3
     |
1324 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1324 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:1416:3
     |
1416 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1416 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:4611:3
     |
4611 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4611 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/window_copy.rs:4664:3
     |
4664 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4664 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/window_tree.rs:2:1
    |
2   | / extern "C" {
3   | |     pub type event_base;
4   | |     pub type evbuffer;
5   | |     pub type bufferevent_ops;
...   |
168 | |     fn osdep_get_name(_: libc::c_int, _: *mut libc::c_char) -> *mut libc::c_char;
169 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/window_tree.rs:1277:3
     |
1277 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1277 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/xmalloc.rs:2:1
   |
2  | / extern "C" {
3  | |     fn __errno_location() -> *mut libc::c_int;
4  | |     fn vsnprintf(
5  | |         _: *mut libc::c_char,
...  |
25 | |     fn fatalx(_: *const libc::c_char, _: ...) -> !;
26 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/xmalloc.rs:36:3
   |
36 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
36 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/xmalloc.rs:52:3
   |
52 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
52 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/xmalloc.rs:73:3
   |
73 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
73 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/xmalloc.rs:80:3
   |
80 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
80 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/xmalloc.rs:102:3
    |
102 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
102 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/xmalloc.rs:114:3
    |
114 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
114 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/xmalloc.rs:129:3
    |
129 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
129 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/xmalloc.rs:145:3
    |
145 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
145 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
 --> src/xterm_keys.rs:2:1
  |
2 | / extern "C" {
3 | |     fn strcspn(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_ulong;
4 | |     fn xstrdup(_: *const libc::c_char) -> *mut libc::c_char;
5 | | }
  | |_^

error: unsafe attribute used without unsafe
   --> src/xterm_keys.rs:609:3
    |
609 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
609 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/xterm_keys.rs:640:3
    |
640 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
640 | #[unsafe(no_mangle)]
    |   +++++++         +

error[E0432]: unresolved import `libc`
 --> src/alerts.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/arguments.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/attributes.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cfg.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_attach_session.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_bind_key.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_break_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_capture_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_choose_tree.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_command_prompt.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_confirm_before.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_copy_mode.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_detach_client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_display_message.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_display_panes.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_find.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_find_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_if_shell.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_join_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_kill_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_kill_server.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_kill_session.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_kill_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_buffers.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_clients.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_keys.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_panes.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_sessions.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_list_windows.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_load_buffer.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_lock_server.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_move_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_new_session.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_new_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_paste_buffer.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_pipe_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_queue.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_refresh_client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_rename_session.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_rename_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_resize_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_respawn_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_respawn_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_rotate_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_run_shell.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_save_buffer.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_select_layout.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_select_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_select_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_send_keys.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_set_buffer.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_set_environment.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_set_hook.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_set_option.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_show_environment.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_show_messages.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_show_options.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_source_file.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_split_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_string.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_swap_pane.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_swap_window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_switch_client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_unbind_key.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/cmd_wait_for.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/colour.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/control.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/control_notify.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/environ.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/format.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/grid.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/grid_view.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/hooks.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/input.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/input_keys.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/job.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/key_bindings.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/key_string.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/layout.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/layout_custom.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/layout_set.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/log.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/mode_tree.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/names.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/notify.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/options.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/options_table.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/osdep_linux.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/paste.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/proc.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/resize.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/screen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/screen_redraw.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/screen_write.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/server.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/server_client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/server_fn.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/session.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/status.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/style.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/tmux.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/tty.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/tty_acs.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/tty_keys.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/tty_term.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/utf8.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/variadic.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window_buffer.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window_client.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window_clock.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window_copy.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/window_tree.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/xmalloc.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/xterm_keys.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0658]: extern types are experimental
 --> src/alerts.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/alerts.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/alerts.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:3:5
  |
3 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:4:5
  |
4 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:5:5
  |
5 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:6:5
  |
6 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:7:5
  |
7 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:8:5
  |
8 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cfg.rs:9:5
  |
9 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:10:5
   |
10 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:11:5
   |
11 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:12:5
   |
12 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:13:5
   |
13 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:14:5
   |
14 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:15:5
   |
15 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:16:5
   |
16 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:17:5
   |
17 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cfg.rs:18:5
   |
18 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:3:5
  |
3 |     pub type sockaddr_x25;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:4:5
  |
4 |     pub type sockaddr_ns;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:5:5
  |
5 |     pub type sockaddr_iso;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:6:5
  |
6 |     pub type sockaddr_ipx;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:7:5
  |
7 |     pub type sockaddr_inarp;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:8:5
  |
8 |     pub type sockaddr_eon;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/client.rs:9:5
  |
9 |     pub type sockaddr_dl;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:10:5
   |
10 |     pub type sockaddr_ax25;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:11:5
   |
11 |     pub type sockaddr_at;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:12:5
   |
12 |     pub type event_base;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:13:5
   |
13 |     pub type _IO_wide_data;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:14:5
   |
14 |     pub type _IO_codecvt;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:15:5
   |
15 |     pub type _IO_marker;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:16:5
   |
16 |     pub type evbuffer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:17:5
   |
17 |     pub type bufferevent_ops;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:18:5
   |
18 |     pub type args_entry;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:19:5
   |
19 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:20:5
   |
20 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:21:5
   |
21 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:22:5
   |
22 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:23:5
   |
23 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:24:5
   |
24 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:25:5
   |
25 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:26:5
   |
26 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:27:5
   |
27 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/client.rs:28:5
   |
28 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd.rs:17:5
   |
17 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_attach_session.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_attach_session.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_bind_key.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_bind_key.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_break_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_break_pane.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_capture_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_capture_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_choose_tree.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_choose_tree.rs:16:5
   |
16 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_command_prompt.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_command_prompt.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_confirm_before.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_confirm_before.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_copy_mode.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_copy_mode.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_detach_client.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_detach_client.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_message.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_message.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_display_panes.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_display_panes.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_find_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_find_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_if_shell.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_if_shell.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_join_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_join_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_server.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_server.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_session.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_session.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_kill_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_kill_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_buffers.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_buffers.rs:16:5
   |
16 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_clients.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_clients.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_keys.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_keys.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_panes.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_panes.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_sessions.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_sessions.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_list_windows.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_list_windows.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:3:5
  |
3 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:4:5
  |
4 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:5:5
  |
5 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:6:5
  |
6 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:7:5
  |
7 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:8:5
  |
8 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_load_buffer.rs:9:5
  |
9 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:10:5
   |
10 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:11:5
   |
11 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:12:5
   |
12 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:13:5
   |
13 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:14:5
   |
14 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:15:5
   |
15 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:16:5
   |
16 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:17:5
   |
17 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_load_buffer.rs:18:5
   |
18 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_lock_server.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_lock_server.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_move_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_move_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_session.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_session.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_new_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_new_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_paste_buffer.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_paste_buffer.rs:16:5
   |
16 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_pipe_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_pipe_pane.rs:16:5
   |
16 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_queue.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_queue.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_refresh_client.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_refresh_client.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_session.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_session.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rename_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rename_window.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_resize_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_resize_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_respawn_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_respawn_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_rotate_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_rotate_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_run_shell.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_run_shell.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:7:5
  |
7 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:8:5
  |
8 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_save_buffer.rs:9:5
  |
9 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:10:5
   |
10 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:11:5
   |
11 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:12:5
   |
12 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:13:5
   |
13 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:14:5
   |
14 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:15:5
   |
15 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:16:5
   |
16 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:17:5
   |
17 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:18:5
   |
18 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_save_buffer.rs:19:5
   |
19 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_layout.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_layout.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_select_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_select_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_send_keys.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_send_keys.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_buffer.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_buffer.rs:16:5
   |
16 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_environment.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_environment.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_hook.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_hook.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_set_option.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_set_option.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_environment.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_environment.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_messages.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_messages.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_show_options.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_show_options.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:3:5
  |
3 |     pub type stat;
  |     ^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:4:5
  |
4 |     pub type dirent;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:5:5
  |
5 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:6:5
  |
6 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:7:5
  |
7 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:8:5
  |
8 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_source_file.rs:9:5
  |
9 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:10:5
   |
10 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:11:5
   |
11 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:12:5
   |
12 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:13:5
   |
13 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:14:5
   |
14 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:15:5
   |
15 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:16:5
   |
16 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_source_file.rs:17:5
   |
17 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_split_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_split_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_string.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_string.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_pane.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_pane.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_swap_window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_swap_window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_switch_client.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_switch_client.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_unbind_key.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_unbind_key.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/cmd_wait_for.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/cmd_wait_for.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/control_notify.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/control_notify.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:7:5
  |
7 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:8:5
  |
8 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/environ.rs:9:5
  |
9 |     pub type screen_titles;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:10:5
   |
10 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:11:5
   |
11 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:12:5
   |
12 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:13:5
   |
13 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:14:5
   |
14 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/environ.rs:15:5
   |
15 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/format.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:12:5
   |
12 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:13:5
   |
13 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:14:5
   |
14 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/format.rs:15:5
   |
15 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/hooks.rs:9:5
  |
9 |     pub type screen_titles;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/hooks.rs:10:5
   |
10 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/hooks.rs:11:5
   |
11 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/hooks.rs:12:5
   |
12 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/hooks.rs:13:5
   |
13 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/hooks.rs:14:5
   |
14 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:11:5
   |
11 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:12:5
   |
12 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:13:5
   |
13 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:14:5
   |
14 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:15:5
   |
15 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:16:5
   |
16 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input.rs:17:5
   |
17 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/input_keys.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/input_keys.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/job.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/job.rs:16:5
   |
16 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/key_bindings.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/key_bindings.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_custom.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_custom.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/layout_set.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/layout_set.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/log.rs:3:5
  |
3 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/log.rs:4:5
  |
4 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/log.rs:5:5
  |
5 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/mode_tree.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:16:5
   |
16 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/mode_tree.rs:17:5
   |
17 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/names.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/names.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/notify.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/notify.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:8:5
  |
8 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/options.rs:9:5
  |
9 |     pub type screen_titles;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/options.rs:10:5
   |
10 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/options.rs:11:5
   |
11 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/options.rs:12:5
   |
12 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/options.rs:13:5
   |
13 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/options.rs:14:5
   |
14 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/osdep_linux.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/osdep_linux.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/osdep_linux.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/osdep_linux.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/paste.rs:3:5
  |
3 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/proc.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/resize.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/resize.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_redraw.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:16:5
   |
16 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_redraw.rs:17:5
   |
17 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/screen_write.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/screen_write.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:3:5
  |
3 |     pub type sockaddr_x25;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:4:5
  |
4 |     pub type sockaddr_ns;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:5:5
  |
5 |     pub type sockaddr_iso;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:6:5
  |
6 |     pub type sockaddr_ipx;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:7:5
  |
7 |     pub type sockaddr_inarp;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:8:5
  |
8 |     pub type sockaddr_eon;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server.rs:9:5
  |
9 |     pub type sockaddr_dl;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:10:5
   |
10 |     pub type sockaddr_ax25;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:11:5
   |
11 |     pub type sockaddr_at;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:12:5
   |
12 |     pub type event_base;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:13:5
   |
13 |     pub type evbuffer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:14:5
   |
14 |     pub type bufferevent_ops;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:15:5
   |
15 |     pub type args_entry;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:16:5
   |
16 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:17:5
   |
17 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:18:5
   |
18 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:19:5
   |
19 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:20:5
   |
20 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:21:5
   |
21 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:22:5
   |
22 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:23:5
   |
23 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:24:5
   |
24 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server.rs:25:5
   |
25 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_client.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_client.rs:16:5
   |
16 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/server_fn.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:16:5
   |
16 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/server_fn.rs:17:5
   |
17 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/session.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/session.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:7:5
  |
7 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:8:5
  |
8 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/status.rs:9:5
  |
9 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:10:5
   |
10 |     pub type environ;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:11:5
   |
11 |     pub type options;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:12:5
   |
12 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:13:5
   |
13 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:14:5
   |
14 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:15:5
   |
15 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:16:5
   |
16 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:17:5
   |
17 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:18:5
   |
18 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:19:5
   |
19 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:20:5
   |
20 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/status.rs:21:5
   |
21 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/style.rs:3:5
  |
3 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tmux.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tmux.rs:10:5
   |
10 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:3:5
  |
3 |     pub type screen_titles;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:4:5
  |
4 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:5:5
  |
5 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:6:5
  |
6 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:7:5
  |
7 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:8:5
  |
8 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty.rs:9:5
  |
9 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:10:5
   |
10 |     pub type hooks;
   |     ^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_acs.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_acs.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_keys.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tty_keys.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_term.rs:3:5
  |
3 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tty_term.rs:4:5
  |
4 |     pub type options_entry;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/variadic.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:11:5
   |
11 |     pub type input_state;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:12:5
   |
12 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:13:5
   |
13 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:14:5
   |
14 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:15:5
   |
15 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/variadic.rs:16:5
   |
16 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1268:1
     |
1268 | / pub unsafe extern "C" fn args_print_add(
1269 | |     mut buf: *mut *mut libc::c_char,
1270 | |     mut len: *mut size_t,
1271 | |     mut fmt: *const libc::c_char,
...    |
1282 | |     free(s as *mut libc::c_void);
1283 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1285:1
     |
1285 | / pub unsafe extern "C" fn cfg_add_cause(mut fmt: *const libc::c_char, mut args: ...) {
1286 | |     let mut ap: ::core::ffi::VaListImpl;
1287 | |     let mut msg: *mut libc::c_char = 0 as *mut libc::c_char;
1288 | |     ap = args.clone();
...    |
1299 | |     *fresh0 = msg;
1300 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1302:1
     |
1302 | / pub unsafe extern "C" fn cmdq_format(
1303 | |     mut item: *mut cmdq_item,
1304 | |     mut key: *const libc::c_char,
1305 | |     mut fmt: *const libc::c_char,
...    |
1328 | |     free(value as *mut libc::c_void);
1329 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1331:1
     |
1331 | / pub unsafe extern "C" fn cmdq_print(
1332 | |     mut item: *mut cmdq_item,
1333 | |     mut fmt: *const libc::c_char,
1334 | |     mut args: ...
...    |
1374 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1376:1
     |
1376 | / pub unsafe extern "C" fn control_write(
1377 | |     mut c: *mut client,
1378 | |     mut fmt: *const libc::c_char,
1379 | |     mut args: ...
...    |
1389 | |     server_client_push_stdout(c);
1390 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1392:1
     |
1392 | / pub unsafe extern "C" fn environ_set(
1393 | |     mut env: *mut environ,
1394 | |     mut name: *const libc::c_char,
1395 | |     mut fmt: *const libc::c_char,
...    |
1411 | |     };
1412 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1414:1
     |
1414 | / pub unsafe extern "C" fn environ_log(
1415 | |     mut env: *mut environ,
1416 | |     mut fmt: *const libc::c_char,
1417 | |     mut args: ...
...    |
1437 | |     free(prefix as *mut libc::c_void);
1438 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1440:1
     |
1440 | / pub unsafe extern "C" fn format_add(
1441 | |     mut ft: *mut format_tree,
1442 | |     mut key: *const libc::c_char,
1443 | |     mut fmt: *const libc::c_char,
...    |
1462 | |     xvasprintf(&mut (*fe).value, fmt, ap.as_va_list());
1463 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1465:1
     |
1465 | / pub unsafe extern "C" fn hooks_insert(
1466 | |     mut hooks: *mut hooks,
1467 | |     mut item: *mut cmdq_item,
1468 | |     mut fs: *mut cmd_find_state,
...    |
1508 | |     free(name as *mut libc::c_void);
1509 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1511:1
     |
1511 | / pub unsafe extern "C" fn input_reply(
1512 | |     mut ictx: *mut input_ctx,
1513 | |     mut fmt: *const libc::c_char,
1514 | |     mut args: ...
...    |
1521 | |     free(reply as *mut libc::c_void);
1522 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1524:1
     |
1524 | / pub unsafe extern "C" fn log_debug(mut msg: *const libc::c_char, mut args: ...) {
1525 | |     let mut ap: ::core::ffi::VaListImpl;
1526 | |     ap = args.clone();
1527 | |     log_vwrite(msg, ap.as_va_list());
1528 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1530:1
     |
1530 | / pub unsafe extern "C" fn fatal(mut msg: *const libc::c_char, mut args: ...) -> ! {
1531 | |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
1532 | |     let mut ap: ::core::ffi::VaListImpl;
1533 | |     ap = args.clone();
...    |
1544 | |     exit(1 as libc::c_int);
1545 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1547:1
     |
1547 | / pub unsafe extern "C" fn fatalx(mut msg: *const libc::c_char, mut args: ...) -> ! {
1548 | |     let mut fmt: *mut libc::c_char = 0 as *mut libc::c_char;
1549 | |     let mut ap: ::core::ffi::VaListImpl;
1550 | |     ap = args.clone();
...    |
1560 | |     exit(1 as libc::c_int);
1561 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1563:1
     |
1563 | / pub unsafe extern "C" fn options_set_string(
1564 | |     mut oo: *mut options,
1565 | |     mut name: *const libc::c_char,
1566 | |     mut append: libc::c_int,
...    |
1608 | |     return o;
1609 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1611:1
     |
1611 | / pub unsafe extern "C" fn screen_write_cstrlen(
1612 | |     mut fmt: *const libc::c_char,
1613 | |     mut args: ...
1614 | | ) -> size_t {
...    |
1652 | |     return size;
1653 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1655:1
     |
1655 | / pub unsafe extern "C" fn screen_write_strlen(
1656 | |     mut fmt: *const libc::c_char,
1657 | |     mut args: ...
1658 | | ) -> size_t {
...    |
1710 | |     return size;
1711 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1713:1
     |
1713 | / pub unsafe extern "C" fn screen_write_puts(
1714 | |     mut ctx: *mut screen_write_ctx,
1715 | |     mut gcp: *const grid_cell,
1716 | |     mut fmt: *const libc::c_char,
...    |
1721 | |     screen_write_vnputs(ctx, -(1 as libc::c_int) as ssize_t, gcp, fmt, ap.as_va_list());
1722 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1724:1
     |
1724 | / pub unsafe extern "C" fn screen_write_nputs(
1725 | |     mut ctx: *mut screen_write_ctx,
1726 | |     mut maxlen: ssize_t,
1727 | |     mut gcp: *const grid_cell,
...    |
1733 | |     screen_write_vnputs(ctx, maxlen, gcp, fmt, ap.as_va_list());
1734 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1736:1
     |
1736 | / pub unsafe extern "C" fn screen_write_cnputs(
1737 | |     mut ctx: *mut screen_write_ctx,
1738 | |     mut maxlen: ssize_t,
1739 | |     mut gcp: *const grid_cell,
...    |
1842 | |     free(msg as *mut libc::c_void);
1843 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1845:1
     |
1845 | / pub unsafe extern "C" fn server_client_add_message(
1846 | |     mut c: *mut client,
1847 | |     mut fmt: *const libc::c_char,
1848 | |     mut args: ...
...    |
1895 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1897:1
     |
1897 | / pub unsafe extern "C" fn status_message_set(
1898 | |     mut c: *mut client,
1899 | |     mut fmt: *const libc::c_char,
1900 | |     mut args: ...
...    |
1959 | |     (*c).flags |= 0x10 as libc::c_int;
1960 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:1962:1
     |
1962 | / pub unsafe extern "C" fn cmdq_error(
1963 | |     mut item: *mut cmdq_item,
1964 | |     mut fmt: *const libc::c_char,
1965 | |     mut args: ...
...    |
2007 | |     free(msg as *mut libc::c_void);
2008 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:2010:1
     |
2010 | / pub unsafe extern "C" fn window_copy_add(
2011 | |     mut wp: *mut window_pane,
2012 | |     mut fmt: *const libc::c_char,
2013 | |     mut args: ...
...    |
2017 | |     window_copy_vadd(wp, fmt, ap.as_va_list());
2018 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:2020:1
     |
2020 | / pub unsafe extern "C" fn xasprintf(
2021 | |     mut ret: *mut *mut libc::c_char,
2022 | |     mut fmt: *const libc::c_char,
2023 | |     mut args: ...
...    |
2029 | |     return i;
2030 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:2032:1
     |
2032 | / pub unsafe extern "C" fn xsnprintf(
2033 | |     mut str: *mut libc::c_char,
2034 | |     mut len: size_t,
2035 | |     mut fmt: *const libc::c_char,
...    |
2042 | |     return i;
2043 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/variadic.rs:2045:1
     |
2045 | / pub unsafe extern "C" fn setproctitle(mut fmt: *const libc::c_char, mut args: ...) {
2046 | |     let mut title: [libc::c_char; 16] = [0; 16];
2047 | |     let mut name: [libc::c_char; 16] = [0; 16];
2048 | |     let mut cp: *mut libc::c_char = 0 as *mut libc::c_char;
...    |
2073 | |     prctl(15 as libc::c_int, name.as_mut_ptr());
2074 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:16:5
   |
16 |     pub type options_entry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window.rs:17:5
   |
17 |     pub type tmuxproc;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_buffer.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:16:5
   |
16 |     pub type mode_tree_data;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:17:5
   |
17 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:18:5
   |
18 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:19:5
   |
19 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_buffer.rs:20:5
   |
20 |     pub type mode_tree_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_client.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:16:5
   |
16 |     pub type mode_tree_data;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:17:5
   |
17 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:18:5
   |
18 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_client.rs:19:5
   |
19 |     pub type mode_tree_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_clock.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:16:5
   |
16 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_clock.rs:17:5
   |
17 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_copy.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:16:5
   |
16 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:17:5
   |
17 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_copy.rs:18:5
   |
18 |     pub type paste_buffer;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:3:5
  |
3 |     pub type event_base;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:4:5
  |
4 |     pub type evbuffer;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:5:5
  |
5 |     pub type bufferevent_ops;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:6:5
  |
6 |     pub type args_entry;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:7:5
  |
7 |     pub type environ;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:8:5
  |
8 |     pub type options;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/window_tree.rs:9:5
  |
9 |     pub type hooks;
  |     ^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:10:5
   |
10 |     pub type screen_titles;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:11:5
   |
11 |     pub type input_ctx;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:12:5
   |
12 |     pub type format_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:13:5
   |
13 |     pub type tty_code;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:14:5
   |
14 |     pub type format_job_tree;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:15:5
   |
15 |     pub type tmuxpeer;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:16:5
   |
16 |     pub type mode_tree_data;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:17:5
   |
17 |     pub type screen_write_collect_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:18:5
   |
18 |     pub type screen_write_collect_line;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/window_tree.rs:19:5
   |
19 |     pub type mode_tree_item;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

warning: type `__u_char` should have an upper camel case name
  --> src/alerts.rs:52:10
   |
52 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `__u_short` should have an upper camel case name
  --> src/alerts.rs:53:10
   |
53 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/alerts.rs:54:10
   |
54 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/alerts.rs:55:10
   |
55 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/alerts.rs:56:10
   |
56 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/alerts.rs:57:10
   |
57 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/alerts.rs:58:10
   |
58 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/alerts.rs:59:10
   |
59 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/alerts.rs:60:10
   |
60 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/alerts.rs:61:10
   |
61 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/alerts.rs:62:10
   |
62 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/alerts.rs:63:10
   |
63 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/alerts.rs:64:10
   |
64 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/alerts.rs:71:10
   |
71 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/alerts.rs:178:10
    |
178 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/alerts.rs:181:10
    |
181 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/alerts.rs:190:10
    |
190 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/alerts.rs:191:10
    |
191 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/alerts.rs:192:10
    |
192 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/alerts.rs:205:10
    |
205 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/alerts.rs:569:10
    |
569 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/alerts.rs:611:10
    |
611 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/alerts.rs:656:10
    |
656 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/alerts.rs:672:10
    |
672 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/alerts.rs:675:10
    |
675 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/alerts.rs:676:10
    |
676 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/alerts.rs:808:10
    |
808 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/alerts.rs:811:10
    |
811 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/alerts.rs:825:10
    |
825 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/alerts.rs:841:10
    |
841 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/alerts.rs:910:10
    |
910 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `tty_code_code` should have an upper camel case name
   --> src/alerts.rs:934:10
    |
934 | pub type tty_code_code = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: this `if` statement can be collapsed
    --> src/alerts.rs:1257:5
     |
1257 | /     if flags & 0x1 as libc::c_int != 0 {
1258 | |         if options_get_number(
1259 | |             (*w).options,
1260 | |             b"monitor-bell\0" as *const u8 as *const libc::c_char,
...    |
1265 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
     = note: `#[warn(clippy::collapsible_if)]` on by default
help: collapse nested if block
     |
1257 ~     if flags & 0x1 as libc::c_int != 0 && options_get_number(
1258 +             (*w).options,
1259 +             b"monitor-bell\0" as *const u8 as *const libc::c_char,
1260 +         ) != 0 {
1261 +         return 1 as libc::c_int;
1262 +     }
     |

warning: this `if` statement can be collapsed
    --> src/alerts.rs:1266:5
     |
1266 | /     if flags & 0x2 as libc::c_int != 0 {
1267 | |         if options_get_number(
1268 | |             (*w).options,
1269 | |             b"monitor-activity\0" as *const u8 as *const libc::c_char,
...    |
1274 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1266 ~     if flags & 0x2 as libc::c_int != 0 && options_get_number(
1267 +             (*w).options,
1268 +             b"monitor-activity\0" as *const u8 as *const libc::c_char,
1269 +         ) != 0 {
1270 +         return 1 as libc::c_int;
1271 +     }
     |

warning: this `if` statement can be collapsed
    --> src/alerts.rs:1275:5
     |
1275 | /     if flags & 0x8 as libc::c_int != 0 {
1276 | |         if options_get_number(
1277 | |             (*w).options,
1278 | |             b"monitor-silence\0" as *const u8 as *const libc::c_char,
...    |
1283 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1275 ~     if flags & 0x8 as libc::c_int != 0 && options_get_number(
1276 +             (*w).options,
1277 +             b"monitor-silence\0" as *const u8 as *const libc::c_char,
1278 +         ) != 0 as libc::c_int as libc::c_longlong {
1279 +         return 1 as libc::c_int;
1280 +     }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/arguments.rs:39:10
   |
39 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_char` should have an upper camel case name
  --> src/arguments.rs:40:10
   |
40 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `size_t` should have an upper camel case name
  --> src/arguments.rs:41:10
   |
41 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `size_t` should have an upper camel case name
  --> src/attributes.rs:20:10
   |
20 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_char` should have an upper camel case name
  --> src/cfg.rs:93:10
   |
93 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cfg.rs:94:10
   |
94 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cfg.rs:95:10
   |
95 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cfg.rs:96:10
   |
96 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__off_t` should have an upper camel case name
  --> src/cfg.rs:97:10
   |
97 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/cfg.rs:98:10
   |
98 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cfg.rs:99:10
   |
99 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cfg.rs:100:10
    |
100 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cfg.rs:101:10
    |
101 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cfg.rs:102:10
    |
102 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cfg.rs:103:10
    |
103 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cfg.rs:104:10
    |
104 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cfg.rs:105:10
    |
105 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cfg.rs:106:10
    |
106 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cfg.rs:107:10
    |
107 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/cfg.rs:160:10
    |
160 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cfg.rs:162:10
    |
162 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cfg.rs:269:10
    |
269 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cfg.rs:272:10
    |
272 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cfg.rs:281:10
    |
281 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cfg.rs:282:10
    |
282 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cfg.rs:283:10
    |
283 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cfg.rs:296:10
    |
296 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cfg.rs:660:10
    |
660 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/cfg.rs:702:10
    |
702 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/cfg.rs:747:10
    |
747 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/cfg.rs:763:10
    |
763 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cfg.rs:766:10
    |
766 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cfg.rs:767:10
    |
767 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cfg.rs:899:10
    |
899 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cfg.rs:902:10
    |
902 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cfg.rs:916:10
    |
916 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cfg.rs:932:10
    |
932 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
    --> src/cfg.rs:1001:10
     |
1001 | pub type C2RustUnnamed_33 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `__u_char` should have an upper camel case name
   --> src/client.rs:191:10
    |
191 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/client.rs:192:10
    |
192 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/client.rs:193:10
    |
193 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/client.rs:194:10
    |
194 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/client.rs:195:10
    |
195 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/client.rs:196:10
    |
196 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__uid_t` should have an upper camel case name
   --> src/client.rs:197:10
    |
197 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__off_t` should have an upper camel case name
   --> src/client.rs:198:10
    |
198 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/client.rs:199:10
    |
199 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/client.rs:200:10
    |
200 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__clock_t` should have an upper camel case name
   --> src/client.rs:201:10
    |
201 | pub type __clock_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `ClockT`

warning: type `__time_t` should have an upper camel case name
   --> src/client.rs:202:10
    |
202 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/client.rs:203:10
    |
203 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/client.rs:204:10
    |
204 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `__socklen_t` should have an upper camel case name
   --> src/client.rs:205:10
    |
205 | pub type __socklen_t = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocklenT`

warning: type `u_char` should have an upper camel case name
   --> src/client.rs:206:10
    |
206 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/client.rs:207:10
    |
207 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/client.rs:208:10
    |
208 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/client.rs:209:10
    |
209 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/client.rs:210:10
    |
210 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/client.rs:211:10
    |
211 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/client.rs:212:10
    |
212 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
   --> src/client.rs:218:10
    |
218 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `socklen_t` should have an upper camel case name
   --> src/client.rs:225:10
    |
225 | pub type socklen_t = __socklen_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SocklenT`

warning: type `__socket_type` should have an upper camel case name
   --> src/client.rs:226:10
    |
226 | pub type __socket_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocketType`

warning: type `sa_family_t` should have an upper camel case name
   --> src/client.rs:236:10
    |
236 | pub type sa_family_t = libc::c_ushort;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `SaFamilyT`

warning: type `uint32_t` should have an upper camel case name
   --> src/client.rs:258:10
    |
258 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `uint16_t` should have an upper camel case name
   --> src/client.rs:271:10
    |
271 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint8_t` should have an upper camel case name
   --> src/client.rs:272:10
    |
272 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `in_port_t` should have an upper camel case name
   --> src/client.rs:273:10
    |
273 | pub type in_port_t = uint16_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `InPortT`

warning: type `in_addr_t` should have an upper camel case name
   --> src/client.rs:287:10
    |
287 | pub type in_addr_t = uint32_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `InAddrT`

warning: type `__sigval_t` should have an upper camel case name
   --> src/client.rs:311:10
    |
311 | pub type __sigval_t = sigval;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `SigvalT`

warning: type `__sighandler_t` should have an upper camel case name
   --> src/client.rs:394:10
    |
394 | pub type __sighandler_t = Option::<unsafe extern "C" fn(libc::c_int) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SighandlerT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/client.rs:531:10
    |
531 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/client.rs:552:10
    |
552 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/client.rs:555:10
    |
555 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/client.rs:564:10
    |
564 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/client.rs:565:10
    |
565 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/client.rs:566:10
    |
566 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/client.rs:579:10
    |
579 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/client.rs:959:10
    |
959 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/client.rs:1001:10
     |
1001 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `layout_type` should have an upper camel case name
    --> src/client.rs:1046:10
     |
1046 | pub type layout_type = libc::c_uint;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_35` should have an upper camel case name
    --> src/client.rs:1062:10
     |
1062 | pub type C2RustUnnamed_35 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `prompt_free_cb` should have an upper camel case name
    --> src/client.rs:1065:10
     |
1065 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
     |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
    --> src/client.rs:1066:10
     |
1066 | pub type prompt_input_cb = Option::<
     |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
    --> src/client.rs:1198:10
     |
1198 | pub type cmdq_cb = Option::<
     |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
    --> src/client.rs:1201:10
     |
1201 | pub type cmd_retval = libc::c_int;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
    --> src/client.rs:1215:10
     |
1215 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/client.rs:1231:10
     |
1231 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_44` should have an upper camel case name
    --> src/client.rs:1300:10
     |
1300 | pub type C2RustUnnamed_44 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed44`

warning: type `msgtype` should have an upper camel case name
    --> src/client.rs:1324:10
     |
1324 | pub type msgtype = libc::c_uint;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `C2RustUnnamed_46` should have an upper camel case name
    --> src/client.rs:1384:10
     |
1384 | pub type C2RustUnnamed_46 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed46`

warning: type `__u_char` should have an upper camel case name
   --> src/cmd.rs:153:10
    |
153 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/cmd.rs:154:10
    |
154 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/cmd.rs:155:10
    |
155 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/cmd.rs:156:10
    |
156 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/cmd.rs:157:10
    |
157 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cmd.rs:158:10
    |
158 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd.rs:159:10
    |
159 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd.rs:160:10
    |
160 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd.rs:161:10
    |
161 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd.rs:162:10
    |
162 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd.rs:163:10
    |
163 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd.rs:164:10
    |
164 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd.rs:165:10
    |
165 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd.rs:172:10
    |
172 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd.rs:279:10
    |
279 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd.rs:282:10
    |
282 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd.rs:291:10
    |
291 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd.rs:292:10
    |
292 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd.rs:293:10
    |
293 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd.rs:306:10
    |
306 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd.rs:670:10
    |
670 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd.rs:712:10
    |
712 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd.rs:757:10
    |
757 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd.rs:773:10
    |
773 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd.rs:776:10
    |
776 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd.rs:777:10
    |
777 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd.rs:909:10
    |
909 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd.rs:912:10
    |
912 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd.rs:926:10
    |
926 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd.rs:942:10
    |
942 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/cmd.rs:1011:10
     |
1011 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1291:13
     |
1291 | /             if !(cp.is_null() || cp.offset_from(s) as libc::c_long as size_t != wanted) {
1292 | |                 if strncmp(*old_argv.offset(0 as libc::c_int as isize), s, wanted)
1293 | |                     == 0 as libc::c_int
...    |
1297 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1291 ~             if !(cp.is_null() || cp.offset_from(s) as libc::c_long as size_t != wanted) && strncmp(*old_argv.offset(0 as libc::c_int as isize), s, wanted) == 0 as libc::c_int {
1292 +                 break;
1293 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1461:9
     |
1461 | /         if !args.is_null() {
1462 | |             if !((*entry).args.lower != -(1 as libc::c_int)
1463 | |                 && (*args).argc < (*entry).args.lower)
...    |
1484 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1461 ~         if !args.is_null() && !((*entry).args.lower != -(1 as libc::c_int)
1462 +                 && (*args).argc < (*entry).args.lower) {
1463 +             if !((*entry).args.upper != -(1 as libc::c_int)
1464 +                 && (*args).argc > (*entry).args.upper)
1465 +             {
1466 +                 cmd = xcalloc(
1467 +                     1 as libc::c_int as size_t,
1468 +                     ::core::mem::size_of::<cmd>() as libc::c_ulong,
1469 +                 ) as *mut cmd;
1470 +                 (*cmd).entry = entry;
1471 +                 (*cmd).args = args;
1472 +                 if !file.is_null() {
1473 +                     (*cmd).file = xstrdup(file);
1474 +                 }
1475 +                 (*cmd).line = line;
1476 +                 if allocated != 0 {
1477 +                     cmd_free_argv(argc, argv);
1478 +                 }
1479 +                 return cmd;
1480 +             }
1481 +         }
     |

warning: this `if` statement can be collapsed
    --> src/cmd.rs:1462:13
     |
1462 | /             if !((*entry).args.lower != -(1 as libc::c_int)
1463 | |                 && (*args).argc < (*entry).args.lower)
1464 | |             {
1465 | |                 if !((*entry).args.upper != -(1 as libc::c_int)
...    |
1483 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1462 ~             if !((*entry).args.lower != -(1 as libc::c_int)
1463 +                 && (*args).argc < (*entry).args.lower) && !((*entry).args.upper != -(1 as libc::c_int)
1464 +                     && (*args).argc > (*entry).args.upper) {
1465 +                 cmd = xcalloc(
1466 +                     1 as libc::c_int as size_t,
1467 +                     ::core::mem::size_of::<cmd>() as libc::c_ulong,
1468 +                 ) as *mut cmd;
1469 +                 (*cmd).entry = entry;
1470 +                 (*cmd).args = args;
1471 +                 if !file.is_null() {
1472 +                     (*cmd).file = xstrdup(file);
1473 +                 }
1474 +                 (*cmd).line = line;
1475 +                 if allocated != 0 {
1476 +                     cmd_free_argv(argc, argv);
1477 +                 }
1478 +                 return cmd;
1479 +             }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_attach_session.rs:68:10
   |
68 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_attach_session.rs:69:10
   |
69 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_attach_session.rs:70:10
   |
70 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:71:10
   |
71 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:72:10
   |
72 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:73:10
   |
73 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:74:10
   |
74 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_attach_session.rs:75:10
   |
75 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_attach_session.rs:76:10
   |
76 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_attach_session.rs:77:10
   |
77 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:78:10
   |
78 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:79:10
   |
79 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:80:10
   |
80 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_attach_session.rs:87:10
   |
87 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_attach_session.rs:194:10
    |
194 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_attach_session.rs:197:10
    |
197 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_attach_session.rs:206:10
    |
206 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_attach_session.rs:207:10
    |
207 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_attach_session.rs:208:10
    |
208 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_attach_session.rs:221:10
    |
221 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_attach_session.rs:585:10
    |
585 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_attach_session.rs:627:10
    |
627 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_attach_session.rs:672:10
    |
672 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_attach_session.rs:688:10
    |
688 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_attach_session.rs:691:10
    |
691 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_attach_session.rs:692:10
    |
692 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_attach_session.rs:824:10
    |
824 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_attach_session.rs:827:10
    |
827 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_attach_session.rs:841:10
    |
841 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_attach_session.rs:857:10
    |
857 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_attach_session.rs:926:10
    |
926 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `msgtype` should have an upper camel case name
   --> src/cmd_attach_session.rs:950:10
    |
950 | pub type msgtype = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_bind_key.rs:35:10
   |
35 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_bind_key.rs:36:10
   |
36 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_bind_key.rs:37:10
   |
37 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:38:10
   |
38 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:39:10
   |
39 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:40:10
   |
40 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:41:10
   |
41 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_bind_key.rs:42:10
   |
42 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_bind_key.rs:43:10
   |
43 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_bind_key.rs:44:10
   |
44 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:45:10
   |
45 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:46:10
   |
46 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:47:10
   |
47 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_bind_key.rs:54:10
   |
54 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_bind_key.rs:161:10
    |
161 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_bind_key.rs:164:10
    |
164 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_bind_key.rs:173:10
    |
173 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_bind_key.rs:174:10
    |
174 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_bind_key.rs:175:10
    |
175 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_bind_key.rs:188:10
    |
188 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_bind_key.rs:552:10
    |
552 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_bind_key.rs:594:10
    |
594 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_bind_key.rs:639:10
    |
639 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_bind_key.rs:655:10
    |
655 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_bind_key.rs:658:10
    |
658 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_bind_key.rs:659:10
    |
659 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_bind_key.rs:791:10
    |
791 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_bind_key.rs:794:10
    |
794 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_bind_key.rs:808:10
    |
808 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_bind_key.rs:824:10
    |
824 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_bind_key.rs:893:10
    |
893 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_break_pane.rs:61:10
   |
61 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_break_pane.rs:62:10
   |
62 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_break_pane.rs:63:10
   |
63 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:64:10
   |
64 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:65:10
   |
65 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:66:10
   |
66 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:67:10
   |
67 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_break_pane.rs:68:10
   |
68 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_break_pane.rs:69:10
   |
69 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_break_pane.rs:70:10
   |
70 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:71:10
   |
71 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:72:10
   |
72 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:73:10
   |
73 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_break_pane.rs:80:10
   |
80 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_break_pane.rs:187:10
    |
187 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_break_pane.rs:190:10
    |
190 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_break_pane.rs:199:10
    |
199 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_break_pane.rs:200:10
    |
200 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_break_pane.rs:201:10
    |
201 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_break_pane.rs:214:10
    |
214 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_break_pane.rs:578:10
    |
578 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_break_pane.rs:620:10
    |
620 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_break_pane.rs:665:10
    |
665 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_break_pane.rs:681:10
    |
681 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_break_pane.rs:684:10
    |
684 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_break_pane.rs:685:10
    |
685 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_break_pane.rs:817:10
    |
817 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_break_pane.rs:820:10
    |
820 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_break_pane.rs:834:10
    |
834 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_break_pane.rs:850:10
    |
850 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_break_pane.rs:919:10
    |
919 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_capture_pane.rs:72:10
   |
72 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_capture_pane.rs:73:10
   |
73 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_capture_pane.rs:74:10
   |
74 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:75:10
   |
75 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:76:10
   |
76 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:77:10
   |
77 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:78:10
   |
78 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:79:10
   |
79 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_capture_pane.rs:80:10
   |
80 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_capture_pane.rs:81:10
   |
81 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_capture_pane.rs:82:10
   |
82 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:83:10
   |
83 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:84:10
   |
84 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:85:10
   |
85 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:86:10
   |
86 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_capture_pane.rs:93:10
   |
93 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_capture_pane.rs:200:10
    |
200 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_capture_pane.rs:203:10
    |
203 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_capture_pane.rs:212:10
    |
212 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_capture_pane.rs:213:10
    |
213 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_capture_pane.rs:214:10
    |
214 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_capture_pane.rs:227:10
    |
227 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_capture_pane.rs:591:10
    |
591 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_capture_pane.rs:633:10
    |
633 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_capture_pane.rs:678:10
    |
678 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_capture_pane.rs:694:10
    |
694 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_capture_pane.rs:697:10
    |
697 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_capture_pane.rs:698:10
    |
698 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_capture_pane.rs:830:10
    |
830 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_capture_pane.rs:833:10
    |
833 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_capture_pane.rs:847:10
    |
847 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_capture_pane.rs:863:10
    |
863 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_capture_pane.rs:932:10
    |
932 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_choose_tree.rs:29:10
   |
29 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_choose_tree.rs:30:10
   |
30 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_choose_tree.rs:31:10
   |
31 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:32:10
   |
32 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:33:10
   |
33 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:34:10
   |
34 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:35:10
   |
35 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_choose_tree.rs:36:10
   |
36 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_choose_tree.rs:37:10
   |
37 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_choose_tree.rs:38:10
   |
38 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:39:10
   |
39 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:40:10
   |
40 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:41:10
   |
41 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_choose_tree.rs:48:10
   |
48 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_choose_tree.rs:155:10
    |
155 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_choose_tree.rs:158:10
    |
158 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_choose_tree.rs:167:10
    |
167 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_choose_tree.rs:168:10
    |
168 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_choose_tree.rs:169:10
    |
169 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_choose_tree.rs:182:10
    |
182 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_choose_tree.rs:546:10
    |
546 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_choose_tree.rs:588:10
    |
588 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_choose_tree.rs:633:10
    |
633 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_choose_tree.rs:649:10
    |
649 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_choose_tree.rs:652:10
    |
652 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_choose_tree.rs:653:10
    |
653 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_choose_tree.rs:785:10
    |
785 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_choose_tree.rs:788:10
    |
788 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_choose_tree.rs:802:10
    |
802 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_choose_tree.rs:818:10
    |
818 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_choose_tree.rs:887:10
    |
887 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_command_prompt.rs:76:10
   |
76 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_command_prompt.rs:77:10
   |
77 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_command_prompt.rs:78:10
   |
78 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:79:10
   |
79 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:80:10
   |
80 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:81:10
   |
81 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:82:10
   |
82 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_command_prompt.rs:83:10
   |
83 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_command_prompt.rs:84:10
   |
84 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_command_prompt.rs:85:10
   |
85 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:86:10
   |
86 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:87:10
   |
87 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:88:10
   |
88 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_command_prompt.rs:95:10
   |
95 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_command_prompt.rs:202:10
    |
202 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_command_prompt.rs:205:10
    |
205 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_command_prompt.rs:214:10
    |
214 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_command_prompt.rs:215:10
    |
215 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_command_prompt.rs:216:10
    |
216 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_command_prompt.rs:229:10
    |
229 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_command_prompt.rs:593:10
    |
593 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_command_prompt.rs:635:10
    |
635 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_command_prompt.rs:680:10
    |
680 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_command_prompt.rs:696:10
    |
696 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_command_prompt.rs:699:10
    |
699 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_command_prompt.rs:700:10
    |
700 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_command_prompt.rs:832:10
    |
832 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_command_prompt.rs:835:10
    |
835 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_command_prompt.rs:849:10
    |
849 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_command_prompt.rs:865:10
    |
865 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_command_prompt.rs:934:10
    |
934 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_confirm_before.rs:65:10
   |
65 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_confirm_before.rs:66:10
   |
66 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_confirm_before.rs:67:10
   |
67 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:68:10
   |
68 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:69:10
   |
69 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:70:10
   |
70 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:71:10
   |
71 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_confirm_before.rs:72:10
   |
72 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_confirm_before.rs:73:10
   |
73 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_confirm_before.rs:74:10
   |
74 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:75:10
   |
75 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:76:10
   |
76 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:77:10
   |
77 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_confirm_before.rs:84:10
   |
84 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_confirm_before.rs:191:10
    |
191 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_confirm_before.rs:194:10
    |
194 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_confirm_before.rs:203:10
    |
203 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_confirm_before.rs:204:10
    |
204 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_confirm_before.rs:205:10
    |
205 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_confirm_before.rs:218:10
    |
218 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_confirm_before.rs:582:10
    |
582 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_confirm_before.rs:624:10
    |
624 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_confirm_before.rs:669:10
    |
669 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_confirm_before.rs:685:10
    |
685 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_confirm_before.rs:688:10
    |
688 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_confirm_before.rs:689:10
    |
689 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_confirm_before.rs:821:10
    |
821 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_confirm_before.rs:824:10
    |
824 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_confirm_before.rs:838:10
    |
838 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_confirm_before.rs:854:10
    |
854 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_confirm_before.rs:923:10
    |
923 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_copy_mode.rs:34:10
   |
34 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_copy_mode.rs:35:10
   |
35 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_copy_mode.rs:36:10
   |
36 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:37:10
   |
37 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:38:10
   |
38 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:39:10
   |
39 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:40:10
   |
40 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_copy_mode.rs:41:10
   |
41 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_copy_mode.rs:42:10
   |
42 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_copy_mode.rs:43:10
   |
43 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:44:10
   |
44 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:45:10
   |
45 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:46:10
   |
46 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_copy_mode.rs:53:10
   |
53 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_copy_mode.rs:160:10
    |
160 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_copy_mode.rs:163:10
    |
163 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_copy_mode.rs:172:10
    |
172 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_copy_mode.rs:173:10
    |
173 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_copy_mode.rs:174:10
    |
174 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_copy_mode.rs:187:10
    |
187 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_copy_mode.rs:551:10
    |
551 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_copy_mode.rs:593:10
    |
593 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_copy_mode.rs:638:10
    |
638 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_copy_mode.rs:654:10
    |
654 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_copy_mode.rs:657:10
    |
657 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_copy_mode.rs:658:10
    |
658 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_copy_mode.rs:790:10
    |
790 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_copy_mode.rs:793:10
    |
793 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_copy_mode.rs:807:10
    |
807 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_copy_mode.rs:823:10
    |
823 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_copy_mode.rs:892:10
    |
892 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_detach_client.rs:28:10
   |
28 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_detach_client.rs:29:10
   |
29 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_detach_client.rs:30:10
   |
30 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:31:10
   |
31 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:32:10
   |
32 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:33:10
   |
33 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:34:10
   |
34 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_detach_client.rs:35:10
   |
35 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_detach_client.rs:36:10
   |
36 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_detach_client.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:38:10
   |
38 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:39:10
   |
39 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:40:10
   |
40 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_detach_client.rs:47:10
   |
47 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_detach_client.rs:154:10
    |
154 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_detach_client.rs:157:10
    |
157 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_detach_client.rs:166:10
    |
166 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_detach_client.rs:167:10
    |
167 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_detach_client.rs:168:10
    |
168 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_detach_client.rs:181:10
    |
181 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_detach_client.rs:545:10
    |
545 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_detach_client.rs:587:10
    |
587 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_detach_client.rs:632:10
    |
632 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_detach_client.rs:648:10
    |
648 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_detach_client.rs:651:10
    |
651 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_detach_client.rs:652:10
    |
652 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_detach_client.rs:784:10
    |
784 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_detach_client.rs:787:10
    |
787 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_detach_client.rs:801:10
    |
801 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_detach_client.rs:817:10
    |
817 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_detach_client.rs:886:10
    |
886 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `msgtype` should have an upper camel case name
   --> src/cmd_detach_client.rs:910:10
    |
910 | pub type msgtype = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_display_message.rs:49:10
   |
49 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_display_message.rs:50:10
   |
50 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_display_message.rs:51:10
   |
51 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_display_message.rs:52:10
   |
52 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_display_message.rs:53:10
   |
53 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_display_message.rs:54:10
   |
54 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_display_message.rs:55:10
   |
55 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_display_message.rs:56:10
   |
56 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_display_message.rs:57:10
   |
57 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_display_message.rs:58:10
   |
58 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_display_message.rs:59:10
   |
59 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_display_message.rs:60:10
   |
60 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_display_message.rs:61:10
   |
61 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_display_message.rs:68:10
   |
68 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_display_message.rs:175:10
    |
175 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_display_message.rs:178:10
    |
178 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_display_message.rs:187:10
    |
187 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_display_message.rs:188:10
    |
188 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_display_message.rs:189:10
    |
189 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_display_message.rs:202:10
    |
202 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_display_message.rs:566:10
    |
566 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_display_message.rs:608:10
    |
608 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_display_message.rs:653:10
    |
653 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_display_message.rs:669:10
    |
669 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_display_message.rs:672:10
    |
672 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_display_message.rs:673:10
    |
673 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_display_message.rs:805:10
    |
805 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_display_message.rs:808:10
    |
808 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_display_message.rs:822:10
    |
822 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_display_message.rs:838:10
    |
838 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_display_message.rs:907:10
    |
907 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_display_panes.rs:65:10
   |
65 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_display_panes.rs:66:10
   |
66 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_display_panes.rs:67:10
   |
67 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:68:10
   |
68 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:69:10
   |
69 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:70:10
   |
70 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:71:10
   |
71 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_display_panes.rs:72:10
   |
72 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_display_panes.rs:73:10
   |
73 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_display_panes.rs:74:10
   |
74 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:75:10
   |
75 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:76:10
   |
76 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:77:10
   |
77 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_display_panes.rs:84:10
   |
84 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_display_panes.rs:191:10
    |
191 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_display_panes.rs:194:10
    |
194 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_display_panes.rs:203:10
    |
203 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_display_panes.rs:204:10
    |
204 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_display_panes.rs:205:10
    |
205 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_display_panes.rs:218:10
    |
218 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_display_panes.rs:582:10
    |
582 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_display_panes.rs:624:10
    |
624 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_display_panes.rs:669:10
    |
669 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_display_panes.rs:685:10
    |
685 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_display_panes.rs:688:10
    |
688 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_display_panes.rs:689:10
    |
689 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_display_panes.rs:821:10
    |
821 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_display_panes.rs:824:10
    |
824 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_display_panes.rs:838:10
    |
838 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_display_panes.rs:854:10
    |
854 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_display_panes.rs:923:10
    |
923 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/cmd_find.rs:105:10
    |
105 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/cmd_find.rs:106:10
    |
106 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/cmd_find.rs:107:10
    |
107 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/cmd_find.rs:108:10
    |
108 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/cmd_find.rs:109:10
    |
109 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cmd_find.rs:110:10
    |
110 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd_find.rs:111:10
    |
111 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd_find.rs:112:10
    |
112 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd_find.rs:113:10
    |
113 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd_find.rs:114:10
    |
114 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd_find.rs:115:10
    |
115 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd_find.rs:116:10
    |
116 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd_find.rs:117:10
    |
117 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_find.rs:124:10
    |
124 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_find.rs:231:10
    |
231 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_find.rs:234:10
    |
234 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_find.rs:243:10
    |
243 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_find.rs:244:10
    |
244 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_find.rs:245:10
    |
245 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_find.rs:258:10
    |
258 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_find.rs:622:10
    |
622 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_find.rs:664:10
    |
664 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_find.rs:709:10
    |
709 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_find.rs:725:10
    |
725 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_find.rs:728:10
    |
728 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_find.rs:729:10
    |
729 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_find.rs:861:10
    |
861 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_find.rs:864:10
    |
864 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_find.rs:878:10
    |
878 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_find.rs:894:10
    |
894 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_find.rs:963:10
    |
963 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:1174:9
     |
1174 | /         if !((*c_loop).session).is_null() {
1175 | |             if !(!s.is_null() && (*c_loop).session != s) {
1176 | |                 if cmd_find_client_better(c_loop, c) != 0 {
1177 | |                     c = c_loop;
...    |
1180 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1174 ~         if !((*c_loop).session).is_null() && !(!s.is_null() && (*c_loop).session != s) {
1175 +             if cmd_find_client_better(c_loop, c) != 0 {
1176 +                 c = c_loop;
1177 +             }
1178 +         }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:1175:13
     |
1175 | /             if !(!s.is_null() && (*c_loop).session != s) {
1176 | |                 if cmd_find_client_better(c_loop, c) != 0 {
1177 | |                     c = c_loop;
1178 | |                 }
1179 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1175 ~             if !(!s.is_null() && (*c_loop).session != s) && cmd_find_client_better(c_loop, c) != 0 {
1176 +                 c = c_loop;
1177 +             }
     |

warning: this `if` statement can be collapsed
    --> src/cmd_find.rs:2647:17
     |
2647 | /                 if !(strncmp(
2648 | |                     (*c).ttyname,
2649 | |                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 | |                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
...    |
2666 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2647 ~                 if !(strncmp(
2648 +                     (*c).ttyname,
2649 +                     b"/dev/\0" as *const u8 as *const libc::c_char,
2650 +                     (::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
2651 +                         .wrapping_sub(1 as libc::c_int as libc::c_ulong),
2652 +                 ) != 0 as libc::c_int) && strcmp(
2653 +                         copy,
2654 +                         ((*c).ttyname)
2655 +                             .offset(
2656 +                                 ::core::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong
2657 +                                     as isize,
2658 +                             )
2659 +                             .offset(-(1 as libc::c_int as isize)),
2660 +                     ) == 0 as libc::c_int {
2661 +                     break;
2662 +                 }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_find_window.rs:38:10
   |
38 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_find_window.rs:39:10
   |
39 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_find_window.rs:40:10
   |
40 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_find_window.rs:41:10
   |
41 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_find_window.rs:42:10
   |
42 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_find_window.rs:43:10
   |
43 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_find_window.rs:44:10
   |
44 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_find_window.rs:45:10
   |
45 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_find_window.rs:46:10
   |
46 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_find_window.rs:47:10
   |
47 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_find_window.rs:48:10
   |
48 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_find_window.rs:49:10
   |
49 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_find_window.rs:50:10
   |
50 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_find_window.rs:57:10
   |
57 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_find_window.rs:164:10
    |
164 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_find_window.rs:167:10
    |
167 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_find_window.rs:176:10
    |
176 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_find_window.rs:177:10
    |
177 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_find_window.rs:178:10
    |
178 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_find_window.rs:191:10
    |
191 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_find_window.rs:555:10
    |
555 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_find_window.rs:597:10
    |
597 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_find_window.rs:642:10
    |
642 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_find_window.rs:658:10
    |
658 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_find_window.rs:661:10
    |
661 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_find_window.rs:662:10
    |
662 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_find_window.rs:794:10
    |
794 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_find_window.rs:797:10
    |
797 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_find_window.rs:811:10
    |
811 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_find_window.rs:827:10
    |
827 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_find_window.rs:896:10
    |
896 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_if_shell.rs:66:10
   |
66 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_if_shell.rs:67:10
   |
67 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_if_shell.rs:68:10
   |
68 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:69:10
   |
69 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:70:10
   |
70 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:71:10
   |
71 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:72:10
   |
72 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_if_shell.rs:73:10
   |
73 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_if_shell.rs:74:10
   |
74 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_if_shell.rs:75:10
   |
75 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:76:10
   |
76 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:77:10
   |
77 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:78:10
   |
78 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_if_shell.rs:85:10
   |
85 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:192:10
    |
192 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:195:10
    |
195 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_if_shell.rs:204:10
    |
204 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_if_shell.rs:205:10
    |
205 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_if_shell.rs:206:10
    |
206 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_if_shell.rs:219:10
    |
219 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_if_shell.rs:583:10
    |
583 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_if_shell.rs:625:10
    |
625 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_if_shell.rs:670:10
    |
670 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_if_shell.rs:686:10
    |
686 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:689:10
    |
689 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:690:10
    |
690 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:822:10
    |
822 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_if_shell.rs:825:10
    |
825 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_if_shell.rs:839:10
    |
839 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_if_shell.rs:855:10
    |
855 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_if_shell.rs:924:10
    |
924 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `job_free_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:970:10
    |
970 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:971:10
    |
971 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
   --> src/cmd_if_shell.rs:972:10
    |
972 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_35` should have an upper camel case name
   --> src/cmd_if_shell.rs:973:10
    |
973 | pub type C2RustUnnamed_35 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_join_pane.rs:48:10
   |
48 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_join_pane.rs:49:10
   |
49 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_join_pane.rs:50:10
   |
50 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:51:10
   |
51 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:52:10
   |
52 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:53:10
   |
53 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:54:10
   |
54 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_join_pane.rs:55:10
   |
55 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_join_pane.rs:56:10
   |
56 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_join_pane.rs:57:10
   |
57 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:58:10
   |
58 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:59:10
   |
59 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:60:10
   |
60 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_join_pane.rs:67:10
   |
67 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_join_pane.rs:174:10
    |
174 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_join_pane.rs:177:10
    |
177 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_join_pane.rs:186:10
    |
186 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_join_pane.rs:187:10
    |
187 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_join_pane.rs:188:10
    |
188 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_join_pane.rs:201:10
    |
201 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_join_pane.rs:565:10
    |
565 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_join_pane.rs:607:10
    |
607 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_join_pane.rs:652:10
    |
652 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_join_pane.rs:668:10
    |
668 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_join_pane.rs:671:10
    |
671 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_join_pane.rs:672:10
    |
672 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_join_pane.rs:804:10
    |
804 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_join_pane.rs:807:10
    |
807 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_join_pane.rs:821:10
    |
821 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_join_pane.rs:837:10
    |
837 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_join_pane.rs:906:10
    |
906 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_kill_pane.rs:23:10
   |
23 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_kill_pane.rs:24:10
   |
24 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_kill_pane.rs:25:10
   |
25 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:26:10
   |
26 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:27:10
   |
27 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:28:10
   |
28 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:29:10
   |
29 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_kill_pane.rs:30:10
   |
30 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_kill_pane.rs:31:10
   |
31 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_kill_pane.rs:32:10
   |
32 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:33:10
   |
33 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:34:10
   |
34 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:35:10
   |
35 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_kill_pane.rs:42:10
   |
42 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_kill_pane.rs:149:10
    |
149 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_kill_pane.rs:152:10
    |
152 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_kill_pane.rs:161:10
    |
161 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_kill_pane.rs:162:10
    |
162 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_kill_pane.rs:163:10
    |
163 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_kill_pane.rs:176:10
    |
176 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_kill_pane.rs:540:10
    |
540 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_kill_pane.rs:582:10
    |
582 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_kill_pane.rs:627:10
    |
627 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_kill_pane.rs:643:10
    |
643 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_kill_pane.rs:646:10
    |
646 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_kill_pane.rs:647:10
    |
647 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_kill_pane.rs:779:10
    |
779 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_kill_pane.rs:782:10
    |
782 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_kill_pane.rs:796:10
    |
796 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_kill_pane.rs:812:10
    |
812 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_kill_pane.rs:881:10
    |
881 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_kill_server.rs:19:10
   |
19 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_kill_server.rs:20:10
   |
20 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_kill_server.rs:21:10
   |
21 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:22:10
   |
22 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:23:10
   |
23 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:24:10
   |
24 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:25:10
   |
25 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_kill_server.rs:26:10
   |
26 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_kill_server.rs:27:10
   |
27 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_kill_server.rs:28:10
   |
28 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:29:10
   |
29 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:30:10
   |
30 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:31:10
   |
31 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_kill_server.rs:38:10
   |
38 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_kill_server.rs:145:10
    |
145 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_kill_server.rs:148:10
    |
148 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_kill_server.rs:157:10
    |
157 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_kill_server.rs:158:10
    |
158 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_kill_server.rs:159:10
    |
159 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_kill_server.rs:172:10
    |
172 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_kill_server.rs:536:10
    |
536 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_kill_server.rs:578:10
    |
578 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_kill_server.rs:623:10
    |
623 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_kill_server.rs:639:10
    |
639 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_kill_server.rs:642:10
    |
642 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_kill_server.rs:643:10
    |
643 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_kill_server.rs:775:10
    |
775 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_kill_server.rs:778:10
    |
778 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_kill_server.rs:792:10
    |
792 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_kill_server.rs:808:10
    |
808 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_kill_server.rs:877:10
    |
877 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_kill_session.rs:26:10
   |
26 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_kill_session.rs:27:10
   |
27 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_kill_session.rs:28:10
   |
28 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:29:10
   |
29 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:30:10
   |
30 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:31:10
   |
31 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:32:10
   |
32 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_kill_session.rs:33:10
   |
33 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_kill_session.rs:34:10
   |
34 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_kill_session.rs:35:10
   |
35 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:36:10
   |
36 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:37:10
   |
37 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:38:10
   |
38 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_kill_session.rs:45:10
   |
45 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_kill_session.rs:152:10
    |
152 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_kill_session.rs:155:10
    |
155 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_kill_session.rs:164:10
    |
164 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_kill_session.rs:165:10
    |
165 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_kill_session.rs:166:10
    |
166 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_kill_session.rs:179:10
    |
179 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_kill_session.rs:543:10
    |
543 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_kill_session.rs:585:10
    |
585 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_kill_session.rs:630:10
    |
630 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_kill_session.rs:646:10
    |
646 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_kill_session.rs:649:10
    |
649 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_kill_session.rs:650:10
    |
650 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_kill_session.rs:782:10
    |
782 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_kill_session.rs:785:10
    |
785 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_kill_session.rs:799:10
    |
799 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_kill_session.rs:815:10
    |
815 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_kill_session.rs:884:10
    |
884 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_kill_window.rs:25:10
   |
25 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_kill_window.rs:26:10
   |
26 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_kill_window.rs:27:10
   |
27 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:28:10
   |
28 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:29:10
   |
29 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:30:10
   |
30 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:31:10
   |
31 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_kill_window.rs:32:10
   |
32 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_kill_window.rs:33:10
   |
33 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_kill_window.rs:34:10
   |
34 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:35:10
   |
35 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:36:10
   |
36 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:37:10
   |
37 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_kill_window.rs:44:10
   |
44 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_kill_window.rs:151:10
    |
151 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_kill_window.rs:154:10
    |
154 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_kill_window.rs:163:10
    |
163 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_kill_window.rs:164:10
    |
164 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_kill_window.rs:165:10
    |
165 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_kill_window.rs:178:10
    |
178 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_kill_window.rs:542:10
    |
542 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_kill_window.rs:584:10
    |
584 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_kill_window.rs:629:10
    |
629 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_kill_window.rs:645:10
    |
645 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_kill_window.rs:648:10
    |
648 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_kill_window.rs:649:10
    |
649 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_kill_window.rs:781:10
    |
781 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_kill_window.rs:784:10
    |
784 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_kill_window.rs:798:10
    |
798 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_kill_window.rs:814:10
    |
814 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_kill_window.rs:883:10
    |
883 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list.rs:40:10
   |
40 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list.rs:41:10
   |
41 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list.rs:42:10
   |
42 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list.rs:43:10
   |
43 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list.rs:44:10
   |
44 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list.rs:45:10
   |
45 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list.rs:46:10
   |
46 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list.rs:47:10
   |
47 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list.rs:48:10
   |
48 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list.rs:49:10
   |
49 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list.rs:50:10
   |
50 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list.rs:51:10
   |
51 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list.rs:52:10
   |
52 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list.rs:59:10
   |
59 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list.rs:166:10
    |
166 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list.rs:169:10
    |
169 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list.rs:178:10
    |
178 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list.rs:179:10
    |
179 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list.rs:180:10
    |
180 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list.rs:193:10
    |
193 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list.rs:557:10
    |
557 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list.rs:599:10
    |
599 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list.rs:644:10
    |
644 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list.rs:660:10
    |
660 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list.rs:663:10
    |
663 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list.rs:664:10
    |
664 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list.rs:796:10
    |
796 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list.rs:799:10
    |
799 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list.rs:813:10
    |
813 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list.rs:829:10
    |
829 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list.rs:898:10
    |
898 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_buffers.rs:31:10
   |
31 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_buffers.rs:32:10
   |
32 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_buffers.rs:33:10
   |
33 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:34:10
   |
34 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:35:10
   |
35 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:36:10
   |
36 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:37:10
   |
37 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_buffers.rs:38:10
   |
38 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_buffers.rs:39:10
   |
39 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_buffers.rs:40:10
   |
40 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:41:10
   |
41 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:42:10
   |
42 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:43:10
   |
43 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_buffers.rs:50:10
   |
50 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_buffers.rs:157:10
    |
157 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_buffers.rs:160:10
    |
160 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_buffers.rs:169:10
    |
169 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_buffers.rs:170:10
    |
170 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_buffers.rs:171:10
    |
171 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_buffers.rs:184:10
    |
184 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_buffers.rs:548:10
    |
548 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_buffers.rs:590:10
    |
590 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_buffers.rs:635:10
    |
635 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_buffers.rs:651:10
    |
651 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_buffers.rs:654:10
    |
654 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_buffers.rs:655:10
    |
655 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_buffers.rs:787:10
    |
787 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_buffers.rs:790:10
    |
790 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_buffers.rs:804:10
    |
804 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_buffers.rs:820:10
    |
820 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_buffers.rs:889:10
    |
889 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_clients.rs:43:10
   |
43 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_clients.rs:44:10
   |
44 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_clients.rs:45:10
   |
45 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:46:10
   |
46 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:47:10
   |
47 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:48:10
   |
48 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:49:10
   |
49 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_clients.rs:50:10
   |
50 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_clients.rs:51:10
   |
51 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_clients.rs:52:10
   |
52 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:53:10
   |
53 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:54:10
   |
54 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:55:10
   |
55 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_clients.rs:62:10
   |
62 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_clients.rs:169:10
    |
169 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_clients.rs:172:10
    |
172 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_clients.rs:181:10
    |
181 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_clients.rs:182:10
    |
182 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_clients.rs:183:10
    |
183 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_clients.rs:196:10
    |
196 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_clients.rs:560:10
    |
560 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_clients.rs:602:10
    |
602 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_clients.rs:647:10
    |
647 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_clients.rs:663:10
    |
663 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_clients.rs:666:10
    |
666 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_clients.rs:667:10
    |
667 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_clients.rs:799:10
    |
799 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_clients.rs:802:10
    |
802 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_clients.rs:816:10
    |
816 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_clients.rs:832:10
    |
832 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_clients.rs:901:10
    |
901 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_keys.rs:65:10
   |
65 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_keys.rs:66:10
   |
66 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_keys.rs:67:10
   |
67 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:68:10
   |
68 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:69:10
   |
69 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:70:10
   |
70 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:71:10
   |
71 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_keys.rs:72:10
   |
72 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_keys.rs:73:10
   |
73 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_keys.rs:74:10
   |
74 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:75:10
   |
75 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:76:10
   |
76 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:77:10
   |
77 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_keys.rs:84:10
   |
84 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_keys.rs:191:10
    |
191 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_keys.rs:194:10
    |
194 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_keys.rs:203:10
    |
203 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_keys.rs:204:10
    |
204 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_keys.rs:205:10
    |
205 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_keys.rs:218:10
    |
218 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_keys.rs:582:10
    |
582 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_keys.rs:624:10
    |
624 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_keys.rs:669:10
    |
669 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_keys.rs:685:10
    |
685 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_keys.rs:688:10
    |
688 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_keys.rs:689:10
    |
689 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_keys.rs:821:10
    |
821 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_keys.rs:824:10
    |
824 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_keys.rs:838:10
    |
838 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_keys.rs:854:10
    |
854 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_keys.rs:923:10
    |
923 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_panes.rs:47:10
   |
47 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_panes.rs:48:10
   |
48 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_panes.rs:49:10
   |
49 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:50:10
   |
50 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:51:10
   |
51 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:52:10
   |
52 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:53:10
   |
53 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_panes.rs:54:10
   |
54 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_panes.rs:55:10
   |
55 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_panes.rs:56:10
   |
56 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:57:10
   |
57 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:58:10
   |
58 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:59:10
   |
59 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_panes.rs:66:10
   |
66 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_panes.rs:173:10
    |
173 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_panes.rs:176:10
    |
176 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_panes.rs:185:10
    |
185 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_panes.rs:186:10
    |
186 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_panes.rs:187:10
    |
187 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_panes.rs:200:10
    |
200 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_panes.rs:564:10
    |
564 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_panes.rs:606:10
    |
606 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_panes.rs:651:10
    |
651 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_panes.rs:667:10
    |
667 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_panes.rs:670:10
    |
670 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_panes.rs:671:10
    |
671 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_panes.rs:803:10
    |
803 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_panes.rs:806:10
    |
806 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_panes.rs:820:10
    |
820 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_panes.rs:836:10
    |
836 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_panes.rs:905:10
    |
905 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_sessions.rs:44:10
   |
44 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_sessions.rs:45:10
   |
45 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_sessions.rs:46:10
   |
46 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:47:10
   |
47 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:48:10
   |
48 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:49:10
   |
49 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:50:10
   |
50 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_sessions.rs:51:10
   |
51 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_sessions.rs:52:10
   |
52 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_sessions.rs:53:10
   |
53 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:54:10
   |
54 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:55:10
   |
55 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:56:10
   |
56 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_sessions.rs:63:10
   |
63 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_sessions.rs:170:10
    |
170 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_sessions.rs:173:10
    |
173 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_sessions.rs:182:10
    |
182 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_sessions.rs:183:10
    |
183 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_sessions.rs:184:10
    |
184 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_sessions.rs:197:10
    |
197 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_sessions.rs:561:10
    |
561 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_sessions.rs:603:10
    |
603 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_sessions.rs:648:10
    |
648 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_sessions.rs:664:10
    |
664 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_sessions.rs:667:10
    |
667 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_sessions.rs:668:10
    |
668 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_sessions.rs:800:10
    |
800 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_sessions.rs:803:10
    |
803 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_sessions.rs:817:10
    |
817 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_sessions.rs:833:10
    |
833 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_sessions.rs:902:10
    |
902 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_list_windows.rs:47:10
   |
47 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_list_windows.rs:48:10
   |
48 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_list_windows.rs:49:10
   |
49 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:50:10
   |
50 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:51:10
   |
51 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:52:10
   |
52 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:53:10
   |
53 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_list_windows.rs:54:10
   |
54 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_list_windows.rs:55:10
   |
55 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_list_windows.rs:56:10
   |
56 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:57:10
   |
57 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:58:10
   |
58 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:59:10
   |
59 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_list_windows.rs:66:10
   |
66 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_list_windows.rs:173:10
    |
173 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_list_windows.rs:176:10
    |
176 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_list_windows.rs:185:10
    |
185 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_list_windows.rs:186:10
    |
186 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_list_windows.rs:187:10
    |
187 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_list_windows.rs:200:10
    |
200 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_list_windows.rs:564:10
    |
564 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_list_windows.rs:606:10
    |
606 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_list_windows.rs:651:10
    |
651 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_list_windows.rs:667:10
    |
667 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_list_windows.rs:670:10
    |
670 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_list_windows.rs:671:10
    |
671 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_list_windows.rs:803:10
    |
803 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_list_windows.rs:806:10
    |
806 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_list_windows.rs:820:10
    |
820 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_list_windows.rs:836:10
    |
836 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_list_windows.rs:905:10
    |
905 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_load_buffer.rs:69:10
   |
69 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_load_buffer.rs:70:10
   |
70 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_load_buffer.rs:71:10
   |
71 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:72:10
   |
72 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__off_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:73:10
   |
73 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:74:10
   |
74 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:75:10
   |
75 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:76:10
   |
76 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:77:10
   |
77 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:78:10
   |
78 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_load_buffer.rs:79:10
   |
79 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_load_buffer.rs:80:10
   |
80 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_load_buffer.rs:81:10
   |
81 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:82:10
   |
82 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:83:10
   |
83 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:84:10
   |
84 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_load_buffer.rs:85:10
   |
85 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:125:10
    |
125 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:127:10
    |
127 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_load_buffer.rs:234:10
    |
234 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_load_buffer.rs:237:10
    |
237 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:246:10
    |
246 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:247:10
    |
247 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:248:10
    |
248 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_load_buffer.rs:261:10
    |
261 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_load_buffer.rs:625:10
    |
625 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_load_buffer.rs:667:10
    |
667 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_load_buffer.rs:712:10
    |
712 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_load_buffer.rs:728:10
    |
728 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_load_buffer.rs:731:10
    |
731 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_load_buffer.rs:732:10
    |
732 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_load_buffer.rs:864:10
    |
864 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_load_buffer.rs:867:10
    |
867 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_load_buffer.rs:881:10
    |
881 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_load_buffer.rs:897:10
    |
897 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_load_buffer.rs:966:10
    |
966 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_lock_server.rs:27:10
   |
27 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_lock_server.rs:28:10
   |
28 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_lock_server.rs:29:10
   |
29 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:30:10
   |
30 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:31:10
   |
31 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:32:10
   |
32 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:33:10
   |
33 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_lock_server.rs:34:10
   |
34 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_lock_server.rs:35:10
   |
35 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_lock_server.rs:36:10
   |
36 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:37:10
   |
37 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:38:10
   |
38 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:39:10
   |
39 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_lock_server.rs:46:10
   |
46 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_lock_server.rs:153:10
    |
153 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_lock_server.rs:156:10
    |
156 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_lock_server.rs:165:10
    |
165 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_lock_server.rs:166:10
    |
166 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_lock_server.rs:167:10
    |
167 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_lock_server.rs:180:10
    |
180 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_lock_server.rs:544:10
    |
544 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_lock_server.rs:586:10
    |
586 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_lock_server.rs:631:10
    |
631 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_lock_server.rs:647:10
    |
647 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_lock_server.rs:650:10
    |
650 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_lock_server.rs:651:10
    |
651 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_lock_server.rs:783:10
    |
783 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_lock_server.rs:786:10
    |
786 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_lock_server.rs:800:10
    |
800 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_lock_server.rs:816:10
    |
816 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_lock_server.rs:885:10
    |
885 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_move_window.rs:43:10
   |
43 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_move_window.rs:44:10
   |
44 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_move_window.rs:45:10
   |
45 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_move_window.rs:46:10
   |
46 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_move_window.rs:47:10
   |
47 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_move_window.rs:48:10
   |
48 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_move_window.rs:49:10
   |
49 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_move_window.rs:50:10
   |
50 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_move_window.rs:51:10
   |
51 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_move_window.rs:52:10
   |
52 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_move_window.rs:53:10
   |
53 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_move_window.rs:54:10
   |
54 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_move_window.rs:55:10
   |
55 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_move_window.rs:62:10
   |
62 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_move_window.rs:169:10
    |
169 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_move_window.rs:172:10
    |
172 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_move_window.rs:181:10
    |
181 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_move_window.rs:182:10
    |
182 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_move_window.rs:183:10
    |
183 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_move_window.rs:196:10
    |
196 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_move_window.rs:560:10
    |
560 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_move_window.rs:602:10
    |
602 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_move_window.rs:647:10
    |
647 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_move_window.rs:663:10
    |
663 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_move_window.rs:666:10
    |
666 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_move_window.rs:667:10
    |
667 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_move_window.rs:799:10
    |
799 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_move_window.rs:802:10
    |
802 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_move_window.rs:816:10
    |
816 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_move_window.rs:832:10
    |
832 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_move_window.rs:901:10
    |
901 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/cmd_new_session.rs:116:10
    |
116 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/cmd_new_session.rs:117:10
    |
117 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/cmd_new_session.rs:118:10
    |
118 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/cmd_new_session.rs:119:10
    |
119 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/cmd_new_session.rs:120:10
    |
120 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cmd_new_session.rs:121:10
    |
121 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd_new_session.rs:122:10
    |
122 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd_new_session.rs:123:10
    |
123 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd_new_session.rs:124:10
    |
124 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd_new_session.rs:125:10
    |
125 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd_new_session.rs:126:10
    |
126 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd_new_session.rs:127:10
    |
127 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd_new_session.rs:128:10
    |
128 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_new_session.rs:135:10
    |
135 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_new_session.rs:136:10
    |
136 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_new_session.rs:137:10
    |
137 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_new_session.rs:150:10
    |
150 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_new_session.rs:257:10
    |
257 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_new_session.rs:260:10
    |
260 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_new_session.rs:269:10
    |
269 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_new_session.rs:633:10
    |
633 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_new_session.rs:675:10
    |
675 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_new_session.rs:720:10
    |
720 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_new_session.rs:736:10
    |
736 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_new_session.rs:739:10
    |
739 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_new_session.rs:740:10
    |
740 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_new_session.rs:872:10
    |
872 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_new_session.rs:875:10
    |
875 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_new_session.rs:889:10
    |
889 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_new_session.rs:905:10
    |
905 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_new_session.rs:974:10
    |
974 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `msgtype` should have an upper camel case name
   --> src/cmd_new_session.rs:998:10
    |
998 | pub type msgtype = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_new_window.rs:68:10
   |
68 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_new_window.rs:69:10
   |
69 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_new_window.rs:70:10
   |
70 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_new_window.rs:71:10
   |
71 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_new_window.rs:72:10
   |
72 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_new_window.rs:73:10
   |
73 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_new_window.rs:74:10
   |
74 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_new_window.rs:75:10
   |
75 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_new_window.rs:76:10
   |
76 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_new_window.rs:77:10
   |
77 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_new_window.rs:78:10
   |
78 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_new_window.rs:79:10
   |
79 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_new_window.rs:80:10
   |
80 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_new_window.rs:87:10
   |
87 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_new_window.rs:194:10
    |
194 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_new_window.rs:197:10
    |
197 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_new_window.rs:206:10
    |
206 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_new_window.rs:207:10
    |
207 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_new_window.rs:208:10
    |
208 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_new_window.rs:221:10
    |
221 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_new_window.rs:585:10
    |
585 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_new_window.rs:627:10
    |
627 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_new_window.rs:672:10
    |
672 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_new_window.rs:688:10
    |
688 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_new_window.rs:691:10
    |
691 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_new_window.rs:692:10
    |
692 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_new_window.rs:824:10
    |
824 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_new_window.rs:827:10
    |
827 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_new_window.rs:841:10
    |
841 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_new_window.rs:857:10
    |
857 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_new_window.rs:926:10
    |
926 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:36:10
   |
36 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:37:10
   |
37 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:38:10
   |
38 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:39:10
   |
39 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:40:10
   |
40 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:41:10
   |
41 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:42:10
   |
42 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:43:10
   |
43 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:44:10
   |
44 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:45:10
   |
45 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:46:10
   |
46 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:47:10
   |
47 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:48:10
   |
48 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_paste_buffer.rs:55:10
   |
55 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:162:10
    |
162 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:165:10
    |
165 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:174:10
    |
174 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:175:10
    |
175 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:176:10
    |
176 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:189:10
    |
189 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:553:10
    |
553 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:595:10
    |
595 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:640:10
    |
640 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:656:10
    |
656 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:659:10
    |
659 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:660:10
    |
660 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:792:10
    |
792 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:795:10
    |
795 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:809:10
    |
809 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:825:10
    |
825 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_paste_buffer.rs:894:10
    |
894 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:94:10
   |
94 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:95:10
   |
95 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:96:10
   |
96 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:97:10
   |
97 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:98:10
   |
98 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_pipe_pane.rs:99:10
   |
99 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:100:10
    |
100 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:101:10
    |
101 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:102:10
    |
102 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:103:10
    |
103 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:104:10
    |
104 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:105:10
    |
105 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:106:10
    |
106 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:107:10
    |
107 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:108:10
    |
108 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:114:10
    |
114 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `__socket_type` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:121:10
    |
121 | pub type __socket_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocketType`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:131:10
    |
131 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:238:10
    |
238 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:241:10
    |
241 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:250:10
    |
250 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:251:10
    |
251 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:252:10
    |
252 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:265:10
    |
265 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:629:10
    |
629 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:671:10
    |
671 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:716:10
    |
716 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:732:10
    |
732 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:735:10
    |
735 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:736:10
    |
736 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:868:10
    |
868 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:871:10
    |
871 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:885:10
    |
885 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:901:10
    |
901 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_pipe_pane.rs:970:10
    |
970 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_queue.rs:74:10
   |
74 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_queue.rs:75:10
   |
75 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_queue.rs:76:10
   |
76 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_queue.rs:77:10
   |
77 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_queue.rs:78:10
   |
78 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_queue.rs:79:10
   |
79 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_queue.rs:80:10
   |
80 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_queue.rs:81:10
   |
81 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_queue.rs:82:10
   |
82 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_queue.rs:83:10
   |
83 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_queue.rs:84:10
   |
84 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_queue.rs:85:10
   |
85 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_queue.rs:86:10
   |
86 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_queue.rs:93:10
   |
93 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_queue.rs:200:10
    |
200 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_queue.rs:203:10
    |
203 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_queue.rs:212:10
    |
212 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_queue.rs:213:10
    |
213 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_queue.rs:214:10
    |
214 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_queue.rs:227:10
    |
227 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_queue.rs:591:10
    |
591 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_queue.rs:633:10
    |
633 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_queue.rs:678:10
    |
678 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_queue.rs:694:10
    |
694 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_queue.rs:697:10
    |
697 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_queue.rs:698:10
    |
698 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_queue.rs:830:10
    |
830 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_queue.rs:833:10
    |
833 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_queue.rs:847:10
    |
847 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_queue.rs:863:10
    |
863 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_queue.rs:932:10
    |
932 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/cmd_queue.rs:1199:13
     |
1199 | /             if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) {
1200 | |                 if (*entry).flags & 0x4 as libc::c_int != 0 {
1201 | |                     if cmd_find_valid_state(&mut (*item).target) != 0 {
1202 | |                         fsp = &mut (*item).target;
...    |
1231 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1199 ~             if !(retval as libc::c_int == CMD_RETURN_ERROR as libc::c_int) && (*entry).flags & 0x4 as libc::c_int != 0 {
1200 +                 if cmd_find_valid_state(&mut (*item).target) != 0 {
1201 +                     fsp = &mut (*item).target;
1202 +                     current_block = 9606288038608642794;
1203 +                 } else if cmd_find_valid_state(&mut (*(*item).shared).current) != 0 {
1204 +                     fsp = &mut (*(*item).shared).current;
1205 +                     current_block = 9606288038608642794;
1206 +                 } else if cmd_find_from_client(
1207 +                     &mut fs,
1208 +                     (*item).client,
1209 +                     0 as libc::c_int,
1210 +                 ) == 0 as libc::c_int
1211 +                 {
1212 +                     fsp = &mut fs;
1213 +                     current_block = 9606288038608642794;
1214 +                 } else {
1215 +                     current_block = 15835115521126477143;
1216 +                 }
1217 +                 match current_block {
1218 +                     15835115521126477143 => {}
1219 +                     _ => {
1220 +                         hooks_insert(
1221 +                             (*(*fsp).s).hooks,
1222 +                             item,
1223 +                             fsp,
1224 +                             b"after-%s\0" as *const u8 as *const libc::c_char,
1225 +                             (*entry).name,
1226 +                         );
1227 +                     }
1228 +                 }
1229 +             }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_refresh_client.rs:30:10
   |
30 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_refresh_client.rs:31:10
   |
31 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_refresh_client.rs:32:10
   |
32 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:33:10
   |
33 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:34:10
   |
34 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:35:10
   |
35 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:36:10
   |
36 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_refresh_client.rs:37:10
   |
37 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_refresh_client.rs:38:10
   |
38 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_refresh_client.rs:39:10
   |
39 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:40:10
   |
40 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:41:10
   |
41 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:42:10
   |
42 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_refresh_client.rs:49:10
   |
49 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_refresh_client.rs:156:10
    |
156 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_refresh_client.rs:159:10
    |
159 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_refresh_client.rs:168:10
    |
168 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_refresh_client.rs:169:10
    |
169 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_refresh_client.rs:170:10
    |
170 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_refresh_client.rs:183:10
    |
183 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_refresh_client.rs:547:10
    |
547 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_refresh_client.rs:589:10
    |
589 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_refresh_client.rs:634:10
    |
634 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_refresh_client.rs:650:10
    |
650 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_refresh_client.rs:653:10
    |
653 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_refresh_client.rs:654:10
    |
654 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_refresh_client.rs:786:10
    |
786 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_refresh_client.rs:789:10
    |
789 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_refresh_client.rs:803:10
    |
803 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_refresh_client.rs:819:10
    |
819 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_refresh_client.rs:888:10
    |
888 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_rename_session.rs:40:10
   |
40 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_rename_session.rs:41:10
   |
41 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_rename_session.rs:42:10
   |
42 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:43:10
   |
43 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:44:10
   |
44 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:45:10
   |
45 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:46:10
   |
46 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_rename_session.rs:47:10
   |
47 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_rename_session.rs:48:10
   |
48 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_rename_session.rs:49:10
   |
49 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:50:10
   |
50 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:51:10
   |
51 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:52:10
   |
52 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_rename_session.rs:59:10
   |
59 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_rename_session.rs:166:10
    |
166 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_rename_session.rs:169:10
    |
169 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_rename_session.rs:178:10
    |
178 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_rename_session.rs:179:10
    |
179 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_rename_session.rs:180:10
    |
180 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_rename_session.rs:193:10
    |
193 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_rename_session.rs:557:10
    |
557 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_rename_session.rs:599:10
    |
599 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_rename_session.rs:644:10
    |
644 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_rename_session.rs:660:10
    |
660 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_rename_session.rs:663:10
    |
663 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_rename_session.rs:664:10
    |
664 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_rename_session.rs:796:10
    |
796 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_rename_session.rs:799:10
    |
799 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_rename_session.rs:813:10
    |
813 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_rename_session.rs:829:10
    |
829 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_rename_session.rs:898:10
    |
898 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_rename_window.rs:39:10
   |
39 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_rename_window.rs:40:10
   |
40 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_rename_window.rs:41:10
   |
41 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:42:10
   |
42 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:43:10
   |
43 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:44:10
   |
44 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:45:10
   |
45 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_rename_window.rs:46:10
   |
46 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_rename_window.rs:47:10
   |
47 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_rename_window.rs:48:10
   |
48 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:49:10
   |
49 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:50:10
   |
50 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:51:10
   |
51 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_rename_window.rs:58:10
   |
58 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_rename_window.rs:165:10
    |
165 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_rename_window.rs:168:10
    |
168 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_rename_window.rs:177:10
    |
177 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_rename_window.rs:178:10
    |
178 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_rename_window.rs:179:10
    |
179 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_rename_window.rs:192:10
    |
192 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_rename_window.rs:556:10
    |
556 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_rename_window.rs:598:10
    |
598 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_rename_window.rs:643:10
    |
643 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_rename_window.rs:659:10
    |
659 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_rename_window.rs:662:10
    |
662 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_rename_window.rs:663:10
    |
663 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_rename_window.rs:795:10
    |
795 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_rename_window.rs:798:10
    |
798 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_rename_window.rs:812:10
    |
812 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_rename_window.rs:828:10
    |
828 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_rename_window.rs:897:10
    |
897 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_resize_pane.rs:47:10
   |
47 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_resize_pane.rs:48:10
   |
48 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_resize_pane.rs:49:10
   |
49 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:50:10
   |
50 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:51:10
   |
51 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:52:10
   |
52 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:53:10
   |
53 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_resize_pane.rs:54:10
   |
54 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_resize_pane.rs:55:10
   |
55 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_resize_pane.rs:56:10
   |
56 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:57:10
   |
57 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:58:10
   |
58 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:59:10
   |
59 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_resize_pane.rs:66:10
   |
66 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_resize_pane.rs:173:10
    |
173 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_resize_pane.rs:176:10
    |
176 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_resize_pane.rs:185:10
    |
185 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_resize_pane.rs:186:10
    |
186 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_resize_pane.rs:187:10
    |
187 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_resize_pane.rs:200:10
    |
200 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_resize_pane.rs:564:10
    |
564 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_resize_pane.rs:606:10
    |
606 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_resize_pane.rs:651:10
    |
651 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_resize_pane.rs:667:10
    |
667 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_resize_pane.rs:670:10
    |
670 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_resize_pane.rs:671:10
    |
671 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_resize_pane.rs:803:10
    |
803 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_resize_pane.rs:806:10
    |
806 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_resize_pane.rs:820:10
    |
820 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_resize_pane.rs:836:10
    |
836 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_resize_pane.rs:905:10
    |
905 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:54:10
   |
54 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:55:10
   |
55 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:56:10
   |
56 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:57:10
   |
57 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:58:10
   |
58 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:59:10
   |
59 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:60:10
   |
60 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:61:10
   |
61 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:62:10
   |
62 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:63:10
   |
63 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:64:10
   |
64 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:65:10
   |
65 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:66:10
   |
66 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_respawn_pane.rs:73:10
   |
73 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:180:10
    |
180 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:183:10
    |
183 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:192:10
    |
192 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:193:10
    |
193 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:194:10
    |
194 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:207:10
    |
207 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:571:10
    |
571 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:613:10
    |
613 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:658:10
    |
658 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:674:10
    |
674 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:677:10
    |
677 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:678:10
    |
678 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:810:10
    |
810 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:813:10
    |
813 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:827:10
    |
827 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:843:10
    |
843 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_respawn_pane.rs:912:10
    |
912 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_respawn_window.rs:59:10
   |
59 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_respawn_window.rs:60:10
   |
60 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_respawn_window.rs:61:10
   |
61 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:62:10
   |
62 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:63:10
   |
63 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:64:10
   |
64 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:65:10
   |
65 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_respawn_window.rs:66:10
   |
66 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_respawn_window.rs:67:10
   |
67 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_respawn_window.rs:68:10
   |
68 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:69:10
   |
69 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:70:10
   |
70 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:71:10
   |
71 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_respawn_window.rs:78:10
   |
78 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_respawn_window.rs:185:10
    |
185 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_respawn_window.rs:188:10
    |
188 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_respawn_window.rs:197:10
    |
197 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_respawn_window.rs:198:10
    |
198 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_respawn_window.rs:199:10
    |
199 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_respawn_window.rs:212:10
    |
212 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_respawn_window.rs:576:10
    |
576 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_respawn_window.rs:618:10
    |
618 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_respawn_window.rs:663:10
    |
663 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_respawn_window.rs:679:10
    |
679 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_respawn_window.rs:682:10
    |
682 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_respawn_window.rs:683:10
    |
683 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_respawn_window.rs:815:10
    |
815 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_respawn_window.rs:818:10
    |
818 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_respawn_window.rs:832:10
    |
832 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_respawn_window.rs:848:10
    |
848 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_respawn_window.rs:917:10
    |
917 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_rotate_window.rs:28:10
   |
28 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_rotate_window.rs:29:10
   |
29 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_rotate_window.rs:30:10
   |
30 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:31:10
   |
31 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:32:10
   |
32 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:33:10
   |
33 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:34:10
   |
34 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_rotate_window.rs:35:10
   |
35 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_rotate_window.rs:36:10
   |
36 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_rotate_window.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:38:10
   |
38 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:39:10
   |
39 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:40:10
   |
40 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_rotate_window.rs:47:10
   |
47 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_rotate_window.rs:154:10
    |
154 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_rotate_window.rs:157:10
    |
157 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_rotate_window.rs:166:10
    |
166 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_rotate_window.rs:167:10
    |
167 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_rotate_window.rs:168:10
    |
168 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_rotate_window.rs:181:10
    |
181 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_rotate_window.rs:545:10
    |
545 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_rotate_window.rs:587:10
    |
587 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_rotate_window.rs:632:10
    |
632 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_rotate_window.rs:648:10
    |
648 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_rotate_window.rs:651:10
    |
651 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_rotate_window.rs:652:10
    |
652 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_rotate_window.rs:784:10
    |
784 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_rotate_window.rs:787:10
    |
787 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_rotate_window.rs:801:10
    |
801 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_rotate_window.rs:817:10
    |
817 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_rotate_window.rs:886:10
    |
886 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_run_shell.rs:69:10
   |
69 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_run_shell.rs:70:10
   |
70 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_run_shell.rs:71:10
   |
71 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:72:10
   |
72 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:73:10
   |
73 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:74:10
   |
74 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:75:10
   |
75 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:76:10
   |
76 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_run_shell.rs:77:10
   |
77 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_run_shell.rs:78:10
   |
78 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_run_shell.rs:79:10
   |
79 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:80:10
   |
80 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:81:10
   |
81 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:82:10
   |
82 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:83:10
   |
83 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_run_shell.rs:90:10
   |
90 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:197:10
    |
197 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:200:10
    |
200 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_run_shell.rs:209:10
    |
209 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_run_shell.rs:210:10
    |
210 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_run_shell.rs:211:10
    |
211 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_run_shell.rs:224:10
    |
224 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_run_shell.rs:588:10
    |
588 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_run_shell.rs:630:10
    |
630 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_run_shell.rs:675:10
    |
675 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_run_shell.rs:691:10
    |
691 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:694:10
    |
694 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:695:10
    |
695 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:827:10
    |
827 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_run_shell.rs:830:10
    |
830 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_run_shell.rs:844:10
    |
844 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_run_shell.rs:860:10
    |
860 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_run_shell.rs:929:10
    |
929 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `job_free_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:975:10
    |
975 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:976:10
    |
976 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
   --> src/cmd_run_shell.rs:977:10
    |
977 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_35` should have an upper camel case name
   --> src/cmd_run_shell.rs:978:10
    |
978 | pub type C2RustUnnamed_35 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_save_buffer.rs:62:10
   |
62 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_save_buffer.rs:63:10
   |
63 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_save_buffer.rs:64:10
   |
64 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:65:10
   |
65 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__off_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:66:10
   |
66 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:67:10
   |
67 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:68:10
   |
68 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:69:10
   |
69 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:70:10
   |
70 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_save_buffer.rs:71:10
   |
71 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_save_buffer.rs:72:10
   |
72 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_save_buffer.rs:73:10
   |
73 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:74:10
   |
74 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:75:10
   |
75 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:76:10
   |
76 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_save_buffer.rs:83:10
   |
83 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/cmd_save_buffer.rs:204:10
    |
204 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_save_buffer.rs:225:10
    |
225 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_save_buffer.rs:228:10
    |
228 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_save_buffer.rs:237:10
    |
237 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_save_buffer.rs:238:10
    |
238 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_save_buffer.rs:239:10
    |
239 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_save_buffer.rs:252:10
    |
252 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_save_buffer.rs:616:10
    |
616 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_save_buffer.rs:658:10
    |
658 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_save_buffer.rs:703:10
    |
703 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_save_buffer.rs:719:10
    |
719 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_save_buffer.rs:722:10
    |
722 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_save_buffer.rs:723:10
    |
723 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_save_buffer.rs:855:10
    |
855 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_save_buffer.rs:858:10
    |
858 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_save_buffer.rs:872:10
    |
872 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_save_buffer.rs:888:10
    |
888 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_save_buffer.rs:957:10
    |
957 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_select_layout.rs:29:10
   |
29 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_select_layout.rs:30:10
   |
30 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_select_layout.rs:31:10
   |
31 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:32:10
   |
32 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:33:10
   |
33 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:34:10
   |
34 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:35:10
   |
35 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_select_layout.rs:36:10
   |
36 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_select_layout.rs:37:10
   |
37 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_select_layout.rs:38:10
   |
38 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:39:10
   |
39 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:40:10
   |
40 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:41:10
   |
41 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_select_layout.rs:48:10
   |
48 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_select_layout.rs:155:10
    |
155 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_select_layout.rs:158:10
    |
158 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_select_layout.rs:167:10
    |
167 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_select_layout.rs:168:10
    |
168 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_select_layout.rs:169:10
    |
169 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_select_layout.rs:182:10
    |
182 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_select_layout.rs:546:10
    |
546 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_select_layout.rs:588:10
    |
588 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_select_layout.rs:633:10
    |
633 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_select_layout.rs:649:10
    |
649 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_select_layout.rs:652:10
    |
652 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_select_layout.rs:653:10
    |
653 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_select_layout.rs:785:10
    |
785 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_select_layout.rs:788:10
    |
788 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_select_layout.rs:802:10
    |
802 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_select_layout.rs:818:10
    |
818 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_select_layout.rs:887:10
    |
887 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_select_pane.rs:75:10
   |
75 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_select_pane.rs:76:10
   |
76 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_select_pane.rs:77:10
   |
77 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:78:10
   |
78 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:79:10
   |
79 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:80:10
   |
80 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:81:10
   |
81 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_select_pane.rs:82:10
   |
82 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_select_pane.rs:83:10
   |
83 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_select_pane.rs:84:10
   |
84 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:85:10
   |
85 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:86:10
   |
86 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:87:10
   |
87 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_select_pane.rs:94:10
   |
94 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_select_pane.rs:201:10
    |
201 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_select_pane.rs:204:10
    |
204 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_select_pane.rs:213:10
    |
213 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_select_pane.rs:214:10
    |
214 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_select_pane.rs:215:10
    |
215 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_select_pane.rs:228:10
    |
228 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_select_pane.rs:592:10
    |
592 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_select_pane.rs:634:10
    |
634 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_select_pane.rs:679:10
    |
679 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_select_pane.rs:695:10
    |
695 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_select_pane.rs:698:10
    |
698 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_select_pane.rs:699:10
    |
699 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_select_pane.rs:831:10
    |
831 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_select_pane.rs:834:10
    |
834 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_select_pane.rs:848:10
    |
848 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_select_pane.rs:864:10
    |
864 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_select_pane.rs:933:10
    |
933 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_select_window.rs:33:10
   |
33 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_select_window.rs:34:10
   |
34 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_select_window.rs:35:10
   |
35 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_select_window.rs:36:10
   |
36 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_select_window.rs:37:10
   |
37 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_select_window.rs:38:10
   |
38 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_select_window.rs:39:10
   |
39 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_select_window.rs:40:10
   |
40 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_select_window.rs:41:10
   |
41 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_select_window.rs:42:10
   |
42 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_select_window.rs:43:10
   |
43 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_select_window.rs:44:10
   |
44 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_select_window.rs:45:10
   |
45 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_select_window.rs:52:10
   |
52 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_select_window.rs:159:10
    |
159 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_select_window.rs:162:10
    |
162 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_select_window.rs:171:10
    |
171 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_select_window.rs:172:10
    |
172 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_select_window.rs:173:10
    |
173 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_select_window.rs:186:10
    |
186 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_select_window.rs:550:10
    |
550 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_select_window.rs:592:10
    |
592 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_select_window.rs:637:10
    |
637 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_select_window.rs:653:10
    |
653 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_select_window.rs:656:10
    |
656 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_select_window.rs:657:10
    |
657 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_select_window.rs:789:10
    |
789 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_select_window.rs:792:10
    |
792 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_select_window.rs:806:10
    |
806 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_select_window.rs:822:10
    |
822 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_select_window.rs:891:10
    |
891 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_send_keys.rs:63:10
   |
63 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_send_keys.rs:64:10
   |
64 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_send_keys.rs:65:10
   |
65 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:66:10
   |
66 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:67:10
   |
67 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:68:10
   |
68 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:69:10
   |
69 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_send_keys.rs:70:10
   |
70 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_send_keys.rs:71:10
   |
71 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_send_keys.rs:72:10
   |
72 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:73:10
   |
73 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:74:10
   |
74 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:75:10
   |
75 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:82:10
   |
82 | pub type wchar_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_send_keys.rs:83:10
   |
83 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_send_keys.rs:190:10
    |
190 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_send_keys.rs:193:10
    |
193 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_send_keys.rs:202:10
    |
202 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_send_keys.rs:203:10
    |
203 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_send_keys.rs:204:10
    |
204 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_send_keys.rs:217:10
    |
217 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_send_keys.rs:581:10
    |
581 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_send_keys.rs:623:10
    |
623 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_send_keys.rs:668:10
    |
668 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_send_keys.rs:684:10
    |
684 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_send_keys.rs:687:10
    |
687 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_send_keys.rs:688:10
    |
688 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_send_keys.rs:820:10
    |
820 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_send_keys.rs:823:10
    |
823 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_send_keys.rs:837:10
    |
837 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_send_keys.rs:853:10
    |
853 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_send_keys.rs:922:10
    |
922 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `utf8_state` should have an upper camel case name
   --> src/cmd_send_keys.rs:946:10
    |
946 | pub type utf8_state = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_set_buffer.rs:45:10
   |
45 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_set_buffer.rs:46:10
   |
46 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_set_buffer.rs:47:10
   |
47 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:48:10
   |
48 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:49:10
   |
49 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:50:10
   |
50 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:51:10
   |
51 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_set_buffer.rs:52:10
   |
52 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_set_buffer.rs:53:10
   |
53 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_set_buffer.rs:54:10
   |
54 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:55:10
   |
55 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:56:10
   |
56 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:57:10
   |
57 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_set_buffer.rs:64:10
   |
64 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_set_buffer.rs:171:10
    |
171 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_set_buffer.rs:174:10
    |
174 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_set_buffer.rs:183:10
    |
183 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_set_buffer.rs:184:10
    |
184 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_set_buffer.rs:185:10
    |
185 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_set_buffer.rs:198:10
    |
198 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_set_buffer.rs:562:10
    |
562 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_set_buffer.rs:604:10
    |
604 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_set_buffer.rs:649:10
    |
649 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_set_buffer.rs:665:10
    |
665 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_set_buffer.rs:668:10
    |
668 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_set_buffer.rs:669:10
    |
669 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_set_buffer.rs:801:10
    |
801 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_set_buffer.rs:804:10
    |
804 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_set_buffer.rs:818:10
    |
818 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_set_buffer.rs:834:10
    |
834 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_set_buffer.rs:903:10
    |
903 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_set_environment.rs:30:10
   |
30 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_set_environment.rs:31:10
   |
31 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_set_environment.rs:32:10
   |
32 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:33:10
   |
33 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:34:10
   |
34 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:35:10
   |
35 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:36:10
   |
36 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_set_environment.rs:37:10
   |
37 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_set_environment.rs:38:10
   |
38 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_set_environment.rs:39:10
   |
39 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:40:10
   |
40 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:41:10
   |
41 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:42:10
   |
42 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_set_environment.rs:49:10
   |
49 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_set_environment.rs:156:10
    |
156 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_set_environment.rs:159:10
    |
159 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_set_environment.rs:168:10
    |
168 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_set_environment.rs:169:10
    |
169 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_set_environment.rs:170:10
    |
170 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_set_environment.rs:183:10
    |
183 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_set_environment.rs:547:10
    |
547 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_set_environment.rs:589:10
    |
589 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_set_environment.rs:634:10
    |
634 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_set_environment.rs:650:10
    |
650 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_set_environment.rs:653:10
    |
653 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_set_environment.rs:654:10
    |
654 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_set_environment.rs:786:10
    |
786 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_set_environment.rs:789:10
    |
789 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_set_environment.rs:803:10
    |
803 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_set_environment.rs:819:10
    |
819 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_set_environment.rs:888:10
    |
888 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_set_hook.rs:35:10
   |
35 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_set_hook.rs:36:10
   |
36 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_set_hook.rs:37:10
   |
37 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:38:10
   |
38 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:39:10
   |
39 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:40:10
   |
40 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:41:10
   |
41 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_set_hook.rs:42:10
   |
42 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_set_hook.rs:43:10
   |
43 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_set_hook.rs:44:10
   |
44 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:45:10
   |
45 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:46:10
   |
46 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:47:10
   |
47 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_set_hook.rs:54:10
   |
54 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_set_hook.rs:161:10
    |
161 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_set_hook.rs:164:10
    |
164 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_set_hook.rs:173:10
    |
173 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_set_hook.rs:174:10
    |
174 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_set_hook.rs:175:10
    |
175 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_set_hook.rs:188:10
    |
188 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_set_hook.rs:552:10
    |
552 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_set_hook.rs:594:10
    |
594 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_set_hook.rs:639:10
    |
639 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_set_hook.rs:655:10
    |
655 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_set_hook.rs:658:10
    |
658 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_set_hook.rs:659:10
    |
659 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_set_hook.rs:791:10
    |
791 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_set_hook.rs:794:10
    |
794 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_set_hook.rs:808:10
    |
808 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_set_hook.rs:824:10
    |
824 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_set_hook.rs:893:10
    |
893 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/cmd_set_option.rs:125:10
    |
125 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/cmd_set_option.rs:126:10
    |
126 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/cmd_set_option.rs:127:10
    |
127 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/cmd_set_option.rs:128:10
    |
128 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/cmd_set_option.rs:129:10
    |
129 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cmd_set_option.rs:130:10
    |
130 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd_set_option.rs:131:10
    |
131 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd_set_option.rs:132:10
    |
132 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd_set_option.rs:133:10
    |
133 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd_set_option.rs:134:10
    |
134 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd_set_option.rs:135:10
    |
135 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd_set_option.rs:136:10
    |
136 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd_set_option.rs:137:10
    |
137 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_set_option.rs:144:10
    |
144 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_set_option.rs:251:10
    |
251 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_set_option.rs:254:10
    |
254 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_set_option.rs:263:10
    |
263 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_set_option.rs:264:10
    |
264 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_set_option.rs:265:10
    |
265 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_set_option.rs:278:10
    |
278 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_set_option.rs:642:10
    |
642 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_set_option.rs:684:10
    |
684 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_set_option.rs:729:10
    |
729 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_set_option.rs:745:10
    |
745 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_set_option.rs:748:10
    |
748 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_set_option.rs:749:10
    |
749 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_set_option.rs:881:10
    |
881 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_set_option.rs:884:10
    |
884 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_set_option.rs:898:10
    |
898 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_set_option.rs:914:10
    |
914 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_set_option.rs:983:10
    |
983 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `options_table_type` should have an upper camel case name
    --> src/cmd_set_option.rs:1023:10
     |
1023 | pub type options_table_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `options_table_scope` should have an upper camel case name
    --> src/cmd_set_option.rs:1033:10
     |
1033 | pub type options_table_scope = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: this `if` statement can be collapsed
    --> src/cmd_set_option.rs:1435:53
     |
1435 | / ...                   if !((*w).active).is_null() {
1436 | | ...                       if options_get_number(
1437 | | ...                           (*w).options,
1438 | | ...                           b"automatic-rename\0" as *const u8 as *const libc::c_char,
...    |
1443 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1435 ~                                                     if !((*w).active).is_null() && options_get_number(
1436 +                                                             (*w).options,
1437 +                                                             b"automatic-rename\0" as *const u8 as *const libc::c_char,
1438 +                                                         ) != 0 {
1439 +                                                         (*(*w).active).flags |= 0x80 as libc::c_int;
1440 +                                                     }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_show_environment.rs:28:10
   |
28 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_show_environment.rs:29:10
   |
29 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_show_environment.rs:30:10
   |
30 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:31:10
   |
31 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:32:10
   |
32 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:33:10
   |
33 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:34:10
   |
34 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_show_environment.rs:35:10
   |
35 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_show_environment.rs:36:10
   |
36 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_show_environment.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:38:10
   |
38 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:39:10
   |
39 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:40:10
   |
40 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_show_environment.rs:47:10
   |
47 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_show_environment.rs:154:10
    |
154 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_show_environment.rs:157:10
    |
157 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_show_environment.rs:166:10
    |
166 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_show_environment.rs:167:10
    |
167 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_show_environment.rs:168:10
    |
168 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_show_environment.rs:181:10
    |
181 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_show_environment.rs:545:10
    |
545 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_show_environment.rs:587:10
    |
587 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_show_environment.rs:632:10
    |
632 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_show_environment.rs:648:10
    |
648 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_show_environment.rs:651:10
    |
651 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_show_environment.rs:652:10
    |
652 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_show_environment.rs:784:10
    |
784 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_show_environment.rs:787:10
    |
787 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_show_environment.rs:801:10
    |
801 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_show_environment.rs:817:10
    |
817 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_show_environment.rs:886:10
    |
886 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/cmd_show_environment.rs:1047:5
     |
1047 | /     if !target.is_null() {
1048 | |         if ((*item).target.s).is_null() {
1049 | |             cmdq_error(
1050 | |                 item,
...    |
1056 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1047 ~     if !target.is_null() && ((*item).target.s).is_null() {
1048 +         cmdq_error(
1049 +             item,
1050 +             b"no such session: %s\0" as *const u8 as *const libc::c_char,
1051 +             target,
1052 +         );
1053 +         return CMD_RETURN_ERROR;
1054 +     }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_show_messages.rs:31:10
   |
31 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_show_messages.rs:32:10
   |
32 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_show_messages.rs:33:10
   |
33 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:34:10
   |
34 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:35:10
   |
35 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:36:10
   |
36 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:37:10
   |
37 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_show_messages.rs:38:10
   |
38 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_show_messages.rs:39:10
   |
39 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_show_messages.rs:40:10
   |
40 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:41:10
   |
41 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:42:10
   |
42 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:43:10
   |
43 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_show_messages.rs:50:10
   |
50 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_show_messages.rs:157:10
    |
157 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_show_messages.rs:160:10
    |
160 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_show_messages.rs:169:10
    |
169 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_show_messages.rs:170:10
    |
170 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_show_messages.rs:171:10
    |
171 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_show_messages.rs:184:10
    |
184 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_show_messages.rs:548:10
    |
548 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_show_messages.rs:590:10
    |
590 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_show_messages.rs:635:10
    |
635 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_show_messages.rs:651:10
    |
651 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_show_messages.rs:654:10
    |
654 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_show_messages.rs:655:10
    |
655 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_show_messages.rs:787:10
    |
787 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_show_messages.rs:790:10
    |
790 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_show_messages.rs:804:10
    |
804 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_show_messages.rs:820:10
    |
820 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_show_messages.rs:889:10
    |
889 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `tty_code_code` should have an upper camel case name
   --> src/cmd_show_messages.rs:913:10
    |
913 | pub type tty_code_code = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: type `job_free_cb` should have an upper camel case name
    --> src/cmd_show_messages.rs:1144:10
     |
1144 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
    --> src/cmd_show_messages.rs:1145:10
     |
1145 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
    --> src/cmd_show_messages.rs:1146:10
     |
1146 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_35` should have an upper camel case name
    --> src/cmd_show_messages.rs:1147:10
     |
1147 | pub type C2RustUnnamed_35 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_show_options.rs:71:10
   |
71 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_show_options.rs:72:10
   |
72 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_show_options.rs:73:10
   |
73 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_show_options.rs:74:10
   |
74 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_show_options.rs:75:10
   |
75 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_show_options.rs:76:10
   |
76 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_show_options.rs:77:10
   |
77 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_show_options.rs:78:10
   |
78 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_show_options.rs:79:10
   |
79 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_show_options.rs:80:10
   |
80 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_show_options.rs:81:10
   |
81 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_show_options.rs:82:10
   |
82 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_show_options.rs:83:10
   |
83 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_show_options.rs:90:10
   |
90 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_show_options.rs:197:10
    |
197 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_show_options.rs:200:10
    |
200 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_show_options.rs:209:10
    |
209 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_show_options.rs:210:10
    |
210 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_show_options.rs:211:10
    |
211 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_show_options.rs:224:10
    |
224 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_show_options.rs:588:10
    |
588 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_show_options.rs:630:10
    |
630 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_show_options.rs:675:10
    |
675 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_show_options.rs:691:10
    |
691 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_show_options.rs:694:10
    |
694 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_show_options.rs:695:10
    |
695 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_show_options.rs:827:10
    |
827 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_show_options.rs:830:10
    |
830 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_show_options.rs:844:10
    |
844 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_show_options.rs:860:10
    |
860 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_show_options.rs:929:10
    |
929 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `options_table_type` should have an upper camel case name
   --> src/cmd_show_options.rs:953:10
    |
953 | pub type options_table_type = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `options_table_scope` should have an upper camel case name
   --> src/cmd_show_options.rs:963:10
    |
963 | pub type options_table_scope = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_source_file.rs:60:10
   |
60 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_source_file.rs:61:10
   |
61 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_source_file.rs:62:10
   |
62 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_source_file.rs:63:10
   |
63 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_source_file.rs:64:10
   |
64 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_source_file.rs:65:10
   |
65 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_source_file.rs:66:10
   |
66 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_source_file.rs:67:10
   |
67 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_source_file.rs:68:10
   |
68 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_source_file.rs:69:10
   |
69 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_source_file.rs:70:10
   |
70 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_source_file.rs:71:10
   |
71 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_source_file.rs:72:10
   |
72 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__size_t` should have an upper camel case name
  --> src/cmd_source_file.rs:79:10
   |
79 | pub type __size_t = libc::c_ulong;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_source_file.rs:99:10
   |
99 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_source_file.rs:206:10
    |
206 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_source_file.rs:209:10
    |
209 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_source_file.rs:218:10
    |
218 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_source_file.rs:219:10
    |
219 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_source_file.rs:220:10
    |
220 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_source_file.rs:233:10
    |
233 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_source_file.rs:597:10
    |
597 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_source_file.rs:639:10
    |
639 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_source_file.rs:684:10
    |
684 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_source_file.rs:700:10
    |
700 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_source_file.rs:703:10
    |
703 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_source_file.rs:704:10
    |
704 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_source_file.rs:836:10
    |
836 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_source_file.rs:839:10
    |
839 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_source_file.rs:853:10
    |
853 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_source_file.rs:869:10
    |
869 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_source_file.rs:938:10
    |
938 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/cmd_split_window.rs:107:10
    |
107 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/cmd_split_window.rs:108:10
    |
108 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/cmd_split_window.rs:109:10
    |
109 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/cmd_split_window.rs:110:10
    |
110 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/cmd_split_window.rs:111:10
    |
111 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/cmd_split_window.rs:112:10
    |
112 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/cmd_split_window.rs:113:10
    |
113 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/cmd_split_window.rs:114:10
    |
114 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/cmd_split_window.rs:115:10
    |
115 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/cmd_split_window.rs:116:10
    |
116 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/cmd_split_window.rs:117:10
    |
117 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/cmd_split_window.rs:118:10
    |
118 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/cmd_split_window.rs:119:10
    |
119 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/cmd_split_window.rs:126:10
    |
126 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_split_window.rs:233:10
    |
233 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_split_window.rs:236:10
    |
236 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_split_window.rs:245:10
    |
245 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_split_window.rs:246:10
    |
246 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_split_window.rs:247:10
    |
247 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_split_window.rs:260:10
    |
260 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_split_window.rs:624:10
    |
624 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_split_window.rs:666:10
    |
666 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_split_window.rs:711:10
    |
711 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_split_window.rs:727:10
    |
727 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_split_window.rs:730:10
    |
730 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_split_window.rs:731:10
    |
731 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_split_window.rs:863:10
    |
863 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_split_window.rs:866:10
    |
866 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_split_window.rs:880:10
    |
880 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_split_window.rs:896:10
    |
896 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_split_window.rs:965:10
    |
965 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_string.rs:54:10
   |
54 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_string.rs:55:10
   |
55 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_string.rs:56:10
   |
56 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_string.rs:57:10
   |
57 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uid_t` should have an upper camel case name
  --> src/cmd_string.rs:58:10
   |
58 | pub type __uid_t = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__gid_t` should have an upper camel case name
  --> src/cmd_string.rs:59:10
   |
59 | pub type __gid_t = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `GidT`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_string.rs:60:10
   |
60 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_string.rs:61:10
   |
61 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_string.rs:62:10
   |
62 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_string.rs:63:10
   |
63 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_string.rs:64:10
   |
64 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_string.rs:65:10
   |
65 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_string.rs:66:10
   |
66 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_string.rs:67:10
   |
67 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_string.rs:68:10
   |
68 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_string.rs:86:10
   |
86 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_string.rs:193:10
    |
193 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_string.rs:196:10
    |
196 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_string.rs:205:10
    |
205 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_string.rs:206:10
    |
206 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_string.rs:207:10
    |
207 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_string.rs:220:10
    |
220 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_string.rs:584:10
    |
584 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_string.rs:626:10
    |
626 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_string.rs:671:10
    |
671 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_string.rs:687:10
    |
687 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_string.rs:690:10
    |
690 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_string.rs:691:10
    |
691 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_string.rs:823:10
    |
823 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_string.rs:826:10
    |
826 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_string.rs:840:10
    |
840 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_string.rs:856:10
    |
856 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_string.rs:925:10
    |
925 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_swap_pane.rs:23:10
   |
23 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_swap_pane.rs:24:10
   |
24 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_swap_pane.rs:25:10
   |
25 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:26:10
   |
26 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:27:10
   |
27 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:28:10
   |
28 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:29:10
   |
29 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_swap_pane.rs:30:10
   |
30 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_swap_pane.rs:31:10
   |
31 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_swap_pane.rs:32:10
   |
32 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:33:10
   |
33 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:34:10
   |
34 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:35:10
   |
35 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_swap_pane.rs:42:10
   |
42 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_swap_pane.rs:149:10
    |
149 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_swap_pane.rs:152:10
    |
152 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_swap_pane.rs:161:10
    |
161 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_swap_pane.rs:162:10
    |
162 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_swap_pane.rs:163:10
    |
163 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_swap_pane.rs:176:10
    |
176 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_swap_pane.rs:540:10
    |
540 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_swap_pane.rs:582:10
    |
582 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_swap_pane.rs:627:10
    |
627 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_swap_pane.rs:643:10
    |
643 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_swap_pane.rs:646:10
    |
646 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_swap_pane.rs:647:10
    |
647 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_swap_pane.rs:779:10
    |
779 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_swap_pane.rs:782:10
    |
782 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_swap_pane.rs:796:10
    |
796 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_swap_pane.rs:812:10
    |
812 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_swap_pane.rs:881:10
    |
881 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_swap_window.rs:24:10
   |
24 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_swap_window.rs:25:10
   |
25 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_swap_window.rs:26:10
   |
26 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:27:10
   |
27 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:28:10
   |
28 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:29:10
   |
29 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:30:10
   |
30 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_swap_window.rs:31:10
   |
31 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_swap_window.rs:32:10
   |
32 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_swap_window.rs:33:10
   |
33 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:34:10
   |
34 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:35:10
   |
35 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:36:10
   |
36 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_swap_window.rs:43:10
   |
43 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_swap_window.rs:150:10
    |
150 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_swap_window.rs:153:10
    |
153 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_swap_window.rs:162:10
    |
162 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_swap_window.rs:163:10
    |
163 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_swap_window.rs:164:10
    |
164 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_swap_window.rs:177:10
    |
177 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_swap_window.rs:541:10
    |
541 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_swap_window.rs:583:10
    |
583 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_swap_window.rs:628:10
    |
628 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_swap_window.rs:644:10
    |
644 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_swap_window.rs:647:10
    |
647 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_swap_window.rs:648:10
    |
648 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_swap_window.rs:780:10
    |
780 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_swap_window.rs:783:10
    |
783 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_swap_window.rs:797:10
    |
797 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_swap_window.rs:813:10
    |
813 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_swap_window.rs:882:10
    |
882 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_switch_client.rs:51:10
   |
51 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_switch_client.rs:52:10
   |
52 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_switch_client.rs:53:10
   |
53 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:54:10
   |
54 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:55:10
   |
55 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:56:10
   |
56 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:57:10
   |
57 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_switch_client.rs:58:10
   |
58 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_switch_client.rs:59:10
   |
59 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_switch_client.rs:60:10
   |
60 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:61:10
   |
61 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:62:10
   |
62 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:63:10
   |
63 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_switch_client.rs:70:10
   |
70 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_switch_client.rs:177:10
    |
177 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_switch_client.rs:180:10
    |
180 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_switch_client.rs:189:10
    |
189 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_switch_client.rs:190:10
    |
190 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_switch_client.rs:191:10
    |
191 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_switch_client.rs:204:10
    |
204 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_switch_client.rs:568:10
    |
568 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_switch_client.rs:610:10
    |
610 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_switch_client.rs:655:10
    |
655 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_switch_client.rs:671:10
    |
671 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_switch_client.rs:674:10
    |
674 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_switch_client.rs:675:10
    |
675 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_switch_client.rs:807:10
    |
807 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_switch_client.rs:810:10
    |
810 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_switch_client.rs:824:10
    |
824 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_switch_client.rs:840:10
    |
840 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_switch_client.rs:909:10
    |
909 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_unbind_key.rs:24:10
   |
24 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_unbind_key.rs:25:10
   |
25 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_unbind_key.rs:26:10
   |
26 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:27:10
   |
27 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:28:10
   |
28 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:29:10
   |
29 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:30:10
   |
30 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_unbind_key.rs:31:10
   |
31 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_unbind_key.rs:32:10
   |
32 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_unbind_key.rs:33:10
   |
33 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:34:10
   |
34 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:35:10
   |
35 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:36:10
   |
36 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_unbind_key.rs:43:10
   |
43 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_unbind_key.rs:150:10
    |
150 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_unbind_key.rs:153:10
    |
153 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_unbind_key.rs:162:10
    |
162 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_unbind_key.rs:163:10
    |
163 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_unbind_key.rs:164:10
    |
164 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_unbind_key.rs:177:10
    |
177 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_unbind_key.rs:541:10
    |
541 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_unbind_key.rs:583:10
    |
583 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_unbind_key.rs:628:10
    |
628 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_unbind_key.rs:644:10
    |
644 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_unbind_key.rs:647:10
    |
647 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_unbind_key.rs:648:10
    |
648 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_unbind_key.rs:780:10
    |
780 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_unbind_key.rs:783:10
    |
783 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_unbind_key.rs:797:10
    |
797 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_unbind_key.rs:813:10
    |
813 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_unbind_key.rs:882:10
    |
882 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/cmd_wait_for.rs:25:10
   |
25 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/cmd_wait_for.rs:26:10
   |
26 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/cmd_wait_for.rs:27:10
   |
27 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:28:10
   |
28 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:29:10
   |
29 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:30:10
   |
30 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:31:10
   |
31 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/cmd_wait_for.rs:32:10
   |
32 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/cmd_wait_for.rs:33:10
   |
33 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/cmd_wait_for.rs:34:10
   |
34 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:35:10
   |
35 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:36:10
   |
36 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:37:10
   |
37 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/cmd_wait_for.rs:44:10
   |
44 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/cmd_wait_for.rs:151:10
    |
151 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/cmd_wait_for.rs:154:10
    |
154 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/cmd_wait_for.rs:163:10
    |
163 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/cmd_wait_for.rs:164:10
    |
164 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/cmd_wait_for.rs:165:10
    |
165 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/cmd_wait_for.rs:178:10
    |
178 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/cmd_wait_for.rs:542:10
    |
542 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/cmd_wait_for.rs:584:10
    |
584 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/cmd_wait_for.rs:629:10
    |
629 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/cmd_wait_for.rs:645:10
    |
645 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/cmd_wait_for.rs:648:10
    |
648 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/cmd_wait_for.rs:649:10
    |
649 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/cmd_wait_for.rs:781:10
    |
781 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/cmd_wait_for.rs:784:10
    |
784 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/cmd_wait_for.rs:798:10
    |
798 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/cmd_wait_for.rs:814:10
    |
814 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/cmd_wait_for.rs:883:10
    |
883 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/colour.rs:26:10
   |
26 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_char` should have an upper camel case name
  --> src/colour.rs:27:10
   |
27 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `size_t` should have an upper camel case name
  --> src/colour.rs:28:10
   |
28 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: operator precedence can trip the unwary
  --> src/colour.rs:93:16
   |
93 |           return 16 as libc::c_int + 36 as libc::c_int * qr + 6 as libc::c_int * qg + qb
   |  ________________^
94 | |             | 0x1000000 as libc::c_int;
   | |______________________________________^ help: consider parenthesizing your expression: `(16 as libc::c_int + 36 as libc::c_int * qr + 6 as libc::c_int * qg + qb) | 0x1000000 as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
   = note: `#[warn(clippy::precedence)]` on by default

warning: operator precedence can trip the unwary
   --> src/colour.rs:126:12
    |
126 |       return (r as libc::c_int & 0xff as libc::c_int) << 16 as libc::c_int
    |  ____________^
127 | |         | (g as libc::c_int & 0xff as libc::c_int) << 8 as libc::c_int
    | |______________________________________________________________________^ help: consider parenthesizing your expression: `((r as libc::c_int & 0xff as libc::c_int) << 16 as libc::c_int) | ((g as libc::c_int & 0xff as libc::c_int) << 8 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/colour.rs:137:11
    |
137 |     *r = (c >> 16 as libc::c_int & 0xff as libc::c_int) as u_char;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 16 as libc::c_int) & 0xff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/colour.rs:138:11
    |
138 |     *g = (c >> 8 as libc::c_int & 0xff as libc::c_int) as u_char;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 8 as libc::c_int) & 0xff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `__u_char` should have an upper camel case name
  --> src/control.rs:51:10
   |
51 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/control.rs:52:10
   |
52 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/control.rs:53:10
   |
53 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/control.rs:54:10
   |
54 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/control.rs:55:10
   |
55 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/control.rs:56:10
   |
56 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/control.rs:57:10
   |
57 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/control.rs:58:10
   |
58 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/control.rs:59:10
   |
59 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/control.rs:60:10
   |
60 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/control.rs:61:10
   |
61 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/control.rs:62:10
   |
62 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/control.rs:63:10
   |
63 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/control.rs:70:10
   |
70 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `evbuffer_eol_style` should have an upper camel case name
   --> src/control.rs:158:10
    |
158 | pub type evbuffer_eol_style = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `EvbufferEolStyle`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/control.rs:183:10
    |
183 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/control.rs:186:10
    |
186 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/control.rs:195:10
    |
195 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/control.rs:196:10
    |
196 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/control.rs:197:10
    |
197 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/control.rs:210:10
    |
210 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/control.rs:574:10
    |
574 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/control.rs:616:10
    |
616 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/control.rs:661:10
    |
661 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/control.rs:677:10
    |
677 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/control.rs:680:10
    |
680 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/control.rs:681:10
    |
681 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/control.rs:813:10
    |
813 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/control.rs:816:10
    |
816 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/control.rs:830:10
    |
830 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/control.rs:846:10
    |
846 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/control.rs:915:10
    |
915 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/control_notify.rs:40:10
   |
40 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/control_notify.rs:41:10
   |
41 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/control_notify.rs:42:10
   |
42 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/control_notify.rs:43:10
   |
43 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/control_notify.rs:44:10
   |
44 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/control_notify.rs:45:10
   |
45 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/control_notify.rs:46:10
   |
46 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/control_notify.rs:47:10
   |
47 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/control_notify.rs:48:10
   |
48 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/control_notify.rs:49:10
   |
49 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/control_notify.rs:50:10
   |
50 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/control_notify.rs:51:10
   |
51 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/control_notify.rs:52:10
   |
52 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
  --> src/control_notify.rs:53:10
   |
53 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/control_notify.rs:54:10
   |
54 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/control_notify.rs:61:10
   |
61 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/control_notify.rs:168:10
    |
168 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/control_notify.rs:171:10
    |
171 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/control_notify.rs:180:10
    |
180 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/control_notify.rs:181:10
    |
181 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/control_notify.rs:182:10
    |
182 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/control_notify.rs:195:10
    |
195 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/control_notify.rs:559:10
    |
559 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/control_notify.rs:601:10
    |
601 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/control_notify.rs:646:10
    |
646 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/control_notify.rs:662:10
    |
662 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/control_notify.rs:665:10
    |
665 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/control_notify.rs:666:10
    |
666 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/control_notify.rs:798:10
    |
798 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/control_notify.rs:801:10
    |
801 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/control_notify.rs:815:10
    |
815 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/control_notify.rs:831:10
    |
831 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/control_notify.rs:900:10
    |
900 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/control_notify.rs:1006:13
     |
1006 | /             if !(winlink_find_by_window_id(&mut (*s).windows, (*w).id)).is_null() {
1007 | |                 if !((*w).layout_root).is_null() {
1008 | |                     wl = winlink_find_by_window(&mut (*s).windows, w);
1009 | |                     if !wl.is_null() {
...    |
1026 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1006 ~             if !(winlink_find_by_window_id(&mut (*s).windows, (*w).id)).is_null() && !((*w).layout_root).is_null() {
1007 +                 wl = winlink_find_by_window(&mut (*s).windows, w);
1008 +                 if !wl.is_null() {
1009 +                     cp = format_single(
1010 +                         0 as *mut cmdq_item,
1011 +                         template,
1012 +                         c,
1013 +                         0 as *mut session,
1014 +                         wl,
1015 +                         0 as *mut window_pane,
1016 +                     );
1017 +                     control_write(
1018 +                         c,
1019 +                         b"%s\0" as *const u8 as *const libc::c_char,
1020 +                         cp,
1021 +                     );
1022 +                     free(cp as *mut libc::c_void);
1023 +                 }
1024 +             }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/environ.rs:47:10
   |
47 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/environ.rs:48:10
   |
48 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/environ.rs:49:10
   |
49 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/environ.rs:50:10
   |
50 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/environ.rs:51:10
   |
51 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/environ.rs:52:10
   |
52 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/environ.rs:53:10
   |
53 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/environ.rs:54:10
   |
54 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/environ.rs:55:10
   |
55 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/environ.rs:56:10
   |
56 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/environ.rs:57:10
   |
57 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/environ.rs:58:10
   |
58 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/environ.rs:59:10
   |
59 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/environ.rs:66:10
   |
66 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/environ.rs:173:10
    |
173 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/environ.rs:176:10
    |
176 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/environ.rs:185:10
    |
185 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/environ.rs:186:10
    |
186 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/environ.rs:187:10
    |
187 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/environ.rs:200:10
    |
200 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/environ.rs:584:10
    |
584 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/environ.rs:626:10
    |
626 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/environ.rs:671:10
    |
671 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/environ.rs:687:10
    |
687 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/environ.rs:690:10
    |
690 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/environ.rs:691:10
    |
691 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/environ.rs:823:10
    |
823 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/environ.rs:826:10
    |
826 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/environ.rs:840:10
    |
840 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/environ.rs:856:10
    |
856 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
   --> src/environ.rs:925:10
    |
925 | pub type C2RustUnnamed_33 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `__u_char` should have an upper camel case name
   --> src/format.rs:174:10
    |
174 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/format.rs:175:10
    |
175 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/format.rs:176:10
    |
176 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/format.rs:177:10
    |
177 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/format.rs:178:10
    |
178 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/format.rs:179:10
    |
179 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/format.rs:180:10
    |
180 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/format.rs:181:10
    |
181 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/format.rs:182:10
    |
182 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/format.rs:183:10
    |
183 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/format.rs:184:10
    |
184 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/format.rs:185:10
    |
185 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/format.rs:186:10
    |
186 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/format.rs:187:10
    |
187 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/format.rs:188:10
    |
188 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/format.rs:210:10
    |
210 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/format.rs:317:10
    |
317 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/format.rs:320:10
    |
320 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/format.rs:329:10
    |
329 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/format.rs:330:10
    |
330 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/format.rs:331:10
    |
331 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/format.rs:344:10
    |
344 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/format.rs:708:10
    |
708 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/format.rs:750:10
    |
750 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/format.rs:795:10
    |
795 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/format.rs:811:10
    |
811 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/format.rs:814:10
    |
814 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/format.rs:815:10
    |
815 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/format.rs:947:10
    |
947 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/format.rs:950:10
    |
950 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `format_cb` should have an upper camel case name
   --> src/format.rs:998:10
    |
998 | pub type format_cb = Option::<
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `FormatCb`

warning: type `cmdq_type` should have an upper camel case name
    --> src/format.rs:1001:10
     |
1001 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/format.rs:1017:10
     |
1017 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
    --> src/format.rs:1086:10
     |
1086 | pub type C2RustUnnamed_33 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `job_free_cb` should have an upper camel case name
    --> src/format.rs:1159:10
     |
1159 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
    --> src/format.rs:1160:10
     |
1160 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
    --> src/format.rs:1161:10
     |
1161 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_37` should have an upper camel case name
    --> src/format.rs:1162:10
     |
1162 | pub type C2RustUnnamed_37 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed37`

warning: operator precedence can trip the unwary
    --> src/format.rs:2918:14
     |
2918 |           if !(*((*wp).base.tabs).offset((i >> 3 as libc::c_int) as isize) as libc::c_int
     |  ______________^
2919 | |             & (1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int) == 0)
     | |_____________________________________________________________________^ help: consider parenthesizing your expression: `*((*wp).base.tabs).offset((i >> 3 as libc::c_int) as isize) as libc::c_int & ((1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/format.rs:3420:17
     |
3420 | /                 if !(*__errno_location() == 34 as libc::c_int
3421 | |                     && (limit
3422 | |                         == -(9223372036854775807 as libc::c_long) - 1 as libc::c_long
3423 | |                         || limit == 9223372036854775807 as libc::c_long))
...    |
3428 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3420 ~                 if !(*__errno_location() == 34 as libc::c_int
3421 +                     && (limit
3422 +                         == -(9223372036854775807 as libc::c_long) - 1 as libc::c_long
3423 +                         || limit == 9223372036854775807 as libc::c_long)) && !(*endptr as libc::c_int != ':' as i32) {
3424 +                     copy = endptr.offset(1 as libc::c_int as isize);
3425 +                 }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/grid.rs:45:10
   |
45 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/grid.rs:46:10
   |
46 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/grid.rs:47:10
   |
47 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__time_t` should have an upper camel case name
  --> src/grid.rs:48:10
   |
48 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/grid.rs:49:10
   |
49 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/grid.rs:50:10
   |
50 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/grid.rs:51:10
   |
51 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/grid.rs:52:10
   |
52 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
  --> src/grid.rs:53:10
   |
53 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_char` should have an upper camel case name
  --> src/grid_view.rs:30:10
   |
30 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/grid_view.rs:31:10
   |
31 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/grid_view.rs:32:10
   |
32 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_char` should have an upper camel case name
  --> src/grid_view.rs:33:10
   |
33 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/grid_view.rs:34:10
   |
34 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/grid_view.rs:35:10
   |
35 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
  --> src/grid_view.rs:36:10
   |
36 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_char` should have an upper camel case name
  --> src/hooks.rs:22:10
   |
22 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/hooks.rs:23:10
   |
23 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/hooks.rs:24:10
   |
24 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/hooks.rs:25:10
   |
25 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/hooks.rs:26:10
   |
26 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/hooks.rs:27:10
   |
27 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/hooks.rs:28:10
   |
28 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/hooks.rs:29:10
   |
29 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/hooks.rs:30:10
   |
30 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/hooks.rs:31:10
   |
31 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/hooks.rs:32:10
   |
32 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/hooks.rs:33:10
   |
33 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/hooks.rs:34:10
   |
34 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/hooks.rs:41:10
   |
41 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/hooks.rs:148:10
    |
148 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/hooks.rs:151:10
    |
151 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/hooks.rs:160:10
    |
160 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/hooks.rs:161:10
    |
161 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/hooks.rs:162:10
    |
162 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/hooks.rs:175:10
    |
175 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/hooks.rs:388:10
    |
388 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/hooks.rs:391:10
    |
391 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `key_code` should have an upper camel case name
   --> src/hooks.rs:522:10
    |
522 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_17` should have an upper camel case name
   --> src/hooks.rs:570:10
    |
570 | pub type C2RustUnnamed_17 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed17`

warning: type `layout_type` should have an upper camel case name
   --> src/hooks.rs:640:10
    |
640 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `cmdq_type` should have an upper camel case name
   --> src/hooks.rs:741:10
    |
741 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/hooks.rs:757:10
    |
757 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_28` should have an upper camel case name
   --> src/hooks.rs:779:10
    |
779 | pub type C2RustUnnamed_28 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed28`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/hooks.rs:782:10
    |
782 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/hooks.rs:783:10
    |
783 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `C2RustUnnamed_33` should have an upper camel case name
   --> src/hooks.rs:906:10
    |
906 | pub type C2RustUnnamed_33 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `__u_char` should have an upper camel case name
   --> src/input.rs:153:10
    |
153 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/input.rs:154:10
    |
154 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/input.rs:155:10
    |
155 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/input.rs:156:10
    |
156 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/input.rs:157:10
    |
157 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/input.rs:158:10
    |
158 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/input.rs:159:10
    |
159 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/input.rs:160:10
    |
160 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/input.rs:161:10
    |
161 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/input.rs:162:10
    |
162 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/input.rs:163:10
    |
163 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/input.rs:164:10
    |
164 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/input.rs:165:10
    |
165 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/input.rs:166:10
    |
166 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/input.rs:167:10
    |
167 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/input.rs:174:10
    |
174 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/input.rs:175:10
    |
175 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/input.rs:284:10
    |
284 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/input.rs:287:10
    |
287 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/input.rs:296:10
    |
296 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/input.rs:297:10
    |
297 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/input.rs:298:10
    |
298 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/input.rs:311:10
    |
311 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/input.rs:675:10
    |
675 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/input.rs:717:10
    |
717 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/input.rs:817:10
    |
817 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `layout_type` should have an upper camel case name
   --> src/input.rs:842:10
    |
842 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_25` should have an upper camel case name
   --> src/input.rs:858:10
    |
858 | pub type C2RustUnnamed_25 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed25`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/input.rs:861:10
    |
861 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/input.rs:862:10
    |
862 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/input.rs:994:10
    |
994 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/input.rs:997:10
    |
997 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
    --> src/input.rs:1011:10
     |
1011 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/input.rs:1027:10
     |
1027 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_34` should have an upper camel case name
    --> src/input.rs:1096:10
     |
1096 | pub type C2RustUnnamed_34 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `utf8_state` should have an upper camel case name
    --> src/input.rs:1120:10
     |
1120 | pub type utf8_state = libc::c_uint;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `input_esc_type` should have an upper camel case name
    --> src/input.rs:1179:10
     |
1179 | pub type input_esc_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `InputEscType`

warning: type `input_csi_type` should have an upper camel case name
    --> src/input.rs:1180:10
     |
1180 | pub type input_csi_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `InputCsiType`

warning: operator precedence can trip the unwary
    --> src/input.rs:4203:24
     |
4203 |                       if *((*s).tabs).offset(((*s).cx >> 3 as libc::c_int) as isize)
     |  ________________________^
4204 | |                         as libc::c_int
4205 | |                         & (1 as libc::c_int) << ((*s).cx & 0x7 as libc::c_int as u_int)
     | |_______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4203 ~                     if *((*s).tabs).offset(((*s).cx >> 3 as libc::c_int) as isize)
4204 +                         as libc::c_int & ((1 as libc::c_int) << ((*s).cx & 0x7 as libc::c_int as u_int))
     |

warning: operator precedence can trip the unwary
    --> src/input.rs:4319:28
     |
4319 |                   *fresh4 = (*fresh4 as libc::c_int
     |  ____________________________^
4320 | |                     | (1 as libc::c_int) << ((*s).cx & 0x7 as libc::c_int as u_int))
     | |___________________________________________________________________________________^ help: consider parenthesizing your expression: `*fresh4 as libc::c_int | ((1 as libc::c_int) << ((*s).cx & 0x7 as libc::c_int as u_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/input.rs:4446:32
     |
4446 |   ...                   && *((*s).tabs).offset((cx >> 3 as libc::c_int) as isize)
     |  __________________________^
4447 | | ...                       as libc::c_int
4448 | | ...                       & (1 as libc::c_int) << (cx & 0x7 as libc::c_int as u_int)
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4446 ~                             && *((*s).tabs).offset((cx >> 3 as libc::c_int) as isize)
4447 +                                 as libc::c_int & ((1 as libc::c_int) << (cx & 0x7 as libc::c_int as u_int))
     |

warning: this `if` statement can be collapsed
    --> src/input.rs:4801:13
     |
4801 | /             if !(n == -(1 as libc::c_int)) {
4802 | |                 if !((*ictx).last == -(1 as libc::c_int)) {
4803 | |                     (*ictx).ch = (*ictx).last;
4804 | |                     i = 0 as libc::c_int;
...    |
4811 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4801 ~             if !(n == -(1 as libc::c_int)) && !((*ictx).last == -(1 as libc::c_int)) {
4802 +                 (*ictx).ch = (*ictx).last;
4803 +                 i = 0 as libc::c_int;
4804 +                 while i < n {
4805 +                     input_print(ictx);
4806 +                     i += 1;
4807 +                     i;
4808 +                 }
4809 +             }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/input_keys.rs:43:10
   |
43 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/input_keys.rs:44:10
   |
44 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/input_keys.rs:45:10
   |
45 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/input_keys.rs:46:10
   |
46 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/input_keys.rs:47:10
   |
47 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/input_keys.rs:48:10
   |
48 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/input_keys.rs:49:10
   |
49 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/input_keys.rs:50:10
   |
50 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/input_keys.rs:51:10
   |
51 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/input_keys.rs:52:10
   |
52 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/input_keys.rs:53:10
   |
53 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/input_keys.rs:54:10
   |
54 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/input_keys.rs:55:10
   |
55 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
  --> src/input_keys.rs:62:10
   |
62 | pub type wchar_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `uint8_t` should have an upper camel case name
  --> src/input_keys.rs:63:10
   |
63 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/input_keys.rs:170:10
    |
170 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/input_keys.rs:173:10
    |
173 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/input_keys.rs:182:10
    |
182 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/input_keys.rs:183:10
    |
183 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/input_keys.rs:184:10
    |
184 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/input_keys.rs:197:10
    |
197 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/input_keys.rs:561:10
    |
561 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/input_keys.rs:603:10
    |
603 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/input_keys.rs:648:10
    |
648 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/input_keys.rs:664:10
    |
664 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/input_keys.rs:667:10
    |
667 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/input_keys.rs:668:10
    |
668 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/input_keys.rs:800:10
    |
800 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/input_keys.rs:803:10
    |
803 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/input_keys.rs:817:10
    |
817 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/input_keys.rs:833:10
    |
833 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/input_keys.rs:902:10
    |
902 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
   --> src/input_keys.rs:926:10
    |
926 | pub type C2RustUnnamed_34 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `utf8_state` should have an upper camel case name
    --> src/input_keys.rs:1036:10
     |
1036 | pub type utf8_state = libc::c_uint;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: operator precedence can trip the unwary
    --> src/input_keys.rs:1694:18
     |
1694 |             ) = (c >> 6 as libc::c_int | 0xc0 as libc::c_int as u_int) as u_char;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 6 as libc::c_int) | 0xc0 as libc::c_int as u_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/input_keys.rs:1804:9
     |
1804 | /         if !((*ike).flags & 0x1 as libc::c_int != 0
1805 | |             && (*(*wp).screen).mode & 0x8 as libc::c_int == 0)
1806 | |         {
1807 | |             if !((*ike).flags & 0x2 as libc::c_int != 0
...    |
1819 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1804 ~         if !((*ike).flags & 0x1 as libc::c_int != 0
1805 +             && (*(*wp).screen).mode & 0x8 as libc::c_int == 0) && !((*ike).flags & 0x2 as libc::c_int != 0
1806 +                 && (*(*wp).screen).mode & 0x4 as libc::c_int == 0) {
1807 +             if key & 0x200000000000 as libc::c_ulonglong != 0
1808 +                 && (*ike).key | 0x200000000000 as libc::c_ulonglong == key
1809 +             {
1810 +                 break;
1811 +             }
1812 +             if (*ike).key == key {
1813 +                 break;
1814 +             }
1815 +         }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/job.rs:68:10
   |
68 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/job.rs:69:10
   |
69 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/job.rs:70:10
   |
70 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/job.rs:71:10
   |
71 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/job.rs:72:10
   |
72 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/job.rs:73:10
   |
73 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/job.rs:74:10
   |
74 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/job.rs:75:10
   |
75 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/job.rs:76:10
   |
76 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/job.rs:77:10
   |
77 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/job.rs:78:10
   |
78 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/job.rs:79:10
   |
79 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/job.rs:80:10
   |
80 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
  --> src/job.rs:86:10
   |
86 | pub type sigset_t = __sigset_t;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `__socket_type` should have an upper camel case name
  --> src/job.rs:93:10
   |
93 | pub type __socket_type = libc::c_uint;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocketType`

warning: type `uint8_t` should have an upper camel case name
   --> src/job.rs:107:10
    |
107 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/job.rs:214:10
    |
214 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/job.rs:217:10
    |
217 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/job.rs:226:10
    |
226 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/job.rs:227:10
    |
227 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/job.rs:228:10
    |
228 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/job.rs:241:10
    |
241 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/job.rs:605:10
    |
605 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/job.rs:647:10
    |
647 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/job.rs:692:10
    |
692 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/job.rs:708:10
    |
708 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/job.rs:711:10
    |
711 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/job.rs:712:10
    |
712 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/job.rs:844:10
    |
844 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/job.rs:847:10
    |
847 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/job.rs:861:10
    |
861 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/job.rs:877:10
    |
877 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
   --> src/job.rs:946:10
    |
946 | pub type C2RustUnnamed_33 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `job_free_cb` should have an upper camel case name
   --> src/job.rs:992:10
    |
992 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
   --> src/job.rs:993:10
    |
993 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
   --> src/job.rs:994:10
    |
994 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_36` should have an upper camel case name
   --> src/job.rs:995:10
    |
995 | pub type C2RustUnnamed_36 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed36`

warning: type `__u_char` should have an upper camel case name
  --> src/key_bindings.rs:46:10
   |
46 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/key_bindings.rs:47:10
   |
47 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/key_bindings.rs:48:10
   |
48 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/key_bindings.rs:49:10
   |
49 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/key_bindings.rs:50:10
   |
50 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/key_bindings.rs:51:10
   |
51 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/key_bindings.rs:52:10
   |
52 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/key_bindings.rs:53:10
   |
53 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/key_bindings.rs:54:10
   |
54 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/key_bindings.rs:55:10
   |
55 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/key_bindings.rs:56:10
   |
56 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/key_bindings.rs:57:10
   |
57 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/key_bindings.rs:58:10
   |
58 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/key_bindings.rs:65:10
   |
65 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/key_bindings.rs:172:10
    |
172 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/key_bindings.rs:175:10
    |
175 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/key_bindings.rs:184:10
    |
184 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/key_bindings.rs:185:10
    |
185 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/key_bindings.rs:186:10
    |
186 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/key_bindings.rs:199:10
    |
199 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/key_bindings.rs:563:10
    |
563 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/key_bindings.rs:605:10
    |
605 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/key_bindings.rs:650:10
    |
650 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/key_bindings.rs:666:10
    |
666 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/key_bindings.rs:669:10
    |
669 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/key_bindings.rs:670:10
    |
670 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/key_bindings.rs:802:10
    |
802 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/key_bindings.rs:805:10
    |
805 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/key_bindings.rs:819:10
    |
819 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/key_bindings.rs:835:10
    |
835 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/key_bindings.rs:904:10
    |
904 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/key_string.rs:34:10
   |
34 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_int` should have an upper camel case name
  --> src/key_string.rs:35:10
   |
35 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_char` should have an upper camel case name
  --> src/key_string.rs:36:10
   |
36 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_int` should have an upper camel case name
  --> src/key_string.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
  --> src/key_string.rs:38:10
   |
38 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
  --> src/key_string.rs:39:10
   |
39 | pub type wchar_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `key_code` should have an upper camel case name
  --> src/key_string.rs:48:10
   |
48 | pub type key_code = libc::c_ulonglong;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `utf8_state` should have an upper camel case name
   --> src/key_string.rs:159:10
    |
159 | pub type utf8_state = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: this `if` statement can be collapsed
    --> src/key_string.rs:1210:5
     |
1210 | /     if key > 127 as libc::c_int as key_code && key < 0x10000000 as libc::c_ulonglong {
1211 | |         if utf8_split(key as wchar_t, &mut ud) as libc::c_uint
1212 | |             == UTF8_DONE as libc::c_int as libc::c_uint
...    |
1224 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1210 ~     if key > 127 as libc::c_int as key_code && key < 0x10000000 as libc::c_ulonglong && utf8_split(key as wchar_t, &mut ud) as libc::c_uint == UTF8_DONE as libc::c_int as libc::c_uint {
1211 +         off = strlen(out.as_mut_ptr());
1212 +         memcpy(
1213 +             out.as_mut_ptr().offset(off as isize) as *mut libc::c_void,
1214 +             (ud.data).as_mut_ptr() as *const libc::c_void,
1215 +             ud.size as libc::c_ulong,
1216 +         );
1217 +         out[off.wrapping_add(ud.size as size_t)
1218 +             as usize] = '\0' as i32 as libc::c_char;
1219 +         return out.as_mut_ptr();
1220 +     }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/layout.rs:24:10
   |
24 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/layout.rs:25:10
   |
25 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/layout.rs:26:10
   |
26 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/layout.rs:27:10
   |
27 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/layout.rs:28:10
   |
28 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/layout.rs:29:10
   |
29 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/layout.rs:30:10
   |
30 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/layout.rs:31:10
   |
31 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/layout.rs:32:10
   |
32 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/layout.rs:33:10
   |
33 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/layout.rs:34:10
   |
34 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/layout.rs:35:10
   |
35 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/layout.rs:36:10
   |
36 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/layout.rs:43:10
   |
43 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/layout.rs:150:10
    |
150 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/layout.rs:153:10
    |
153 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/layout.rs:162:10
    |
162 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/layout.rs:163:10
    |
163 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/layout.rs:164:10
    |
164 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/layout.rs:177:10
    |
177 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/layout.rs:541:10
    |
541 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/layout.rs:583:10
    |
583 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/layout.rs:628:10
    |
628 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/layout.rs:644:10
    |
644 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/layout.rs:647:10
    |
647 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/layout.rs:648:10
    |
648 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/layout.rs:780:10
    |
780 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/layout.rs:783:10
    |
783 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/layout.rs:797:10
    |
797 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/layout.rs:813:10
    |
813 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/layout.rs:882:10
    |
882 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/layout.rs:1676:13
     |
1676 | /             if !((*lcchild).type_0 as libc::c_uint
1677 | |                 == LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint)
1678 | |             {
1679 | |                 if layout_set_size_check(w, lcchild, type_0, size) == 0 {
...    |
1682 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1676 ~             if !((*lcchild).type_0 as libc::c_uint
1677 +                 == LAYOUT_WINDOWPANE as libc::c_int as libc::c_uint) && layout_set_size_check(w, lcchild, type_0, size) == 0 {
1678 +                 return 0 as libc::c_int;
1679 +             }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/layout_custom.rs:52:10
   |
52 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/layout_custom.rs:53:10
   |
53 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/layout_custom.rs:54:10
   |
54 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/layout_custom.rs:55:10
   |
55 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/layout_custom.rs:56:10
   |
56 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/layout_custom.rs:57:10
   |
57 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/layout_custom.rs:58:10
   |
58 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/layout_custom.rs:59:10
   |
59 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/layout_custom.rs:60:10
   |
60 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/layout_custom.rs:61:10
   |
61 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/layout_custom.rs:62:10
   |
62 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/layout_custom.rs:63:10
   |
63 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/layout_custom.rs:64:10
   |
64 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/layout_custom.rs:84:10
   |
84 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/layout_custom.rs:191:10
    |
191 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/layout_custom.rs:194:10
    |
194 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/layout_custom.rs:203:10
    |
203 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/layout_custom.rs:204:10
    |
204 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/layout_custom.rs:205:10
    |
205 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/layout_custom.rs:218:10
    |
218 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/layout_custom.rs:582:10
    |
582 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/layout_custom.rs:624:10
    |
624 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/layout_custom.rs:669:10
    |
669 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/layout_custom.rs:685:10
    |
685 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/layout_custom.rs:688:10
    |
688 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/layout_custom.rs:689:10
    |
689 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/layout_custom.rs:821:10
    |
821 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/layout_custom.rs:824:10
    |
824 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/layout_custom.rs:838:10
    |
838 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/layout_custom.rs:854:10
    |
854 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
   --> src/layout_custom.rs:923:10
    |
923 | pub type C2RustUnnamed_33 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `__u_char` should have an upper camel case name
  --> src/layout_set.rs:42:10
   |
42 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/layout_set.rs:43:10
   |
43 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/layout_set.rs:44:10
   |
44 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/layout_set.rs:45:10
   |
45 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/layout_set.rs:46:10
   |
46 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/layout_set.rs:47:10
   |
47 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/layout_set.rs:48:10
   |
48 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/layout_set.rs:49:10
   |
49 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/layout_set.rs:50:10
   |
50 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/layout_set.rs:51:10
   |
51 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/layout_set.rs:52:10
   |
52 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/layout_set.rs:53:10
   |
53 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/layout_set.rs:54:10
   |
54 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/layout_set.rs:61:10
   |
61 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/layout_set.rs:168:10
    |
168 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/layout_set.rs:171:10
    |
171 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/layout_set.rs:180:10
    |
180 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/layout_set.rs:181:10
    |
181 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/layout_set.rs:182:10
    |
182 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/layout_set.rs:195:10
    |
195 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/layout_set.rs:559:10
    |
559 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/layout_set.rs:601:10
    |
601 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/layout_set.rs:646:10
    |
646 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/layout_set.rs:662:10
    |
662 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/layout_set.rs:665:10
    |
665 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/layout_set.rs:666:10
    |
666 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/layout_set.rs:798:10
    |
798 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/layout_set.rs:801:10
    |
801 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/layout_set.rs:815:10
    |
815 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/layout_set.rs:831:10
    |
831 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/layout_set.rs:900:10
    |
900 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__off_t` should have an upper camel case name
  --> src/log.rs:46:10
   |
46 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/log.rs:47:10
   |
47 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
  --> src/log.rs:48:10
   |
48 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/log.rs:49:10
   |
49 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/log.rs:50:10
   |
50 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `size_t` should have an upper camel case name
  --> src/log.rs:51:10
   |
51 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/log.rs:91:10
   |
91 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `event_log_cb` should have an upper camel case name
  --> src/log.rs:93:10
   |
93 | pub type event_log_cb = Option::<
   |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `EventLogCb`

warning: type `__u_char` should have an upper camel case name
   --> src/mode_tree.rs:114:10
    |
114 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/mode_tree.rs:115:10
    |
115 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/mode_tree.rs:116:10
    |
116 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/mode_tree.rs:117:10
    |
117 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/mode_tree.rs:118:10
    |
118 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/mode_tree.rs:119:10
    |
119 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/mode_tree.rs:120:10
    |
120 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/mode_tree.rs:121:10
    |
121 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/mode_tree.rs:122:10
    |
122 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/mode_tree.rs:123:10
    |
123 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/mode_tree.rs:124:10
    |
124 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/mode_tree.rs:125:10
    |
125 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/mode_tree.rs:126:10
    |
126 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/mode_tree.rs:127:10
    |
127 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/mode_tree.rs:128:10
    |
128 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/mode_tree.rs:129:10
    |
129 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/mode_tree.rs:136:10
    |
136 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint64_t` should have an upper camel case name
   --> src/mode_tree.rs:137:10
    |
137 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/mode_tree.rs:244:10
    |
244 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/mode_tree.rs:247:10
    |
247 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/mode_tree.rs:256:10
    |
256 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/mode_tree.rs:257:10
    |
257 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/mode_tree.rs:258:10
    |
258 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/mode_tree.rs:271:10
    |
271 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/mode_tree.rs:635:10
    |
635 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/mode_tree.rs:677:10
    |
677 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/mode_tree.rs:722:10
    |
722 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/mode_tree.rs:738:10
    |
738 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/mode_tree.rs:741:10
    |
741 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/mode_tree.rs:742:10
    |
742 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/mode_tree.rs:874:10
    |
874 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/mode_tree.rs:877:10
    |
877 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/mode_tree.rs:891:10
    |
891 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/mode_tree.rs:907:10
    |
907 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/mode_tree.rs:976:10
    |
976 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `mode_tree_search_cb` should have an upper camel case name
    --> src/mode_tree.rs:1063:10
     |
1063 | pub type mode_tree_search_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeSearchCb`

warning: type `mode_tree_draw_cb` should have an upper camel case name
    --> src/mode_tree.rs:1070:10
     |
1070 | pub type mode_tree_draw_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeDrawCb`

warning: type `mode_tree_build_cb` should have an upper camel case name
    --> src/mode_tree.rs:1092:10
     |
1092 | pub type mode_tree_build_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeBuildCb`

warning: type `C2RustUnnamed_35` should have an upper camel case name
    --> src/mode_tree.rs:1100:10
     |
1100 | pub type C2RustUnnamed_35 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `mode_tree_each_cb` should have an upper camel case name
    --> src/mode_tree.rs:1210:10
     |
1210 | pub type mode_tree_each_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeEachCb`

warning: type `__u_char` should have an upper camel case name
  --> src/names.rs:74:10
   |
74 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/names.rs:75:10
   |
75 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/names.rs:76:10
   |
76 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/names.rs:77:10
   |
77 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/names.rs:78:10
   |
78 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/names.rs:79:10
   |
79 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/names.rs:80:10
   |
80 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/names.rs:81:10
   |
81 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/names.rs:82:10
   |
82 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/names.rs:83:10
   |
83 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/names.rs:84:10
   |
84 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/names.rs:85:10
   |
85 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/names.rs:86:10
   |
86 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/names.rs:106:10
    |
106 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/names.rs:213:10
    |
213 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/names.rs:216:10
    |
216 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/names.rs:225:10
    |
225 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/names.rs:226:10
    |
226 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/names.rs:227:10
    |
227 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/names.rs:240:10
    |
240 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/names.rs:604:10
    |
604 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/names.rs:646:10
    |
646 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/names.rs:691:10
    |
691 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/names.rs:707:10
    |
707 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/names.rs:710:10
    |
710 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/names.rs:711:10
    |
711 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/names.rs:843:10
    |
843 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/names.rs:846:10
    |
846 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/names.rs:860:10
    |
860 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/names.rs:876:10
    |
876 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
   --> src/names.rs:945:10
    |
945 | pub type C2RustUnnamed_33 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `__u_char` should have an upper camel case name
  --> src/notify.rs:90:10
   |
90 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/notify.rs:91:10
   |
91 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/notify.rs:92:10
   |
92 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/notify.rs:93:10
   |
93 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/notify.rs:94:10
   |
94 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/notify.rs:95:10
   |
95 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/notify.rs:96:10
   |
96 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/notify.rs:97:10
   |
97 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/notify.rs:98:10
   |
98 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/notify.rs:99:10
   |
99 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/notify.rs:100:10
    |
100 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/notify.rs:101:10
    |
101 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/notify.rs:102:10
    |
102 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/notify.rs:109:10
    |
109 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/notify.rs:216:10
    |
216 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/notify.rs:219:10
    |
219 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/notify.rs:228:10
    |
228 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/notify.rs:229:10
    |
229 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/notify.rs:230:10
    |
230 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/notify.rs:243:10
    |
243 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/notify.rs:607:10
    |
607 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/notify.rs:649:10
    |
649 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/notify.rs:694:10
    |
694 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/notify.rs:710:10
    |
710 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/notify.rs:713:10
    |
713 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/notify.rs:714:10
    |
714 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/notify.rs:846:10
    |
846 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/notify.rs:849:10
    |
849 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/notify.rs:863:10
    |
863 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/notify.rs:879:10
    |
879 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/notify.rs:948:10
    |
948 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
  --> src/options.rs:69:10
   |
69 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/options.rs:70:10
   |
70 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/options.rs:71:10
   |
71 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/options.rs:72:10
   |
72 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/options.rs:73:10
   |
73 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/options.rs:74:10
   |
74 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/options.rs:75:10
   |
75 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/options.rs:76:10
   |
76 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/options.rs:77:10
   |
77 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/options.rs:78:10
   |
78 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/options.rs:79:10
   |
79 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/options.rs:80:10
   |
80 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/options.rs:81:10
   |
81 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/options.rs:101:10
    |
101 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/options.rs:208:10
    |
208 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/options.rs:211:10
    |
211 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/options.rs:220:10
    |
220 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/options.rs:221:10
    |
221 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/options.rs:222:10
    |
222 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/options.rs:235:10
    |
235 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `options_table_scope` should have an upper camel case name
   --> src/options.rs:428:10
    |
428 | pub type options_table_scope = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: type `options_table_type` should have an upper camel case name
   --> src/options.rs:433:10
    |
433 | pub type options_table_type = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `key_code` should have an upper camel case name
   --> src/options.rs:670:10
    |
670 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/options.rs:712:10
    |
712 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `layout_type` should have an upper camel case name
   --> src/options.rs:757:10
    |
757 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_27` should have an upper camel case name
   --> src/options.rs:773:10
    |
773 | pub type C2RustUnnamed_27 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed27`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/options.rs:776:10
    |
776 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/options.rs:777:10
    |
777 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/options.rs:909:10
    |
909 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/options.rs:912:10
    |
912 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/options.rs:926:10
    |
926 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/options.rs:942:10
    |
942 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_36` should have an upper camel case name
    --> src/options.rs:1011:10
     |
1011 | pub type C2RustUnnamed_36 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed36`

warning: type `__u_int` should have an upper camel case name
 --> src/options_table.rs:2:10
  |
2 | pub type __u_int = libc::c_uint;
  |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_int` should have an upper camel case name
 --> src/options_table.rs:3:10
  |
3 | pub type u_int = __u_int;
  |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `options_table_type` should have an upper camel case name
 --> src/options_table.rs:4:10
  |
4 | pub type options_table_type = libc::c_uint;
  |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `options_table_scope` should have an upper camel case name
  --> src/options_table.rs:14:10
   |
14 | pub type options_table_scope = libc::c_uint;
   |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: type `__off_t` should have an upper camel case name
  --> src/osdep_linux.rs:32:10
   |
32 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/osdep_linux.rs:33:10
   |
33 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
  --> src/osdep_linux.rs:34:10
   |
34 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/osdep_linux.rs:35:10
   |
35 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `pid_t` should have an upper camel case name
  --> src/osdep_linux.rs:36:10
   |
36 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/osdep_linux.rs:37:10
   |
37 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `size_t` should have an upper camel case name
  --> src/osdep_linux.rs:38:10
   |
38 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/osdep_linux.rs:72:10
   |
72 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__u_int` should have an upper camel case name
  --> src/paste.rs:29:10
   |
29 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__time_t` should have an upper camel case name
  --> src/paste.rs:30:10
   |
30 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `u_int` should have an upper camel case name
  --> src/paste.rs:31:10
   |
31 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `time_t` should have an upper camel case name
  --> src/paste.rs:32:10
   |
32 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/paste.rs:33:10
   |
33 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_char` should have an upper camel case name
  --> src/proc.rs:57:10
   |
57 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__uint8_t` should have an upper camel case name
  --> src/proc.rs:58:10
   |
58 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/proc.rs:59:10
   |
59 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/proc.rs:60:10
   |
60 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__uid_t` should have an upper camel case name
  --> src/proc.rs:61:10
   |
61 | pub type __uid_t = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__pid_t` should have an upper camel case name
  --> src/proc.rs:62:10
   |
62 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__clock_t` should have an upper camel case name
  --> src/proc.rs:63:10
   |
63 | pub type __clock_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `ClockT`

warning: type `__time_t` should have an upper camel case name
  --> src/proc.rs:64:10
   |
64 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/proc.rs:65:10
   |
65 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/proc.rs:66:10
   |
66 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/proc.rs:67:10
   |
67 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `pid_t` should have an upper camel case name
  --> src/proc.rs:68:10
   |
68 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/proc.rs:69:10
   |
69 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `size_t` should have an upper camel case name
  --> src/proc.rs:70:10
   |
70 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
  --> src/proc.rs:76:10
   |
76 | pub type sigset_t = __sigset_t;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `uint8_t` should have an upper camel case name
  --> src/proc.rs:93:10
   |
93 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
  --> src/proc.rs:94:10
   |
94 | pub type uint16_t = __uint16_t;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
  --> src/proc.rs:95:10
   |
95 | pub type uint32_t = __uint32_t;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__sigval_t` should have an upper camel case name
   --> src/proc.rs:102:10
    |
102 | pub type __sigval_t = sigval;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `SigvalT`

warning: type `__sighandler_t` should have an upper camel case name
   --> src/proc.rs:272:10
    |
272 | pub type __sighandler_t = Option::<unsafe extern "C" fn(libc::c_int) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SighandlerT`

warning: type `msgtype` should have an upper camel case name
   --> src/proc.rs:393:10
    |
393 | pub type msgtype = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: this `if` statement can be collapsed
   --> src/proc.rs:480:5
    |
480 | /     if events as libc::c_int & 0x4 as libc::c_int != 0 {
481 | |         if msgbuf_write(&mut (*peer).ibuf.w) <= 0 as libc::c_int
482 | |             && *__errno_location() != 11 as libc::c_int
...   |
488 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
480 ~     if events as libc::c_int & 0x4 as libc::c_int != 0 && msgbuf_write(&mut (*peer).ibuf.w) <= 0 as libc::c_int && *__errno_location() != 11 as libc::c_int {
481 +         ((*peer).dispatchcb)
482 +             .expect("non-null function pointer")(0 as *mut imsg, (*peer).arg);
483 +         return;
484 +     }
    |

warning: type `__u_char` should have an upper camel case name
  --> src/resize.rs:36:10
   |
36 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/resize.rs:37:10
   |
37 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/resize.rs:38:10
   |
38 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/resize.rs:39:10
   |
39 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/resize.rs:40:10
   |
40 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/resize.rs:41:10
   |
41 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/resize.rs:42:10
   |
42 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/resize.rs:43:10
   |
43 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/resize.rs:44:10
   |
44 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/resize.rs:45:10
   |
45 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/resize.rs:46:10
   |
46 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/resize.rs:47:10
   |
47 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/resize.rs:48:10
   |
48 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
  --> src/resize.rs:55:10
   |
55 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/resize.rs:162:10
    |
162 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/resize.rs:165:10
    |
165 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/resize.rs:174:10
    |
174 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/resize.rs:175:10
    |
175 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/resize.rs:176:10
    |
176 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/resize.rs:189:10
    |
189 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/resize.rs:553:10
    |
553 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/resize.rs:595:10
    |
595 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/resize.rs:640:10
    |
640 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/resize.rs:656:10
    |
656 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/resize.rs:659:10
    |
659 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/resize.rs:660:10
    |
660 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/resize.rs:792:10
    |
792 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/resize.rs:795:10
    |
795 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/resize.rs:809:10
    |
809 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/resize.rs:825:10
    |
825 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/resize.rs:894:10
    |
894 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
   --> src/resize.rs:958:13
    |
958 | /             if !((*c).flags & 0x40 as libc::c_int != 0) {
959 | |                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 | |                     == 0x2000 as libc::c_int)
...   |
986 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
958 ~             if !((*c).flags & 0x40 as libc::c_int != 0) && !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
959 +                     == 0x2000 as libc::c_int) {
960 +                 if (*c).session == s {
961 +                     if (*c).tty.sx < ssx {
962 +                         ssx = (*c).tty.sx;
963 +                     }
964 +                     (*c).flags &= !(0x800000 as libc::c_int);
965 +                     if lines != 0 as libc::c_int as u_int
966 +                         && lines.wrapping_add(2 as libc::c_int as u_int)
967 +                             > (*c).tty.sy
968 +                     {
969 +                         (*c).flags |= 0x800000 as libc::c_int;
970 +                     }
971 +                     if !(*c).flags & 0x800000 as libc::c_int != 0
972 +                         && (*c).flags & 0x2000 as libc::c_int == 0
973 +                         && (*c).tty.sy > lines
974 +                         && ((*c).tty.sy).wrapping_sub(lines) < ssy
975 +                     {
976 +                         ssy = ((*c).tty.sy).wrapping_sub(lines);
977 +                     } else if (*c).tty.sy < ssy {
978 +                         ssy = (*c).tty.sy;
979 +                     }
980 +                     (*s).attached = ((*s).attached).wrapping_add(1);
981 +                     (*s).attached;
982 +                 }
983 +             }
    |

warning: this `if` statement can be collapsed
   --> src/resize.rs:959:17
    |
959 | /                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 | |                     == 0x2000 as libc::c_int)
961 | |                 {
962 | |                     if (*c).session == s {
...   |
985 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
959 ~                 if !((*c).flags & (0x2000 as libc::c_int | 0x400000 as libc::c_int)
960 +                     == 0x2000 as libc::c_int) && (*c).session == s {
961 +                     if (*c).tty.sx < ssx {
962 +                         ssx = (*c).tty.sx;
963 +                     }
964 +                     (*c).flags &= !(0x800000 as libc::c_int);
965 +                     if lines != 0 as libc::c_int as u_int
966 +                         && lines.wrapping_add(2 as libc::c_int as u_int)
967 +                             > (*c).tty.sy
968 +                     {
969 +                         (*c).flags |= 0x800000 as libc::c_int;
970 +                     }
971 +                     if !(*c).flags & 0x800000 as libc::c_int != 0
972 +                         && (*c).flags & 0x2000 as libc::c_int == 0
973 +                         && (*c).tty.sy > lines
974 +                         && ((*c).tty.sy).wrapping_sub(lines) < ssy
975 +                     {
976 +                         ssy = ((*c).tty.sy).wrapping_sub(lines);
977 +                     } else if (*c).tty.sy < ssy {
978 +                         ssy = (*c).tty.sy;
979 +                     }
980 +                     (*s).attached = ((*s).attached).wrapping_add(1);
981 +                     (*s).attached;
982 +                 }
    |

warning: type `__u_char` should have an upper camel case name
  --> src/screen.rs:32:10
   |
32 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/screen.rs:33:10
   |
33 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/screen.rs:34:10
   |
34 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_char` should have an upper camel case name
  --> src/screen.rs:35:10
   |
35 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/screen.rs:36:10
   |
36 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/screen.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
  --> src/screen.rs:38:10
   |
38 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `bitstr_t` should have an upper camel case name
  --> src/screen.rs:39:10
   |
39 | pub type bitstr_t = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: operator precedence can trip the unwary
   --> src/screen.rs:230:20
    |
230 |           *fresh0 = (*fresh0 as libc::c_int
    |  ____________________^
231 | |             | (1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int)) as bitstr_t;
    | |_____________________________________________________________________^ help: consider parenthesizing your expression: `*fresh0 as libc::c_int | ((1 as libc::c_int) << (i & 0x7 as libc::c_int as u_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `__u_char` should have an upper camel case name
   --> src/screen_redraw.rs:101:10
    |
101 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/screen_redraw.rs:102:10
    |
102 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/screen_redraw.rs:103:10
    |
103 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/screen_redraw.rs:104:10
    |
104 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/screen_redraw.rs:105:10
    |
105 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/screen_redraw.rs:106:10
    |
106 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/screen_redraw.rs:107:10
    |
107 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/screen_redraw.rs:108:10
    |
108 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/screen_redraw.rs:109:10
    |
109 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/screen_redraw.rs:110:10
    |
110 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/screen_redraw.rs:111:10
    |
111 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/screen_redraw.rs:112:10
    |
112 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/screen_redraw.rs:113:10
    |
113 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/screen_redraw.rs:114:10
    |
114 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/screen_redraw.rs:115:10
    |
115 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/screen_redraw.rs:122:10
    |
122 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/screen_redraw.rs:229:10
    |
229 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/screen_redraw.rs:232:10
    |
232 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/screen_redraw.rs:241:10
    |
241 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/screen_redraw.rs:242:10
    |
242 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/screen_redraw.rs:243:10
    |
243 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/screen_redraw.rs:256:10
    |
256 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/screen_redraw.rs:620:10
    |
620 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/screen_redraw.rs:662:10
    |
662 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/screen_redraw.rs:707:10
    |
707 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/screen_redraw.rs:723:10
    |
723 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/screen_redraw.rs:726:10
    |
726 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/screen_redraw.rs:727:10
    |
727 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/screen_redraw.rs:859:10
    |
859 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/screen_redraw.rs:862:10
    |
862 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/screen_redraw.rs:876:10
    |
876 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/screen_redraw.rs:892:10
    |
892 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/screen_redraw.rs:961:10
    |
961 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: this `if` statement can be collapsed
    --> src/screen_redraw.rs:1681:13
     |
1681 | /             if !(type_0 == 0 as libc::c_int as u_int) {
1682 | |                 if !(type_0 == 12 as libc::c_int as u_int && small != 0 && i > msgx
1683 | |                     && j == msgy)
...    |
1736 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1681 ~             if !(type_0 == 0 as libc::c_int as u_int) && !(type_0 == 12 as libc::c_int as u_int && small != 0 && i > msgx
1682 +                     && j == msgy) {
1683 +                 active = screen_redraw_check_is(
1684 +                     i,
1685 +                     j,
1686 +                     type_0 as libc::c_int,
1687 +                     pane_status,
1688 +                     w,
1689 +                     (*w).active,
1690 +                     wp,
1691 +                 );
1692 +                 if server_is_marked(s, (*s).curw, marked_pane.wp) != 0
1693 +                     && screen_redraw_check_is(
1694 +                         i,
1695 +                         j,
1696 +                         type_0 as libc::c_int,
1697 +                         pane_status,
1698 +                         w,
1699 +                         marked_pane.wp,
1700 +                         wp,
1701 +                     ) != 0
1702 +                 {
1703 +                     if active != 0 {
1704 +                         tty_attributes(
1705 +                             tty,
1706 +                             &mut m_active_gc,
1707 +                             0 as *const window_pane,
1708 +                         );
1709 +                     } else {
1710 +                         tty_attributes(
1711 +                             tty,
1712 +                             &mut m_other_gc,
1713 +                             0 as *const window_pane,
1714 +                         );
1715 +                     }
1716 +                 } else if active != 0 {
1717 +                     tty_attributes(tty, &mut active_gc, 0 as *const window_pane);
1718 +                 } else {
1719 +                     tty_attributes(tty, &mut other_gc, 0 as *const window_pane);
1720 +                 }
1721 +                 if top != 0 {
1722 +                     tty_cursor(tty, i, lines.wrapping_add(j));
1723 +                 } else {
1724 +                     tty_cursor(tty, i, j);
1725 +                 }
1726 +                 tty_putc(
1727 +                     tty,
1728 +                     (*::core::mem::transmute::<
1729 +                         &[u8; 14],
1730 +                         &[libc::c_char; 14],
1731 +                     >(b" xqlkmjwvtun~\0"))[type_0 as usize] as u_char,
1732 +                 );
1733 +             }
     |

warning: type `__u_char` should have an upper camel case name
   --> src/screen_write.rs:115:10
    |
115 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/screen_write.rs:116:10
    |
116 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/screen_write.rs:117:10
    |
117 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/screen_write.rs:118:10
    |
118 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/screen_write.rs:119:10
    |
119 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/screen_write.rs:120:10
    |
120 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/screen_write.rs:121:10
    |
121 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/screen_write.rs:122:10
    |
122 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/screen_write.rs:123:10
    |
123 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/screen_write.rs:124:10
    |
124 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/screen_write.rs:125:10
    |
125 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/screen_write.rs:126:10
    |
126 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/screen_write.rs:127:10
    |
127 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/screen_write.rs:128:10
    |
128 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/screen_write.rs:129:10
    |
129 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/screen_write.rs:136:10
    |
136 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/screen_write.rs:243:10
    |
243 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/screen_write.rs:246:10
    |
246 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/screen_write.rs:255:10
    |
255 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/screen_write.rs:256:10
    |
256 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/screen_write.rs:257:10
    |
257 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/screen_write.rs:270:10
    |
270 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/screen_write.rs:634:10
    |
634 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/screen_write.rs:676:10
    |
676 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/screen_write.rs:721:10
    |
721 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/screen_write.rs:737:10
    |
737 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/screen_write.rs:740:10
    |
740 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/screen_write.rs:741:10
    |
741 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/screen_write.rs:873:10
    |
873 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/screen_write.rs:876:10
    |
876 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/screen_write.rs:890:10
    |
890 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/screen_write.rs:906:10
    |
906 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/screen_write.rs:975:10
    |
975 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `utf8_state` should have an upper camel case name
   --> src/screen_write.rs:999:10
    |
999 | pub type utf8_state = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: operator precedence can trip the unwary
    --> src/screen_write.rs:1336:20
     |
1336 |                   if *mbs.offset((b >> 3 as libc::c_int) as isize) as libc::c_int
     |  ____________________^
1337 | |                     & (1 as libc::c_int) << (b & 0x7 as libc::c_int as u_int) != 0
     | |_____________________________________________________________________________^ help: consider parenthesizing your expression: `*mbs.offset((b >> 3 as libc::c_int) as isize) as libc::c_int & ((1 as libc::c_int) << (b & 0x7 as libc::c_int as u_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `__u_char` should have an upper camel case name
   --> src/server.rs:159:10
    |
159 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/server.rs:160:10
    |
160 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/server.rs:161:10
    |
161 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/server.rs:162:10
    |
162 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/server.rs:163:10
    |
163 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/server.rs:164:10
    |
164 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__dev_t` should have an upper camel case name
   --> src/server.rs:165:10
    |
165 | pub type __dev_t = libc::c_ulong;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `DevT`

warning: type `__uid_t` should have an upper camel case name
   --> src/server.rs:166:10
    |
166 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__gid_t` should have an upper camel case name
   --> src/server.rs:167:10
    |
167 | pub type __gid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `GidT`

warning: type `__ino_t` should have an upper camel case name
   --> src/server.rs:168:10
    |
168 | pub type __ino_t = libc::c_ulong;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `InoT`

warning: type `__mode_t` should have an upper camel case name
   --> src/server.rs:169:10
    |
169 | pub type __mode_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `ModeT`

warning: type `__nlink_t` should have an upper camel case name
   --> src/server.rs:170:10
    |
170 | pub type __nlink_t = libc::c_ulong;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `NlinkT`

warning: type `__off_t` should have an upper camel case name
   --> src/server.rs:171:10
    |
171 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__pid_t` should have an upper camel case name
   --> src/server.rs:172:10
    |
172 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/server.rs:173:10
    |
173 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/server.rs:174:10
    |
174 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__blksize_t` should have an upper camel case name
   --> src/server.rs:175:10
    |
175 | pub type __blksize_t = libc::c_long;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `BlksizeT`

warning: type `__blkcnt_t` should have an upper camel case name
   --> src/server.rs:176:10
    |
176 | pub type __blkcnt_t = libc::c_long;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `BlkcntT`

warning: type `__syscall_slong_t` should have an upper camel case name
   --> src/server.rs:177:10
    |
177 | pub type __syscall_slong_t = libc::c_long;
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SyscallSlongT`

warning: type `__socklen_t` should have an upper camel case name
   --> src/server.rs:178:10
    |
178 | pub type __socklen_t = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocklenT`

warning: type `u_char` should have an upper camel case name
   --> src/server.rs:179:10
    |
179 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/server.rs:180:10
    |
180 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/server.rs:181:10
    |
181 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `mode_t` should have an upper camel case name
   --> src/server.rs:182:10
    |
182 | pub type mode_t = __mode_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `ModeT`

warning: type `pid_t` should have an upper camel case name
   --> src/server.rs:183:10
    |
183 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/server.rs:184:10
    |
184 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/server.rs:185:10
    |
185 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
   --> src/server.rs:191:10
    |
191 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `socklen_t` should have an upper camel case name
   --> src/server.rs:204:10
    |
204 | pub type socklen_t = __socklen_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SocklenT`

warning: type `__socket_type` should have an upper camel case name
   --> src/server.rs:205:10
    |
205 | pub type __socket_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SocketType`

warning: type `sa_family_t` should have an upper camel case name
   --> src/server.rs:215:10
    |
215 | pub type sa_family_t = libc::c_ushort;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `SaFamilyT`

warning: type `uint32_t` should have an upper camel case name
   --> src/server.rs:261:10
    |
261 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `uint16_t` should have an upper camel case name
   --> src/server.rs:274:10
    |
274 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint8_t` should have an upper camel case name
   --> src/server.rs:275:10
    |
275 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `in_port_t` should have an upper camel case name
   --> src/server.rs:276:10
    |
276 | pub type in_port_t = uint16_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `InPortT`

warning: type `in_addr_t` should have an upper camel case name
   --> src/server.rs:290:10
    |
290 | pub type in_addr_t = uint32_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `InAddrT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/server.rs:433:10
    |
433 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/server.rs:436:10
    |
436 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/server.rs:445:10
    |
445 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/server.rs:446:10
    |
446 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/server.rs:447:10
    |
447 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/server.rs:460:10
    |
460 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/server.rs:824:10
    |
824 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_21` should have an upper camel case name
   --> src/server.rs:866:10
    |
866 | pub type C2RustUnnamed_21 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed21`

warning: type `layout_type` should have an upper camel case name
   --> src/server.rs:911:10
    |
911 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/server.rs:927:10
    |
927 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/server.rs:930:10
    |
930 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/server.rs:931:10
    |
931 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
    --> src/server.rs:1063:10
     |
1063 | pub type cmdq_cb = Option::<
     |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
    --> src/server.rs:1066:10
     |
1066 | pub type cmd_retval = libc::c_int;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
    --> src/server.rs:1080:10
     |
1080 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/server.rs:1096:10
     |
1096 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_33` should have an upper camel case name
    --> src/server.rs:1165:10
     |
1165 | pub type C2RustUnnamed_33 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed33`

warning: type `msgtype` should have an upper camel case name
    --> src/server.rs:1189:10
     |
1189 | pub type msgtype = libc::c_uint;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `job_free_cb` should have an upper camel case name
    --> src/server.rs:1240:10
     |
1240 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
    --> src/server.rs:1241:10
     |
1241 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
    --> src/server.rs:1242:10
     |
1242 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_36` should have an upper camel case name
    --> src/server.rs:1243:10
     |
1243 | pub type C2RustUnnamed_36 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed36`

warning: operator precedence can trip the unwary
    --> src/server.rs:1419:18
     |
1419 |                   (0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int
     |  __________________^
1420 | |                     | (0o400 as libc::c_int | 0o200 as libc::c_int
1421 | |                         | 0o100 as libc::c_int) >> 3 as libc::c_int >> 3 as libc::c_int)
     | |_______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1419 ~                 (0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int | ((0o400 as libc::c_int | 0o200 as libc::c_int
1420 ~                         | 0o100 as libc::c_int) >> 3 as libc::c_int >> 3 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/server.rs:1419:18
     |
1419 |                 (0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0o100 as libc::c_int | (0o100 as libc::c_int >> 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/server.rs:1595:5
     |
1595 | /     if options_get_number(
1596 | |         global_options,
1597 | |         b"exit-unattached\0" as *const u8 as *const libc::c_char,
1598 | |     ) == 0
...    |
1603 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1595 ~     if options_get_number(
1596 +         global_options,
1597 +         b"exit-unattached\0" as *const u8 as *const libc::c_char,
1598 +     ) == 0 && !(sessions.rbh_root).is_null() {
1599 +         return 0 as libc::c_int;
1600 +     }
     |

warning: operator precedence can trip the unwary
    --> src/server.rs:1717:16
     |
1717 |               & (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int
     |  ________________^
1718 | |                 | (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1719 | |                     >> 3 as libc::c_int
1720 | |                 | (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1721 | |                     >> 3 as libc::c_int >> 3 as libc::c_int) as __mode_t) as libc::c_int;
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1717 ~             & (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int
1718 +                 | (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1719 +                     >> 3 as libc::c_int | ((0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1720 ~                     >> 3 as libc::c_int >> 3 as libc::c_int)) as __mode_t) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/server.rs:1717:16
     |
1717 |               & (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int
     |  ________________^
1718 | |                 | (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1719 | |                     >> 3 as libc::c_int
     | |_______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1717 ~             & (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int | ((0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int)
1718 +                     >> 3 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/server.rs:1726:16
     |
1726 |             if mode & 0o400 as libc::c_int >> 3 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `mode & (0o400 as libc::c_int >> 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/server.rs:1729:16
     |
1729 |             if mode & 0o400 as libc::c_int >> 3 as libc::c_int >> 3 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `mode & (0o400 as libc::c_int >> 3 as libc::c_int >> 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/server.rs:1734:22
     |
1734 |                   &= !(0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int
     |  ______________________^
1735 | |                     | 0o100 as libc::c_int >> 3 as libc::c_int >> 3 as libc::c_int);
     | |__________________________________________________________________________________^ help: consider parenthesizing your expression: `0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int | (0o100 as libc::c_int >> 3 as libc::c_int >> 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/server.rs:1734:22
     |
1734 |                 &= !(0o100 as libc::c_int | 0o100 as libc::c_int >> 3 as libc::c_int
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0o100 as libc::c_int | (0o100 as libc::c_int >> 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/server.rs:1946:13
     |
1946 | /             if (*wp).pid == pid {
1947 | |                 if killpg(pid, 18 as libc::c_int) != 0 as libc::c_int {
1948 | |                     kill(pid, 18 as libc::c_int);
1949 | |                 }
1950 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1946 ~             if (*wp).pid == pid && killpg(pid, 18 as libc::c_int) != 0 as libc::c_int {
1947 +                 kill(pid, 18 as libc::c_int);
1948 +             }
     |

warning: type `__u_char` should have an upper camel case name
   --> src/server_client.rs:260:10
    |
260 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/server_client.rs:261:10
    |
261 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/server_client.rs:262:10
    |
262 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/server_client.rs:263:10
    |
263 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/server_client.rs:264:10
    |
264 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/server_client.rs:265:10
    |
265 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__pid_t` should have an upper camel case name
   --> src/server_client.rs:266:10
    |
266 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/server_client.rs:267:10
    |
267 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/server_client.rs:268:10
    |
268 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/server_client.rs:269:10
    |
269 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/server_client.rs:270:10
    |
270 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/server_client.rs:271:10
    |
271 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/server_client.rs:272:10
    |
272 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/server_client.rs:273:10
    |
273 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/server_client.rs:274:10
    |
274 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/server_client.rs:275:10
    |
275 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/server_client.rs:276:10
    |
276 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/server_client.rs:291:10
    |
291 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/server_client.rs:292:10
    |
292 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/server_client.rs:293:10
    |
293 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/server_client.rs:400:10
    |
400 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/server_client.rs:403:10
    |
403 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/server_client.rs:412:10
    |
412 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/server_client.rs:413:10
    |
413 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/server_client.rs:414:10
    |
414 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/server_client.rs:427:10
    |
427 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/server_client.rs:807:10
    |
807 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/server_client.rs:849:10
    |
849 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/server_client.rs:894:10
    |
894 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/server_client.rs:910:10
    |
910 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/server_client.rs:913:10
    |
913 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/server_client.rs:914:10
    |
914 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
    --> src/server_client.rs:1046:10
     |
1046 | pub type cmdq_cb = Option::<
     |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
    --> src/server_client.rs:1049:10
     |
1049 | pub type cmd_retval = libc::c_int;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
    --> src/server_client.rs:1063:10
     |
1063 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/server_client.rs:1079:10
     |
1079 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/server_client.rs:1148:10
     |
1148 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
    --> src/server_client.rs:1172:10
     |
1172 | pub type C2RustUnnamed_34 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `msgtype` should have an upper camel case name
    --> src/server_client.rs:1282:10
     |
1282 | pub type msgtype = libc::c_uint;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `C2RustUnnamed_36` should have an upper camel case name
    --> src/server_client.rs:1366:10
     |
1366 | pub type C2RustUnnamed_36 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed36`

warning: type `C2RustUnnamed_37` should have an upper camel case name
    --> src/server_client.rs:1378:10
     |
1378 | pub type C2RustUnnamed_37 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed37`

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2481:5
     |
2481 | /     if !(key
2482 | |         & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2483 | |             | 0x800000000000 as libc::c_ulonglong | 0x1000000000000 as libc::c_ulonglong)
2484 | |         >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
...    |
2627 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2481 ~     if !(key
2482 +         & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2483 +             | 0x800000000000 as libc::c_ulonglong | 0x1000000000000 as libc::c_ulonglong)
2484 +         >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
2485 +         && key
2486 +             & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2487 +                 | 0x800000000000 as libc::c_ulonglong
2488 +                 | 0x1000000000000 as libc::c_ulonglong)
2489 +             < KEYC_BSPACE as libc::c_int as libc::c_ulonglong
2490 +         && options_get_number(
2491 +             (*s).options,
2492 +             b"mouse\0" as *const u8 as *const libc::c_char,
2493 +         ) == 0) && !(!(key
2494 +             & !(0x200000000000 as libc::c_ulonglong | 0x400000000000 as libc::c_ulonglong
2495 +                 | 0x800000000000 as libc::c_ulonglong
2496 +                 | 0x1000000000000 as libc::c_ulonglong)
2497 +             >= KEYC_MOUSE as libc::c_int as libc::c_ulonglong
2498 +             && key
2499 +                 & !(0x200000000000 as libc::c_ulonglong
2500 +                     | 0x400000000000 as libc::c_ulonglong
2501 +                     | 0x800000000000 as libc::c_ulonglong
2502 +                     | 0x1000000000000 as libc::c_ulonglong)
2503 +                 < KEYC_BSPACE as libc::c_int as libc::c_ulonglong)
2504 +             && server_client_assume_paste(s) != 0) {
2505 +         if server_client_is_default_key_table(c, (*c).keytable) != 0 && !wp.is_null()
2506 +             && !((*wp).mode).is_null() && ((*(*wp).mode).key_table).is_some()
2507 +         {
2508 +             table = key_bindings_get_table(
2509 +                 ((*(*wp).mode).key_table).expect("non-null function pointer")(wp),
2510 +                 1 as libc::c_int,
2511 +             );
2512 +         } else {
2513 +             table = (*c).keytable;
2514 +         }
2515 +         first = table;
2516 +         loop {
2517 +             key0 = key & !(0x1000000000000 as libc::c_ulonglong);
2518 +             if (key0
2519 +                 == options_get_number(
2520 +                     (*s).options,
2521 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2522 +                 ) as key_code
2523 +                 || key0
2524 +                     == options_get_number(
2525 +                         (*s).options,
2526 +                         b"prefix2\0" as *const u8 as *const libc::c_char,
2527 +                     ) as key_code)
2528 +                 && strcmp(
2529 +                     (*table).name,
2530 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2531 +                 ) != 0 as libc::c_int
2532 +             {
2533 +                 server_client_set_key_table(
2534 +                     c,
2535 +                     b"prefix\0" as *const u8 as *const libc::c_char,
2536 +                 );
2537 +                 server_status_client(c);
2538 +                 return;
2539 +             }
2540 +             flags = (*c).flags;
2541 +             if wp.is_null() {
2542 +                 log_debug(
2543 +                     b"key table %s (no pane)\0" as *const u8 as *const libc::c_char,
2544 +                     (*table).name,
2545 +                 );
2546 +             } else {
2547 +                 log_debug(
2548 +                     b"key table %s (pane %%%u)\0" as *const u8
2549 +                         as *const libc::c_char,
2550 +                     (*table).name,
2551 +                     (*wp).id,
2552 +                 );
2553 +             }
2554 +             if (*c).flags & 0x20 as libc::c_int != 0 {
2555 +                 log_debug(
2556 +                     b"currently repeating\0" as *const u8 as *const libc::c_char,
2557 +                 );
2558 +             }
2559 +             bd_find.key = key0;
2560 +             bd = key_bindings_RB_FIND(&mut (*table).key_bindings, &mut bd_find);
2561 +             if !bd.is_null() {
2562 +                 if (*c).flags & 0x20 as libc::c_int != 0
2563 +                     && !(*bd).flags & 0x1 as libc::c_int != 0
2564 +                 {
2565 +                     server_client_set_key_table(c, 0 as *const libc::c_char);
2566 +                     (*c).flags &= !(0x20 as libc::c_int);
2567 +                     server_status_client(c);
2568 +                     table = (*c).keytable;
2569 +                 } else {
2570 +                     log_debug(
2571 +                         b"found in key table %s\0" as *const u8
2572 +                             as *const libc::c_char,
2573 +                         (*table).name,
2574 +                     );
2575 +                     (*table).references = ((*table).references).wrapping_add(1);
2576 +                     (*table).references;
2577 +                     xtimeout = options_get_number(
2578 +                         (*s).options,
2579 +                         b"repeat-time\0" as *const u8 as *const libc::c_char,
2580 +                     ) as libc::c_int;
2581 +                     if xtimeout != 0 as libc::c_int
2582 +                         && (*bd).flags & 0x1 as libc::c_int != 0
2583 +                     {
2584 +                         (*c).flags |= 0x20 as libc::c_int;
2585 +                         tv.tv_sec = (xtimeout / 1000 as libc::c_int) as __time_t;
2586 +                         tv
2587 +                             .tv_usec = (xtimeout % 1000 as libc::c_int) as libc::c_long
2588 +                             * 1000 as libc::c_long;
2589 +                         event_del(&mut (*c).repeat_timer);
2590 +                         event_add(&mut (*c).repeat_timer, &mut tv);
2591 +                     } else {
2592 +                         (*c).flags &= !(0x20 as libc::c_int);
2593 +                         server_client_set_key_table(c, 0 as *const libc::c_char);
2594 +                     }
2595 +                     server_status_client(c);
2596 +                     key_bindings_dispatch(bd, 0 as *mut cmdq_item, c, m, &mut fs);
2597 +                     key_bindings_unref_table(table);
2598 +                     return;
2599 +                 }
2600 +             } else {
2601 +                 log_debug(
2602 +                     b"not found in key table %s\0" as *const u8
2603 +                         as *const libc::c_char,
2604 +                     (*table).name,
2605 +                 );
2606 +                 if server_client_is_default_key_table(c, table) == 0
2607 +                     || (*c).flags & 0x20 as libc::c_int != 0
2608 +                 {
2609 +                     server_client_set_key_table(c, 0 as *const libc::c_char);
2610 +                     (*c).flags &= !(0x20 as libc::c_int);
2611 +                     server_status_client(c);
2612 +                     table = (*c).keytable;
2613 +                 } else {
2614 +                     if first != table && !flags & 0x20 as libc::c_int != 0 {
2615 +                         server_client_set_key_table(c, 0 as *const libc::c_char);
2616 +                         server_status_client(c);
2617 +                         return;
2618 +                     }
2619 +                     break;
2620 +                 }
2621 +             }
2622 +         }
2623 +     }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2846:5
     |
2846 | /     if !((*(*wp).window).active != wp) {
2847 | |         if !((*wp).screen != &mut (*wp).base as *mut screen) {
2848 | |             c = clients.tqh_first;
2849 | |             loop {
...    |
2881 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2846 ~     if !((*(*wp).window).active != wp) && !((*wp).screen != &mut (*wp).base as *mut screen) {
2847 +         c = clients.tqh_first;
2848 +         loop {
2849 +             if c.is_null() {
2850 +                 current_block = 5678390700704197724;
2851 +                 break;
2852 +             }
2853 +             if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0)
2854 +             {
2855 +                 if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2856 +                     if (*(*(*c).session).curw).window == (*wp).window {
2857 +                         current_block = 15899604225187311481;
2858 +                         break;
2859 +                     }
2860 +                 }
2861 +             }
2862 +             c = (*c).entry.tqe_next;
2863 +         }
2864 +         match current_block {
2865 +             5678390700704197724 => {}
2866 +             _ => {
2867 +                 if push != 0 || (*wp).flags & 0x4 as libc::c_int == 0 {
2868 +                     bufferevent_write(
2869 +                         (*wp).event,
2870 +                         b"\x1B[I\0" as *const u8 as *const libc::c_char
2871 +                             as *const libc::c_void,
2872 +                         3 as libc::c_int as size_t,
2873 +                     );
2874 +                 }
2875 +                 (*wp).flags |= 0x4 as libc::c_int;
2876 +                 return;
2877 +             }
2878 +         }
2879 +     }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2854:17
     |
2854 | /                 if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0)
2855 | |                 {
2856 | |                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2857 | |                         if (*(*(*c).session).curw).window == (*wp).window {
...    |
2862 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2854 ~                 if !(((*c).session).is_null() || (*c).flags & 0x8000 as libc::c_int == 0) && !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2855 +                     if (*(*(*c).session).curw).window == (*wp).window {
2856 +                         current_block = 15899604225187311481;
2857 +                         break;
2858 +                     }
2859 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/server_client.rs:2856:21
     |
2856 | /                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) {
2857 | |                         if (*(*(*c).session).curw).window == (*wp).window {
2858 | |                             current_block = 15899604225187311481;
2859 | |                             break;
2860 | |                         }
2861 | |                     }
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2856 ~                     if !((*(*c).session).flags & 0x1 as libc::c_int != 0) && (*(*(*c).session).curw).window == (*wp).window {
2857 +                         current_block = 15899604225187311481;
2858 +                         break;
2859 +                     }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/server_fn.rs:96:10
   |
96 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/server_fn.rs:97:10
   |
97 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/server_fn.rs:98:10
   |
98 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/server_fn.rs:99:10
   |
99 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/server_fn.rs:100:10
    |
100 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/server_fn.rs:101:10
    |
101 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__pid_t` should have an upper camel case name
   --> src/server_fn.rs:102:10
    |
102 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/server_fn.rs:103:10
    |
103 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/server_fn.rs:104:10
    |
104 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/server_fn.rs:105:10
    |
105 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/server_fn.rs:106:10
    |
106 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/server_fn.rs:107:10
    |
107 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/server_fn.rs:108:10
    |
108 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/server_fn.rs:109:10
    |
109 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/server_fn.rs:110:10
    |
110 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/server_fn.rs:111:10
    |
111 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/server_fn.rs:112:10
    |
112 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/server_fn.rs:119:10
    |
119 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/server_fn.rs:120:10
    |
120 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/server_fn.rs:121:10
    |
121 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/server_fn.rs:228:10
    |
228 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/server_fn.rs:231:10
    |
231 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/server_fn.rs:240:10
    |
240 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/server_fn.rs:241:10
    |
241 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/server_fn.rs:242:10
    |
242 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/server_fn.rs:255:10
    |
255 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/server_fn.rs:628:10
    |
628 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/server_fn.rs:670:10
    |
670 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/server_fn.rs:715:10
    |
715 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/server_fn.rs:731:10
    |
731 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/server_fn.rs:734:10
    |
734 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/server_fn.rs:735:10
    |
735 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/server_fn.rs:867:10
    |
867 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/server_fn.rs:870:10
    |
870 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/server_fn.rs:884:10
    |
884 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/server_fn.rs:900:10
    |
900 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/server_fn.rs:969:10
    |
969 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `tty_code_code` should have an upper camel case name
   --> src/server_fn.rs:993:10
    |
993 | pub type tty_code_code = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: type `msgtype` should have an upper camel case name
    --> src/server_fn.rs:1202:10
     |
1202 | pub type msgtype = libc::c_uint;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: this `if` statement can be collapsed
    --> src/server_fn.rs:1697:9
     |
1697 | /         if !(s_loop == s) {
1698 | |             if s_out.is_null()
1699 | |                 || (if (*s_loop).activity_time.tv_sec == (*s_out).activity_time.tv_sec {
1700 | |                     ((*s_loop).activity_time.tv_usec < (*s_out).activity_time.tv_usec)
...    |
1709 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1697 ~         if !(s_loop == s) && (s_out.is_null() || (if (*s_loop).activity_time.tv_sec == (*s_out).activity_time.tv_sec {
1698 +                     ((*s_loop).activity_time.tv_usec < (*s_out).activity_time.tv_usec)
1699 +                         as libc::c_int
1700 +                 } else {
1701 +                     ((*s_loop).activity_time.tv_sec < (*s_out).activity_time.tv_sec)
1702 +                         as libc::c_int
1703 +                 }) != 0) {
1704 +             s_out = s_loop;
1705 +         }
     |

warning: this `if` statement can be collapsed
    --> src/server_fn.rs:1757:9
     |
1757 | /         if !((*s).flags & 0x1 as libc::c_int == 0) {
1758 | |             if options_get_number(
1759 | |                 (*s).options,
1760 | |                 b"destroy-unattached\0" as *const u8 as *const libc::c_char,
...    |
1772 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1757 ~         if !((*s).flags & 0x1 as libc::c_int == 0) && options_get_number(
1758 +                 (*s).options,
1759 +                 b"destroy-unattached\0" as *const u8 as *const libc::c_char,
1760 +             ) != 0 {
1761 +             session_destroy(
1762 +                 s,
1763 +                 (*::core::mem::transmute::<
1764 +                     &[u8; 24],
1765 +                     &[libc::c_char; 24],
1766 +                 >(b"server_check_unattached\0"))
1767 +                     .as_ptr(),
1768 +             );
1769 +         }
     |

warning: type `__u_char` should have an upper camel case name
   --> src/session.rs:112:10
    |
112 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/session.rs:113:10
    |
113 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/session.rs:114:10
    |
114 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/session.rs:115:10
    |
115 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/session.rs:116:10
    |
116 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/session.rs:117:10
    |
117 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/session.rs:118:10
    |
118 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/session.rs:119:10
    |
119 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/session.rs:120:10
    |
120 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/session.rs:121:10
    |
121 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/session.rs:122:10
    |
122 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/session.rs:123:10
    |
123 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/session.rs:124:10
    |
124 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/session.rs:131:10
    |
131 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/session.rs:238:10
    |
238 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/session.rs:241:10
    |
241 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/session.rs:250:10
    |
250 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/session.rs:251:10
    |
251 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/session.rs:252:10
    |
252 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/session.rs:265:10
    |
265 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/session.rs:629:10
    |
629 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/session.rs:671:10
    |
671 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/session.rs:716:10
    |
716 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/session.rs:732:10
    |
732 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/session.rs:735:10
    |
735 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/session.rs:736:10
    |
736 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/session.rs:868:10
    |
868 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/session.rs:871:10
    |
871 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/session.rs:885:10
    |
885 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/session.rs:901:10
    |
901 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/session.rs:970:10
    |
970 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/status.rs:155:10
    |
155 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/status.rs:156:10
    |
156 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/status.rs:157:10
    |
157 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/status.rs:158:10
    |
158 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__off_t` should have an upper camel case name
   --> src/status.rs:159:10
    |
159 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/status.rs:160:10
    |
160 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/status.rs:161:10
    |
161 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/status.rs:162:10
    |
162 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/status.rs:163:10
    |
163 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/status.rs:164:10
    |
164 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/status.rs:165:10
    |
165 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/status.rs:166:10
    |
166 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/status.rs:167:10
    |
167 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/status.rs:168:10
    |
168 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/status.rs:169:10
    |
169 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/status.rs:170:10
    |
170 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/status.rs:171:10
    |
171 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
   --> src/status.rs:178:10
    |
178 | pub type wchar_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `uint8_t` should have an upper camel case name
   --> src/status.rs:179:10
    |
179 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/status.rs:300:10
    |
300 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/status.rs:321:10
    |
321 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/status.rs:324:10
    |
324 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/status.rs:333:10
    |
333 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/status.rs:334:10
    |
334 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/status.rs:335:10
    |
335 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/status.rs:348:10
    |
348 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/status.rs:712:10
    |
712 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/status.rs:754:10
    |
754 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/status.rs:799:10
    |
799 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/status.rs:815:10
    |
815 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/status.rs:818:10
    |
818 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/status.rs:819:10
    |
819 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/status.rs:951:10
    |
951 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/status.rs:954:10
    |
954 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/status.rs:968:10
    |
968 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/status.rs:984:10
    |
984 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/status.rs:1053:10
     |
1053 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
    --> src/status.rs:1077:10
     |
1077 | pub type C2RustUnnamed_34 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `utf8_state` should have an upper camel case name
    --> src/status.rs:1187:10
     |
1187 | pub type utf8_state = libc::c_uint;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `options_table_type` should have an upper camel case name
    --> src/status.rs:1215:10
     |
1215 | pub type options_table_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `options_table_scope` should have an upper camel case name
    --> src/status.rs:1225:10
     |
1225 | pub type options_table_scope = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: type `__u_char` should have an upper camel case name
  --> src/style.rs:32:10
   |
32 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/style.rs:33:10
   |
33 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_char` should have an upper camel case name
  --> src/style.rs:34:10
   |
34 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/style.rs:35:10
   |
35 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `size_t` should have an upper camel case name
  --> src/style.rs:36:10
   |
36 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_int` should have an upper camel case name
   --> src/tmux.rs:105:10
    |
105 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__dev_t` should have an upper camel case name
   --> src/tmux.rs:106:10
    |
106 | pub type __dev_t = libc::c_ulong;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `DevT`

warning: type `__uid_t` should have an upper camel case name
   --> src/tmux.rs:107:10
    |
107 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__gid_t` should have an upper camel case name
   --> src/tmux.rs:108:10
    |
108 | pub type __gid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `GidT`

warning: type `__ino_t` should have an upper camel case name
   --> src/tmux.rs:109:10
    |
109 | pub type __ino_t = libc::c_ulong;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `InoT`

warning: type `__mode_t` should have an upper camel case name
   --> src/tmux.rs:110:10
    |
110 | pub type __mode_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `ModeT`

warning: type `__nlink_t` should have an upper camel case name
   --> src/tmux.rs:111:10
    |
111 | pub type __nlink_t = libc::c_ulong;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `NlinkT`

warning: type `__off_t` should have an upper camel case name
   --> src/tmux.rs:112:10
    |
112 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tmux.rs:113:10
    |
113 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__time_t` should have an upper camel case name
   --> src/tmux.rs:114:10
    |
114 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/tmux.rs:115:10
    |
115 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__blksize_t` should have an upper camel case name
   --> src/tmux.rs:116:10
    |
116 | pub type __blksize_t = libc::c_long;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `BlksizeT`

warning: type `__blkcnt_t` should have an upper camel case name
   --> src/tmux.rs:117:10
    |
117 | pub type __blkcnt_t = libc::c_long;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `BlkcntT`

warning: type `__syscall_slong_t` should have an upper camel case name
   --> src/tmux.rs:118:10
    |
118 | pub type __syscall_slong_t = libc::c_long;
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SyscallSlongT`

warning: type `u_int` should have an upper camel case name
   --> src/tmux.rs:119:10
    |
119 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `uid_t` should have an upper camel case name
   --> src/tmux.rs:120:10
    |
120 | pub type uid_t = __uid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `size_t` should have an upper camel case name
   --> src/tmux.rs:121:10
    |
121 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tmux.rs:186:10
    |
186 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `nl_item` should have an upper camel case name
   --> src/tmux.rs:188:10
    |
188 | pub type nl_item = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `NlItem`

warning: type `options_table_type` should have an upper camel case name
   --> src/tmux.rs:584:10
    |
584 | pub type options_table_type = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `options_table_scope` should have an upper camel case name
   --> src/tmux.rs:594:10
    |
594 | pub type options_table_scope = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: this `if` statement can be collapsed
   --> src/tmux.rs:742:12
    |
742 |       } else if !(mkdir(
    |  ____________^
743 | |         resolved.as_mut_ptr(),
744 | |         (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int) as __mode_t,
745 | |     ) != 0 as libc::c_int && *__errno_location() != 17 as libc::c_int)
...   |
769 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
742 ~     } else if !(mkdir(
743 +         resolved.as_mut_ptr(),
744 +         (0o400 as libc::c_int | 0o200 as libc::c_int | 0o100 as libc::c_int) as __mode_t,
745 +     ) != 0 as libc::c_int && *__errno_location() != 17 as libc::c_int) && !(lstat(resolved.as_mut_ptr(), &mut sb) != 0 as libc::c_int) {
746 +         if !(sb.st_mode & 0o170000 as libc::c_int as __mode_t
747 +             == 0o40000 as libc::c_int as __mode_t)
748 +         {
749 +             *__errno_location() = 20 as libc::c_int;
750 +         } else if sb.st_uid != uid
751 +             || sb.st_mode
752 +                 & ((0o400 as libc::c_int | 0o200 as libc::c_int
753 +                     | 0o100 as libc::c_int) >> 3 as libc::c_int >> 3 as libc::c_int)
754 +                     as __mode_t != 0 as libc::c_int as __mode_t
755 +         {
756 +             *__errno_location() = 13 as libc::c_int;
757 +         } else {
758 +             xasprintf(
759 +                 &mut path as *mut *mut libc::c_char,
760 +                 b"%s/%s\0" as *const u8 as *const libc::c_char,
761 +                 resolved.as_mut_ptr(),
762 +                 label,
763 +             );
764 +             return path;
765 +         }
766 +     }
    |

warning: type `__u_char` should have an upper camel case name
   --> src/tty.rs:166:10
    |
166 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/tty.rs:167:10
    |
167 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/tty.rs:168:10
    |
168 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tty.rs:169:10
    |
169 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/tty.rs:170:10
    |
170 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/tty.rs:171:10
    |
171 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__useconds_t` should have an upper camel case name
   --> src/tty.rs:172:10
    |
172 | pub type __useconds_t = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `UsecondsT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/tty.rs:173:10
    |
173 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/tty.rs:174:10
    |
174 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/tty.rs:175:10
    |
175 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/tty.rs:176:10
    |
176 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/tty.rs:177:10
    |
177 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/tty.rs:178:10
    |
178 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/tty.rs:179:10
    |
179 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/tty.rs:180:10
    |
180 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/tty.rs:181:10
    |
181 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/tty.rs:196:10
    |
196 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bitstr_t` should have an upper camel case name
   --> src/tty.rs:248:10
    |
248 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `cc_t` should have an upper camel case name
   --> src/tty.rs:290:10
    |
290 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/tty.rs:291:10
    |
291 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/tty.rs:292:10
    |
292 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/tty.rs:411:10
    |
411 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/tty.rs:414:10
    |
414 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `key_code` should have an upper camel case name
   --> src/tty.rs:769:10
    |
769 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `layout_type` should have an upper camel case name
   --> src/tty.rs:781:10
    |
781 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/tty.rs:797:10
    |
797 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/tty.rs:800:10
    |
800 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/tty.rs:801:10
    |
801 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/tty.rs:933:10
    |
933 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/tty.rs:936:10
    |
936 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/tty.rs:950:10
    |
950 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/tty.rs:966:10
    |
966 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/tty.rs:1035:10
     |
1035 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `tty_code_code` should have an upper camel case name
    --> src/tty.rs:1059:10
     |
1059 | pub type tty_code_code = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: this `if` statement can be collapsed
    --> src/tty.rs:1711:5
     |
1711 | /     if tty_term_flag((*tty).term, TTYC_XT) != 0 {
1712 | |         if (*tty).flags & 0x40 as libc::c_int != 0 {
1713 | |             (*tty).flags &= !(0x40 as libc::c_int);
1714 | |             tty_raw(tty, b"\x1B[?1004l\0" as *const u8 as *const libc::c_char);
1715 | |         }
1716 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1711 ~     if tty_term_flag((*tty).term, TTYC_XT) != 0 && (*tty).flags & 0x40 as libc::c_int != 0 {
1712 +         (*tty).flags &= !(0x40 as libc::c_int);
1713 +         tty_raw(tty, b"\x1B[?1004l\0" as *const u8 as *const libc::c_char);
1714 +     }
     |

warning: this `if` statement can be collapsed
    --> src/tty.rs:3656:9
     |
3656 | /         if !((*tty).term_flags & 0x1 as libc::c_int != 0
3657 | |             || tty_term_has((*tty).term, TTYC_RGB) != 0)
3658 | |         {
3659 | |             if (*(*tty).term).flags & 0x1 as libc::c_int != 0 {
...    |
3678 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3656 ~         if !((*tty).term_flags & 0x1 as libc::c_int != 0
3657 +             || tty_term_has((*tty).term, TTYC_RGB) != 0) && (*(*tty).term).flags & 0x1 as libc::c_int != 0 {
3658 +             if *type_0 as libc::c_int == '3' as i32 {
3659 +                 if tty_term_has((*tty).term, TTYC_SETAF) == 0 {
3660 +                     current_block = 2218127186595632659;
3661 +                 } else {
3662 +                     tty_putcode1(tty, TTYC_SETAF, colour & 0xff as libc::c_int);
3663 +                     current_block = 14523784380283086299;
3664 +                 }
3665 +             } else if tty_term_has((*tty).term, TTYC_SETAB) == 0 {
3666 +                 current_block = 2218127186595632659;
3667 +             } else {
3668 +                 tty_putcode1(tty, TTYC_SETAB, colour & 0xff as libc::c_int);
3669 +                 current_block = 14523784380283086299;
3670 +             }
3671 +             match current_block {
3672 +                 2218127186595632659 => {}
3673 +                 _ => return 0 as libc::c_int,
3674 +             }
3675 +         }
     |

warning: type `__u_char` should have an upper camel case name
  --> src/tty_acs.rs:26:10
   |
26 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/tty_acs.rs:27:10
   |
27 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/tty_acs.rs:28:10
   |
28 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/tty_acs.rs:29:10
   |
29 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/tty_acs.rs:30:10
   |
30 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/tty_acs.rs:31:10
   |
31 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/tty_acs.rs:32:10
   |
32 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/tty_acs.rs:33:10
   |
33 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/tty_acs.rs:34:10
   |
34 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/tty_acs.rs:35:10
   |
35 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/tty_acs.rs:36:10
   |
36 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/tty_acs.rs:37:10
   |
37 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/tty_acs.rs:38:10
   |
38 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__compar_fn_t` should have an upper camel case name
  --> src/tty_acs.rs:45:10
   |
45 | pub type __compar_fn_t = Option::<
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `uint8_t` should have an upper camel case name
  --> src/tty_acs.rs:48:10
   |
48 | pub type uint8_t = __uint8_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/tty_acs.rs:155:10
    |
155 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/tty_acs.rs:158:10
    |
158 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/tty_acs.rs:167:10
    |
167 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/tty_acs.rs:168:10
    |
168 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/tty_acs.rs:169:10
    |
169 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/tty_acs.rs:182:10
    |
182 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/tty_acs.rs:546:10
    |
546 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/tty_acs.rs:588:10
    |
588 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/tty_acs.rs:633:10
    |
633 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/tty_acs.rs:649:10
    |
649 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/tty_acs.rs:652:10
    |
652 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/tty_acs.rs:653:10
    |
653 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/tty_acs.rs:785:10
    |
785 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/tty_acs.rs:788:10
    |
788 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/tty_acs.rs:802:10
    |
802 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/tty_acs.rs:818:10
    |
818 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/tty_acs.rs:887:10
    |
887 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `tty_code_code` should have an upper camel case name
   --> src/tty_acs.rs:911:10
    |
911 | pub type tty_code_code = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: type `__u_char` should have an upper camel case name
  --> src/tty_keys.rs:65:10
   |
65 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/tty_keys.rs:66:10
   |
66 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/tty_keys.rs:67:10
   |
67 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/tty_keys.rs:68:10
   |
68 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/tty_keys.rs:69:10
   |
69 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/tty_keys.rs:70:10
   |
70 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/tty_keys.rs:71:10
   |
71 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
  --> src/tty_keys.rs:72:10
   |
72 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/tty_keys.rs:73:10
   |
73 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/tty_keys.rs:74:10
   |
74 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/tty_keys.rs:75:10
   |
75 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/tty_keys.rs:76:10
   |
76 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
  --> src/tty_keys.rs:77:10
   |
77 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
  --> src/tty_keys.rs:78:10
   |
78 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/tty_keys.rs:79:10
   |
79 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
  --> src/tty_keys.rs:86:10
   |
86 | pub type wchar_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `cc_t` should have an upper camel case name
  --> src/tty_keys.rs:87:10
   |
87 | pub type cc_t = libc::c_uchar;
   |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
  --> src/tty_keys.rs:88:10
   |
88 | pub type speed_t = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
  --> src/tty_keys.rs:89:10
   |
89 | pub type tcflag_t = libc::c_uint;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `uint8_t` should have an upper camel case name
   --> src/tty_keys.rs:102:10
    |
102 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/tty_keys.rs:209:10
    |
209 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/tty_keys.rs:212:10
    |
212 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `bitstr_t` should have an upper camel case name
   --> src/tty_keys.rs:221:10
    |
221 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/tty_keys.rs:585:10
    |
585 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/tty_keys.rs:627:10
    |
627 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/tty_keys.rs:672:10
    |
672 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/tty_keys.rs:688:10
    |
688 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/tty_keys.rs:691:10
    |
691 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/tty_keys.rs:692:10
    |
692 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/tty_keys.rs:824:10
    |
824 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/tty_keys.rs:827:10
    |
827 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/tty_keys.rs:841:10
    |
841 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/tty_keys.rs:857:10
    |
857 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/tty_keys.rs:926:10
    |
926 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
   --> src/tty_keys.rs:950:10
    |
950 | pub type C2RustUnnamed_34 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `tty_code_code` should have an upper camel case name
    --> src/tty_keys.rs:1060:10
     |
1060 | pub type tty_code_code = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: type `utf8_state` should have an upper camel case name
    --> src/tty_keys.rs:1269:10
     |
1269 | pub type utf8_state = libc::c_uint;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `__u_char` should have an upper camel case name
  --> src/tty_term.rs:68:10
   |
68 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_int` should have an upper camel case name
  --> src/tty_term.rs:69:10
   |
69 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_char` should have an upper camel case name
  --> src/tty_term.rs:70:10
   |
70 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_int` should have an upper camel case name
  --> src/tty_term.rs:71:10
   |
71 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
  --> src/tty_term.rs:72:10
   |
72 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `tty_code_type` should have an upper camel case name
   --> src/tty_term.rs:126:10
    |
126 | pub type tty_code_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeType`

warning: type `tty_code_code` should have an upper camel case name
   --> src/tty_term.rs:131:10
    |
131 | pub type tty_code_code = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `TtyCodeCode`

warning: type `__u_char` should have an upper camel case name
  --> src/utf8.rs:33:10
   |
33 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_int` should have an upper camel case name
  --> src/utf8.rs:34:10
   |
34 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__ssize_t` should have an upper camel case name
  --> src/utf8.rs:35:10
   |
35 | pub type __ssize_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
  --> src/utf8.rs:36:10
   |
36 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_int` should have an upper camel case name
  --> src/utf8.rs:37:10
   |
37 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `ssize_t` should have an upper camel case name
  --> src/utf8.rs:38:10
   |
38 | pub type ssize_t = __ssize_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `size_t` should have an upper camel case name
  --> src/utf8.rs:39:10
   |
39 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `wchar_t` should have an upper camel case name
  --> src/utf8.rs:40:10
   |
40 | pub type wchar_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `WcharT`

warning: type `utf8_state` should have an upper camel case name
  --> src/utf8.rs:49:10
   |
49 | pub type utf8_state = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `__builtin_va_list` should have an upper camel case name
   --> src/variadic.rs:178:10
    |
178 | pub type __builtin_va_list = [__va_list_tag; 1];
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuiltinVaList`

warning: type `__u_char` should have an upper camel case name
   --> src/variadic.rs:187:10
    |
187 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/variadic.rs:188:10
    |
188 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/variadic.rs:189:10
    |
189 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/variadic.rs:190:10
    |
190 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/variadic.rs:191:10
    |
191 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/variadic.rs:192:10
    |
192 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/variadic.rs:193:10
    |
193 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/variadic.rs:194:10
    |
194 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/variadic.rs:195:10
    |
195 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/variadic.rs:196:10
    |
196 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/variadic.rs:197:10
    |
197 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/variadic.rs:198:10
    |
198 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/variadic.rs:199:10
    |
199 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/variadic.rs:200:10
    |
200 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/variadic.rs:201:10
    |
201 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `va_list` should have an upper camel case name
   --> src/variadic.rs:208:10
    |
208 | pub type va_list = __builtin_va_list;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `VaList`

warning: type `cc_t` should have an upper camel case name
   --> src/variadic.rs:209:10
    |
209 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/variadic.rs:210:10
    |
210 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/variadic.rs:211:10
    |
211 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `uint8_t` should have an upper camel case name
   --> src/variadic.rs:224:10
    |
224 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bitstr_t` should have an upper camel case name
   --> src/variadic.rs:225:10
    |
225 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/variadic.rs:332:10
    |
332 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/variadic.rs:335:10
    |
335 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `key_code` should have an upper camel case name
   --> src/variadic.rs:707:10
    |
707 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/variadic.rs:749:10
    |
749 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `C2RustUnnamed_24` should have an upper camel case name
   --> src/variadic.rs:833:10
    |
833 | pub type C2RustUnnamed_24 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `layout_type` should have an upper camel case name
   --> src/variadic.rs:858:10
    |
858 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_25` should have an upper camel case name
   --> src/variadic.rs:874:10
    |
874 | pub type C2RustUnnamed_25 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed25`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/variadic.rs:877:10
    |
877 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/variadic.rs:878:10
    |
878 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
    --> src/variadic.rs:1010:10
     |
1010 | pub type cmdq_cb = Option::<
     |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
    --> src/variadic.rs:1013:10
     |
1013 | pub type cmd_retval = libc::c_int;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `format_cb` should have an upper camel case name
    --> src/variadic.rs:1061:10
     |
1061 | pub type format_cb = Option::<
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `FormatCb`

warning: type `cmdq_type` should have an upper camel case name
    --> src/variadic.rs:1064:10
     |
1064 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/variadic.rs:1080:10
     |
1080 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_35` should have an upper camel case name
    --> src/variadic.rs:1149:10
     |
1149 | pub type C2RustUnnamed_35 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `options_table_scope` should have an upper camel case name
    --> src/variadic.rs:1218:10
     |
1218 | pub type options_table_scope = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableScope`

warning: type `options_table_type` should have an upper camel case name
    --> src/variadic.rs:1223:10
     |
1223 | pub type options_table_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OptionsTableType`

warning: type `utf8_state` should have an upper camel case name
    --> src/variadic.rs:1233:10
     |
1233 | pub type utf8_state = libc::c_uint;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Utf8State`

warning: type `__u_char` should have an upper camel case name
   --> src/window.rs:212:10
    |
212 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/window.rs:213:10
    |
213 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/window.rs:214:10
    |
214 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/window.rs:215:10
    |
215 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/window.rs:216:10
    |
216 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/window.rs:217:10
    |
217 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/window.rs:218:10
    |
218 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/window.rs:219:10
    |
219 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/window.rs:220:10
    |
220 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/window.rs:221:10
    |
221 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/window.rs:222:10
    |
222 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/window.rs:223:10
    |
223 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/window.rs:224:10
    |
224 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/window.rs:225:10
    |
225 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/window.rs:226:10
    |
226 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `sigset_t` should have an upper camel case name
   --> src/window.rs:232:10
    |
232 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window.rs:247:10
    |
247 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `cc_t` should have an upper camel case name
   --> src/window.rs:248:10
    |
248 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window.rs:249:10
    |
249 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window.rs:250:10
    |
250 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window.rs:369:10
    |
369 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window.rs:372:10
    |
372 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window.rs:381:10
    |
381 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window.rs:745:10
    |
745 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window.rs:787:10
    |
787 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window.rs:832:10
    |
832 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window.rs:848:10
    |
848 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window.rs:851:10
    |
851 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window.rs:852:10
    |
852 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window.rs:984:10
    |
984 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window.rs:987:10
    |
987 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
    --> src/window.rs:1001:10
     |
1001 | pub type cmdq_type = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
    --> src/window.rs:1017:10
     |
1017 | pub type cmd_find_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/window.rs:1086:10
     |
1086 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
    --> src/window.rs:1110:10
     |
1110 | pub type C2RustUnnamed_34 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: this `if` statement can be collapsed
    --> src/window.rs:3635:9
     |
3635 | /         if !(window_pane_visible(wp) == 0) {
3636 | |             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3637 | |                 if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3638 | |                     return wp;
...    |
3641 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3635 ~         if !(window_pane_visible(wp) == 0) && !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3636 +             if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3637 +                 return wp;
3638 +             }
3639 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:3636:13
     |
3636 | /             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) {
3637 | |                 if !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3638 | |                     return wp;
3639 | |                 }
3640 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3636 ~             if !(x < (*wp).xoff || x > ((*wp).xoff).wrapping_add((*wp).sx)) && !(y < (*wp).yoff || y > ((*wp).yoff).wrapping_add((*wp).sy)) {
3637 +                 return wp;
3638 +             }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4849:5
     |
4849 | /     if (*wp).modelast < time(0 as *mut time_t) - 180 as libc::c_int as time_t {
4850 | |         if ioctl(
4851 | |             (*wp).fd,
4852 | |             0x541b as libc::c_int as libc::c_ulong,
...    |
4858 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4849 ~     if (*wp).modelast < time(0 as *mut time_t) - 180 as libc::c_int as time_t && (ioctl(
4850 +             (*wp).fd,
4851 +             0x541b as libc::c_int as libc::c_ulong,
4852 +             &mut n as *mut libc::c_int,
4853 +         ) == -(1 as libc::c_int) || n > 0 as libc::c_int) {
4854 +         window_pane_reset_mode(wp);
4855 +     }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4972:13
     |
4972 | /             if !(wp2 == wp || !((*wp2).mode).is_null()) {
4973 | |                 if !((*wp2).fd == -(1 as libc::c_int)
4974 | |                     || (*wp2).flags & 0x40 as libc::c_int != 0)
...    |
4980 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4972 ~             if !(wp2 == wp || !((*wp2).mode).is_null()) && !((*wp2).fd == -(1 as libc::c_int)
4973 +                     || (*wp2).flags & 0x40 as libc::c_int != 0) {
4974 +                 if window_pane_visible(wp2) != 0 {
4975 +                     input_key(wp2, key, 0 as *mut mouse_event);
4976 +                 }
4977 +             }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:4973:17
     |
4973 | /                 if !((*wp2).fd == -(1 as libc::c_int)
4974 | |                     || (*wp2).flags & 0x40 as libc::c_int != 0)
4975 | |                 {
4976 | |                     if window_pane_visible(wp2) != 0 {
...    |
4979 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4973 ~                 if !((*wp2).fd == -(1 as libc::c_int)
4974 +                     || (*wp2).flags & 0x40 as libc::c_int != 0) && window_pane_visible(wp2) != 0 {
4975 +                     input_key(wp2, key, 0 as *mut mouse_event);
4976 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5102:9
     |
5102 | /         if !(next == wp || window_pane_visible(next) == 0) {
5103 | |             if !(((*next).yoff)
5104 | |                 .wrapping_add((*next).sy)
5105 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
...    |
5130 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5102 ~         if !(next == wp || window_pane_visible(next) == 0) && !(((*next).yoff)
5103 +                 .wrapping_add((*next).sy)
5104 +                 .wrapping_add(1 as libc::c_int as u_int) != edge) {
5105 +             end = ((*next).xoff)
5106 +                 .wrapping_add((*next).sx)
5107 +                 .wrapping_sub(1 as libc::c_int as u_int);
5108 +             found = 0 as libc::c_int;
5109 +             if (*next).xoff < left && end > right {
5110 +                 found = 1 as libc::c_int;
5111 +             } else if (*next).xoff >= left && (*next).xoff <= right {
5112 +                 found = 1 as libc::c_int;
5113 +             } else if end >= left && end <= right {
5114 +                 found = 1 as libc::c_int;
5115 +             }
5116 +             if !(found == 0) {
5117 +                 list = xreallocarray(
5118 +                     list as *mut libc::c_void,
5119 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5120 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5121 +                 ) as *mut *mut window_pane;
5122 +                 let fresh10 = size;
5123 +                 size = size.wrapping_add(1);
5124 +                 let ref mut fresh11 = *list.offset(fresh10 as isize);
5125 +                 *fresh11 = next;
5126 +             }
5127 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5181:9
     |
5181 | /         if !(next == wp || window_pane_visible(next) == 0) {
5182 | |             if !((*next).yoff != edge) {
5183 | |                 end = ((*next).xoff)
5184 | |                     .wrapping_add((*next).sx)
...    |
5206 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5181 ~         if !(next == wp || window_pane_visible(next) == 0) && !((*next).yoff != edge) {
5182 +             end = ((*next).xoff)
5183 +                 .wrapping_add((*next).sx)
5184 +                 .wrapping_sub(1 as libc::c_int as u_int);
5185 +             found = 0 as libc::c_int;
5186 +             if (*next).xoff < left && end > right {
5187 +                 found = 1 as libc::c_int;
5188 +             } else if (*next).xoff >= left && (*next).xoff <= right {
5189 +                 found = 1 as libc::c_int;
5190 +             } else if end >= left && end <= right {
5191 +                 found = 1 as libc::c_int;
5192 +             }
5193 +             if !(found == 0) {
5194 +                 list = xreallocarray(
5195 +                     list as *mut libc::c_void,
5196 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5197 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5198 +                 ) as *mut *mut window_pane;
5199 +                 let fresh12 = size;
5200 +                 size = size.wrapping_add(1);
5201 +                 let ref mut fresh13 = *list.offset(fresh12 as isize);
5202 +                 *fresh13 = next;
5203 +             }
5204 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5239:9
     |
5239 | /         if !(next == wp || window_pane_visible(next) == 0) {
5240 | |             if !(((*next).xoff)
5241 | |                 .wrapping_add((*next).sx)
5242 | |                 .wrapping_add(1 as libc::c_int as u_int) != edge)
...    |
5267 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5239 ~         if !(next == wp || window_pane_visible(next) == 0) && !(((*next).xoff)
5240 +                 .wrapping_add((*next).sx)
5241 +                 .wrapping_add(1 as libc::c_int as u_int) != edge) {
5242 +             end = ((*next).yoff)
5243 +                 .wrapping_add((*next).sy)
5244 +                 .wrapping_sub(1 as libc::c_int as u_int);
5245 +             found = 0 as libc::c_int;
5246 +             if (*next).yoff < top && end > bottom {
5247 +                 found = 1 as libc::c_int;
5248 +             } else if (*next).yoff >= top && (*next).yoff <= bottom {
5249 +                 found = 1 as libc::c_int;
5250 +             } else if end >= top && end <= bottom {
5251 +                 found = 1 as libc::c_int;
5252 +             }
5253 +             if !(found == 0) {
5254 +                 list = xreallocarray(
5255 +                     list as *mut libc::c_void,
5256 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5257 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5258 +                 ) as *mut *mut window_pane;
5259 +                 let fresh14 = size;
5260 +                 size = size.wrapping_add(1);
5261 +                 let ref mut fresh15 = *list.offset(fresh14 as isize);
5262 +                 *fresh15 = next;
5263 +             }
5264 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window.rs:5300:9
     |
5300 | /         if !(next == wp || window_pane_visible(next) == 0) {
5301 | |             if !((*next).xoff != edge) {
5302 | |                 end = ((*next).yoff)
5303 | |                     .wrapping_add((*next).sy)
...    |
5325 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
5300 ~         if !(next == wp || window_pane_visible(next) == 0) && !((*next).xoff != edge) {
5301 +             end = ((*next).yoff)
5302 +                 .wrapping_add((*next).sy)
5303 +                 .wrapping_sub(1 as libc::c_int as u_int);
5304 +             found = 0 as libc::c_int;
5305 +             if (*next).yoff < top && end > bottom {
5306 +                 found = 1 as libc::c_int;
5307 +             } else if (*next).yoff >= top && (*next).yoff <= bottom {
5308 +                 found = 1 as libc::c_int;
5309 +             } else if end >= top && end <= bottom {
5310 +                 found = 1 as libc::c_int;
5311 +             }
5312 +             if !(found == 0) {
5313 +                 list = xreallocarray(
5314 +                     list as *mut libc::c_void,
5315 +                     size.wrapping_add(1 as libc::c_int as u_int) as size_t,
5316 +                     ::core::mem::size_of::<*mut window_pane>() as libc::c_ulong,
5317 +                 ) as *mut *mut window_pane;
5318 +                 let fresh16 = size;
5319 +                 size = size.wrapping_add(1);
5320 +                 let ref mut fresh17 = *list.offset(fresh16 as isize);
5321 +                 *fresh17 = next;
5322 +             }
5323 +         }
     |

warning: type `__u_char` should have an upper camel case name
   --> src/window_buffer.rs:123:10
    |
123 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/window_buffer.rs:124:10
    |
124 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/window_buffer.rs:125:10
    |
125 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/window_buffer.rs:126:10
    |
126 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/window_buffer.rs:127:10
    |
127 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/window_buffer.rs:128:10
    |
128 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/window_buffer.rs:129:10
    |
129 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/window_buffer.rs:130:10
    |
130 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/window_buffer.rs:131:10
    |
131 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/window_buffer.rs:132:10
    |
132 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/window_buffer.rs:133:10
    |
133 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/window_buffer.rs:134:10
    |
134 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/window_buffer.rs:135:10
    |
135 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/window_buffer.rs:136:10
    |
136 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/window_buffer.rs:143:10
    |
143 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window_buffer.rs:146:10
    |
146 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint64_t` should have an upper camel case name
   --> src/window_buffer.rs:147:10
    |
147 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window_buffer.rs:254:10
    |
254 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window_buffer.rs:257:10
    |
257 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/window_buffer.rs:266:10
    |
266 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window_buffer.rs:267:10
    |
267 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window_buffer.rs:268:10
    |
268 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window_buffer.rs:281:10
    |
281 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window_buffer.rs:645:10
    |
645 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window_buffer.rs:687:10
    |
687 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window_buffer.rs:732:10
    |
732 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window_buffer.rs:748:10
    |
748 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window_buffer.rs:751:10
    |
751 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window_buffer.rs:752:10
    |
752 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window_buffer.rs:884:10
    |
884 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window_buffer.rs:887:10
    |
887 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/window_buffer.rs:901:10
    |
901 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/window_buffer.rs:917:10
    |
917 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/window_buffer.rs:986:10
    |
986 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `mode_tree_build_cb` should have an upper camel case name
    --> src/window_buffer.rs:1023:10
     |
1023 | pub type mode_tree_build_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeBuildCb`

warning: type `mode_tree_draw_cb` should have an upper camel case name
    --> src/window_buffer.rs:1031:10
     |
1031 | pub type mode_tree_draw_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeDrawCb`

warning: type `mode_tree_search_cb` should have an upper camel case name
    --> src/window_buffer.rs:1040:10
     |
1040 | pub type mode_tree_search_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeSearchCb`

warning: type `mode_tree_each_cb` should have an upper camel case name
    --> src/window_buffer.rs:1047:10
     |
1047 | pub type mode_tree_each_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeEachCb`

warning: type `window_buffer_sort_type` should have an upper camel case name
    --> src/window_buffer.rs:1074:10
     |
1074 | pub type window_buffer_sort_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WindowBufferSortType`

warning: type `__u_char` should have an upper camel case name
   --> src/window_client.rs:118:10
    |
118 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/window_client.rs:119:10
    |
119 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/window_client.rs:120:10
    |
120 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/window_client.rs:121:10
    |
121 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/window_client.rs:122:10
    |
122 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/window_client.rs:123:10
    |
123 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/window_client.rs:124:10
    |
124 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/window_client.rs:125:10
    |
125 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/window_client.rs:126:10
    |
126 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/window_client.rs:127:10
    |
127 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/window_client.rs:128:10
    |
128 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/window_client.rs:129:10
    |
129 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/window_client.rs:130:10
    |
130 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/window_client.rs:131:10
    |
131 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/window_client.rs:138:10
    |
138 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window_client.rs:141:10
    |
141 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint64_t` should have an upper camel case name
   --> src/window_client.rs:142:10
    |
142 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window_client.rs:249:10
    |
249 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window_client.rs:252:10
    |
252 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/window_client.rs:261:10
    |
261 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window_client.rs:262:10
    |
262 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window_client.rs:263:10
    |
263 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window_client.rs:276:10
    |
276 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window_client.rs:640:10
    |
640 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window_client.rs:682:10
    |
682 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window_client.rs:727:10
    |
727 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window_client.rs:743:10
    |
743 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window_client.rs:746:10
    |
746 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window_client.rs:747:10
    |
747 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window_client.rs:879:10
    |
879 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window_client.rs:882:10
    |
882 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/window_client.rs:896:10
    |
896 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/window_client.rs:912:10
    |
912 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/window_client.rs:981:10
    |
981 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `msgtype` should have an upper camel case name
    --> src/window_client.rs:1005:10
     |
1005 | pub type msgtype = libc::c_uint;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Msgtype`

warning: type `mode_tree_build_cb` should have an upper camel case name
    --> src/window_client.rs:1053:10
     |
1053 | pub type mode_tree_build_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeBuildCb`

warning: type `mode_tree_draw_cb` should have an upper camel case name
    --> src/window_client.rs:1061:10
     |
1061 | pub type mode_tree_draw_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeDrawCb`

warning: type `mode_tree_search_cb` should have an upper camel case name
    --> src/window_client.rs:1070:10
     |
1070 | pub type mode_tree_search_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeSearchCb`

warning: type `mode_tree_each_cb` should have an upper camel case name
    --> src/window_client.rs:1077:10
     |
1077 | pub type mode_tree_each_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeEachCb`

warning: type `window_client_sort_type` should have an upper camel case name
    --> src/window_client.rs:1103:10
     |
1103 | pub type window_client_sort_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WindowClientSortType`

warning: type `__u_char` should have an upper camel case name
  --> src/window_clock.rs:70:10
   |
70 | pub type __u_char = libc::c_uchar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
  --> src/window_clock.rs:71:10
   |
71 | pub type __u_short = libc::c_ushort;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
  --> src/window_clock.rs:72:10
   |
72 | pub type __u_int = libc::c_uint;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
  --> src/window_clock.rs:73:10
   |
73 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
  --> src/window_clock.rs:74:10
   |
74 | pub type __pid_t = libc::c_int;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
  --> src/window_clock.rs:75:10
   |
75 | pub type __time_t = libc::c_long;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
  --> src/window_clock.rs:76:10
   |
76 | pub type __suseconds_t = libc::c_long;
   |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
  --> src/window_clock.rs:77:10
   |
77 | pub type u_char = __u_char;
   |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
  --> src/window_clock.rs:78:10
   |
78 | pub type u_short = __u_short;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
  --> src/window_clock.rs:79:10
   |
79 | pub type u_int = __u_int;
   |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
  --> src/window_clock.rs:80:10
   |
80 | pub type pid_t = __pid_t;
   |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
  --> src/window_clock.rs:81:10
   |
81 | pub type time_t = __time_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
  --> src/window_clock.rs:82:10
   |
82 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window_clock.rs:104:10
    |
104 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window_clock.rs:211:10
    |
211 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window_clock.rs:214:10
    |
214 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/window_clock.rs:223:10
    |
223 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window_clock.rs:224:10
    |
224 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window_clock.rs:225:10
    |
225 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window_clock.rs:238:10
    |
238 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window_clock.rs:602:10
    |
602 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window_clock.rs:644:10
    |
644 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window_clock.rs:689:10
    |
689 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window_clock.rs:705:10
    |
705 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window_clock.rs:708:10
    |
708 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window_clock.rs:709:10
    |
709 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window_clock.rs:841:10
    |
841 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window_clock.rs:844:10
    |
844 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/window_clock.rs:858:10
    |
858 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/window_clock.rs:874:10
    |
874 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
   --> src/window_clock.rs:943:10
    |
943 | pub type C2RustUnnamed_32 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `__u_char` should have an upper camel case name
   --> src/window_copy.rs:189:10
    |
189 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/window_copy.rs:190:10
    |
190 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/window_copy.rs:191:10
    |
191 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/window_copy.rs:192:10
    |
192 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__pid_t` should have an upper camel case name
   --> src/window_copy.rs:193:10
    |
193 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/window_copy.rs:194:10
    |
194 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/window_copy.rs:195:10
    |
195 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/window_copy.rs:196:10
    |
196 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `u_char` should have an upper camel case name
   --> src/window_copy.rs:197:10
    |
197 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/window_copy.rs:198:10
    |
198 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/window_copy.rs:199:10
    |
199 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/window_copy.rs:200:10
    |
200 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `ssize_t` should have an upper camel case name
   --> src/window_copy.rs:201:10
    |
201 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/window_copy.rs:202:10
    |
202 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/window_copy.rs:203:10
    |
203 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window_copy.rs:210:10
    |
210 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window_copy.rs:317:10
    |
317 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window_copy.rs:320:10
    |
320 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/window_copy.rs:329:10
    |
329 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window_copy.rs:330:10
    |
330 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window_copy.rs:331:10
    |
331 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window_copy.rs:344:10
    |
344 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window_copy.rs:708:10
    |
708 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window_copy.rs:750:10
    |
750 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window_copy.rs:795:10
    |
795 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window_copy.rs:811:10
    |
811 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window_copy.rs:814:10
    |
814 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window_copy.rs:815:10
    |
815 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window_copy.rs:947:10
    |
947 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window_copy.rs:950:10
    |
950 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/window_copy.rs:964:10
    |
964 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/window_copy.rs:980:10
    |
980 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/window_copy.rs:1049:10
     |
1049 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `job_free_cb` should have an upper camel case name
    --> src/window_copy.rs:1095:10
     |
1095 | pub type job_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobFreeCb`

warning: type `job_complete_cb` should have an upper camel case name
    --> src/window_copy.rs:1096:10
     |
1096 | pub type job_complete_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobCompleteCb`

warning: type `job_update_cb` should have an upper camel case name
    --> src/window_copy.rs:1097:10
     |
1097 | pub type job_update_cb = Option::<unsafe extern "C" fn(*mut job) -> ()>;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `JobUpdateCb`

warning: type `C2RustUnnamed_35` should have an upper camel case name
    --> src/window_copy.rs:1098:10
     |
1098 | pub type C2RustUnnamed_35 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed35`

warning: type `C2RustUnnamed_36` should have an upper camel case name
    --> src/window_copy.rs:1144:10
     |
1144 | pub type C2RustUnnamed_36 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed36`

warning: type `C2RustUnnamed_37` should have an upper camel case name
    --> src/window_copy.rs:1158:10
     |
1158 | pub type C2RustUnnamed_37 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed37`

warning: type `C2RustUnnamed_38` should have an upper camel case name
    --> src/window_copy.rs:1159:10
     |
1159 | pub type C2RustUnnamed_38 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed38`

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2004:9
     |
2004 | /         if strcmp(command, b"other-end\0" as *const u8 as *const libc::c_char)
2005 | |             == 0 as libc::c_int
2006 | |         {
2007 | |             if np % 2 as libc::c_int as u_int != 0 as libc::c_int as u_int {
...    |
2010 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2004 ~         if strcmp(command, b"other-end\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && np % 2 as libc::c_int as u_int != 0 as libc::c_int as u_int {
2005 +             window_copy_other_end(wp);
2006 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2201:9
     |
2201 | /         if strcmp(command, b"copy-pipe\0" as *const u8 as *const libc::c_char)
2202 | |             == 0 as libc::c_int
2203 | |         {
2204 | |             if !s.is_null() {
...    |
2207 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2201 ~         if strcmp(command, b"copy-pipe\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && !s.is_null() {
2202 +             window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
2203 +         }
     |

warning: this `if` statement can be collapsed
    --> src/window_copy.rs:2208:9
     |
2208 | /         if strcmp(command, b"copy-pipe-and-cancel\0" as *const u8 as *const libc::c_char)
2209 | |             == 0 as libc::c_int
2210 | |         {
2211 | |             if !s.is_null() {
...    |
2215 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2208 ~         if strcmp(command, b"copy-pipe-and-cancel\0" as *const u8 as *const libc::c_char) == 0 as libc::c_int && !s.is_null() {
2209 +             window_copy_copy_pipe(wp, s, 0 as *const libc::c_char, argument);
2210 +             cancel = 1 as libc::c_int;
2211 +         }
     |

warning: operator precedence can trip the unwary
    --> src/window_copy.rs:2925:28
     |
2925 |                   *fresh2 = (*fresh2 as libc::c_int
     |  ____________________________^
2926 | |                     | (1 as libc::c_int) << (_start & 0x7 as libc::c_int)) as bitstr_t;
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `*fresh2 as libc::c_int | ((1 as libc::c_int) << (_start & 0x7 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `__u_char` should have an upper camel case name
   --> src/window_tree.rs:170:10
    |
170 | pub type __u_char = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `__u_short` should have an upper camel case name
   --> src/window_tree.rs:171:10
    |
171 | pub type __u_short = libc::c_ushort;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `__u_int` should have an upper camel case name
   --> src/window_tree.rs:172:10
    |
172 | pub type __u_int = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `__uint8_t` should have an upper camel case name
   --> src/window_tree.rs:173:10
    |
173 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/window_tree.rs:174:10
    |
174 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/window_tree.rs:175:10
    |
175 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__time_t` should have an upper camel case name
   --> src/window_tree.rs:176:10
    |
176 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/window_tree.rs:177:10
    |
177 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `u_char` should have an upper camel case name
   --> src/window_tree.rs:178:10
    |
178 | pub type u_char = __u_char;
    |          ^^^^^^ help: convert the identifier to upper camel case: `UChar`

warning: type `u_short` should have an upper camel case name
   --> src/window_tree.rs:179:10
    |
179 | pub type u_short = __u_short;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UShort`

warning: type `u_int` should have an upper camel case name
   --> src/window_tree.rs:180:10
    |
180 | pub type u_int = __u_int;
    |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `pid_t` should have an upper camel case name
   --> src/window_tree.rs:181:10
    |
181 | pub type pid_t = __pid_t;
    |          ^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `time_t` should have an upper camel case name
   --> src/window_tree.rs:182:10
    |
182 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `size_t` should have an upper camel case name
   --> src/window_tree.rs:183:10
    |
183 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/window_tree.rs:190:10
    |
190 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `uint8_t` should have an upper camel case name
   --> src/window_tree.rs:193:10
    |
193 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint64_t` should have an upper camel case name
   --> src/window_tree.rs:194:10
    |
194 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `bufferevent_event_cb` should have an upper camel case name
   --> src/window_tree.rs:301:10
    |
301 | pub type bufferevent_event_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventEventCb`

warning: type `bufferevent_data_cb` should have an upper camel case name
   --> src/window_tree.rs:304:10
    |
304 | pub type bufferevent_data_cb = Option::<
    |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuffereventDataCb`

warning: type `cc_t` should have an upper camel case name
   --> src/window_tree.rs:313:10
    |
313 | pub type cc_t = libc::c_uchar;
    |          ^^^^ help: convert the identifier to upper camel case: `CcT`

warning: type `speed_t` should have an upper camel case name
   --> src/window_tree.rs:314:10
    |
314 | pub type speed_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SpeedT`

warning: type `tcflag_t` should have an upper camel case name
   --> src/window_tree.rs:315:10
    |
315 | pub type tcflag_t = libc::c_uint;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TcflagT`

warning: type `bitstr_t` should have an upper camel case name
   --> src/window_tree.rs:328:10
    |
328 | pub type bitstr_t = libc::c_uchar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `BitstrT`

warning: type `key_code` should have an upper camel case name
   --> src/window_tree.rs:692:10
    |
692 | pub type key_code = libc::c_ulonglong;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

warning: type `C2RustUnnamed_20` should have an upper camel case name
   --> src/window_tree.rs:734:10
    |
734 | pub type C2RustUnnamed_20 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed20`

warning: type `layout_type` should have an upper camel case name
   --> src/window_tree.rs:779:10
    |
779 | pub type layout_type = libc::c_uint;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LayoutType`

warning: type `C2RustUnnamed_23` should have an upper camel case name
   --> src/window_tree.rs:795:10
    |
795 | pub type C2RustUnnamed_23 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `prompt_free_cb` should have an upper camel case name
   --> src/window_tree.rs:798:10
    |
798 | pub type prompt_free_cb = Option::<unsafe extern "C" fn(*mut libc::c_void) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptFreeCb`

warning: type `prompt_input_cb` should have an upper camel case name
   --> src/window_tree.rs:799:10
    |
799 | pub type prompt_input_cb = Option::<
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `PromptInputCb`

warning: type `cmdq_cb` should have an upper camel case name
   --> src/window_tree.rs:931:10
    |
931 | pub type cmdq_cb = Option::<
    |          ^^^^^^^ help: convert the identifier to upper camel case: `CmdqCb`

warning: type `cmd_retval` should have an upper camel case name
   --> src/window_tree.rs:934:10
    |
934 | pub type cmd_retval = libc::c_int;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdRetval`

warning: type `cmdq_type` should have an upper camel case name
   --> src/window_tree.rs:948:10
    |
948 | pub type cmdq_type = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `CmdqType`

warning: type `cmd_find_type` should have an upper camel case name
   --> src/window_tree.rs:964:10
    |
964 | pub type cmd_find_type = libc::c_uint;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CmdFindType`

warning: type `C2RustUnnamed_32` should have an upper camel case name
    --> src/window_tree.rs:1033:10
     |
1033 | pub type C2RustUnnamed_32 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed32`

warning: type `C2RustUnnamed_34` should have an upper camel case name
    --> src/window_tree.rs:1057:10
     |
1057 | pub type C2RustUnnamed_34 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed34`

warning: type `mode_tree_build_cb` should have an upper camel case name
    --> src/window_tree.rs:1206:10
     |
1206 | pub type mode_tree_build_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeBuildCb`

warning: type `mode_tree_draw_cb` should have an upper camel case name
    --> src/window_tree.rs:1214:10
     |
1214 | pub type mode_tree_draw_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeDrawCb`

warning: type `mode_tree_search_cb` should have an upper camel case name
    --> src/window_tree.rs:1223:10
     |
1223 | pub type mode_tree_search_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeSearchCb`

warning: type `mode_tree_each_cb` should have an upper camel case name
    --> src/window_tree.rs:1230:10
     |
1230 | pub type mode_tree_each_cb = Option::<
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ModeTreeEachCb`

warning: type `window_tree_type` should have an upper camel case name
    --> src/window_tree.rs:1260:10
     |
1260 | pub type window_tree_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WindowTreeType`

warning: type `window_tree_sort_type` should have an upper camel case name
    --> src/window_tree.rs:1276:10
     |
1276 | pub type window_tree_sort_type = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WindowTreeSortType`

warning: type `size_t` should have an upper camel case name
  --> src/xmalloc.rs:35:10
   |
35 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__u_int` should have an upper camel case name
 --> src/xterm_keys.rs:6:10
  |
6 | pub type __u_int = libc::c_uint;
  |          ^^^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `u_int` should have an upper camel case name
 --> src/xterm_keys.rs:7:10
  |
7 | pub type u_int = __u_int;
  |          ^^^^^ help: convert the identifier to upper camel case: `UInt`

warning: type `size_t` should have an upper camel case name
 --> src/xterm_keys.rs:8:10
  |
8 | pub type size_t = libc::c_ulong;
  |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `key_code` should have an upper camel case name
 --> src/xterm_keys.rs:9:10
  |
9 | pub type key_code = libc::c_ulonglong;
  |          ^^^^^^^^ help: convert the identifier to upper camel case: `KeyCode`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/log.rs:166:13
    |
166 |     mut ap: ::core::ffi::VaList,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/log.rs:19:16
   |
19 |         __arg: ::core::ffi::VaList,
   |                ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/screen_write.rs:1209:13
     |
1209 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/screen_write.rs:38:12
   |
38 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1274:17
     |
1274 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1286:17
     |
1286 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1309:17
     |
1309 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1338:17
     |
1338 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1381:17
     |
1381 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1399:17
     |
1399 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1420:17
     |
1420 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1448:17
     |
1448 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1473:17
     |
1473 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1516:17
     |
1516 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1525:17
     |
1525 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1532:17
     |
1532 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1549:17
     |
1549 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1571:17
     |
1571 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1615:17
     |
1615 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1659:17
     |
1659 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1719:17
     |
1719 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1731:17
     |
1731 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1756:17
     |
1756 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1853:17
     |
1853 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1903:17
     |
1903 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1969:17
     |
1969 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2015:17
     |
2015 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2025:17
     |
2025 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2038:17
     |
2038 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2049:17
     |
2049 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/variadic.rs:45:12
   |
45 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/variadic.rs:50:16
   |
50 |         __arg: ::core::ffi::VaList,
   |                ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/variadic.rs:79:13
   |
79 |         ap: ::core::ffi::VaList,
   |             ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/variadic.rs:94:12
   |
94 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/variadic.rs:100:12
    |
100 |         _: ::core::ffi::VaList,
    |            ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/variadic.rs:133:12
    |
133 |         _: ::core::ffi::VaList,
    |            ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/variadic.rs:150:12
    |
150 |         _: ::core::ffi::VaList,
    |            ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/variadic.rs:160:46
    |
160 |     fn log_vwrite(_: *const libc::c_char, _: ::core::ffi::VaList);
    |                                              ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/window_copy.rs:1328:13
     |
1328 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/window_copy.rs:143:12
    |
143 |         _: ::core::ffi::VaList,
    |            ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/xmalloc.rs:133:13
    |
133 |     mut ap: ::core::ffi::VaList,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/xmalloc.rs:150:13
    |
150 |     mut ap: ::core::ffi::VaList,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
 --> src/xmalloc.rs:8:12
  |
8 |         _: ::core::ffi::VaList,
  |            ^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/xmalloc.rs:13:16
   |
13 |         __arg: ::core::ffi::VaList,
   |                ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

warning: variable does not need to be mutable
   --> src/cmd_wait_for.rs:989:9
    |
989 |     let mut init = wait_channels {
    |         ----^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
    --> src/format.rs:1244:9
     |
1244 |     let mut init = format_job_tree {
     |         ----^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/job.rs:1006:9
     |
1006 |     let mut init = joblist {
     |         ----^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/key_bindings.rs:2033:9
     |
2033 |     let mut init = key_tables {
     |         ----^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/tty_term.rs:353:9
    |
353 |     let mut init = tty_terms {
    |         ----^^^^
    |         |
    |         help: remove this `mut`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/log.rs:174:36
    |
174 |     if vasprintf(&mut fmt, msg, ap.as_va_list()) == -(1 as libc::c_int) {
    |                                    ^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/screen_write.rs:1234:34
     |
1234 |     xvasprintf(&mut msg, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1278:39
     |
1278 |     slen = xvasprintf(&mut s, fmt, ap.as_va_list()) as size_t;
     |                                       ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1289:34
     |
1289 |     xvasprintf(&mut msg, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1312:36
     |
1312 |     xvasprintf(&mut value, fmt, ap.as_va_list());
     |                                    ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1345:46
     |
1345 |                 xvasprintf(&mut tmp, fmt, ap.as_va_list());
     |                                              ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1351:64
     |
1351 |                 evbuffer_add_vprintf((*c).stdout_data, fmt, ap.as_va_list());
     |                                                                ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1371:51
     |
1371 |             window_copy_vadd((*w).active, fmt, ap.as_va_list());
     |                                                   ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1383:52
     |
1383 |     evbuffer_add_vprintf((*c).stdout_data, fmt, ap.as_va_list());
     |                                                    ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1404:50
     |
1404 |         xvasprintf(&mut (*envent).value, fmt, ap.as_va_list());
     |                                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1409:50
     |
1409 |         xvasprintf(&mut (*envent).value, fmt, ap.as_va_list());
     |                                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1423:36
     |
1423 |     vasprintf(&mut prefix, fmt, ap.as_va_list());
     |                                    ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1462:42
     |
1462 |     xvasprintf(&mut (*fe).value, fmt, ap.as_va_list());
     |                                          ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1480:35
     |
1480 |     xvasprintf(&mut name, fmt, ap.as_va_list());
     |                                   ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1519:36
     |
1519 |     xvasprintf(&mut reply, fmt, ap.as_va_list());
     |                                    ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1527:24
     |
1527 |     log_vwrite(msg, ap.as_va_list());
     |                        ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1543:24
     |
1543 |     log_vwrite(fmt, ap.as_va_list());
     |                        ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1559:24
     |
1559 |     log_vwrite(fmt, ap.as_va_list());
     |                        ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1575:32
     |
1575 |     xvasprintf(&mut s, fmt, ap.as_va_list());
     |                                ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1622:34
     |
1622 |     xvasprintf(&mut msg, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1672:34
     |
1672 |     xvasprintf(&mut msg, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1721:75
     |
1721 |     screen_write_vnputs(ctx, -(1 as libc::c_int) as ssize_t, gcp, fmt, ap.as_va_list());
     |                                                                           ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1733:51
     |
1733 |     screen_write_vnputs(ctx, maxlen, gcp, fmt, ap.as_va_list());
     |                                                   ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1769:34
     |
1769 |     xvasprintf(&mut msg, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1856:32
     |
1856 |     xvasprintf(&mut s, fmt, ap.as_va_list());
     |                                ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1924:50
     |
1924 |     xvasprintf(&mut (*c).message_string, fmt, ap.as_va_list());
     |                                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:1974:43
     |
1974 |     msglen = xvasprintf(&mut msg, fmt, ap.as_va_list()) as size_t;
     |                                           ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2017:34
     |
2017 |     window_copy_vadd(wp, fmt, ap.as_va_list());
     |                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2028:33
     |
2028 |     i = xvasprintf(ret, fmt, ap.as_va_list());
     |                                 ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2041:38
     |
2041 |     i = xvsnprintf(str, len, fmt, ap.as_va_list());
     |                                      ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/variadic.rs:2056:12
     |
2056 |         ap.as_va_list(),
     |            ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/window_copy.rs:1395:12
     |
1395 |         ap.as_va_list(),
     |            ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/xmalloc.rs:136:32
    |
136 |     i = vasprintf(ret, fmt, ap.as_va_list());
    |                                ^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
   --> src/xmalloc.rs:156:37
    |
156 |     i = vsnprintf(str, len, fmt, ap.as_va_list());
    |                                     ^^^^^^^^^^
    |
    = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/alerts.rs:1558:5
     |
1558 |     alerts_list = {
     |     ^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/alerts.rs:1557:1
     |
1557 | unsafe extern "C" fn run_static_initializers() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/alerts.rs:1561:28
     |
1561 |             tqh_last: &mut alerts_list.tqh_first,
     |                            ^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
    --> src/alerts.rs:1559:13
     |
1559 |         let mut init = C2RustUnnamed_34 {
     |             ----^^^^
     |             |
     |             help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:494:10
    |
494 |     if !((*elm).entry.rbe_right).is_null() {
    |          ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
   --> src/arguments.rs:493:1
    |
493 | unsafe extern "C" fn args_tree_RB_NEXT(mut elm: *mut args_entry) -> *mut args_entry {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:495:15
    |
495 |         elm = (*elm).entry.rbe_right;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:496:17
    |
496 |         while !((*elm).entry.rbe_left).is_null() {
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:497:19
    |
497 |             elm = (*elm).entry.rbe_left;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:499:17
    |
499 |     } else if !((*elm).entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:500:19
    |
500 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:500:21
    |
500 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
    |                     ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:502:15
    |
502 |         elm = (*elm).entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:504:17
    |
504 |         while !((*elm).entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:505:23
    |
505 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:505:25
    |
505 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
    |                         ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:507:19
    |
507 |             elm = (*elm).entry.rbe_parent;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/arguments.rs:509:15
    |
509 |         elm = (*elm).entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
   --> src/cmd_queue.rs:975:21
    |
975 |         return &mut global_queue;
    |                     ^^^^^^^^^^^^ use of mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
   --> src/cmd_queue.rs:973:1
    |
973 | unsafe extern "C" fn cmdq_get(mut c: *mut client) -> *mut cmdq_list {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/cmd_queue.rs:977:17
    |
977 |     return &mut (*c).queue;
    |                 ^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
   --> src/cmd_queue.rs:973:31
    |
973 | unsafe extern "C" fn cmdq_get(mut c: *mut client) -> *mut cmdq_list {
    |                               ----^
    |                               |
    |                               help: remove this `mut`

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/cmd_queue.rs:1400:5
     |
1400 |     global_queue = {
     |     ^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/cmd_queue.rs:1399:1
     |
1399 | unsafe extern "C" fn run_static_initializers() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/cmd_queue.rs:1403:28
     |
1403 |             tqh_last: &mut global_queue.tqh_first,
     |                            ^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
    --> src/cmd_queue.rs:1401:13
     |
1401 |         let mut init = cmdq_list {
     |             ----^^^^
     |             |
     |             help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1298:10
     |
1298 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/cmd_wait_for.rs:1295:1
     |
1295 | / unsafe extern "C" fn wait_channels_RB_NEXT(
1296 | |     mut elm: *mut wait_channel,
1297 | | ) -> *mut wait_channel {
     | |______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1299:15
     |
1299 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1300:17
     |
1300 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1301:19
     |
1301 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1303:17
     |
1303 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1304:19
     |
1304 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1304:21
     |
1304 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1306:15
     |
1306 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1308:17
     |
1308 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1309:23
     |
1309 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1309:25
     |
1309 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1311:19
     |
1311 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/cmd_wait_for.rs:1313:15
     |
1313 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1381:10
     |
1381 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/environ.rs:1378:1
     |
1378 | / pub unsafe extern "C" fn environ_RB_PREV(
1379 | |     mut elm: *mut environ_entry,
1380 | | ) -> *mut environ_entry {
     | |_______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1382:15
     |
1382 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1383:17
     |
1383 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1384:19
     |
1384 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1386:17
     |
1386 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1387:19
     |
1387 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1387:21
     |
1387 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1389:15
     |
1389 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1391:17
     |
1391 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1392:23
     |
1392 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1392:25
     |
1392 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1394:19
     |
1394 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1396:15
     |
1396 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1478:10
     |
1478 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/environ.rs:1475:1
     |
1475 | / pub unsafe extern "C" fn environ_RB_NEXT(
1476 | |     mut elm: *mut environ_entry,
1477 | | ) -> *mut environ_entry {
     | |_______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1479:15
     |
1479 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1480:17
     |
1480 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1481:19
     |
1481 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1483:17
     |
1483 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1484:19
     |
1484 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1484:21
     |
1484 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1486:15
     |
1486 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1488:17
     |
1488 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1489:23
     |
1489 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1489:25
     |
1489 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1491:19
     |
1491 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/environ.rs:1493:15
     |
1493 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `environ::environ_RB_NEXT` is unsafe and requires unsafe block
    --> src/environ.rs:1540:12
     |
1540 |     return environ_RB_NEXT(envent);
     |            ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/environ.rs:1537:1
     |
1537 | / pub unsafe extern "C" fn environ_next(
1538 | |     mut envent: *mut environ_entry,
1539 | | ) -> *mut environ_entry {
     | |_______________________^

warning: variable does not need to be mutable
    --> src/environ.rs:1538:5
     |
1538 |     mut envent: *mut environ_entry,
     |     ----^^^^^^
     |     |
     |     help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1408:10
     |
1408 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/format.rs:1405:1
     |
1405 | / unsafe extern "C" fn format_job_tree_RB_NEXT(
1406 | |     mut elm: *mut format_job,
1407 | | ) -> *mut format_job {
     | |____________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1409:15
     |
1409 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1410:17
     |
1410 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1411:19
     |
1411 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1413:17
     |
1413 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1414:19
     |
1414 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1414:21
     |
1414 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1416:15
     |
1416 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1418:17
     |
1418 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1419:23
     |
1419 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1419:25
     |
1419 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1421:19
     |
1421 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1423:15
     |
1423 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1910:10
     |
1910 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/format.rs:1907:1
     |
1907 | / pub unsafe extern "C" fn format_entry_tree_RB_NEXT(
1908 | |     mut elm: *mut format_entry,
1909 | | ) -> *mut format_entry {
     | |______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1911:15
     |
1911 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1912:17
     |
1912 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1913:19
     |
1913 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1915:17
     |
1915 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1916:19
     |
1916 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1916:21
     |
1916 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1918:15
     |
1918 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1920:17
     |
1920 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1921:23
     |
1921 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1921:25
     |
1921 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1923:19
     |
1923 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:1925:15
     |
1925 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2165:10
     |
2165 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/format.rs:2162:1
     |
2162 | / pub unsafe extern "C" fn format_entry_tree_RB_PREV(
2163 | |     mut elm: *mut format_entry,
2164 | | ) -> *mut format_entry {
     | |______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2166:15
     |
2166 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2167:17
     |
2167 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2168:19
     |
2168 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2170:17
     |
2170 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2171:19
     |
2171 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2171:21
     |
2171 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2173:15
     |
2173 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2175:17
     |
2175 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2176:23
     |
2176 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2176:25
     |
2176 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2178:19
     |
2178 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/format.rs:2180:15
     |
2180 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1023:10
     |
1023 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/hooks.rs:1022:1
     |
1022 | unsafe extern "C" fn hooks_tree_RB_NEXT(mut elm: *mut hook) -> *mut hook {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1024:15
     |
1024 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1025:17
     |
1025 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1026:19
     |
1026 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1028:17
     |
1028 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1029:19
     |
1029 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1029:21
     |
1029 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1031:15
     |
1031 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1033:17
     |
1033 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1034:23
     |
1034 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1034:25
     |
1034 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1036:19
     |
1036 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1038:15
     |
1038 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/hooks.rs:1434:16
     |
1434 |         return (*s).hooks;
     |                ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/hooks.rs:1432:1
     |
1432 | pub unsafe extern "C" fn hooks_get(mut s: *mut session) -> *mut hooks {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/hooks.rs:1436:12
     |
1436 |     return global_hooks;
     |            ^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
    --> src/hooks.rs:1432:36
     |
1432 | pub unsafe extern "C" fn hooks_get(mut s: *mut session) -> *mut hooks {
     |                                    ----^
     |                                    |
     |                                    help: remove this `mut`

warning[E0133]: call to unsafe function `hooks::hooks_tree_RB_NEXT` is unsafe and requires unsafe block
    --> src/hooks.rs:1477:12
     |
1477 |     return hooks_tree_RB_NEXT(hook);
     |            ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/hooks.rs:1476:1
     |
1476 | pub unsafe extern "C" fn hooks_next(mut hook: *mut hook) -> *mut hook {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
    --> src/hooks.rs:1476:37
     |
1476 | pub unsafe extern "C" fn hooks_next(mut hook: *mut hook) -> *mut hook {
     |                                     ----^^^^
     |                                     |
     |                                     help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3867:12
     |
3867 |     return (*(*wp).ictx).since_ground;
     |            ^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/input.rs:3866:1
     |
3866 | pub unsafe extern "C" fn input_pending(mut wp: *mut window_pane) -> *mut evbuffer {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3867:14
     |
3867 |     return (*(*wp).ictx).since_ground;
     |              ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/input.rs:3866:40
     |
3866 | pub unsafe extern "C" fn input_pending(mut wp: *mut window_pane) -> *mut evbuffer {
     |                                        ----^^
     |                                        |
     |                                        help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3873:36
     |
3873 |     let mut ictx: *mut input_ctx = (*wp).ictx;
     |                                    ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/input.rs:3869:1
     |
3869 | / unsafe extern "C" fn input_set_state(
3870 | |     mut wp: *mut window_pane,
3871 | |     mut itr: *const input_transition,
3872 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3874:9
     |
3874 |     if ((*(*ictx).state).exit).is_some() {
     |         ^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3874:11
     |
3874 |     if ((*(*ictx).state).exit).is_some() {
     |           ^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function is unsafe and requires unsafe block
    --> src/input.rs:3875:9
     |
3875 |         ((*(*ictx).state).exit).expect("non-null function pointer")(ictx);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3875:10
     |
3875 |         ((*(*ictx).state).exit).expect("non-null function pointer")(ictx);
     |          ^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3875:12
     |
3875 |         ((*(*ictx).state).exit).expect("non-null function pointer")(ictx);
     |            ^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3877:5
     |
3877 |     (*ictx).state = (*itr).state;
     |     ^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3877:21
     |
3877 |     (*ictx).state = (*itr).state;
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3878:9
     |
3878 |     if ((*(*ictx).state).enter).is_some() {
     |         ^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3878:11
     |
3878 |     if ((*(*ictx).state).enter).is_some() {
     |           ^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function is unsafe and requires unsafe block
    --> src/input.rs:3879:9
     |
3879 |         ((*(*ictx).state).enter).expect("non-null function pointer")(ictx);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3879:10
     |
3879 |         ((*(*ictx).state).enter).expect("non-null function pointer")(ictx);
     |          ^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/input.rs:3879:12
     |
3879 |         ((*(*ictx).state).enter).expect("non-null function pointer")(ictx);
     |            ^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/input.rs:3870:5
     |
3870 |     mut wp: *mut window_pane,
     |     ----^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/input.rs:3871:5
     |
3871 |     mut itr: *const input_transition,
     |     ----^^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/input.rs:3873:9
     |
3873 |     let mut ictx: *mut input_ctx = (*wp).ictx;
     |         ----^^^^
     |         |
     |         help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1445:10
     |
1445 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/key_bindings.rs:1442:1
     |
1442 | / pub unsafe extern "C" fn key_bindings_RB_NEXT(
1443 | |     mut elm: *mut key_binding,
1444 | | ) -> *mut key_binding {
     | |_____________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1446:15
     |
1446 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1447:17
     |
1447 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1448:19
     |
1448 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1450:17
     |
1450 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1451:19
     |
1451 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1451:21
     |
1451 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1453:15
     |
1453 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1455:17
     |
1455 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1456:23
     |
1456 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1456:25
     |
1456 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1458:19
     |
1458 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1460:15
     |
1460 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1468:10
     |
1468 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/key_bindings.rs:1465:1
     |
1465 | / pub unsafe extern "C" fn key_bindings_RB_PREV(
1466 | |     mut elm: *mut key_binding,
1467 | | ) -> *mut key_binding {
     | |_____________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1469:15
     |
1469 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1470:17
     |
1470 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1471:19
     |
1471 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1473:17
     |
1473 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1474:19
     |
1474 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1474:21
     |
1474 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1476:15
     |
1476 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1478:17
     |
1478 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1479:23
     |
1479 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1479:25
     |
1479 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1481:19
     |
1481 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1483:15
     |
1483 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1955:10
     |
1955 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/key_bindings.rs:1954:1
     |
1954 | pub unsafe extern "C" fn key_tables_RB_PREV(mut elm: *mut key_table) -> *mut key_table {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1956:15
     |
1956 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1957:17
     |
1957 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1958:19
     |
1958 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1960:17
     |
1960 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1961:19
     |
1961 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1961:21
     |
1961 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1963:15
     |
1963 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1965:17
     |
1965 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1966:23
     |
1966 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1966:25
     |
1966 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1968:19
     |
1968 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1970:15
     |
1970 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1995:10
     |
1995 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/key_bindings.rs:1994:1
     |
1994 | pub unsafe extern "C" fn key_tables_RB_NEXT(mut elm: *mut key_table) -> *mut key_table {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1996:15
     |
1996 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1997:17
     |
1997 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:1998:19
     |
1998 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2000:17
     |
2000 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2001:19
     |
2001 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2001:21
     |
2001 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2003:15
     |
2003 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2005:17
     |
2005 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2006:23
     |
2006 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2006:25
     |
2006 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2008:19
     |
2008 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/key_bindings.rs:2010:15
     |
2010 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `layout::layout_free_cell` is unsafe and requires unsafe block
    --> src/layout.rs:1375:5
     |
1375 |     layout_free_cell((*w).layout_root);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/layout.rs:1374:1
     |
1374 | pub unsafe extern "C" fn layout_free(mut w: *mut window) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/layout.rs:1375:22
     |
1375 |     layout_free_cell((*w).layout_root);
     |                      ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/layout.rs:1374:38
     |
1374 | pub unsafe extern "C" fn layout_free(mut w: *mut window) {
     |                                      ----^
     |                                      |
     |                                      help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1693:43
     |
1693 |     let mut parent: *mut mode_tree_item = (*mti).parent;
     |                                           ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/mode_tree.rs:1689:1
     |
1689 | / pub unsafe extern "C" fn mode_tree_remove(
1690 | |     mut mtd: *mut mode_tree_data,
1691 | |     mut mti: *mut mode_tree_item,
1692 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1695:14
     |
1695 |         if !((*mti).entry.tqe_next).is_null() {
     |              ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1696:13
     |
1696 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1696:15
     |
1696 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1696:55
     |
1696 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |                                                       ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1698:13
     |
1698 |             (*parent).children.tqh_last = (*mti).entry.tqe_prev;
     |             ^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1698:43
     |
1698 |             (*parent).children.tqh_last = (*mti).entry.tqe_prev;
     |                                           ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1700:9
     |
1700 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |         ^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1700:10
     |
1700 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1700:34
     |
1700 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |                                  ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1702:14
     |
1702 |         if !((*mti).entry.tqe_next).is_null() {
     |              ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1703:13
     |
1703 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1703:15
     |
1703 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1703:55
     |
1703 |             (*(*mti).entry.tqe_next).entry.tqe_prev = (*mti).entry.tqe_prev;
     |                                                       ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1705:13
     |
1705 |             (*mtd).children.tqh_last = (*mti).entry.tqe_prev;
     |             ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1705:40
     |
1705 |             (*mtd).children.tqh_last = (*mti).entry.tqe_prev;
     |                                        ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1707:9
     |
1707 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |         ^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1707:10
     |
1707 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/mode_tree.rs:1707:34
     |
1707 |         *(*mti).entry.tqe_prev = (*mti).entry.tqe_next;
     |                                  ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `mode_tree::mode_tree_free_item` is unsafe and requires unsafe block
    --> src/mode_tree.rs:1709:5
     |
1709 |     mode_tree_free_item(mti);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
    --> src/mode_tree.rs:1690:5
     |
1690 |     mut mtd: *mut mode_tree_data,
     |     ----^^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/mode_tree.rs:1691:5
     |
1691 |     mut mti: *mut mode_tree_item,
     |     ----^^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/mode_tree.rs:1693:9
     |
1693 |     let mut parent: *mut mode_tree_item = (*mti).parent;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1513:10
     |
1513 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/options.rs:1510:1
     |
1510 | / unsafe extern "C" fn options_tree_RB_NEXT(
1511 | |     mut elm: *mut options_entry,
1512 | | ) -> *mut options_entry {
     | |_______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1514:15
     |
1514 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1515:17
     |
1515 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1516:19
     |
1516 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1518:17
     |
1518 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1519:19
     |
1519 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1519:21
     |
1519 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1521:15
     |
1521 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1523:17
     |
1523 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1524:23
     |
1524 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1524:25
     |
1524 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1526:19
     |
1526 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1528:15
     |
1528 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `options::options_tree_RB_NEXT` is unsafe and requires unsafe block
    --> src/options.rs:1586:12
     |
1586 |     return options_tree_RB_NEXT(o);
     |            ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/options.rs:1585:1
     |
1585 | pub unsafe extern "C" fn options_next(mut o: *mut options_entry) -> *mut options_entry {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
    --> src/options.rs:1585:39
     |
1585 | pub unsafe extern "C" fn options_next(mut o: *mut options_entry) -> *mut options_entry {
     |                                       ----^
     |                                       |
     |                                       help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/options.rs:1722:12
     |
1722 |     return (*o).tableentry;
     |            ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/options.rs:1719:1
     |
1719 | / pub unsafe extern "C" fn options_table_entry(
1720 | |     mut o: *mut options_entry,
1721 | | ) -> *const options_table_entry {
     | |_______________________________^

warning: variable does not need to be mutable
    --> src/options.rs:1720:5
     |
1720 |     mut o: *mut options_entry,
     |     ----^
     |     |
     |     help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:565:10
    |
565 |     if !((*elm).time_entry.rbe_left).is_null() {
    |          ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
   --> src/paste.rs:562:1
    |
562 | / unsafe extern "C" fn paste_time_tree_RB_PREV(
563 | |     mut elm: *mut paste_buffer,
564 | | ) -> *mut paste_buffer {
    | |______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:566:15
    |
566 |         elm = (*elm).time_entry.rbe_left;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:567:17
    |
567 |         while !((*elm).time_entry.rbe_right).is_null() {
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:568:19
    |
568 |             elm = (*elm).time_entry.rbe_right;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:570:17
    |
570 |     } else if !((*elm).time_entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:571:19
    |
571 |         && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_right
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:571:21
    |
571 |         && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_right
    |                     ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:573:15
    |
573 |         elm = (*elm).time_entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:575:17
    |
575 |         while !((*elm).time_entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:576:23
    |
576 |             && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_left
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:576:25
    |
576 |             && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_left
    |                         ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:578:19
    |
578 |             elm = (*elm).time_entry.rbe_parent;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:580:15
    |
580 |         elm = (*elm).time_entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:587:10
    |
587 |     if !((*elm).time_entry.rbe_right).is_null() {
    |          ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
   --> src/paste.rs:584:1
    |
584 | / unsafe extern "C" fn paste_time_tree_RB_NEXT(
585 | |     mut elm: *mut paste_buffer,
586 | | ) -> *mut paste_buffer {
    | |______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:588:15
    |
588 |         elm = (*elm).time_entry.rbe_right;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:589:17
    |
589 |         while !((*elm).time_entry.rbe_left).is_null() {
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:590:19
    |
590 |             elm = (*elm).time_entry.rbe_left;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:592:17
    |
592 |     } else if !((*elm).time_entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:593:19
    |
593 |         && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_left
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:593:21
    |
593 |         && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_left
    |                     ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:595:15
    |
595 |         elm = (*elm).time_entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:597:17
    |
597 |         while !((*elm).time_entry.rbe_parent).is_null()
    |                 ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:598:23
    |
598 |             && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_right
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:598:25
    |
598 |             && elm == (*(*elm).time_entry.rbe_parent).time_entry.rbe_right
    |                         ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:600:19
    |
600 |             elm = (*elm).time_entry.rbe_parent;
    |                   ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
   --> src/paste.rs:602:15
    |
602 |         elm = (*elm).time_entry.rbe_parent;
    |               ^^^^^^ dereference of raw pointer
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: value assigned to `c` is never read
    --> src/server_fn.rs:1286:13
     |
1286 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/server_fn.rs:1287:9
     |
1287 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1285:1
     |
1285 | pub unsafe extern "C" fn server_redraw_session(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1289:12
     |
1289 |         if (*c).session == s {
     |            ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_redraw_client` is unsafe and requires unsafe block
    --> src/server_fn.rs:1290:13
     |
1290 |             server_redraw_client(c);
     |             ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1292:13
     |
1292 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/server_fn.rs:1285:48
     |
1285 | pub unsafe extern "C" fn server_redraw_session(mut s: *mut session) {
     |                                                ----^
     |                                                |
     |                                                help: remove this `mut`

warning: value assigned to `sg` is never read
    --> src/server_fn.rs:1297:13
     |
1297 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |             ^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: call to unsafe function `server_fn::session_group_contains` is unsafe and requires unsafe block
    --> src/server_fn.rs:1298:10
     |
1298 |     sg = session_group_contains(s);
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1296:1
     |
1296 | pub unsafe extern "C" fn server_redraw_session_group(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `server_fn::server_redraw_session` is unsafe and requires unsafe block
    --> src/server_fn.rs:1300:9
     |
1300 |         server_redraw_session(s);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1302:13
     |
1302 |         s = (*sg).sessions.tqh_first;
     |             ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_redraw_session` is unsafe and requires unsafe block
    --> src/server_fn.rs:1304:13
     |
1304 |             server_redraw_session(s);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1305:17
     |
1305 |             s = (*s).gentry.tqe_next;
     |                 ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: value assigned to `c` is never read
    --> src/server_fn.rs:1311:13
     |
1311 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/server_fn.rs:1312:9
     |
1312 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1310:1
     |
1310 | pub unsafe extern "C" fn server_status_session(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1314:12
     |
1314 |         if (*c).session == s {
     |            ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_status_client` is unsafe and requires unsafe block
    --> src/server_fn.rs:1315:13
     |
1315 |             server_status_client(c);
     |             ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1317:13
     |
1317 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/server_fn.rs:1310:48
     |
1310 | pub unsafe extern "C" fn server_status_session(mut s: *mut session) {
     |                                                ----^
     |                                                |
     |                                                help: remove this `mut`

warning: value assigned to `sg` is never read
    --> src/server_fn.rs:1322:13
     |
1322 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |             ^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: call to unsafe function `server_fn::session_group_contains` is unsafe and requires unsafe block
    --> src/server_fn.rs:1323:10
     |
1323 |     sg = session_group_contains(s);
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1321:1
     |
1321 | pub unsafe extern "C" fn server_status_session_group(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `server_fn::server_status_session` is unsafe and requires unsafe block
    --> src/server_fn.rs:1325:9
     |
1325 |         server_status_session(s);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1327:13
     |
1327 |         s = (*sg).sessions.tqh_first;
     |             ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_status_session` is unsafe and requires unsafe block
    --> src/server_fn.rs:1329:13
     |
1329 |             server_status_session(s);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1330:17
     |
1330 |             s = (*s).gentry.tqe_next;
     |                 ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: value assigned to `c` is never read
    --> src/server_fn.rs:1336:13
     |
1336 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/server_fn.rs:1337:9
     |
1337 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1335:1
     |
1335 | pub unsafe extern "C" fn server_redraw_window(mut w: *mut window) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1339:14
     |
1339 |         if !((*c).session).is_null() && (*(*(*c).session).curw).window == w {
     |              ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1339:41
     |
1339 |         if !((*c).session).is_null() && (*(*(*c).session).curw).window == w {
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1339:43
     |
1339 |         if !((*c).session).is_null() && (*(*(*c).session).curw).window == w {
     |                                           ^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1339:45
     |
1339 |         if !((*c).session).is_null() && (*(*(*c).session).curw).window == w {
     |                                             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_redraw_client` is unsafe and requires unsafe block
    --> src/server_fn.rs:1340:13
     |
1340 |             server_redraw_client(c);
     |             ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1342:13
     |
1342 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/server_fn.rs:1335:47
     |
1335 | pub unsafe extern "C" fn server_redraw_window(mut w: *mut window) {
     |                                               ----^
     |                                               |
     |                                               help: remove this `mut`

warning: value assigned to `c` is never read
    --> src/server_fn.rs:1369:13
     |
1369 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/server_fn.rs:1370:9
     |
1370 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1368:1
     |
1368 | pub unsafe extern "C" fn server_lock() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1372:14
     |
1372 |         if !((*c).session).is_null() {
     |              ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_lock_client` is unsafe and requires unsafe block
    --> src/server_fn.rs:1373:13
     |
1373 |             server_lock_client(c);
     |             ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1375:13
     |
1375 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: value assigned to `c` is never read
    --> src/server_fn.rs:1380:13
     |
1380 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/server_fn.rs:1381:9
     |
1381 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/server_fn.rs:1379:1
     |
1379 | pub unsafe extern "C" fn server_lock_session(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1383:12
     |
1383 |         if (*c).session == s {
     |            ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `server_fn::server_lock_client` is unsafe and requires unsafe block
    --> src/server_fn.rs:1384:13
     |
1384 |             server_lock_client(c);
     |             ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/server_fn.rs:1386:13
     |
1386 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/server_fn.rs:1379:46
     |
1379 | pub unsafe extern "C" fn server_lock_session(mut s: *mut session) {
     |                                              ----^
     |                                              |
     |                                              help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1498:10
     |
1498 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:1497:1
     |
1497 | pub unsafe extern "C" fn sessions_RB_PREV(mut elm: *mut session) -> *mut session {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1499:15
     |
1499 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1500:17
     |
1500 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1501:19
     |
1501 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1503:17
     |
1503 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1504:19
     |
1504 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1504:21
     |
1504 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1506:15
     |
1506 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1508:17
     |
1508 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1509:23
     |
1509 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1509:25
     |
1509 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1511:19
     |
1511 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1513:15
     |
1513 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1519:10
     |
1519 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:1518:1
     |
1518 | pub unsafe extern "C" fn sessions_RB_NEXT(mut elm: *mut session) -> *mut session {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1520:15
     |
1520 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1521:17
     |
1521 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1522:19
     |
1522 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1524:17
     |
1524 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1525:19
     |
1525 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1525:21
     |
1525 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1527:15
     |
1527 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1529:17
     |
1529 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1530:23
     |
1530 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1530:25
     |
1530 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1532:19
     |
1532 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:1534:15
     |
1534 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2038:10
     |
2038 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:2035:1
     |
2035 | / pub unsafe extern "C" fn session_groups_RB_NEXT(
2036 | |     mut elm: *mut session_group,
2037 | | ) -> *mut session_group {
     | |_______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2039:15
     |
2039 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2040:17
     |
2040 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2041:19
     |
2041 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2043:17
     |
2043 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2044:19
     |
2044 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2044:21
     |
2044 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2046:15
     |
2046 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2048:17
     |
2048 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2049:23
     |
2049 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2049:25
     |
2049 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2051:19
     |
2051 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2053:15
     |
2053 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2114:10
     |
2114 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:2111:1
     |
2111 | / pub unsafe extern "C" fn session_groups_RB_PREV(
2112 | |     mut elm: *mut session_group,
2113 | | ) -> *mut session_group {
     | |_______________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2115:15
     |
2115 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2116:17
     |
2116 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2117:19
     |
2117 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2119:17
     |
2119 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2120:19
     |
2120 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2120:21
     |
2120 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2122:15
     |
2122 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2124:17
     |
2124 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2125:23
     |
2125 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2125:25
     |
2125 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2127:19
     |
2127 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2129:15
     |
2129 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `session::session_group_contains` is unsafe and requires unsafe block
    --> src/session.rs:2910:8
     |
2910 |     if (session_group_contains(s)).is_null() {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:2906:1
     |
2906 | / pub unsafe extern "C" fn session_group_add(
2907 | |     mut sg: *mut session_group,
2908 | |     mut s: *mut session,
2909 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2911:9
     |
2911 |         (*s).gentry.tqe_next = 0 as *mut session;
     |         ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2912:9
     |
2912 |         (*s).gentry.tqe_prev = (*sg).sessions.tqh_last;
     |         ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2912:32
     |
2912 |         (*s).gentry.tqe_prev = (*sg).sessions.tqh_last;
     |                                ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2913:9
     |
2913 |         *(*sg).sessions.tqh_last = s;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2913:10
     |
2913 |         *(*sg).sessions.tqh_last = s;
     |          ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2914:9
     |
2914 |         (*sg).sessions.tqh_last = &mut (*s).gentry.tqe_next;
     |         ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2914:40
     |
2914 |         (*sg).sessions.tqh_last = &mut (*s).gentry.tqe_next;
     |                                        ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/session.rs:2907:5
     |
2907 |     mut sg: *mut session_group,
     |     ----^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/session.rs:2908:5
     |
2908 |     mut s: *mut session,
     |     ----^
     |     |
     |     help: remove this `mut`

warning: value assigned to `sg` is never read
    --> src/session.rs:2949:13
     |
2949 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |             ^^
     |
     = help: maybe it is overwritten before being read?

warning: value assigned to `target` is never read
    --> src/session.rs:2950:13
     |
2950 |     let mut target: *mut session = 0 as *mut session;
     |             ^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: value assigned to `target` is never read
    --> src/session.rs:2955:5
     |
2955 |     target = 0 as *mut session;
     |     ^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: call to unsafe function `session::session_group_contains` is unsafe and requires unsafe block
    --> src/session.rs:2951:10
     |
2951 |     sg = session_group_contains(s);
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:2948:1
     |
2948 | pub unsafe extern "C" fn session_group_synchronize_to(mut s: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2956:14
     |
2956 |     target = (*sg).sessions.tqh_first;
     |              ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2961:18
     |
2961 |         target = (*target).gentry.tqe_next;
     |                  ^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `session::session_group_synchronize1` is unsafe and requires unsafe block
    --> src/session.rs:2964:9
     |
2964 |         session_group_synchronize1(target, s);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
    --> src/session.rs:2948:55
     |
2948 | pub unsafe extern "C" fn session_group_synchronize_to(mut s: *mut session) {
     |                                                       ----^
     |                                                       |
     |                                                       help: remove this `mut`

warning: value assigned to `sg` is never read
    --> src/session.rs:2969:13
     |
2969 |     let mut sg: *mut session_group = 0 as *mut session_group;
     |             ^^
     |
     = help: maybe it is overwritten before being read?

warning: value assigned to `s` is never read
    --> src/session.rs:2970:13
     |
2970 |     let mut s: *mut session = 0 as *mut session;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: call to unsafe function `session::session_group_contains` is unsafe and requires unsafe block
    --> src/session.rs:2971:10
     |
2971 |     sg = session_group_contains(target);
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/session.rs:2968:1
     |
2968 | pub unsafe extern "C" fn session_group_synchronize_from(mut target: *mut session) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2975:9
     |
2975 |     s = (*sg).sessions.tqh_first;
     |         ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `session::session_group_synchronize1` is unsafe and requires unsafe block
    --> src/session.rs:2978:13
     |
2978 |             session_group_synchronize1(target, s);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/session.rs:2980:13
     |
2980 |         s = (*s).gentry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/session.rs:2968:57
     |
2968 | pub unsafe extern "C" fn session_group_synchronize_from(mut target: *mut session) {
     |                                                         ----^^^^^^
     |                                                         |
     |                                                         help: remove this `mut`

warning: value assigned to `c` is never read
    --> src/status.rs:1430:13
     |
1430 |     let mut c: *mut client = 0 as *mut client;
     |             ^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/status.rs:1431:9
     |
1431 |     c = clients.tqh_first;
     |         ^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/status.rs:1429:1
     |
1429 | pub unsafe extern "C" fn status_timer_start_all() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `status::status_timer_start` is unsafe and requires unsafe block
    --> src/status.rs:1433:9
     |
1433 |         status_timer_start(c);
     |         ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/status.rs:1434:13
     |
1434 |         c = (*c).entry.tqe_next;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `tty_keys::tty_keys_free1` is unsafe and requires unsafe block
    --> src/tty_keys.rs:3321:5
     |
3321 |     tty_keys_free1((*tty).key_tree);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tty_keys.rs:3320:1
     |
3320 | pub unsafe extern "C" fn tty_keys_free(mut tty: *mut tty) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tty_keys.rs:3321:20
     |
3321 |     tty_keys_free1((*tty).key_tree);
     |                    ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/tty_keys.rs:3320:40
     |
3320 | pub unsafe extern "C" fn tty_keys_free(mut tty: *mut tty) {
     |                                        ----^^^
     |                                        |
     |                                        help: remove this `mut`

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1283:10
     |
1283 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:1282:1
     |
1282 | pub unsafe extern "C" fn windows_RB_NEXT(mut elm: *mut window) -> *mut window {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1284:15
     |
1284 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1285:17
     |
1285 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1286:19
     |
1286 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1288:17
     |
1288 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1289:19
     |
1289 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1289:21
     |
1289 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1291:15
     |
1291 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1293:17
     |
1293 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1294:23
     |
1294 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1294:25
     |
1294 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1296:19
     |
1296 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1298:15
     |
1298 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1536:10
     |
1536 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:1535:1
     |
1535 | pub unsafe extern "C" fn windows_RB_PREV(mut elm: *mut window) -> *mut window {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1537:15
     |
1537 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1538:17
     |
1538 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1539:19
     |
1539 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1541:17
     |
1541 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1542:19
     |
1542 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1542:21
     |
1542 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1544:15
     |
1544 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1546:17
     |
1546 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1547:23
     |
1547 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1547:25
     |
1547 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1549:19
     |
1549 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:1551:15
     |
1551 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2272:10
     |
2272 |     if !((*elm).entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:2271:1
     |
2271 | pub unsafe extern "C" fn winlinks_RB_NEXT(mut elm: *mut winlink) -> *mut winlink {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2273:15
     |
2273 |         elm = (*elm).entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2274:17
     |
2274 |         while !((*elm).entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2275:19
     |
2275 |             elm = (*elm).entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2277:17
     |
2277 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2278:19
     |
2278 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2278:21
     |
2278 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2280:15
     |
2280 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2282:17
     |
2282 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2283:23
     |
2283 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2283:25
     |
2283 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2285:19
     |
2285 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2287:15
     |
2287 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2310:10
     |
2310 |     if !((*elm).entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:2309:1
     |
2309 | pub unsafe extern "C" fn winlinks_RB_PREV(mut elm: *mut winlink) -> *mut winlink {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2311:15
     |
2311 |         elm = (*elm).entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2312:17
     |
2312 |         while !((*elm).entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2313:19
     |
2313 |             elm = (*elm).entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2315:17
     |
2315 |     } else if !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2316:19
     |
2316 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2316:21
     |
2316 |         && elm == (*(*elm).entry.rbe_parent).entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2318:15
     |
2318 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2320:17
     |
2320 |         while !((*elm).entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2321:23
     |
2321 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2321:25
     |
2321 |             && elm == (*(*elm).entry.rbe_parent).entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2323:19
     |
2323 |             elm = (*elm).entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2325:15
     |
2325 |         elm = (*elm).entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2333:10
     |
2333 |     if !((*elm).tree_entry.rbe_right).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:2330:1
     |
2330 | / pub unsafe extern "C" fn window_pane_tree_RB_NEXT(
2331 | |     mut elm: *mut window_pane,
2332 | | ) -> *mut window_pane {
     | |_____________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2334:15
     |
2334 |         elm = (*elm).tree_entry.rbe_right;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2335:17
     |
2335 |         while !((*elm).tree_entry.rbe_left).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2336:19
     |
2336 |             elm = (*elm).tree_entry.rbe_left;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2338:17
     |
2338 |     } else if !((*elm).tree_entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2339:19
     |
2339 |         && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_left
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2339:21
     |
2339 |         && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_left
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2341:15
     |
2341 |         elm = (*elm).tree_entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2343:17
     |
2343 |         while !((*elm).tree_entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2344:23
     |
2344 |             && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_right
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2344:25
     |
2344 |             && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_right
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2346:19
     |
2346 |             elm = (*elm).tree_entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2348:15
     |
2348 |         elm = (*elm).tree_entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2863:10
     |
2863 |     if !((*elm).tree_entry.rbe_left).is_null() {
     |          ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:2860:1
     |
2860 | / pub unsafe extern "C" fn window_pane_tree_RB_PREV(
2861 | |     mut elm: *mut window_pane,
2862 | | ) -> *mut window_pane {
     | |_____________________^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2864:15
     |
2864 |         elm = (*elm).tree_entry.rbe_left;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2865:17
     |
2865 |         while !((*elm).tree_entry.rbe_right).is_null() {
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2866:19
     |
2866 |             elm = (*elm).tree_entry.rbe_right;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2868:17
     |
2868 |     } else if !((*elm).tree_entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2869:19
     |
2869 |         && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_right
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2869:21
     |
2869 |         && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_right
     |                     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2871:15
     |
2871 |         elm = (*elm).tree_entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2873:17
     |
2873 |         while !((*elm).tree_entry.rbe_parent).is_null()
     |                 ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2874:23
     |
2874 |             && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_left
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2874:25
     |
2874 |             && elm == (*(*elm).tree_entry.rbe_parent).tree_entry.rbe_left
     |                         ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2876:19
     |
2876 |             elm = (*elm).tree_entry.rbe_parent;
     |                   ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:2878:15
     |
2878 |         elm = (*elm).tree_entry.rbe_parent;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `window::winlinks_RB_NEXT` is unsafe and requires unsafe block
    --> src/window.rs:3109:12
     |
3109 |     return winlinks_RB_NEXT(wl);
     |            ^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3108:1
     |
3108 | pub unsafe extern "C" fn winlink_next(mut wl: *mut winlink) -> *mut winlink {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
    --> src/window.rs:3108:39
     |
3108 | pub unsafe extern "C" fn winlink_next(mut wl: *mut winlink) -> *mut winlink {
     |                                       ----^^
     |                                       |
     |                                       help: remove this `mut`

warning[E0133]: call to unsafe function `window::winlinks_RB_PREV` is unsafe and requires unsafe block
    --> src/window.rs:3113:12
     |
3113 |     return winlinks_RB_PREV(wl);
     |            ^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3112:1
     |
3112 | pub unsafe extern "C" fn winlink_previous(mut wl: *mut winlink) -> *mut winlink {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
    --> src/window.rs:3112:43
     |
3112 | pub unsafe extern "C" fn winlink_previous(mut wl: *mut winlink) -> *mut winlink {
     |                                           ----^^
     |                                           |
     |                                           help: remove this `mut`

warning[E0133]: call to unsafe function `window::winlink_stack_remove` is unsafe and requires unsafe block
    --> src/window.rs:3155:5
     |
3155 |     winlink_stack_remove(stack, wl);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3148:1
     |
3148 | / pub unsafe extern "C" fn winlink_stack_push(
3149 | |     mut stack: *mut winlink_stack,
3150 | |     mut wl: *mut winlink,
3151 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3156:5
     |
3156 |     (*wl).sentry.tqe_next = (*stack).tqh_first;
     |     ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3156:29
     |
3156 |     (*wl).sentry.tqe_next = (*stack).tqh_first;
     |                             ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3157:10
     |
3157 |     if !((*wl).sentry.tqe_next).is_null() {
     |          ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3158:9
     |
3158 |         (*(*stack).tqh_first).sentry.tqe_prev = &mut (*wl).sentry.tqe_next;
     |         ^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3158:11
     |
3158 |         (*(*stack).tqh_first).sentry.tqe_prev = &mut (*wl).sentry.tqe_next;
     |           ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3158:54
     |
3158 |         (*(*stack).tqh_first).sentry.tqe_prev = &mut (*wl).sentry.tqe_next;
     |                                                      ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3160:9
     |
3160 |         (*stack).tqh_last = &mut (*wl).sentry.tqe_next;
     |         ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3160:34
     |
3160 |         (*stack).tqh_last = &mut (*wl).sentry.tqe_next;
     |                                  ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3162:5
     |
3162 |     (*stack).tqh_first = wl;
     |     ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3163:5
     |
3163 |     (*wl).sentry.tqe_prev = &mut (*stack).tqh_first;
     |     ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3163:34
     |
3163 |     (*wl).sentry.tqe_prev = &mut (*stack).tqh_first;
     |                                  ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/window.rs:3149:5
     |
3149 |     mut stack: *mut winlink_stack,
     |     ----^^^^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/window.rs:3150:5
     |
3150 |     mut wl: *mut winlink,
     |     ----^^
     |     |
     |     help: remove this `mut`

warning: value assigned to `wl2` is never read
    --> src/window.rs:3170:13
     |
3170 |     let mut wl2: *mut winlink = 0 as *mut winlink;
     |             ^^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3174:11
     |
3174 |     wl2 = (*stack).tqh_first;
     |           ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3166:1
     |
3166 | / pub unsafe extern "C" fn winlink_stack_remove(
3167 | |     mut stack: *mut winlink_stack,
3168 | |     mut wl: *mut winlink,
3169 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3177:18
     |
3177 |             if !((*wl).sentry.tqe_next).is_null() {
     |                  ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3178:17
     |
3178 |                 (*(*wl).sentry.tqe_next).sentry.tqe_prev = (*wl).sentry.tqe_prev;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3178:19
     |
3178 |                 (*(*wl).sentry.tqe_next).sentry.tqe_prev = (*wl).sentry.tqe_prev;
     |                   ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3178:60
     |
3178 |                 (*(*wl).sentry.tqe_next).sentry.tqe_prev = (*wl).sentry.tqe_prev;
     |                                                            ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3180:17
     |
3180 |                 (*stack).tqh_last = (*wl).sentry.tqe_prev;
     |                 ^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3180:37
     |
3180 |                 (*stack).tqh_last = (*wl).sentry.tqe_prev;
     |                                     ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3182:13
     |
3182 |             *(*wl).sentry.tqe_prev = (*wl).sentry.tqe_next;
     |             ^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3182:14
     |
3182 |             *(*wl).sentry.tqe_prev = (*wl).sentry.tqe_next;
     |              ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3182:38
     |
3182 |             *(*wl).sentry.tqe_prev = (*wl).sentry.tqe_next;
     |                                      ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3185:15
     |
3185 |         wl2 = (*wl2).sentry.tqe_next;
     |               ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/window.rs:3167:5
     |
3167 |     mut stack: *mut winlink_stack,
     |     ----^^^^^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/window.rs:3168:5
     |
3168 |     mut wl: *mut winlink,
     |     ----^^
     |     |
     |     help: remove this `mut`

warning[E0133]: call to unsafe function `window::window_lost_pane` is unsafe and requires unsafe block
    --> src/window.rs:3868:5
     |
3868 |     window_lost_pane(w, wp);
     |     ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3864:1
     |
3864 | / pub unsafe extern "C" fn window_remove_pane(
3865 | |     mut w: *mut window,
3866 | |     mut wp: *mut window_pane,
3867 | | ) {
     | |_^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3869:10
     |
3869 |     if !((*wp).entry.tqe_next).is_null() {
     |          ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3870:9
     |
3870 |         (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |         ^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3870:11
     |
3870 |         (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |           ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3870:50
     |
3870 |         (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |                                                  ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3872:9
     |
3872 |         (*w).panes.tqh_last = (*wp).entry.tqe_prev;
     |         ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3872:31
     |
3872 |         (*w).panes.tqh_last = (*wp).entry.tqe_prev;
     |                               ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3874:5
     |
3874 |     *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |     ^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3874:6
     |
3874 |     *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |      ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3874:29
     |
3874 |     *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |                             ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `window::window_pane_destroy` is unsafe and requires unsafe block
    --> src/window.rs:3875:5
     |
3875 |     window_pane_destroy(wp);
     |     ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
    --> src/window.rs:3865:5
     |
3865 |     mut w: *mut window,
     |     ----^
     |     |
     |     help: remove this `mut`

warning: variable does not need to be mutable
    --> src/window.rs:3866:5
     |
3866 |     mut wp: *mut window_pane,
     |     ----^^
     |     |
     |     help: remove this `mut`

warning: value assigned to `wp` is never read
    --> src/window.rs:3968:13
     |
3968 |     let mut wp: *mut window_pane = 0 as *mut window_pane;
     |             ^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3969:13
     |
3969 |     while !((*w).panes.tqh_first).is_null() {
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/window.rs:3967:1
     |
3967 | pub unsafe extern "C" fn window_destroy_panes(mut w: *mut window) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3970:14
     |
3970 |         wp = (*w).panes.tqh_first;
     |              ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3971:14
     |
3971 |         if !((*wp).entry.tqe_next).is_null() {
     |              ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3972:13
     |
3972 |             (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |             ^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3972:15
     |
3972 |             (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |               ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3972:54
     |
3972 |             (*(*wp).entry.tqe_next).entry.tqe_prev = (*wp).entry.tqe_prev;
     |                                                      ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3974:13
     |
3974 |             (*w).panes.tqh_last = (*wp).entry.tqe_prev;
     |             ^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3974:35
     |
3974 |             (*w).panes.tqh_last = (*wp).entry.tqe_prev;
     |                                   ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3976:9
     |
3976 |         *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |         ^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3976:10
     |
3976 |         *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |          ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/window.rs:3976:33
     |
3976 |         *(*wp).entry.tqe_prev = (*wp).entry.tqe_next;
     |                                 ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `window::window_pane_destroy` is unsafe and requires unsafe block
    --> src/window.rs:3977:9
     |
3977 |         window_pane_destroy(wp);
     |         ^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
    --> src/window.rs:3967:47
     |
3967 | pub unsafe extern "C" fn window_destroy_panes(mut w: *mut window) {
     |                                               ----^
     |                                               |
     |                                               help: remove this `mut`

Some errors have detailed explanations: E0133, E0432, E0658.
For more information about an error, try `rustc --explain E0133`.
warning: `tmux_clippy` (bin "tmux_clippy") generated 4051 warnings
error: could not compile `tmux_clippy` (bin "tmux_clippy") due to 2575 previous errors; 4051 warnings emitted
