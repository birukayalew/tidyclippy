    Checking tinycc_clippy v0.1.0 (/mnt/c/Users/mazin/Downloads/School/Research/datasets/3-Rust-Clippy-Analysis/tinycc_clippy)
error: extern blocks must be unsafe
  --> src/arm64_asm.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
14 | |     fn section_realloc(sec: *mut Section, new_size: libc::c_ulong);
15 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:517:3
    |
517 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
517 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:530:3
    |
530 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
530 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:535:3
    |
535 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
535 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:540:3
    |
540 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
540 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:544:3
    |
544 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
544 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:548:3
    |
548 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
548 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:556:3
    |
556 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
556 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:565:3
    |
565 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
565 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:573:3
    |
573 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
573 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_asm.rs:580:3
    |
580 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
580 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/arm64_gen.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
70 | |     ) -> !;
71 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:1666:3
     |
1666 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1666 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:1669:3
     |
1669 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1669 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:1673:3
     |
1673 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1673 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:1738:3
     |
1738 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1738 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:2015:3
     |
2015 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2015 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:2598:3
     |
2598 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2598 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:2861:3
     |
2861 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2861 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:3448:3
     |
3448 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3448 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:3824:3
     |
3824 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3824 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4062:3
     |
4062 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4062 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4096:3
     |
4096 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4096 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4227:3
     |
4227 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4227 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4237:3
     |
4237 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4237 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4318:3
     |
4318 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4318 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4374:3
     |
4374 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4374 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4387:3
     |
4387 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4387 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4396:3
     |
4396 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4396 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4432:3
     |
4432 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4432 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4455:3
     |
4455 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4455 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4473:3
     |
4473 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4473 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4961:3
     |
4961 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4961 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4966:3
     |
4966 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4966 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:4971:3
     |
4971 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4971 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5205:3
     |
5205 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5205 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5210:3
     |
5210 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5210 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5222:3
     |
5222 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5222 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5256:3
     |
5256 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5256 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5288:3
     |
5288 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5288 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5417:3
     |
5417 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5417 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5449:3
     |
5449 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5449 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5455:3
     |
5455 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5455 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5529:3
     |
5529 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5529 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5535:3
     |
5535 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5535 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5547:3
     |
5547 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5547 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/arm64_gen.rs:5613:33
     |
5613 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
     |                                 ^^^^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5613 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
     |                                 +++++++                            +

error: extern blocks must be unsafe
  --> src/arm64_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
19 | |     fn tcc_enter_state(s1: *mut TCCState);
20 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/arm64_link.rs:505:3
    |
505 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
505 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_link.rs:515:3
    |
515 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
515 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_link.rs:526:3
    |
526 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
526 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_link.rs:547:3
    |
547 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
547 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm64_link.rs:673:3
    |
673 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
673 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/arm_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
41 | |     fn tcc_enter_state(s1: *mut TCCState);
42 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/arm_link.rs:518:3
    |
518 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
518 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm_link.rs:529:3
    |
529 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
529 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm_link.rs:541:3
    |
541 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
541 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/arm_link.rs:607:3
    |
607 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
607 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/c67_gen.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
44 | |     fn gsym(t: libc::c_int);
45 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:542:3
    |
542 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
542 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:545:3
    |
545 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
545 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:547:3
    |
547 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
547 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:549:3
    |
549 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
549 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:551:3
    |
551 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
551 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:553:3
    |
553 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
553 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:559:3
    |
559 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
559 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:585:3
    |
585 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
585 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:616:3
    |
616 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
616 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:620:3
    |
620 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
620 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:643:3
    |
643 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
643 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:660:3
    |
660 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
660 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_gen.rs:677:3
    |
677 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
677 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1874:3
     |
1874 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1874 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1878:3
     |
1878 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1878 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1882:3
     |
1882 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1882 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1891:3
     |
1891 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1891 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1900:3
     |
1900 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1900 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1909:3
     |
1909 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1909 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1913:3
     |
1913 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1913 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1917:3
     |
1917 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1917 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1921:3
     |
1921 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1921 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1929:3
     |
1929 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1929 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1938:3
     |
1938 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1938 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1947:3
     |
1947 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1947 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1956:3
     |
1956 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1956 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1965:3
     |
1965 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1965 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1974:3
     |
1974 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1974 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1983:3
     |
1983 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1983 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1992:3
     |
1992 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1992 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:1996:3
     |
1996 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1996 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2000:3
     |
2000 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2000 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2004:3
     |
2004 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2004 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2008:3
     |
2008 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2008 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2012:3
     |
2012 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2012 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2016:3
     |
2016 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2016 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2020:3
     |
2020 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2020 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2029:3
     |
2029 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2029 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2038:3
     |
2038 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2038 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2046:3
     |
2046 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2046 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2054:3
     |
2054 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2054 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2062:3
     |
2062 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2062 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2070:3
     |
2070 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2070 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2078:3
     |
2078 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2078 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2086:3
     |
2086 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2086 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2094:3
     |
2094 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2094 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2102:3
     |
2102 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2102 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2110:3
     |
2110 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2110 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2118:3
     |
2118 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2118 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2126:3
     |
2126 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2126 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2134:3
     |
2134 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2134 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2143:3
     |
2143 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2143 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2152:3
     |
2152 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2152 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2165:3
     |
2165 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2165 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2178:3
     |
2178 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2178 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2195:3
     |
2195 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2195 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2199:3
     |
2199 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2199 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2203:3
     |
2203 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2203 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2207:3
     |
2207 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2207 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2211:3
     |
2211 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2211 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2215:3
     |
2215 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2215 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2219:3
     |
2219 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2219 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2223:3
     |
2223 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2223 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2227:3
     |
2227 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2227 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2231:3
     |
2231 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2231 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2235:3
     |
2235 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2235 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2239:3
     |
2239 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2239 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2243:3
     |
2243 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2243 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2247:3
     |
2247 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2247 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2251:3
     |
2251 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2251 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2255:3
     |
2255 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2255 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2259:3
     |
2259 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2259 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2263:3
     |
2263 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2263 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2267:3
     |
2267 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2267 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2271:3
     |
2271 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2271 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2275:3
     |
2275 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2275 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2279:3
     |
2279 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2279 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2283:3
     |
2283 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2283 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2287:3
     |
2287 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2287 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2291:3
     |
2291 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2291 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2507:3
     |
2507 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2507 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2685:3
     |
2685 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2685 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2696:3
     |
2696 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2696 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2758:3
     |
2758 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2758 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2817:3
     |
2817 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2817 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2832:3
     |
2832 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2832 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2845:3
     |
2845 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2845 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2857:3
     |
2857 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2857 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2875:3
     |
2875 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2875 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:2898:3
     |
2898 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2898 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3049:3
     |
3049 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3049 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3177:3
     |
3177 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3177 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3200:3
     |
3200 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3200 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3218:3
     |
3218 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3218 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3224:3
     |
3224 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3224 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3231:3
     |
3231 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3231 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/c67_gen.rs:3238:3
     |
3238 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3238 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/c67_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
13 | |     fn tcc_enter_state(s1: *mut TCCState);
14 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/c67_link.rs:448:3
    |
448 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
448 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_link.rs:457:3
    |
457 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
457 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_link.rs:467:3
    |
467 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
467 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_link.rs:483:3
    |
483 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
483 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/c67_link.rs:496:3
    |
496 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
496 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/conftest.rs:2:1
   |
2  | / extern "C" {
3  | |     pub type _IO_wide_data;
4  | |     pub type _IO_codecvt;
5  | |     pub type _IO_marker;
...  |
22 | |     fn strlen(_: *const libc::c_char) -> libc::c_ulong;
23 | | }
   | |_^

error: unsafe attribute used without unsafe
  --> src/conftest.rs:62:3
   |
62 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
62 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
  --> src/conftest.rs:98:3
   |
98 | #[no_mangle]
   |   ^^^^^^^^^ usage of unsafe attribute
   |
help: wrap the attribute in `unsafe(...)`
   |
98 | #[unsafe(no_mangle)]
   |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/conftest.rs:103:3
    |
103 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
103 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
  --> src/i386_asm.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
69 | |     fn asm_int_expr(s1: *mut TCCState) -> libc::c_int;
70 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:2275:3
     |
2275 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2275 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:2291:3
     |
2291 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2291 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:2574:3
     |
2574 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2574 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:3402:3
     |
3402 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3402 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:3438:3
     |
3438 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3438 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:3826:3
     |
3826 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3826 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:3989:3
     |
3989 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3989 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/i386_asm.rs:4203:3
     |
4203 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4203 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/i386_asm.rs:13536:33
      |
13536 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
      |                                 ^^^^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
13536 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
      |                                 +++++++                            +

error: extern blocks must be unsafe
  --> src/i386_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
29 | |     fn tcc_enter_state(s1: *mut TCCState);
30 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/i386_link.rs:512:3
    |
512 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
512 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/i386_link.rs:523:3
    |
523 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
523 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/i386_link.rs:535:3
    |
535 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
535 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/i386_link.rs:587:3
    |
587 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
587 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/i386_link.rs:627:3
    |
627 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
627 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/libtcc.rs:6:1
    |
6   | / extern "C" {
7   | |     pub type _IO_wide_data;
8   | |     pub type _IO_codecvt;
9   | |     pub type _IO_marker;
...   |
163 | |     ) -> !;
164 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/libtcc.rs:8691:3
     |
8691 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8691 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/libtcc.rs:8703:3
     |
8703 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8703 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/libtcc.rs:8769:3
     |
8769 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8769 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:12019:3
      |
12019 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
12019 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:13552:3
      |
13552 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
13552 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:13642:3
      |
13642 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
13642 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:14145:3
      |
14145 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
14145 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:14159:3
      |
14159 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
14159 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44479:3
      |
44479 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44479 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44487:3
      |
44487 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44487 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44546:3
      |
44546 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44546 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44559:3
      |
44559 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44559 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44637:3
      |
44637 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44637 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44651:3
      |
44651 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44651 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44656:3
      |
44656 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44656 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44660:3
      |
44660 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44660 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44667:3
      |
44667 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44667 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:44676:3
      |
44676 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
44676 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45023:3
      |
45023 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45023 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45032:3
      |
45032 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45032 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45042:3
      |
45042 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45042 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45049:3
      |
45049 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45049 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45188:3
      |
45188 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45188 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45195:3
      |
45195 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45195 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45221:3
      |
45221 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45221 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45232:3
      |
45232 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45232 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45251:3
      |
45251 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45251 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45310:3
      |
45310 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45310 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45350:3
      |
45350 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45350 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45363:3
      |
45363 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45363 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45376:3
      |
45376 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45376 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45389:3
      |
45389 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45389 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45590:3
      |
45590 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45590 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:45696:3
      |
45696 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
45696 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:46683:3
      |
46683 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
46683 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:47307:3
      |
47307 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
47307 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:47328:3
      |
47328 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
47328 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/libtcc.rs:56855:33
      |
56855 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
      |                                 ^^^^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
56855 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
      |                                 +++++++                            +

error: extern blocks must be unsafe
  --> src/riscv64_asm.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
53 | |     fn asm_expr(s1: *mut TCCState, pe: *mut ExprValue);
54 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:1685:3
     |
1685 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1685 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:1698:3
     |
1698 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1698 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:1703:3
     |
1703 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1703 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:1736:3
     |
1736 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1736 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:2646:3
     |
2646 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2646 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:2676:3
     |
2676 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2676 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:2789:3
     |
2789 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2789 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:3121:3
     |
3121 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3121 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_asm.rs:3467:3
     |
3467 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3467 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/riscv64_gen.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
81 | |     ) -> !;
82 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:1677:3
     |
1677 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1677 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:1680:3
     |
1680 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1680 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:1712:3
     |
1712 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1712 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:1789:3
     |
1789 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1789 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:1914:3
     |
1914 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1914 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:2186:3
     |
2186 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2186 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:2620:3
     |
2620 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2620 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:3079:3
     |
3079 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3079 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:3708:3
     |
3708 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3708 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:3894:3
     |
3894 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3894 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:3926:3
     |
3926 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3926 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4044:3
     |
4044 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4044 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4187:3
     |
4187 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4187 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4193:3
     |
4193 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4193 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4212:3
     |
4212 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4212 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4220:3
     |
4220 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4220 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4254:3
     |
4254 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4254 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:4316:3
     |
4316 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4316 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6874:3
     |
6874 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6874 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6878:3
     |
6878 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6878 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6882:3
     |
6882 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6882 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6884:3
     |
6884 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6884 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6924:3
     |
6924 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6924 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:6963:3
     |
6963 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6963 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:7115:3
     |
7115 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
7115 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:7217:3
     |
7217 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
7217 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:7223:3
     |
7223 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
7223 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:7260:3
     |
7260 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
7260 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/riscv64_gen.rs:7297:3
     |
7297 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
7297 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/riscv64_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
19 | |     fn tcc_enter_state(s1: *mut TCCState);
20 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/riscv64_link.rs:517:3
    |
517 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
517 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/riscv64_link.rs:528:3
    |
528 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
528 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/riscv64_link.rs:542:3
    |
542 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
542 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/riscv64_link.rs:559:3
    |
559 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
559 | #[unsafe(no_mangle)]
    |   +++++++         +

error: extern blocks must be unsafe
   --> src/tcc.rs:6:1
    |
6   | / extern "C" {
7   | |     pub type _IO_wide_data;
8   | |     pub type _IO_codecvt;
9   | |     pub type _IO_marker;
...   |
184 | |     ) -> !;
185 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3751:3
     |
3751 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3751 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3759:3
     |
3759 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3759 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3818:3
     |
3818 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3818 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3831:3
     |
3831 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3831 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3909:3
     |
3909 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3909 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3923:3
     |
3923 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3923 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3928:3
     |
3928 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3928 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3932:3
     |
3932 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3932 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3939:3
     |
3939 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3939 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:3948:3
     |
3948 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3948 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4295:3
     |
4295 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4295 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4304:3
     |
4304 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4304 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4314:3
     |
4314 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4314 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4321:3
     |
4321 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4321 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4460:3
     |
4460 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4460 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4467:3
     |
4467 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4467 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4493:3
     |
4493 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4493 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4504:3
     |
4504 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4504 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4523:3
     |
4523 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4523 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4582:3
     |
4582 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4582 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4622:3
     |
4622 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4622 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4635:3
     |
4635 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4635 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4648:3
     |
4648 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4648 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4661:3
     |
4661 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4661 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4862:3
     |
4862 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4862 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:4968:3
     |
4968 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4968 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:5955:3
     |
5955 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5955 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:6579:3
     |
6579 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6579 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcc.rs:6600:3
     |
6600 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6600 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:11620:3
      |
11620 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
11620 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:11632:3
      |
11632 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
11632 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:11698:3
      |
11698 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
11698 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:14948:3
      |
14948 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
14948 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:16481:3
      |
16481 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
16481 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:16571:3
      |
16571 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
16571 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:17074:3
      |
17074 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
17074 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:17088:3
      |
17088 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
17088 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tcc.rs:58142:33
      |
58142 | #[cfg_attr(target_os = "linux", link_section = ".init_array")]
      |                                 ^^^^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
58142 | #[cfg_attr(target_os = "linux", unsafe(link_section = ".init_array"))]
      |                                 +++++++                            +

error: extern blocks must be unsafe
   --> src/tccasm.rs:3:1
    |
3   | / extern "C" {
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
6   | |     pub type _IO_marker;
...   |
143 | |     fn tcc_debug_line(s1: *mut TCCState);
144 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:1758:3
     |
1758 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1758 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:1820:3
     |
1820 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1820 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:2194:3
     |
2194 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2194 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:2198:3
     |
2198 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2198 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:3028:3
     |
3028 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3028 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:3065:3
     |
3065 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3065 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:3275:3
     |
3275 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3275 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccasm.rs:3477:3
     |
3477 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3477 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/tccdbg.rs:3:1
    |
3   | / extern "C" {
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
6   | |     pub type _IO_marker;
...   |
108 | |     fn gen_increment_tcov(sv: *mut SValue);
109 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:2149:3
     |
2149 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2149 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:2619:3
     |
2619 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2619 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:2749:3
     |
2749 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2749 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:2774:3
     |
2774 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2774 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:2978:3
     |
2978 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2978 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3386:3
     |
3386 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3386 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3759:3
     |
3759 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3759 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3769:3
     |
3769 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3769 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3788:3
     |
3788 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3788 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3806:3
     |
3806 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3806 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:3940:3
     |
3940 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3940 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:4066:3
     |
4066 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4066 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5256:3
     |
5256 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5256 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5322:3
     |
5322 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5322 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5393:3
     |
5393 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5393 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5412:3
     |
5412 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5412 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5503:3
     |
5503 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5503 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5617:3
     |
5617 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5617 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5680:3
     |
5680 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5680 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5850:3
     |
5850 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5850 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5878:3
     |
5878 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5878 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5897:3
     |
5897 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5897 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5924:3
     |
5924 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5924 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccdbg.rs:5936:3
     |
5936 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5936 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/tccelf.rs:3:1
    |
3   | / extern "C" {
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
6   | |     pub type _IO_marker;
...   |
136 | |     ) -> libc::c_int;
137 | | }
    | |_^

error: unsafe attribute used without unsafe
   --> src/tccelf.rs:807:3
    |
807 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
807 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tccelf.rs:898:3
    |
898 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
898 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tccelf.rs:908:3
    |
908 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
908 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tccelf.rs:945:3
    |
945 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
945 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/tccelf.rs:960:3
    |
960 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
960 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1030:3
     |
1030 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1030 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1075:3
     |
1075 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1075 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1095:3
     |
1095 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1095 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1123:3
     |
1123 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1123 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1146:3
     |
1146 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1146 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1167:3
     |
1167 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1167 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1200:3
     |
1200 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1200 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1216:3
     |
1216 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1216 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1299:3
     |
1299 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1299 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1360:3
     |
1360 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1360 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1391:3
     |
1391 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1391 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1429:3
     |
1429 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1429 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1441:3
     |
1441 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1441 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1461:3
     |
1461 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1461 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1508:3
     |
1508 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1508 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1686:3
     |
1686 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1686 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1821:3
     |
1821 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1821 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1875:3
     |
1875 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1875 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:1885:3
     |
1885 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1885 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2290:3
     |
2290 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2290 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2451:3
     |
2451 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2451 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2660:3
     |
2660 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2660 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2870:3
     |
2870 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2870 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2927:3
     |
2927 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2927 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2946:3
     |
2946 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2946 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:2997:3
     |
2997 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2997 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3135:3
     |
3135 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3135 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3142:3
     |
3142 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3142 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3146:3
     |
3146 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3146 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3274:3
     |
3274 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3274 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3298:3
     |
3298 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3298 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:3318:3
     |
3318 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3318 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:4781:3
     |
4781 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4781 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:4794:3
     |
4794 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4794 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:4818:3
     |
4818 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4818 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:4830:3
     |
4830 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4830 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:4868:3
     |
4868 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4868 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:5559:3
     |
5559 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5559 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:5804:3
     |
5804 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
5804 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccelf.rs:6244:3
     |
6244 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
6244 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/tccgen.rs:6:1
    |
6   | / extern "C" {
7   | |     pub type _IO_wide_data;
8   | |     pub type _IO_codecvt;
9   | |     pub type _IO_marker;
...   |
194 | |     fn gen_struct_copy(size: libc::c_int);
195 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1930:3
     |
1930 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1930 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1932:3
     |
1932 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1932 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1934:3
     |
1934 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1934 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1936:3
     |
1936 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1936 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1938:3
     |
1938 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1938 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1940:3
     |
1940 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1940 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1942:3
     |
1942 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1942 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1944:3
     |
1944 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1944 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1946:3
     |
1946 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1946 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1955:3
     |
1955 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1955 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1957:3
     |
1957 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1957 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1979:3
     |
1979 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1979 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1981:3
     |
1981 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1981 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1983:3
     |
1983 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1983 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1988:3
     |
1988 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1988 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1990:3
     |
1990 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1990 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1992:3
     |
1992 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1992 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1994:3
     |
1994 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1994 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:1996:3
     |
1996 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1996 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2001:3
     |
2001 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2001 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2006:3
     |
2006 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2006 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2011:3
     |
2011 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2011 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2031:3
     |
2031 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2031 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2059:3
     |
2059 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2059 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2138:3
     |
2138 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2138 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2150:3
     |
2150 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2150 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2156:3
     |
2156 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2156 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2172:3
     |
2172 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2172 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2205:3
     |
2205 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2205 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2228:3
     |
2228 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2228 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2257:3
     |
2257 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2257 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2265:3
     |
2265 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2265 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2295:3
     |
2295 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2295 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2375:3
     |
2375 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2375 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2396:3
     |
2396 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2396 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2470:3
     |
2470 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2470 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2475:3
     |
2475 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2475 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2496:3
     |
2496 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2496 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2506:3
     |
2506 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2506 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2514:3
     |
2514 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2514 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2538:3
     |
2538 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2538 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2581:3
     |
2581 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2581 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2604:3
     |
2604 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2604 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2642:3
     |
2642 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2642 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2650:3
     |
2650 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2650 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2670:3
     |
2670 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2670 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2756:3
     |
2756 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2756 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2783:3
     |
2783 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2783 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2810:3
     |
2810 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2810 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2824:3
     |
2824 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2824 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2843:3
     |
2843 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2843 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2860:3
     |
2860 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2860 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2897:3
     |
2897 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2897 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2934:3
     |
2934 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2934 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:2972:3
     |
2972 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2972 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3059:3
     |
3059 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3059 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3066:3
     |
3066 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3066 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3096:3
     |
3096 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3096 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3121:3
     |
3121 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3121 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3133:3
     |
3133 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3133 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3380:3
     |
3380 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3380 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3392:3
     |
3392 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3392 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3396:3
     |
3396 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3396 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3501:3
     |
3501 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3501 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3654:3
     |
3654 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3654 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3752:3
     |
3752 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3752 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:3980:3
     |
3980 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3980 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:4143:3
     |
4143 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4143 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:9145:3
     |
9145 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
9145 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:9730:3
     |
9730 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
9730 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccgen.rs:9806:3
     |
9806 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
9806 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:10022:3
      |
10022 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
10022 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:10213:3
      |
10213 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
10213 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:10229:3
      |
10229 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
10229 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:10242:3
      |
10242 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
10242 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:11692:3
      |
11692 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
11692 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:12068:3
      |
12068 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
12068 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:12423:3
      |
12423 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
12423 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:13703:3
      |
13703 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
13703 | #[unsafe(no_mangle)]
      |   +++++++         +

error: unsafe attribute used without unsafe
     --> src/tccgen.rs:13742:3
      |
13742 | #[no_mangle]
      |   ^^^^^^^^^ usage of unsafe attribute
      |
help: wrap the attribute in `unsafe(...)`
      |
13742 | #[unsafe(no_mangle)]
      |   +++++++         +

error: extern blocks must be unsafe
   --> src/tccpp.rs:4:1
    |
4   | / extern "C" {
5   | |     pub type _IO_wide_data;
6   | |     pub type _IO_codecvt;
7   | |     pub type _IO_marker;
...   |
120 | |     fn tcc_set_options(s: *mut TCCState, str: *const libc::c_char) -> libc::c_int;
121 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1721:3
     |
1721 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1721 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1723:3
     |
1723 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1723 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1725:3
     |
1725 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1725 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1727:3
     |
1727 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1727 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1729:3
     |
1729 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1729 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1731:3
     |
1731 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1731 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1733:3
     |
1733 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1733 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1739:3
     |
1739 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1739 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1741:3
     |
1741 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1741 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1744:3
     |
1744 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1744 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1857:3
     |
1857 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1857 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:1874:3
     |
1874 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1874 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2034:3
     |
2034 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2034 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2044:3
     |
2044 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2044 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2132:3
     |
2132 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2132 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2143:3
     |
2143 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2143 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2166:3
     |
2166 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2166 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2181:3
     |
2181 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2181 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2189:3
     |
2189 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2189 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2193:3
     |
2193 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2193 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2197:3
     |
2197 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2197 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2227:3
     |
2227 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2227 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2302:3
     |
2302 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2302 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2343:3
     |
2343 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2343 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2347:3
     |
2347 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2347 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2894:3
     |
2894 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2894 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2902:3
     |
2902 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2902 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2912:3
     |
2912 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2912 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2916:3
     |
2916 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2916 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2921:3
     |
2921 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2921 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2948:3
     |
2948 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2948 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2962:3
     |
2962 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2962 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:2971:3
     |
2971 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2971 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3063:3
     |
3063 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3063 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3199:3
     |
3199 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3199 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3223:3
     |
3223 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3223 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3232:3
     |
3232 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3232 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3240:3
     |
3240 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3240 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3281:3
     |
3281 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3281 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3563:3
     |
3563 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3563 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3583:3
     |
3583 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3583 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:3997:3
     |
3997 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3997 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:4027:3
     |
4027 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4027 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8330:3
     |
8330 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8330 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8391:3
     |
8391 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8391 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8501:3
     |
8501 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8501 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8558:3
     |
8558 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8558 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8569:3
     |
8569 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8569 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8579:3
     |
8579 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8579 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8685:3
     |
8685 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8685 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccpp.rs:8905:3
     |
8905 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
8905 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
   --> src/tccrun.rs:3:1
    |
3   | / extern "C" {
4   | |     pub type _IO_wide_data;
5   | |     pub type _IO_codecvt;
6   | |     pub type _IO_marker;
...   |
114 | |     ) -> libc::c_int;
115 | | }
    | |_^

error: unsafe attribute used without unsafe
    --> src/tccrun.rs:1327:3
     |
1327 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1327 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccrun.rs:1386:3
     |
1386 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1386 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccrun.rs:1418:3
     |
1418 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1418 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccrun.rs:1921:3
     |
1921 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1921 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tccrun.rs:1935:3
     |
1935 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1935 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/tcctools.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
75 | |     fn tcc_enter_state(s1: *mut TCCState);
76 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/tcctools.rs:589:3
    |
589 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
589 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcctools.rs:1274:3
     |
1274 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1274 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/tcctools.rs:1337:3
     |
1337 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1337 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/x86_64_gen.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
66 | |     ) -> !;
67 | | }
   | |_^

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1672:3
     |
1672 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1672 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1675:3
     |
1675 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1675 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1707:3
     |
1707 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1707 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1709:3
     |
1709 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1709 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1722:3
     |
1722 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1722 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1729:3
     |
1729 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1729 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1734:3
     |
1734 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1734 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1741:3
     |
1741 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1741 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1775:3
     |
1775 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1775 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1804:3
     |
1804 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1804 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1822:3
     |
1822 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1822 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1840:3
     |
1840 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1840 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:1936:3
     |
1936 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
1936 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:2369:3
     |
2369 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2369 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:2717:3
     |
2717 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2717 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:2735:3
     |
2735 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2735 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:2774:3
     |
2774 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
2774 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3243:3
     |
3243 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3243 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3437:3
     |
3437 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3437 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3461:3
     |
3461 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3461 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3472:3
     |
3472 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3472 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3476:3
     |
3476 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3476 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3487:3
     |
3487 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3487 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3510:3
     |
3510 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3510 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3530:3
     |
3530 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3530 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3705:3
     |
3705 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3705 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:3709:3
     |
3709 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
3709 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4149:3
     |
4149 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4149 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4206:3
     |
4206 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4206 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4293:3
     |
4293 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4293 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4354:3
     |
4354 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4354 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4363:3
     |
4363 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4363 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4382:3
     |
4382 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4382 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4395:3
     |
4395 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4395 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4401:3
     |
4401 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4401 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4411:3
     |
4411 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4411 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4421:3
     |
4421 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4421 | #[unsafe(no_mangle)]
     |   +++++++         +

error: unsafe attribute used without unsafe
    --> src/x86_64_gen.rs:4438:3
     |
4438 | #[no_mangle]
     |   ^^^^^^^^^ usage of unsafe attribute
     |
help: wrap the attribute in `unsafe(...)`
     |
4438 | #[unsafe(no_mangle)]
     |   +++++++         +

error: extern blocks must be unsafe
  --> src/x86_64_link.rs:3:1
   |
3  | / extern "C" {
4  | |     pub type _IO_wide_data;
5  | |     pub type _IO_codecvt;
6  | |     pub type _IO_marker;
...  |
29 | |     fn tcc_enter_state(s1: *mut TCCState);
30 | | }
   | |_^

error: unsafe attribute used without unsafe
   --> src/x86_64_link.rs:527:3
    |
527 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
527 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/x86_64_link.rs:537:3
    |
537 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
537 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/x86_64_link.rs:550:3
    |
550 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
550 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/x86_64_link.rs:598:3
    |
598 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
598 | #[unsafe(no_mangle)]
    |   +++++++         +

error: unsafe attribute used without unsafe
   --> src/x86_64_link.rs:642:3
    |
642 | #[no_mangle]
    |   ^^^^^^^^^ usage of unsafe attribute
    |
help: wrap the attribute in `unsafe(...)`
    |
642 | #[unsafe(no_mangle)]
    |   +++++++         +

error[E0432]: unresolved import `libc`
 --> src/arm64_asm.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/arm64_asm.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/arm64_gen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/arm64_gen.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/arm64_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/arm64_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/arm_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/arm_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/c67_gen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/c67_gen.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/c67_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/c67_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/conftest.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `libc`
 --> src/i386_asm.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/i386_asm.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/i386_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/i386_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/libtcc.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/libtcc.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `f128`
 --> src/libtcc.rs:3:5
  |
3 | use ::f128;
  |     ^^^^^^ no external crate `f128`
  |
help: consider importing this module instead
  |
3 | use std::f128;
  |     ~~~~~~~~~

error[E0432]: unresolved import `num_traits`
 --> src/libtcc.rs:4:5
  |
4 | use ::num_traits;
  |     ^^^^^^^^^^^^ no external crate `num_traits`

error[E0432]: unresolved import `libc`
 --> src/riscv64_asm.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/riscv64_asm.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/riscv64_gen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/riscv64_gen.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/riscv64_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/riscv64_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/tcc.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tcc.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `f128`
 --> src/tcc.rs:3:5
  |
3 | use ::f128;
  |     ^^^^^^ no external crate `f128`
  |
help: consider importing this module instead
  |
3 | use std::f128;
  |     ~~~~~~~~~

error[E0432]: unresolved import `num_traits`
 --> src/tcc.rs:4:5
  |
4 | use ::num_traits;
  |     ^^^^^^^^^^^^ no external crate `num_traits`

error[E0432]: unresolved import `libc`
 --> src/tccasm.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccasm.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/tccdbg.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccdbg.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/tccelf.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccelf.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/tccgen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccgen.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `f128`
 --> src/tccgen.rs:3:5
  |
3 | use ::f128;
  |     ^^^^^^ no external crate `f128`
  |
help: consider importing this module instead
  |
3 | use std::f128;
  |     ~~~~~~~~~

error[E0432]: unresolved import `num_traits`
 --> src/tccgen.rs:4:5
  |
4 | use ::num_traits;
  |     ^^^^^^^^^^^^ no external crate `num_traits`

error[E0432]: unresolved import `libc`
 --> src/tccpp.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccpp.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `f128`
 --> src/tccpp.rs:3:5
  |
3 | use ::f128;
  |     ^^^^^^ no external crate `f128`
  |
help: consider importing this module instead
  |
3 | use std::f128;
  |     ~~~~~~~~~

error[E0432]: unresolved import `libc`
 --> src/tccrun.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tccrun.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/tcctools.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/tcctools.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/x86_64_gen.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/x86_64_gen.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error[E0432]: unresolved import `libc`
 --> src/x86_64_link.rs:1:5
  |
1 | use ::libc;
  |     ^^^^^^ no external crate `libc`

error[E0432]: unresolved import `c2rust_bitfields`
 --> src/x86_64_link.rs:2:5
  |
2 | use ::c2rust_bitfields;
  |     ^^^^^^^^^^^^^^^^^^ no external crate `c2rust_bitfields`

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_asm.rs:357:23
    |
357 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:360:7
    |
360 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:361:7
    |
361 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:362:7
    |
362 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:363:7
    |
363 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:364:7
    |
364 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:365:7
    |
365 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:366:7
    |
366 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:367:7
    |
367 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_asm.rs:370:23
    |
370 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:373:7
    |
373 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:374:7
    |
374 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:375:7
    |
375 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:376:7
    |
376 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:377:7
    |
377 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:378:7
    |
378 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:379:7
    |
379 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:380:7
    |
380 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:381:7
    |
381 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_asm.rs:382:7
    |
382 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_gen.rs:415:23
    |
415 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:418:7
    |
418 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:419:7
    |
419 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:420:7
    |
420 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:421:7
    |
421 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:422:7
    |
422 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:423:7
    |
423 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:424:7
    |
424 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:425:7
    |
425 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_gen.rs:428:23
    |
428 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:431:7
    |
431 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:432:7
    |
432 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:433:7
    |
433 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:434:7
    |
434 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:435:7
    |
435 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:436:7
    |
436 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:437:7
    |
437 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:438:7
    |
438 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:439:7
    |
439 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_gen.rs:440:7
    |
440 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_link.rs:366:23
    |
366 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:369:7
    |
369 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:370:7
    |
370 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:371:7
    |
371 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:372:7
    |
372 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:373:7
    |
373 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:374:7
    |
374 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:375:7
    |
375 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:376:7
    |
376 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm64_link.rs:379:23
    |
379 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:382:7
    |
382 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:383:7
    |
383 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:384:7
    |
384 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:385:7
    |
385 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:386:7
    |
386 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:387:7
    |
387 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:388:7
    |
388 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:389:7
    |
389 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:390:7
    |
390 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm64_link.rs:391:7
    |
391 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm_link.rs:386:23
    |
386 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:389:7
    |
389 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:390:7
    |
390 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:391:7
    |
391 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:392:7
    |
392 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:393:7
    |
393 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:394:7
    |
394 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:395:7
    |
395 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:396:7
    |
396 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/arm_link.rs:399:23
    |
399 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:402:7
    |
402 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:403:7
    |
403 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:404:7
    |
404 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:405:7
    |
405 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:406:7
    |
406 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:407:7
    |
407 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:408:7
    |
408 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:409:7
    |
409 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:410:7
    |
410 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/arm_link.rs:411:7
    |
411 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/c67_gen.rs:387:23
    |
387 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:390:7
    |
390 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:391:7
    |
391 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:392:7
    |
392 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:393:7
    |
393 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:394:7
    |
394 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:395:7
    |
395 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:396:7
    |
396 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:397:7
    |
397 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/c67_gen.rs:400:23
    |
400 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:403:7
    |
403 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:404:7
    |
404 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:405:7
    |
405 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:406:7
    |
406 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:407:7
    |
407 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:408:7
    |
408 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:409:7
    |
409 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:410:7
    |
410 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:411:7
    |
411 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_gen.rs:412:7
    |
412 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/c67_link.rs:357:23
    |
357 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:360:7
    |
360 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:361:7
    |
361 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:362:7
    |
362 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:363:7
    |
363 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:364:7
    |
364 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:365:7
    |
365 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:366:7
    |
366 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:367:7
    |
367 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/c67_link.rs:370:23
    |
370 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:373:7
    |
373 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:374:7
    |
374 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:375:7
    |
375 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:376:7
    |
376 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:377:7
    |
377 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:378:7
    |
378 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:379:7
    |
379 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:380:7
    |
380 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:381:7
    |
381 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/c67_link.rs:382:7
    |
382 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/i386_asm.rs:418:23
    |
418 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:421:7
    |
421 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:422:7
    |
422 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:423:7
    |
423 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:424:7
    |
424 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:425:7
    |
425 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:426:7
    |
426 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:427:7
    |
427 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:428:7
    |
428 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/i386_asm.rs:431:23
    |
431 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:434:7
    |
434 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:435:7
    |
435 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:436:7
    |
436 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:437:7
    |
437 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:438:7
    |
438 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:439:7
    |
439 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:440:7
    |
440 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:441:7
    |
441 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:442:7
    |
442 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_asm.rs:443:7
    |
443 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/i386_link.rs:376:23
    |
376 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:379:7
    |
379 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:380:7
    |
380 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:381:7
    |
381 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:382:7
    |
382 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:383:7
    |
383 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:384:7
    |
384 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:385:7
    |
385 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:386:7
    |
386 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/i386_link.rs:389:23
    |
389 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:392:7
    |
392 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:393:7
    |
393 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:394:7
    |
394 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:395:7
    |
395 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:396:7
    |
396 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:397:7
    |
397 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:398:7
    |
398 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:399:7
    |
399 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:400:7
    |
400 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/i386_link.rs:401:7
    |
401 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/libtcc.rs:864:23
    |
864 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:867:7
    |
867 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:868:7
    |
868 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:869:7
    |
869 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:870:7
    |
870 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:871:7
    |
871 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:872:7
    |
872 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:873:7
    |
873 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:874:7
    |
874 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/libtcc.rs:877:23
    |
877 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:880:7
    |
880 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:881:7
    |
881 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:882:7
    |
882 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:883:7
    |
883 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:884:7
    |
884 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:885:7
    |
885 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:886:7
    |
886 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:887:7
    |
887 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:888:7
    |
888 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/libtcc.rs:889:7
    |
889 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_asm.rs:402:23
    |
402 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:405:7
    |
405 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:406:7
    |
406 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:407:7
    |
407 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:408:7
    |
408 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:409:7
    |
409 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:410:7
    |
410 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:411:7
    |
411 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:412:7
    |
412 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_asm.rs:415:23
    |
415 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:418:7
    |
418 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:419:7
    |
419 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:420:7
    |
420 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:421:7
    |
421 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:422:7
    |
422 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:423:7
    |
423 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:424:7
    |
424 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:425:7
    |
425 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:426:7
    |
426 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_asm.rs:427:7
    |
427 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_gen.rs:426:23
    |
426 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:429:7
    |
429 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:430:7
    |
430 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:431:7
    |
431 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:432:7
    |
432 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:433:7
    |
433 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:434:7
    |
434 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:435:7
    |
435 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:436:7
    |
436 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_gen.rs:439:23
    |
439 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:442:7
    |
442 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:443:7
    |
443 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:444:7
    |
444 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:445:7
    |
445 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:446:7
    |
446 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:447:7
    |
447 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:448:7
    |
448 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:449:7
    |
449 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:450:7
    |
450 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_gen.rs:451:7
    |
451 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_link.rs:366:23
    |
366 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:369:7
    |
369 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:370:7
    |
370 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:371:7
    |
371 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:372:7
    |
372 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:373:7
    |
373 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:374:7
    |
374 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:375:7
    |
375 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:376:7
    |
376 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/riscv64_link.rs:379:23
    |
379 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:382:7
    |
382 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:383:7
    |
383 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:384:7
    |
384 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:385:7
    |
385 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:386:7
    |
386 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:387:7
    |
387 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:388:7
    |
388 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:389:7
    |
389 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:390:7
    |
390 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/riscv64_link.rs:391:7
    |
391 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tcc.rs:892:23
    |
892 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:895:7
    |
895 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:896:7
    |
896 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:897:7
    |
897 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:898:7
    |
898 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:899:7
    |
899 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:900:7
    |
900 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:901:7
    |
901 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:902:7
    |
902 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tcc.rs:905:23
    |
905 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:908:7
    |
908 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:909:7
    |
909 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:910:7
    |
910 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:911:7
    |
911 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:912:7
    |
912 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:913:7
    |
913 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:914:7
    |
914 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:915:7
    |
915 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:916:7
    |
916 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcc.rs:917:7
    |
917 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccasm.rs:488:23
    |
488 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:491:7
    |
491 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:492:7
    |
492 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:493:7
    |
493 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:494:7
    |
494 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:495:7
    |
495 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:496:7
    |
496 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:497:7
    |
497 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:498:7
    |
498 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccasm.rs:501:23
    |
501 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:504:7
    |
504 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:505:7
    |
505 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:506:7
    |
506 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:507:7
    |
507 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:508:7
    |
508 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:509:7
    |
509 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:510:7
    |
510 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:511:7
    |
511 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:512:7
    |
512 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccasm.rs:513:7
    |
513 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccdbg.rs:480:23
    |
480 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:483:7
    |
483 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:484:7
    |
484 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:485:7
    |
485 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:486:7
    |
486 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:487:7
    |
487 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:488:7
    |
488 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:489:7
    |
489 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:490:7
    |
490 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccdbg.rs:493:23
    |
493 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:496:7
    |
496 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:497:7
    |
497 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:498:7
    |
498 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:499:7
    |
499 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:500:7
    |
500 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:501:7
    |
501 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:502:7
    |
502 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:503:7
    |
503 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:504:7
    |
504 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccdbg.rs:505:7
    |
505 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccelf.rs:493:23
    |
493 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:496:7
    |
496 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:497:7
    |
497 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:498:7
    |
498 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:499:7
    |
499 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:500:7
    |
500 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:501:7
    |
501 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:502:7
    |
502 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:503:7
    |
503 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccelf.rs:506:23
    |
506 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:509:7
    |
509 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:510:7
    |
510 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:511:7
    |
511 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:512:7
    |
512 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:513:7
    |
513 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:514:7
    |
514 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:515:7
    |
515 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:516:7
    |
516 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:517:7
    |
517 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccelf.rs:518:7
    |
518 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccgen.rs:542:23
    |
542 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:545:7
    |
545 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:546:7
    |
546 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:547:7
    |
547 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:548:7
    |
548 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:549:7
    |
549 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:550:7
    |
550 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:551:7
    |
551 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:552:7
    |
552 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccgen.rs:555:23
    |
555 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:558:7
    |
558 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:559:7
    |
559 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:560:7
    |
560 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:561:7
    |
561 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:562:7
    |
562 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:563:7
    |
563 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:564:7
    |
564 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:565:7
    |
565 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:566:7
    |
566 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccgen.rs:567:7
    |
567 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccpp.rs:493:23
    |
493 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:496:7
    |
496 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:497:7
    |
497 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:498:7
    |
498 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:499:7
    |
499 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:500:7
    |
500 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:501:7
    |
501 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:502:7
    |
502 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:503:7
    |
503 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccpp.rs:506:23
    |
506 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:509:7
    |
509 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:510:7
    |
510 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:511:7
    |
511 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:512:7
    |
512 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:513:7
    |
513 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:514:7
    |
514 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:515:7
    |
515 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:516:7
    |
516 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:517:7
    |
517 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccpp.rs:518:7
    |
518 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccrun.rs:755:23
    |
755 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:758:7
    |
758 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:759:7
    |
759 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:760:7
    |
760 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:761:7
    |
761 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:762:7
    |
762 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:763:7
    |
763 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:764:7
    |
764 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:765:7
    |
765 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tccrun.rs:768:23
    |
768 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:771:7
    |
771 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:772:7
    |
772 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:773:7
    |
773 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:774:7
    |
774 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:775:7
    |
775 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:776:7
    |
776 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:777:7
    |
777 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:778:7
    |
778 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:779:7
    |
779 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tccrun.rs:780:7
    |
780 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tcctools.rs:420:23
    |
420 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:423:7
    |
423 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:424:7
    |
424 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:425:7
    |
425 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:426:7
    |
426 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:427:7
    |
427 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:428:7
    |
428 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:429:7
    |
429 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:430:7
    |
430 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/tcctools.rs:433:23
    |
433 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:436:7
    |
436 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:437:7
    |
437 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:438:7
    |
438 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:439:7
    |
439 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:440:7
    |
440 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:441:7
    |
441 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:442:7
    |
442 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:443:7
    |
443 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:444:7
    |
444 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/tcctools.rs:445:7
    |
445 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/x86_64_gen.rs:411:23
    |
411 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:414:7
    |
414 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:415:7
    |
415 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:416:7
    |
416 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:417:7
    |
417 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:418:7
    |
418 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:419:7
    |
419 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:420:7
    |
420 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:421:7
    |
421 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/x86_64_gen.rs:424:23
    |
424 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:427:7
    |
427 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:428:7
    |
428 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:429:7
    |
429 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:430:7
    |
430 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:431:7
    |
431 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:432:7
    |
432 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:433:7
    |
433 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:434:7
    |
434 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:435:7
    |
435 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_gen.rs:436:7
    |
436 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/x86_64_link.rs:376:23
    |
376 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:379:7
    |
379 |     #[bitfield(name = "func_call", ty = "libc::c_uint", bits = "0..=2")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:380:7
    |
380 |     #[bitfield(name = "func_type", ty = "libc::c_uint", bits = "3..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:381:7
    |
381 |     #[bitfield(name = "func_noreturn", ty = "libc::c_uint", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:382:7
    |
382 |     #[bitfield(name = "func_ctor", ty = "libc::c_uint", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:383:7
    |
383 |     #[bitfield(name = "func_dtor", ty = "libc::c_uint", bits = "7..=7")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:384:7
    |
384 |     #[bitfield(name = "func_args", ty = "libc::c_uint", bits = "8..=15")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:385:7
    |
385 |     #[bitfield(name = "func_alwinl", ty = "libc::c_uint", bits = "16..=16")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:386:7
    |
386 |     #[bitfield(name = "xxxx", ty = "libc::c_uint", bits = "17..=31")]
    |       ^^^^^^^^

error: cannot find derive macro `BitfieldStruct` in this scope
   --> src/x86_64_link.rs:389:23
    |
389 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:392:7
    |
392 |     #[bitfield(name = "aligned", ty = "libc::c_ushort", bits = "0..=4")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:393:7
    |
393 |     #[bitfield(name = "packed", ty = "libc::c_ushort", bits = "5..=5")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:394:7
    |
394 |     #[bitfield(name = "weak", ty = "libc::c_ushort", bits = "6..=6")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:395:7
    |
395 |     #[bitfield(name = "visibility", ty = "libc::c_ushort", bits = "7..=8")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:396:7
    |
396 |     #[bitfield(name = "dllexport", ty = "libc::c_ushort", bits = "9..=9")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:397:7
    |
397 |     #[bitfield(name = "nodecorate", ty = "libc::c_ushort", bits = "10..=10")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:398:7
    |
398 |     #[bitfield(name = "dllimport", ty = "libc::c_ushort", bits = "11..=11")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:399:7
    |
399 |     #[bitfield(name = "addrtaken", ty = "libc::c_ushort", bits = "12..=12")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:400:7
    |
400 |     #[bitfield(name = "nodebug", ty = "libc::c_ushort", bits = "13..=13")]
    |       ^^^^^^^^

error: cannot find attribute `bitfield` in this scope
   --> src/x86_64_link.rs:401:7
    |
401 |     #[bitfield(name = "xxxx", ty = "libc::c_ushort", bits = "14..=15")]
    |       ^^^^^^^^

error[E0658]: the type `f128` is unstable
   --> src/arm64_asm.rs:445:13
    |
445 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/arm64_gen.rs:526:13
    |
526 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/c67_gen.rs:496:13
    |
496 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/i386_asm.rs:553:13
    |
553 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/riscv64_asm.rs:504:13
    |
504 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/riscv64_gen.rs:537:13
    |
537 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/tccasm.rs:602:13
    |
602 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
    --> src/tccdbg.rs:1339:13
     |
1339 |     pub ld: f128::f128,
     |             ^^^^
     |
     = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0658]: the type `f128` is unstable
   --> src/x86_64_gen.rs:522:13
    |
522 |     pub ld: f128::f128,
    |             ^^^^
    |
    = note: see issue #116909 <https://github.com/rust-lang/rust/issues/116909> for more information

error[E0425]: cannot find function `asm_parse_regvar` in this scope
    --> src/riscv64_asm.rs:1804:11
     |
1804 |     reg = asm_parse_regvar(tok) as int8_t;
     |           ^^^^^^^^^^^^^^^^
...
2670 | unsafe extern "C" fn asm_parse_csrvar(mut t: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `asm_parse_csrvar` defined here
     |
help: a function with a similar name exists
     |
1804 |     reg = asm_parse_csrvar(tok) as int8_t;
     |           ~~~~~~~~~~~~~~~~
help: consider importing one of these functions
     |
1    + use crate::arm64_asm::asm_parse_regvar;
     |
1    + use crate::i386_asm::asm_parse_regvar;
     |

error[E0425]: cannot find function `asm_parse_regvar` in this scope
    --> src/riscv64_asm.rs:3481:11
     |
2670 | unsafe extern "C" fn asm_parse_csrvar(mut t: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `asm_parse_csrvar` defined here
...
3481 |     reg = asm_parse_regvar((*ts).tok);
     |           ^^^^^^^^^^^^^^^^
     |
help: a function with a similar name exists
     |
3481 |     reg = asm_parse_csrvar((*ts).tok);
     |           ~~~~~~~~~~~~~~~~
help: consider importing one of these functions
     |
1    + use crate::arm64_asm::asm_parse_regvar;
     |
1    + use crate::i386_asm::asm_parse_regvar;
     |

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_asm.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_gen.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm64_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/arm_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_gen.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/c67_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/conftest.rs:3:5
  |
3 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/conftest.rs:4:5
  |
4 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/conftest.rs:5:5
  |
5 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_asm.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/i386_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/libtcc.rs:7:5
  |
7 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/libtcc.rs:8:5
  |
8 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/libtcc.rs:9:5
  |
9 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:14222:1
      |
14222 | / unsafe extern "C" fn rt_printf(
14223 | |     mut fmt: *const libc::c_char,
14224 | |     mut args: ...
14225 | | ) -> libc::c_int {
...     |
14230 | |     return r;
14231 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:15294:1
      |
15294 | / unsafe extern "C" fn rt_error(
15295 | |     mut f: *mut rt_frame,
15296 | |     mut fmt: *const libc::c_char,
15297 | |     mut args: ...
...     |
15310 | |     return ret;
15311 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:18652:1
      |
18652 | / unsafe extern "C" fn cstr_printf(
18653 | |     mut cstr: *mut CString,
18654 | |     mut fmt: *const libc::c_char,
18655 | |     mut args: ...
...     |
18661 | |     return len;
18662 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:25109:1
      |
25109 | / unsafe extern "C" fn tok_print(
25110 | |     mut str: *const libc::c_int,
25111 | |     mut msg: *const libc::c_char,
25112 | |     mut args: ...
...     |
25152 | |     fprintf(fp, b"\n\0" as *const u8 as *const libc::c_char);
25153 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:45033:1
      |
45033 | / pub unsafe extern "C" fn _tcc_error_noabort(
45034 | |     mut fmt: *const libc::c_char,
45035 | |     mut args: ...
45036 | | ) -> libc::c_int {
...     |
45040 | |     return -(1 as libc::c_int);
45041 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:45043:1
      |
45043 | / pub unsafe extern "C" fn _tcc_error(mut fmt: *const libc::c_char, mut args: ...) -> ! {
45044 | |     let mut ap: ::core::ffi::VaListImpl;
45045 | |     ap = args.clone();
45046 | |     error1(ERROR_ERROR as libc::c_int, fmt, ap.as_va_list());
45047 | |     exit(1 as libc::c_int);
45048 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/libtcc.rs:45050:1
      |
45050 | / pub unsafe extern "C" fn _tcc_warning(mut fmt: *const libc::c_char, mut args: ...) {
45051 | |     let mut ap: ::core::ffi::VaListImpl;
45052 | |     ap = args.clone();
45053 | |     error1(ERROR_WARN as libc::c_int, fmt, ap.as_va_list());
45054 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_asm.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_gen.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/riscv64_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcc.rs:7:5
  |
7 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcc.rs:8:5
  |
8 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcc.rs:9:5
  |
9 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tcc.rs:4305:1
     |
4305 | / pub unsafe extern "C" fn _tcc_error_noabort(
4306 | |     mut fmt: *const libc::c_char,
4307 | |     mut args: ...
4308 | | ) -> libc::c_int {
...    |
4312 | |     return -(1 as libc::c_int);
4313 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tcc.rs:4315:1
     |
4315 | / pub unsafe extern "C" fn _tcc_error(mut fmt: *const libc::c_char, mut args: ...) -> ! {
4316 | |     let mut ap: ::core::ffi::VaListImpl;
4317 | |     ap = args.clone();
4318 | |     error1(ERROR_ERROR as libc::c_int, fmt, ap.as_va_list());
4319 | |     exit(1 as libc::c_int);
4320 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tcc.rs:4322:1
     |
4322 | / pub unsafe extern "C" fn _tcc_warning(mut fmt: *const libc::c_char, mut args: ...) {
4323 | |     let mut ap: ::core::ffi::VaListImpl;
4324 | |     ap = args.clone();
4325 | |     error1(ERROR_WARN as libc::c_int, fmt, ap.as_va_list());
4326 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/tcc.rs:17151:1
      |
17151 | / unsafe extern "C" fn rt_printf(
17152 | |     mut fmt: *const libc::c_char,
17153 | |     mut args: ...
17154 | | ) -> libc::c_int {
...     |
17159 | |     return r;
17160 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/tcc.rs:18223:1
      |
18223 | / unsafe extern "C" fn rt_error(
18224 | |     mut f: *mut rt_frame,
18225 | |     mut fmt: *const libc::c_char,
18226 | |     mut args: ...
...     |
18239 | |     return ret;
18240 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/tcc.rs:21581:1
      |
21581 | / unsafe extern "C" fn cstr_printf(
21582 | |     mut cstr: *mut CString,
21583 | |     mut fmt: *const libc::c_char,
21584 | |     mut args: ...
...     |
21590 | |     return len;
21591 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
     --> src/tcc.rs:28038:1
      |
28038 | / unsafe extern "C" fn tok_print(
28039 | |     mut str: *const libc::c_int,
28040 | |     mut msg: *const libc::c_char,
28041 | |     mut args: ...
...     |
28081 | |     fprintf(fp, b"\n\0" as *const u8 as *const libc::c_char);
28082 | | }
      | |_^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccasm.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccdbg.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccdbg.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccdbg.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccdbg.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccdbg.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccelf.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccelf.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccelf.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccelf.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccelf.rs:8:5
  |
8 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccgen.rs:7:5
  |
7 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccgen.rs:8:5
  |
8 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccgen.rs:9:5
  |
9 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tccgen.rs:10:5
   |
10 |     pub type rt_context;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tccgen.rs:11:5
   |
11 |     pub type sym_version;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tccgen.rs:12:5
   |
12 |     pub type _tccdbg;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccpp.rs:5:5
  |
5 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccpp.rs:6:5
  |
6 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccpp.rs:7:5
  |
7 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccpp.rs:8:5
  |
8 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccpp.rs:9:5
  |
9 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
  --> src/tccpp.rs:10:5
   |
10 |     pub type _tccdbg;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tccpp.rs:2228:1
     |
2228 | / pub unsafe extern "C" fn cstr_printf(
2229 | |     mut cstr: *mut CString,
2230 | |     mut fmt: *const libc::c_char,
2231 | |     mut args: ...
...    |
2237 | |     return len;
2238 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tccpp.rs:8717:1
     |
8717 | / unsafe extern "C" fn tok_print(
8718 | |     mut str: *const libc::c_int,
8719 | |     mut msg: *const libc::c_char,
8720 | |     mut args: ...
...    |
8760 | |     fprintf(fp, b"\n\0" as *const u8 as *const libc::c_char);
8761 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: extern types are experimental
 --> src/tccrun.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccrun.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccrun.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccrun.rs:7:5
  |
7 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tccrun.rs:8:5
  |
8 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tccrun.rs:1998:1
     |
1998 | / unsafe extern "C" fn rt_printf(
1999 | |     mut fmt: *const libc::c_char,
2000 | |     mut args: ...
2001 | | ) -> libc::c_int {
...    |
2006 | |     return r;
2007 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: C-variadic functions are unstable
    --> src/tccrun.rs:3070:1
     |
3070 | / unsafe extern "C" fn rt_error(
3071 | |     mut f: *mut rt_frame,
3072 | |     mut fmt: *const libc::c_char,
3073 | |     mut args: ...
...    |
3086 | |     return ret;
3087 | | }
     | |_^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/tcctools.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_gen.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:4:5
  |
4 |     pub type _IO_wide_data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:5:5
  |
5 |     pub type _IO_codecvt;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:6:5
  |
6 |     pub type _IO_marker;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:7:5
  |
7 |     pub type rt_context;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:8:5
  |
8 |     pub type sym_version;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

error[E0658]: extern types are experimental
 --> src/x86_64_link.rs:9:5
  |
9 |     pub type _tccdbg;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information

warning: type `size_t` should have an upper camel case name
  --> src/arm64_asm.rs:16:10
   |
16 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `__uint8_t` should have an upper camel case name
  --> src/arm64_asm.rs:17:10
   |
17 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__int64_t` should have an upper camel case name
  --> src/arm64_asm.rs:18:10
   |
18 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/arm64_asm.rs:19:10
   |
19 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/arm64_asm.rs:20:10
   |
20 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/arm64_asm.rs:21:10
   |
21 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/arm64_asm.rs:22:10
   |
22 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/arm64_asm.rs:61:10
   |
61 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/arm64_asm.rs:63:10
   |
63 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/arm64_asm.rs:71:10
   |
71 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/arm64_asm.rs:275:10
    |
275 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/arm64_asm.rs:276:10
    |
276 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/arm64_asm.rs:284:10
    |
284 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/arm64_asm.rs:285:10
    |
285 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/arm64_asm.rs:425:10
    |
425 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `size_t` should have an upper camel case name
  --> src/arm64_gen.rs:72:10
   |
72 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/arm64_gen.rs:73:10
   |
73 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/arm64_gen.rs:74:10
   |
74 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/arm64_gen.rs:75:10
   |
75 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/arm64_gen.rs:76:10
   |
76 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/arm64_gen.rs:77:10
   |
77 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/arm64_gen.rs:78:10
   |
78 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/arm64_gen.rs:79:10
   |
79 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/arm64_gen.rs:80:10
   |
80 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/arm64_gen.rs:119:10
    |
119 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/arm64_gen.rs:121:10
    |
121 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/arm64_gen.rs:129:10
    |
129 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/arm64_gen.rs:333:10
    |
333 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/arm64_gen.rs:334:10
    |
334 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/arm64_gen.rs:342:10
    |
342 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/arm64_gen.rs:343:10
    |
343 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/arm64_gen.rs:483:10
    |
483 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/arm64_gen.rs:500:10
    |
500 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/arm64_gen.rs:501:10
    |
501 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/arm64_gen.rs:502:10
    |
502 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: type `tcc_token` should have an upper camel case name
   --> src/arm64_gen.rs:572:10
    |
572 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1640:13
     |
1640 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1641 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1642 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
     = note: `#[warn(clippy::precedence)]` on by default
help: consider parenthesizing your expression
     |
1640 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1641 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1653:14
     |
1653 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1657:12
     |
1657 |       return read16le(p) as uint32_t
     |  ____________^
1658 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1659 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1657 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1658 ~             << 16 as libc::c_int);
     |

warning: unused label
    --> src/arm64_gen.rs:1689:5
     |
1689 |     'c_12415: {
     |     ^^^^^^^^
     |
     = note: `#[warn(unused_labels)]` on by default

warning: unused label
    --> src/arm64_gen.rs:1720:5
     |
1720 |     'c_14907: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1763:16
     |
1763 |             & ((1 as libc::c_int as uint64_t) << 64 as libc::c_int - 2 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int as uint64_t) << (64 as libc::c_int - 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1772:16
     |
1772 |             & ((1 as libc::c_int as uint64_t) << 64 as libc::c_int - 4 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int as uint64_t) << (64 as libc::c_int - 4 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1781:16
     |
1781 |             & ((1 as libc::c_int as uint64_t) << 64 as libc::c_int - 8 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int as uint64_t) << (64 as libc::c_int - 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1790:16
     |
1790 |             & ((1 as libc::c_int as uint64_t) << 64 as libc::c_int - 16 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int as uint64_t) << (64 as libc::c_int - 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1799:16
     |
1799 |             & ((1 as libc::c_int as uint64_t) << 64 as libc::c_int - 32 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int as uint64_t) << (64 as libc::c_int - 32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1899:15
     |
1899 |         pos = pos + len & rep - 1 as libc::c_int;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(pos + len) & (rep - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1902:12
     |
1902 |       return 0x1000 as libc::c_int & rep << 6 as libc::c_int
     |  ____________^
1903 | |         | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
1904 | |             & 63 as libc::c_int
1905 | |         | (rep - pos & rep - 1 as libc::c_int) << 6 as libc::c_int
1906 | |         | len - 1 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1902 ~     return 0x1000 as libc::c_int & rep << 6 as libc::c_int
1903 +         | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
1904 +             & 63 as libc::c_int
1905 ~         | (rep - pos & rep - 1 as libc::c_int) << 6 as libc::c_int | (len - 1 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1902:12
     |
1902 |       return 0x1000 as libc::c_int & rep << 6 as libc::c_int
     |  ____________^
1903 | |         | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
1904 | |             & 63 as libc::c_int
1905 | |         | (rep - pos & rep - 1 as libc::c_int) << 6 as libc::c_int
     | |__________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1902 ~     return 0x1000 as libc::c_int & rep << 6 as libc::c_int
1903 +         | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
1904 +             & 63 as libc::c_int | ((rep - pos & rep - 1 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1902:12
     |
1902 |     return 0x1000 as libc::c_int & rep << 6 as libc::c_int
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1000 as libc::c_int & (rep << 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1903:11
     |
1903 |           | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
     |  ___________^
1904 | |             & 63 as libc::c_int
     | |_______________________________^ help: consider parenthesizing your expression: `((rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int) & 63 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1903:12
     |
1903 |         | (rep - 1 as libc::c_int ^ 31 as libc::c_int) << 1 as libc::c_int
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(rep - 1 as libc::c_int) ^ 31 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1905:12
     |
1905 |         | (rep - pos & rep - 1 as libc::c_int) << 6 as libc::c_int
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(rep - pos) & (rep - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1912:17
     |
1912 |         return ((0x52800000 as libc::c_int | r) as uint64_t | x << 5 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x52800000 as libc::c_int | r) as uint64_t | (x << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1916:17
     |
1916 |         return ((0x52a00000 as libc::c_int | r) as uint64_t | x >> 11 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x52a00000 as libc::c_int | r) as uint64_t | (x >> 11 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1920:17
     |
1920 |           return ((0xd2c00000 as libc::c_uint | r as libc::c_uint) as uint64_t
     |  _________________^
1921 | |             | x >> 27 as libc::c_int) as uint32_t;
     | |____________________________________^ help: consider parenthesizing your expression: `(0xd2c00000 as libc::c_uint | r as libc::c_uint) as uint64_t | (x >> 27 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1924:17
     |
1924 |           return ((0xd2e00000 as libc::c_uint | r as libc::c_uint) as uint64_t
     |  _________________^
1925 | |             | x >> 43 as libc::c_int) as uint32_t;
     | |____________________________________^ help: consider parenthesizing your expression: `(0xd2e00000 as libc::c_uint | r as libc::c_uint) as uint64_t | (x >> 43 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1929:15
     |
1929 |             | !x << 5 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x << 5 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1933:15
     |
1933 |             | !x >> 11 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x >> 11 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1937:15
     |
1937 |             | !x << 5 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x << 5 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1939:10
     |
1939 |     if !(x | m << 16 as libc::c_int) == 0 {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `x | (m << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1941:15
     |
1941 |             | !x >> 11 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x >> 11 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1943:10
     |
1943 |     if !(x | m << 32 as libc::c_int) == 0 {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `x | (m << 32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1945:15
     |
1945 |             | !x >> 27 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x >> 27 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1947:10
     |
1947 |     if !(x | m << 48 as libc::c_int) == 0 {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `x | (m << 48 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1949:15
     |
1949 |             | !x >> 43 as libc::c_int & 0x1fffe0 as libc::c_int as uint64_t) as uint32_t;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x >> 43 as libc::c_int) & 0x1fffe0 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1953:37
     |
1953 |             e = arm64_encode_bimm64(x | x << 32 as libc::c_int);
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `x | (x << 32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1957:16
     |
1957 |           return (0x320003e0 as libc::c_int | r) as uint32_t
     |  ________________^
1958 | |             | (e as uint32_t) << 10 as libc::c_int;
     | |__________________________________________________^ help: consider parenthesizing your expression: `(0x320003e0 as libc::c_int | r) as uint32_t | ((e as uint32_t) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1962:16
     |
1962 |           return 0xb20003e0 as libc::c_uint | r as libc::c_uint
     |  ________________^
1963 | |             | (e as uint32_t) << 10 as libc::c_int;
     | |__________________________________________________^ help: consider parenthesizing your expression: `0xb20003e0 as libc::c_uint | r as libc::c_uint | ((e as uint32_t) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1979:19
     |
1979 |             z += (x >> i & 0xffff as libc::c_int as uint64_t == 0) as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1980:19
     |
1980 |             m += (!x >> i & 0xffff as libc::c_int as uint64_t == 0) as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(!x >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1989:16
     |
1989 |             if x1 >> i & 0xffff as libc::c_int as uint64_t != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x1 >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1991:22
     |
1991 |                       ((mov1 | r as uint32_t) as uint64_t
     |  ______________________^
1992 | |                         | (x1 >> i & 0xffff as libc::c_int as uint64_t)
1993 | |                             << 5 as libc::c_int | (i << 17 as libc::c_int) as uint64_t)
     | |_______________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1991 ~                     ((mov1 | r as uint32_t) as uint64_t | ((x1 >> i & 0xffff as libc::c_int as uint64_t)
1992 ~                             << 5 as libc::c_int) | (i << 17 as libc::c_int) as uint64_t)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:1992:28
     |
1992 |                         | (x1 >> i & 0xffff as libc::c_int as uint64_t)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x1 >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2003:16
     |
2003 |             if x1 >> i & 0xffff as libc::c_int as uint64_t != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x1 >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2005:22
     |
2005 |                       ((0xf2800000 as libc::c_uint | r as libc::c_uint) as uint64_t
     |  ______________________^
2006 | |                         | (x >> i & 0xffff as libc::c_int as uint64_t)
2007 | |                             << 5 as libc::c_int | (i << 17 as libc::c_int) as uint64_t)
     | |_______________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2005 ~                     ((0xf2800000 as libc::c_uint | r as libc::c_uint) as uint64_t | ((x >> i & 0xffff as libc::c_int as uint64_t)
2006 ~                             << 5 as libc::c_int) | (i << 17 as libc::c_int) as uint64_t)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2006:28
     |
2006 |                         | (x >> i & 0xffff as libc::c_int as uint64_t)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x >> i) & 0xffff as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2034:23
     |
2034 |                       | a.wrapping_sub(t) >> 2 as libc::c_int
     |  _______________________^
2035 | |                         & 0x3ffffff as libc::c_int as uint32_t
     | |______________________________________________________________^ help: consider parenthesizing your expression: `(a.wrapping_sub(t) >> 2 as libc::c_int) & 0x3ffffff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:2067:5
     |
2067 |     'c_14603: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2089:14
     |
2089 |               ((0x910003e0 as libc::c_uint | sub << 30 as libc::c_int
     |  ______________^
2090 | |                 | reg as libc::c_uint) as uint64_t | off << 10 as libc::c_int)
     | |_____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2089 ~             ((0x910003e0 as libc::c_uint | sub << 30 as libc::c_int
2090 ~                 | reg as libc::c_uint) as uint64_t | (off << 10 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2089:15
     |
2089 |             ((0x910003e0 as libc::c_uint | sub << 30 as libc::c_int
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x910003e0 as libc::c_uint | (sub << 30 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2095:11
     |
2095 |         o(0x8b3e63e0 as libc::c_uint | sub << 30 as libc::c_int | reg as libc::c_uint);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b3e63e0 as libc::c_uint | (sub << 30 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2138:14
     |
2138 |               ((0x39400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2139 | |                 | off << (10 as libc::c_int as uint32_t).wrapping_sub(sz)
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `(0x39400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | (off << (10 as libc::c_int as uint32_t).wrapping_sub(sz))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2138:15
     |
2138 |             ((0x39400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x39400000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2147:14
     |
2147 |               ((0x38400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2148 | |                 | (off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int
     | |_____________________________________________________________________________^ help: consider parenthesizing your expression: `(0x38400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | ((off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2147:15
     |
2147 |             ((0x38400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x38400000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2155:13
     |
2155 | /             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2156 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2157 | |                 | (((sg != 0) as libc::c_int + 1 as libc::c_int) as uint32_t)
2158 | |                     << 22 as libc::c_int | sz << 30 as libc::c_int,
     | |__________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2155 ~             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2156 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2157 +                 | (((sg != 0) as libc::c_int + 1 as libc::c_int) as uint32_t)
2158 ~                     << 22 as libc::c_int | (sz << 30 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2155:13
     |
2155 | /             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2156 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2157 | |                 | (((sg != 0) as libc::c_int + 1 as libc::c_int) as uint32_t)
2158 | |                     << 22 as libc::c_int | sz << 30 as libc::c_int,
     | |________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2155 ~             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2156 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int | ((((sg != 0) as libc::c_int + 1 as libc::c_int) as uint32_t)
2157 ~                     << 22 as libc::c_int) | sz << 30 as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2155:13
     |
2155 | /             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2156 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
     | |______________________________________________________________________^ help: consider parenthesizing your expression: `(0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t | ((30 as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2155:14
     |
2155 |             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x38206800 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2171:14
     |
2171 |               ((0x3d400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2172 | |                 | off << (10 as libc::c_int as uint32_t).wrapping_sub(sz)
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `(0x3d400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | (off << (10 as libc::c_int as uint32_t).wrapping_sub(sz))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2171:15
     |
2171 |             ((0x3d400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3d400000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2181:14
     |
2181 |               ((0x3c400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2182 | |                 | (off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int
     | |_____________________________________________________________________________^ help: consider parenthesizing your expression: `(0x3c400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | ((off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2181:15
     |
2181 |             ((0x3c400000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3c400000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2190:13
     |
2190 | /             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2191 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2192 | |                 | sz << 30 as libc::c_int
2193 | |                 | (sz & 4 as libc::c_int as uint32_t) << 21 as libc::c_int,
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2190 ~             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2191 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2192 ~                 | sz << 30 as libc::c_int | ((sz & 4 as libc::c_int as uint32_t) << 21 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2190:13
     |
2190 | /             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2191 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2192 | |                 | sz << 30 as libc::c_int
     | |_________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2190 ~             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2191 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int | (sz << 30 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2190:13
     |
2190 | /             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2191 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
     | |______________________________________________________________________^ help: consider parenthesizing your expression: `(0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t | ((30 as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2190:14
     |
2190 |             (0x3c606800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3c606800 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2234:15
     |
2234 |             o(0x2a0043c0 as libc::c_int as uint32_t | reg | reg << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x2a0043c0 as libc::c_int as uint32_t | reg | (reg << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2260:15
     |
2260 |             o(0xaa0083c0 as libc::c_uint | reg | reg << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xaa0083c0 as libc::c_uint | reg | (reg << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2277:15
     |
2277 |             o(0xaa0083c0 as libc::c_uint | reg | reg << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xaa0083c0 as libc::c_uint | reg | (reg << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2294:15
     |
2294 |             o(0x53087c00 as libc::c_int as uint32_t | reg | reg << 5 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x53087c00 as libc::c_int as uint32_t | reg | (reg << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2295:15
     |
2295 |             o(0xaa0083c0 as libc::c_uint | reg | reg << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xaa0083c0 as libc::c_uint | reg | (reg << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2347:17
     |
2347 | /                 0x53087c00 as libc::c_int as uint32_t
2348 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t)
2349 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int,
     | |________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2347 ~                 0x53087c00 as libc::c_int as uint32_t
2348 ~                     | reg.wrapping_add(1 as libc::c_int as uint32_t) | (reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2384:17
     |
2384 | /                 0xd358fc00 as libc::c_uint
2385 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t)
2386 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int,
     | |________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2384 ~                 0xd358fc00 as libc::c_uint
2385 ~                     | reg.wrapping_add(1 as libc::c_int as uint32_t) | (reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2405:17
     |
2405 | /                 0xd350fc00 as libc::c_uint
2406 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t)
2407 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int,
     | |________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2405 ~                 0xd350fc00 as libc::c_uint
2406 ~                     | reg.wrapping_add(1 as libc::c_int as uint32_t) | (reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2426:17
     |
2426 | /                 0xd348fc00 as libc::c_uint
2427 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t)
2428 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int,
     | |________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2426 ~                 0xd348fc00 as libc::c_uint
2427 ~                     | reg.wrapping_add(1 as libc::c_int as uint32_t) | (reg.wrapping_add(1 as libc::c_int as uint32_t) << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2440:17
     |
2440 | /                 0xa9400000 as libc::c_uint | reg
2441 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 10 as libc::c_int
2442 | |                     | reg << 5 as libc::c_int,
     | |_____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2440 ~                 0xa9400000 as libc::c_uint | reg
2441 ~                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 10 as libc::c_int | (reg << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2440:17
     |
2440 | /                 0xa9400000 as libc::c_uint | reg
2441 | |                     | reg.wrapping_add(1 as libc::c_int as uint32_t) << 10 as libc::c_int
     | |_________________________________________________________________________________________^ help: consider parenthesizing your expression: `0xa9400000 as libc::c_uint | reg | (reg.wrapping_add(1 as libc::c_int as uint32_t) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:2457:13
     |
2457 |             'c_18855: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2482:14
     |
2482 |               ((0x39000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2483 | |                 | off << (10 as libc::c_int as uint32_t).wrapping_sub(sz)
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `(0x39000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | (off << (10 as libc::c_int as uint32_t).wrapping_sub(sz))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2482:15
     |
2482 |             ((0x39000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x39000000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2490:14
     |
2490 |               ((0x38000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2491 | |                 | (off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int
     | |_____________________________________________________________________________^ help: consider parenthesizing your expression: `(0x38000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | ((off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2490:15
     |
2490 |             ((0x38000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x38000000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2497:13
     |
2497 | /             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2498 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2499 | |                 | sz << 30 as libc::c_int,
     | |_________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2497 ~             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2498 ~                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int | (sz << 30 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2497:13
     |
2497 | /             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2498 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
     | |______________________________________________________________________^ help: consider parenthesizing your expression: `(0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t | ((30 as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2497:14
     |
2497 |             (0x38206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x38206800 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2512:14
     |
2512 |               ((0x3d000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2513 | |                 | off << (10 as libc::c_int as uint32_t).wrapping_sub(sz)
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `(0x3d000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | (off << (10 as libc::c_int as uint32_t).wrapping_sub(sz))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2512:15
     |
2512 |             ((0x3d000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3d000000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2522:14
     |
2522 |               ((0x3c000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |  ______________^
2523 | |                 | (off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int
     | |_____________________________________________________________________________^ help: consider parenthesizing your expression: `(0x3c000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t | ((off & 511 as libc::c_int as uint64_t) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2522:15
     |
2522 |             ((0x3c000000 as libc::c_int | dst | bas << 5 as libc::c_int) as uint64_t
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3c000000 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2531:13
     |
2531 | /             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2532 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2533 | |                 | sz << 30 as libc::c_int
2534 | |                 | (sz & 4 as libc::c_int as uint32_t) << 21 as libc::c_int,
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2531 ~             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2532 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2533 ~                 | sz << 30 as libc::c_int | ((sz & 4 as libc::c_int as uint32_t) << 21 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2531:13
     |
2531 | /             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2532 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
2533 | |                 | sz << 30 as libc::c_int
     | |_________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2531 ~             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2532 +                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int | (sz << 30 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2531:13
     |
2531 | /             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
2532 | |                 | (30 as libc::c_int as uint32_t) << 16 as libc::c_int
     | |______________________________________________________________________^ help: consider parenthesizing your expression: `(0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t | ((30 as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2531:14
     |
2531 |             (0x3c206800 as libc::c_int | dst | bas << 5 as libc::c_int) as uint32_t
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3c206800 as libc::c_int | dst | (bas << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2565:18
     |
2565 |                   ((0x91000000 as libc::c_uint | r as libc::c_uint
     |  __________________^
2566 | |                     | (r << 5 as libc::c_int) as libc::c_uint) as libc::c_ulong
2567 | |                     | (addend & 0xfff as libc::c_int as libc::c_ulong)
2568 | |                         << 10 as libc::c_int) as libc::c_uint,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2565 ~                 ((0x91000000 as libc::c_uint | r as libc::c_uint
2566 +                     | (r << 5 as libc::c_int) as libc::c_uint) as libc::c_ulong | ((addend & 0xfff as libc::c_int as libc::c_ulong)
2567 ~                         << 10 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2574:22
     |
2574 |                       ((0x91400000 as libc::c_uint | r as libc::c_uint
     |  ______________________^
2575 | |                         | (r << 5 as libc::c_int) as libc::c_uint) as libc::c_ulong
2576 | |                         | (addend >> 12 as libc::c_int
2577 | |                             & 0xfff as libc::c_int as libc::c_ulong)
2578 | |                             << 10 as libc::c_int) as libc::c_uint,
     | |________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2574 ~                     ((0x91400000 as libc::c_uint | r as libc::c_uint
2575 +                         | (r << 5 as libc::c_int) as libc::c_uint) as libc::c_ulong | ((addend >> 12 as libc::c_int
2576 +                             & 0xfff as libc::c_int as libc::c_ulong)
2577 ~                             << 10 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2576:28
     |
2576 |                           | (addend >> 12 as libc::c_int
     |  ____________________________^
2577 | |                             & 0xfff as libc::c_int as libc::c_ulong)
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `(addend >> 12 as libc::c_int) & 0xfff as libc::c_int as libc::c_ulong`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2605:16
     |
2605 |     svcul = if svcul >> 31 as libc::c_int & 1 as libc::c_int as uint64_t != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(svcul >> 31 as libc::c_int) & 1 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2736:21
     |
2736 | /                     0x4ea01c00 as libc::c_int as uint32_t | fltr(r)
2737 | |                         | fltr(svr) << 5 as libc::c_int,
     | |_______________________________________________________^ help: consider parenthesizing your expression: `0x4ea01c00 as libc::c_int as uint32_t | fltr(r) | (fltr(svr) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2741:21
     |
2741 | /                     0x1e604000 as libc::c_int as uint32_t | fltr(r)
2742 | |                         | fltr(svr) << 5 as libc::c_int,
     | |_______________________________________________________^ help: consider parenthesizing your expression: `0x1e604000 as libc::c_int as uint32_t | fltr(r) | (fltr(svr) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2747:15
     |
2747 |             o(0xaa0003e0 as libc::c_uint | intr(r) | intr(svr) << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xaa0003e0 as libc::c_uint | intr(r) | (intr(svr) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:2760:13
     |
2760 |             'c_15295: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2779:18
     |
2779 |                   ((0xd10003a0 as libc::c_uint | intr(r)) as uint64_t
     |  __________________^
2780 | |                     | svcul.wrapping_neg() << 10 as libc::c_int) as libc::c_uint,
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `(0xd10003a0 as libc::c_uint | intr(r)) as uint64_t | (svcul.wrapping_neg() << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2785:17
     |
2785 | /                 0xcb0003a0 as libc::c_uint | intr(r)
2786 | |                     | (30 as libc::c_int as uint32_t) << 16 as libc::c_int,
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `0xcb0003a0 as libc::c_uint | intr(r) | ((30 as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:2847:5
     |
2847 |     'c_11368: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:2867:16
     |
2867 |     svcul = if svcul >> 31 as libc::c_int & 1 as libc::c_int as uint64_t != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(svcul >> 31 as libc::c_int) & 1 as libc::c_int as uint64_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:2989:5
     |
2989 |     'c_16227: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3015:13
     |
3015 | /             0x14000000 as libc::c_int as uint32_t
3016 | |                 | ((b == 0) as libc::c_int as uint32_t) << 31 as libc::c_int,
     | |____________________________________________________________________________^ help: consider parenthesizing your expression: `0x14000000 as libc::c_int as uint32_t | (((b == 0) as libc::c_int as uint32_t) << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3257:26
     |
3257 |                     ) = (fresh0 << 1 as libc::c_int | 1 as libc::c_int) as libc::c_ulong;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(fresh0 << 1 as libc::c_int) | 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3267:24
     |
3267 |                 size = size + 7 as libc::c_int & !(7 as libc::c_int);
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & !(7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3293:32
     |
3293 |                         size = size + 7 as libc::c_int & !(7 as libc::c_int);
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & !(7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3326:34
     |
3326 | ...                   nx = nx + 1 as libc::c_int & !(1 as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(nx + 1 as libc::c_int) & !(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3345:35
     |
3345 | ...                   nx += size + 7 as libc::c_int >> 3 as libc::c_int;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) >> 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:3407:9
     |
3407 |         'c_20340: {
     |         ^^^^^^^^

warning: unused label
    --> src/arm64_gen.rs:3521:13
     |
3521 |             'c_19370: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3557:14
     |
3557 |               (0xd10003ff as libc::c_uint as libc::c_ulong
     |  ______________^
3558 | |                 | (stack & 0xfff as libc::c_int as libc::c_ulong) << 10 as libc::c_int)
     | |______________________________________________________________________________________^ help: consider parenthesizing your expression: `0xd10003ff as libc::c_uint as libc::c_ulong | ((stack & 0xfff as libc::c_int as libc::c_ulong) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3564:14
     |
3564 |               (0xd14003ff as libc::c_uint as libc::c_ulong
     |  ______________^
3565 | |                 | (stack >> 12 as libc::c_int) << 10 as libc::c_int) as libc::c_uint,
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `0xd14003ff as libc::c_uint as libc::c_ulong | ((stack >> 12 as libc::c_int) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3679:27
     |
3679 |                           ((0x3d4003c0 as libc::c_int as uint32_t
     |  ___________________________^
3680 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3681 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
3682 | |                                 << 27 as libc::c_int
3683 | |                             | (sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int)
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3679 ~                         ((0x3d4003c0 as libc::c_int as uint32_t
3680 +                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3681 +                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
3682 ~                                 << 27 as libc::c_int | ((sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3679:27
     |
3679 |                           ((0x3d4003c0 as libc::c_int as uint32_t
     |  ___________________________^
3680 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3681 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
3682 | |                                 << 27 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3679 ~                         ((0x3d4003c0 as libc::c_int as uint32_t
3680 +                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int | ((sz & 8 as libc::c_int as uint32_t).wrapping_neg()
3681 +                                 << 27 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3679:27
     |
3679 |                           ((0x3d4003c0 as libc::c_int as uint32_t
     |  ___________________________^
3680 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
     | |_______________________________________________________________________________________^ help: consider parenthesizing your expression: `0x3d4003c0 as libc::c_int as uint32_t | ((sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3724:14
     |
3724 |               (0x910003ff as libc::c_uint as libc::c_ulong
     |  ______________^
3725 | |                 | (stack & 0xfff as libc::c_int as libc::c_ulong) << 10 as libc::c_int)
     | |______________________________________________________________________________________^ help: consider parenthesizing your expression: `0x910003ff as libc::c_uint as libc::c_ulong | ((stack & 0xfff as libc::c_int as libc::c_ulong) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3731:14
     |
3731 |               (0x914003ff as libc::c_uint as libc::c_ulong
     |  ______________^
3732 | |                 | (stack >> 12 as libc::c_int) << 10 as libc::c_int) as libc::c_uint,
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `0x914003ff as libc::c_uint as libc::c_ulong | ((stack >> 12 as libc::c_int) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:3759:13
     |
3759 |             'c_17684: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3799:23
     |
3799 |                       ((0x3d000100 as libc::c_int as uint32_t
     |  _______________________^
3800 | |                         | (sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3801 | |                         | (sz_0 & 8 as libc::c_int as uint32_t).wrapping_neg()
3802 | |                             << 27 as libc::c_int
3803 | |                         | (sz_0 & 4 as libc::c_int as uint32_t) << 29 as libc::c_int)
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3799 ~                     ((0x3d000100 as libc::c_int as uint32_t
3800 +                         | (sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3801 +                         | (sz_0 & 8 as libc::c_int as uint32_t).wrapping_neg()
3802 ~                             << 27 as libc::c_int | ((sz_0 & 4 as libc::c_int as uint32_t) << 29 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3799:23
     |
3799 |                       ((0x3d000100 as libc::c_int as uint32_t
     |  _______________________^
3800 | |                         | (sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
3801 | |                         | (sz_0 & 8 as libc::c_int as uint32_t).wrapping_neg()
3802 | |                             << 27 as libc::c_int
     | |________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3799 ~                     ((0x3d000100 as libc::c_int as uint32_t
3800 +                         | (sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int | ((sz_0 & 8 as libc::c_int as uint32_t).wrapping_neg()
3801 +                             << 27 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:3799:23
     |
3799 |                       ((0x3d000100 as libc::c_int as uint32_t
     |  _______________________^
3800 | |                         | (sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
     | |_____________________________________________________________________________________^ help: consider parenthesizing your expression: `0x3d000100 as libc::c_int as uint32_t | ((sz_0 & 16 as libc::c_int as uint32_t) << 19 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4030:27
     |
4030 |                           ((0x3d0003e0 as libc::c_int as uint32_t
     |  ___________________________^
4031 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4032 | |                                 << 27 as libc::c_int
4033 | |                             | (sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int)
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4030 ~                         ((0x3d0003e0 as libc::c_int as uint32_t
4031 +                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4032 ~                                 << 27 as libc::c_int | ((sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4030:27
     |
4030 |                           ((0x3d0003e0 as libc::c_int as uint32_t
     |  ___________________________^
4031 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4032 | |                                 << 27 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4030 ~                         ((0x3d0003e0 as libc::c_int as uint32_t | ((sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4031 +                                 << 27 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4118:13
     |
4118 |             size + 7 as libc::c_int & -(8 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & -(8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4120:11
     |
4120 |         o(0xb940181e as libc::c_uint | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb940181e as libc::c_uint | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:4133:13
     |
4133 |             'c_25641: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4149:11
     |
4149 |         o(0x310003c0 as libc::c_int as uint32_t | r1 | n << 10 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x310003c0 as libc::c_int as uint32_t | r1 | (n << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4151:11
     |
4151 |         o(0xf9400000 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400000 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4152:11
     |
4152 |         o(0x9100001e as libc::c_uint | r1 << 5 as libc::c_int | n << 10 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x9100001e as libc::c_uint | r1 << 5 as libc::c_int | (n << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4152:11
     |
4152 |         o(0x9100001e as libc::c_uint | r1 << 5 as libc::c_int | n << 10 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x9100001e as libc::c_uint | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4153:11
     |
4153 |         o(0xf900001e as libc::c_uint | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf900001e as libc::c_uint | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4155:11
     |
4155 |         o(0xb9001800 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb9001800 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4156:11
     |
4156 |         o(0xf9400400 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400400 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4157:11
     |
4157 |         o(0x8b3ec000 as libc::c_uint | r1 | r1 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b3ec000 as libc::c_uint | r1 | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4159:15
     |
4159 |             o(0xf9400000 as libc::c_uint | r1 | r1 << 5 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400000 as libc::c_uint | r1 | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4167:11
     |
4167 |         o(0xb9401c1e as libc::c_uint | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb9401c1e as libc::c_uint | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4168:11
     |
4168 |         o(0x310003c0 as libc::c_int as uint32_t | r1 | rsz << 10 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x310003c0 as libc::c_int as uint32_t | r1 | (rsz << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4171:11
     |
4171 |         o(0xf9400000 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400000 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4173:15
     |
4173 |             o(0x91003c00 as libc::c_uint | r1 | r1 << 5 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x91003c00 as libc::c_uint | r1 | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4174:15
     |
4174 |             o(0x927cec00 as libc::c_uint | r1 | r1 << 5 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x927cec00 as libc::c_uint | r1 | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4177:13
     |
4177 | /             0x9100001e as libc::c_uint | r1 << 5 as libc::c_int
4178 | |                 | ssz << 10 as libc::c_int,
     | |__________________________________________^ help: consider parenthesizing your expression: `0x9100001e as libc::c_uint | r1 << 5 as libc::c_int | (ssz << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4177:13
     |
4177 |             0x9100001e as libc::c_uint | r1 << 5 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x9100001e as libc::c_uint | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4180:11
     |
4180 |         o(0xf900001e as libc::c_uint | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf900001e as libc::c_uint | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4185:13
     |
4185 | /             0x5400000d as libc::c_int as uint32_t
4186 | |                 | (ind as uint32_t).wrapping_sub(b1) << 3 as libc::c_int,
     | |________________________________________________________________________^ help: consider parenthesizing your expression: `0x5400000d as libc::c_int as uint32_t | ((ind as uint32_t).wrapping_sub(b1) << 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4188:11
     |
4188 |         o(0xb9001c00 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb9001c00 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4189:11
     |
4189 |         o(0xf9400800 as libc::c_uint | r1 | r0 << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400800 as libc::c_uint | r1 | (r0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4193:15
     |
4193 |             o(0x8b3ec000 as libc::c_uint | r1 | r1 << 5 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b3ec000 as libc::c_uint | r1 | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4198:17
     |
4198 | /                 0x8b3ec000 as libc::c_uint | 30 as libc::c_int as libc::c_uint
4199 | |                     | r1 << 5 as libc::c_int,
     | |____________________________________________^ help: consider parenthesizing your expression: `0x8b3ec000 as libc::c_uint | 30 as libc::c_int as libc::c_uint | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4202:15
     |
4202 |             o(0x8b0003a0 as libc::c_uint | r1 | r1 << 16 as libc::c_int);
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b0003a0 as libc::c_uint | r1 | (r1 << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4204:17
     |
4204 | /                 0x4c402bdc as libc::c_int as uint32_t | fsize << 7 as libc::c_int
4205 | |                     | ((hfa == 2 as libc::c_int as libc::c_uint) as libc::c_int
4206 | |                         as uint32_t) << 15 as libc::c_int
4207 | |                     | ((hfa == 3 as libc::c_int as libc::c_uint) as libc::c_int
4208 | |                         as uint32_t) << 14 as libc::c_int,
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4204 ~                 0x4c402bdc as libc::c_int as uint32_t | fsize << 7 as libc::c_int
4205 +                     | ((hfa == 2 as libc::c_int as libc::c_uint) as libc::c_int
4206 +                         as uint32_t) << 15 as libc::c_int | (((hfa == 3 as libc::c_int as libc::c_uint) as libc::c_int
4207 ~                         as uint32_t) << 14 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4204:17
     |
4204 | /                 0x4c402bdc as libc::c_int as uint32_t | fsize << 7 as libc::c_int
4205 | |                     | ((hfa == 2 as libc::c_int as libc::c_uint) as libc::c_int
4206 | |                         as uint32_t) << 15 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4204 ~                 0x4c402bdc as libc::c_int as uint32_t | fsize << 7 as libc::c_int | (((hfa == 2 as libc::c_int as libc::c_uint) as libc::c_int
4205 +                         as uint32_t) << 15 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4204:17
     |
4204 |                 0x4c402bdc as libc::c_int as uint32_t | fsize << 7 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4c402bdc as libc::c_int as uint32_t | (fsize << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4211:17
     |
4211 | /                 0xd00801c as libc::c_int as uint32_t | r1 << 5 as libc::c_int
4212 | |                     | (((fsize == 8 as libc::c_int as libc::c_uint) as libc::c_int)
4213 | |                         << 10 as libc::c_int) as uint32_t
4214 | |                     | ((hfa != 2 as libc::c_int as libc::c_uint) as libc::c_int
4215 | |                         as uint32_t) << 13 as libc::c_int
4216 | |                     | ((hfa != 3 as libc::c_int as libc::c_uint) as libc::c_int
4217 | |                         as uint32_t) << 21 as libc::c_int,
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4211 ~                 0xd00801c as libc::c_int as uint32_t | r1 << 5 as libc::c_int
4212 +                     | (((fsize == 8 as libc::c_int as libc::c_uint) as libc::c_int)
4213 +                         << 10 as libc::c_int) as uint32_t
4214 +                     | ((hfa != 2 as libc::c_int as libc::c_uint) as libc::c_int
4215 +                         as uint32_t) << 13 as libc::c_int | (((hfa != 3 as libc::c_int as libc::c_uint) as libc::c_int
4216 ~                         as uint32_t) << 21 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4211:17
     |
4211 | /                 0xd00801c as libc::c_int as uint32_t | r1 << 5 as libc::c_int
4212 | |                     | (((fsize == 8 as libc::c_int as libc::c_uint) as libc::c_int)
4213 | |                         << 10 as libc::c_int) as uint32_t
4214 | |                     | ((hfa != 2 as libc::c_int as libc::c_uint) as libc::c_int
4215 | |                         as uint32_t) << 13 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4211 ~                 0xd00801c as libc::c_int as uint32_t | r1 << 5 as libc::c_int
4212 +                     | (((fsize == 8 as libc::c_int as libc::c_uint) as libc::c_int)
4213 +                         << 10 as libc::c_int) as uint32_t | (((hfa != 2 as libc::c_int as libc::c_uint) as libc::c_int
4214 +                         as uint32_t) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4211:17
     |
4211 |                 0xd00801c as libc::c_int as uint32_t | r1 << 5 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xd00801c as libc::c_int as uint32_t | (r1 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4222:13
     |
4222 | /             0x14000000 as libc::c_int as uint32_t
4223 | |                 | (ind as uint32_t).wrapping_sub(b2) >> 2 as libc::c_int,
     | |________________________________________________________________________^ help: consider parenthesizing your expression: `0x14000000 as libc::c_int as uint32_t | ((ind as uint32_t).wrapping_sub(b2) >> 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4274:25
     |
4274 | /                         0x3d400000 as libc::c_int as uint32_t
4275 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
4276 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4277 | |                                 << 27 as libc::c_int
4278 | |                             | (sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int
4279 | |                             | j | j << 10 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4274 ~                         0x3d400000 as libc::c_int as uint32_t
4275 +                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
4276 +                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4277 +                                 << 27 as libc::c_int
4278 +                             | (sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int
4279 ~                             | j | (j << 10 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4274:25
     |
4274 | /                         0x3d400000 as libc::c_int as uint32_t
4275 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
4276 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4277 | |                                 << 27 as libc::c_int
4278 | |                             | (sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4274 ~                         0x3d400000 as libc::c_int as uint32_t
4275 +                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
4276 +                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4277 +                                 << 27 as libc::c_int | ((sz & 4 as libc::c_int as uint32_t) << 29 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4274:25
     |
4274 | /                         0x3d400000 as libc::c_int as uint32_t
4275 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
4276 | |                             | (sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4277 | |                                 << 27 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4274 ~                         0x3d400000 as libc::c_int as uint32_t
4275 +                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int | ((sz & 8 as libc::c_int as uint32_t).wrapping_neg()
4276 +                                 << 27 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4274:25
     |
4274 | /                         0x3d400000 as libc::c_int as uint32_t
4275 | |                             | (sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int
     | |_______________________________________________________________________________________^ help: consider parenthesizing your expression: `0x3d400000 as libc::c_int as uint32_t | ((sz & 16 as libc::c_int as uint32_t) << 19 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:4300:13
     |
4300 |             'c_25764: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4326:35
     |
4326 |         let mut diff: uint64_t = (-loc + 15 as libc::c_int & !(15 as libc::c_int))
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 15 as libc::c_int) & !(15 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4332:22
     |
4332 |                       (0xd10003ff as libc::c_uint as uint64_t
     |  ______________________^
4333 | |                         | (diff & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)
     | |________________________________________________________________________________________^ help: consider parenthesizing your expression: `0xd10003ff as libc::c_uint as uint64_t | ((diff & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4340:22
     |
4340 |                       (0xd14003ff as libc::c_uint as uint64_t
     |  ______________________^
4341 | |                         | (diff >> 12 as libc::c_int) << 10 as libc::c_int) as uint32_t,
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `0xd14003ff as libc::c_uint as uint64_t | ((diff >> 12 as libc::c_int) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4361:18
     |
4361 |                 (0xd2800010 as libc::c_uint as uint64_t | diff << 5 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xd2800010 as libc::c_uint as uint64_t | (diff << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:4411:5
     |
4411 |     'c_22053: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4429:15
     |
4429 |             | a - ind >> 2 as libc::c_int & 0x3ffffff as libc::c_int) as libc::c_uint,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(a - ind >> 2 as libc::c_int) & 0x3ffffff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4429:15
     |
4429 |             | a - ind >> 2 as libc::c_int & 0x3ffffff as libc::c_int) as libc::c_uint,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(a - ind) >> 2 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4491:11
     |
4491 |         o(0x4e083c00 as libc::c_int as uint32_t | a | f << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4e083c00 as libc::c_int as uint32_t | a | (f << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4492:11
     |
4492 |         o(0x4e183c00 as libc::c_int as uint32_t | b | f << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4e183c00 as libc::c_int as uint32_t | b | (f << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4494:13
     |
4494 | /             0xaa000400 as libc::c_uint | a | a << 5 as libc::c_int
4495 | |                 | b << 16 as libc::c_int,
     | |________________________________________^ help: consider parenthesizing your expression: `0xaa000400 as libc::c_uint | a | a << 5 as libc::c_int | (b << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4494:13
     |
4494 |             0xaa000400 as libc::c_uint | a | a << 5 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xaa000400 as libc::c_uint | a | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4506:13
     |
4506 |             0x1e202008 as libc::c_int as uint32_t | a_0 << 5 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202008 as libc::c_int as uint32_t | (a_0 << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4516:13
     |
4516 | /             0x34000040 as libc::c_int as uint32_t | a_1
4517 | |                 | (((inv != 0) as libc::c_int) << 24 as libc::c_int) as uint32_t
4518 | |                 | ll << 31 as libc::c_int,
     | |_________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4516 ~             0x34000040 as libc::c_int as uint32_t | a_1
4517 ~                 | (((inv != 0) as libc::c_int) << 24 as libc::c_int) as uint32_t | (ll << 31 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4575:26
     |
4575 |                           ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  __________________________^
4576 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
4577 | |                             as uint64_t | val << 10 as libc::c_int) as libc::c_uint,
     | |__________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4575 ~                         ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4576 +                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
4577 ~                             as uint64_t | (val << 10 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4575:27
     |
4575 |                           ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4576 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4575 ~                         ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4576 ~                             | s << 30 as libc::c_int | x | (a << 5 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4575:27
     |
4575 |                           ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4576 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
     | |____________________________________________________^ help: consider parenthesizing your expression: `0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | (s << 30 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4575:27
     |
4575 |                         ((0x11000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x11000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4581:26
     |
4581 |                           ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  __________________________^
4582 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
4583 | |                             as uint64_t
4584 | |                             | (val >> 12 as libc::c_int) << 10 as libc::c_int)
     | |_____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4581 ~                         ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4582 +                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
4583 ~                             as uint64_t | ((val >> 12 as libc::c_int) << 10 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4581:27
     |
4581 |                           ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4582 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4581 ~                         ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4582 ~                             | s << 30 as libc::c_int | x | (a << 5 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4581:27
     |
4581 |                           ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4582 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int)
     | |____________________________________________________^ help: consider parenthesizing your expression: `0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int | (s << 30 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4581:27
     |
4581 |                         ((0x11400000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x11400000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4590:25
     |
4590 | /                         0xb1e0000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4591 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int,
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4590 ~                         0xb1e0000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4591 ~                             | s << 30 as libc::c_int | x | (a << 5 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4590:25
     |
4590 | /                         0xb1e0000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4591 | |                             | s << 30 as libc::c_int | x | a << 5 as libc::c_int,
     | |____________________________________________________^ help: consider parenthesizing your expression: `0xb1e0000 as libc::c_int as uint32_t | l << 31 as libc::c_int | (s << 30 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4590:25
     |
4590 |                         0xb1e0000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb1e0000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4599:25
     |
4599 | /                         0x4b0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4600 | |                             | x | a << 16 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4599 ~                         0x4b0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4600 ~                             | x | (a << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4599:25
     |
4599 |                         0x4b0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4b0003e0 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4610:25
     |
4610 | /                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4611 | |                             | x | a << 16 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4610 ~                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4611 ~                             | x | (a << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4610:25
     |
4610 |                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x2a2003e0 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4616:25
     |
4616 | /                         0x4b0003c0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4617 | |                             | x | a << 16 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4616 ~                         0x4b0003c0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4617 ~                             | x | (a << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4616:25
     |
4616 |                         0x4b0003c0 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4b0003c0 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4627:25
     |
4627 | /                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4628 | |                             | x | a << 16 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4627 ~                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4628 ~                             | x | (a << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4627:25
     |
4627 |                         0x2a2003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x2a2003e0 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4642:25
     |
4642 | /                         0x2a0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
4643 | |                             | a << 16 as libc::c_int,
     | |____________________________________________________^ help: consider parenthesizing your expression: `0x2a0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4642:25
     |
4642 |                         0x2a0003e0 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x2a0003e0 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4648:26
     |
4648 |                           ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  __________________________^
4649 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4650 | |                             as uint64_t
4651 | |                             | (n as uint64_t).wrapping_sub(val) << 16 as libc::c_int
4652 | |                             | (n.wrapping_sub(1 as libc::c_int as uint32_t) as uint64_t)
4653 | |                                 .wrapping_sub(val) << 10 as libc::c_int) as libc::c_uint,
     | |_______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4648 ~                         ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4649 +                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4650 +                             as uint64_t
4651 +                             | (n as uint64_t).wrapping_sub(val) << 16 as libc::c_int | ((n.wrapping_sub(1 as libc::c_int as uint32_t) as uint64_t)
4652 ~                                 .wrapping_sub(val) << 10 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4648:26
     |
4648 |                           ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  __________________________^
4649 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4650 | |                             as uint64_t
4651 | |                             | (n as uint64_t).wrapping_sub(val) << 16 as libc::c_int
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4648 ~                         ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4649 +                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4650 +                             as uint64_t | ((n as uint64_t).wrapping_sub(val) << 16 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4648:27
     |
4648 |                           ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4649 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4648 ~                         ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
4649 ~                             | l << 22 as libc::c_int | x | (a << 5 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4648:27
     |
4648 |                           ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |  ___________________________^
4649 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
     | |____________________________________________________^ help: consider parenthesizing your expression: `0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | (l << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4648:27
     |
4648 |                         ((0x53000000 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x53000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4657:26
     |
4657 |                           (((0x13000000 as libc::c_int
     |  __________________________^
4658 | |                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 | |                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
4660 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4661 | |                             as uint64_t | val << 16 as libc::c_int
     | |__________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4657 ~                         (((0x13000000 as libc::c_int
4658 +                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 +                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
4660 +                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
4661 +                             as uint64_t | (val << 16 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4657:27
     |
4657 |                           (((0x13000000 as libc::c_int
     |  ___________________________^
4658 | |                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 | |                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
4660 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4657 ~                         (((0x13000000 as libc::c_int
4658 +                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 +                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
4660 ~                             | l << 22 as libc::c_int | x | (a << 5 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4657:27
     |
4657 |                           (((0x13000000 as libc::c_int
     |  ___________________________^
4658 | |                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 | |                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
4660 | |                             | l << 22 as libc::c_int | x | a << 5 as libc::c_int)
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4657 ~                         (((0x13000000 as libc::c_int
4658 +                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 ~                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int | (l << 22 as libc::c_int) | x | a << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4657:27
     |
4657 |                           (((0x13000000 as libc::c_int
     |  ___________________________^
4658 | |                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 | |                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
     | |__________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4657 ~                         (((0x13000000 as libc::c_int
4658 +                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 +                                 << 30 as libc::c_int) as uint32_t | (l << 31 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4657:28
     |
4657 |                           (((0x13000000 as libc::c_int
     |  ____________________________^
4658 | |                             | ((op == 0x8b as libc::c_int) as libc::c_int)
4659 | |                                 << 30 as libc::c_int) as uint32_t | l << 31 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4657 ~                         (((0x13000000 as libc::c_int | (((op == 0x8b as libc::c_int) as libc::c_int)
4658 ~                                 << 30 as libc::c_int)) as uint32_t | l << 31 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4673:38
     |
4673 |             if l != 0 { val } else { val | val << 32 as libc::c_int },
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `val | (val << 32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4679:13
     |
4679 | /             (if op == '&' as i32 {
4680 | |                 0x12000000 as libc::c_int
4681 | |             } else {
4682 | |                 (if op == '|' as i32 {
...    |
4687 | |             }) as uint32_t | l << 31 as libc::c_int | x | a << 5 as libc::c_int
4688 | |                 | (e as uint32_t) << 10 as libc::c_int,
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4679 ~             (if op == '&' as i32 {
4680 +                 0x12000000 as libc::c_int
4681 +             } else {
4682 +                 (if op == '|' as i32 {
4683 +                     0x32000000 as libc::c_int
4684 +                 } else {
4685 +                     0x52000000 as libc::c_int
4686 +                 })
4687 ~             }) as uint32_t | l << 31 as libc::c_int | x | a << 5 as libc::c_int | ((e as uint32_t) << 10 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4679:13
     |
4679 | /             (if op == '&' as i32 {
4680 | |                 0x12000000 as libc::c_int
4681 | |             } else {
4682 | |                 (if op == '|' as i32 {
...    |
4686 | |                 })
4687 | |             }) as uint32_t | l << 31 as libc::c_int | x | a << 5 as libc::c_int
     | |_______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4679 ~             (if op == '&' as i32 {
4680 +                 0x12000000 as libc::c_int
4681 +             } else {
4682 +                 (if op == '|' as i32 {
4683 +                     0x32000000 as libc::c_int
4684 +                 } else {
4685 +                     0x52000000 as libc::c_int
4686 +                 })
4687 +             }) as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4679:13
     |
4679 | /             (if op == '&' as i32 {
4680 | |                 0x12000000 as libc::c_int
4681 | |             } else {
4682 | |                 (if op == '|' as i32 {
...    |
4686 | |                 })
4687 | |             }) as uint32_t | l << 31 as libc::c_int | x | a << 5 as libc::c_int
     | |___________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4679 ~             (if op == '&' as i32 {
4680 +                 0x12000000 as libc::c_int
4681 +             } else {
4682 +                 (if op == '|' as i32 {
4683 +                     0x32000000 as libc::c_int
4684 +                 } else {
4685 +                     0x52000000 as libc::c_int
4686 +                 })
4687 ~             }) as uint32_t | (l << 31 as libc::c_int) | x | a << 5 as libc::c_int
     |

warning: unnecessary parentheses around block return value
    --> src/arm64_gen.rs:4682:17
     |
4682 |                 (if op == '|' as i32 {
     |                 ^
...
4686 |                 })
     |                  ^
     |
     = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
     |
4682 ~                 if op == '|' as i32 {
4683 |                     0x32000000 as libc::c_int
4684 |                 } else {
4685 |                     0x52000000 as libc::c_int
4686 ~                 }
     |

warning: unused label
    --> src/arm64_gen.rs:4744:5
     |
4744 |     'c_12517: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4775:17
     |
4775 | /                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int
4776 | |                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int
4777 | |                     | b << 16 as libc::c_int,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4775 ~                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int
4776 ~                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4775:17
     |
4775 | /                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int
4776 | |                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4775 ~                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int
4776 +                     | 30 as libc::c_int as uint32_t | (a << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4775:17
     |
4775 |                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac00c00 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4780:17
     |
4780 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4781 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4782 | |                     | b << 16 as libc::c_int | a << 10 as libc::c_int,
     | |_____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4780 ~                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4781 +                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4782 ~                     | b << 16 as libc::c_int | (a << 10 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4780:17
     |
4780 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4781 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4782 | |                     | b << 16 as libc::c_int | a << 10 as libc::c_int,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4780 ~                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4781 ~                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int | (b << 16 as libc::c_int) | a << 10 as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4780:17
     |
4780 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4781 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | ((30 as libc::c_int as uint32_t) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4780:17
     |
4780 |                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1b008000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4787:17
     |
4787 | /                 0xa000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4788 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4787 ~                 0xa000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4788 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4787:17
     |
4787 | /                 0xa000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4788 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0xa000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4787:17
     |
4787 |                 0xa000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xa000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4793:17
     |
4793 | /                 0x1b007c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4794 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4793 ~                 0x1b007c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4794 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4793:17
     |
4793 | /                 0x1b007c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4794 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1b007c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4793:17
     |
4793 |                 0x1b007c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1b007c00 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4799:17
     |
4799 | /                 0xb000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4800 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4799 ~                 0xb000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4800 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4799:17
     |
4799 | /                 0xb000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4800 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0xb000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4799:17
     |
4799 |                 0xb000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xb000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4805:17
     |
4805 | /                 0x4b000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4806 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4805 ~                 0x4b000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4806 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4805:17
     |
4805 | /                 0x4b000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4806 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x4b000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4805:17
     |
4805 |                 0x4b000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4b000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4811:17
     |
4811 | /                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4812 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4811 ~                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4812 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4811:17
     |
4811 | /                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4812 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4811:17
     |
4811 |                 0x1ac00c00 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac00c00 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4817:17
     |
4817 | /                 0x4a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4818 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4817 ~                 0x4a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4818 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4817:17
     |
4817 | /                 0x4a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4818 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x4a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4817:17
     |
4817 |                 0x4a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4a000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4823:17
     |
4823 | /                 0x2a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4824 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4823 ~                 0x2a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4824 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4823:17
     |
4823 | /                 0x2a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4824 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x2a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4823:17
     |
4823 |                 0x2a000000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x2a000000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4829:17
     |
4829 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4830 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4829 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4830 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4829:17
     |
4829 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4830 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4829:17
     |
4829 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4836:17
     |
4836 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4837 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4836 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4837 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4836:17
     |
4836 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4837 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4836:17
     |
4836 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4843:17
     |
4843 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4844 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4843 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4844 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4843:17
     |
4843 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4844 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4843:17
     |
4843 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4850:17
     |
4850 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4851 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4850 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4851 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4850:17
     |
4850 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4851 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4850:17
     |
4850 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4857:17
     |
4857 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4858 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4857 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4858 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4857:17
     |
4857 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4858 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4857:17
     |
4857 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4864:17
     |
4864 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4865 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4864 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4865 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4864:17
     |
4864 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4865 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4864:17
     |
4864 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4871:17
     |
4871 | /                 0x1ac02800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4872 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4871 ~                 0x1ac02800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4872 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4871:17
     |
4871 | /                 0x1ac02800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4872 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1ac02800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4871:17
     |
4871 |                 0x1ac02800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac02800 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4877:17
     |
4877 | /                 0x1ac02000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4878 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4877 ~                 0x1ac02000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4878 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4877:17
     |
4877 | /                 0x1ac02000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4878 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4877:17
     |
4877 |                 0x1ac02000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4883:17
     |
4883 | /                 0x1ac02400 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4884 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4883 ~                 0x1ac02400 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4884 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4883:17
     |
4883 | /                 0x1ac02400 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4884 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1ac02400 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4883:17
     |
4883 |                 0x1ac02400 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac02400 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4889:17
     |
4889 | /                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4890 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4889 ~                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4890 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4889:17
     |
4889 | /                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4890 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4889:17
     |
4889 |                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac00800 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4895:17
     |
4895 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4896 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4895 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4896 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4895:17
     |
4895 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4896 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4895:17
     |
4895 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4902:17
     |
4902 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4903 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4902 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4903 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4902:17
     |
4902 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4903 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4902:17
     |
4902 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4909:17
     |
4909 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4910 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4909 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4910 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4909:17
     |
4909 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4910 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4909:17
     |
4909 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4916:17
     |
4916 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4917 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4916 ~                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4917 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4916:17
     |
4916 | /                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
4917 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4916:17
     |
4916 |                 0x6b00001f as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x6b00001f as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4923:17
     |
4923 | /                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int
4924 | |                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int
4925 | |                     | b << 16 as libc::c_int,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4923 ~                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int
4924 ~                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4923:17
     |
4923 | /                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int
4924 | |                     | 30 as libc::c_int as uint32_t | a << 5 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4923 ~                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int
4924 +                     | 30 as libc::c_int as uint32_t | (a << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4923:17
     |
4923 |                 0x1ac00800 as libc::c_int as uint32_t | l << 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac00800 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4928:17
     |
4928 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4929 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4930 | |                     | b << 16 as libc::c_int | a << 10 as libc::c_int,
     | |_____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4928 ~                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4929 +                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4930 ~                     | b << 16 as libc::c_int | (a << 10 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4928:17
     |
4928 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4929 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
4930 | |                     | b << 16 as libc::c_int | a << 10 as libc::c_int,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4928 ~                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4929 ~                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int | (b << 16 as libc::c_int) | a << 10 as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4928:17
     |
4928 | /                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
4929 | |                     | (30 as libc::c_int as uint32_t) << 5 as libc::c_int
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x | ((30 as libc::c_int as uint32_t) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:4928:17
     |
4928 |                 0x1b008000 as libc::c_int as uint32_t | l << 31 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1b008000 as libc::c_int as uint32_t | (l << 31 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:4945:13
     |
4945 |             'c_11576: {
     |             ^^^^^^^^

warning: unused label
    --> src/arm64_gen.rs:5013:17
     |
5013 |                 'c_23157: {
     |                 ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5043:17
     |
5043 | /                 0x1a9f07e0 as libc::c_int as uint32_t
5044 | |                     | (cond as uint32_t) << 12 as libc::c_int,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1a9f07e0 as libc::c_int as uint32_t | ((cond as uint32_t) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:5070:5
     |
5070 |     'c_22955: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5112:17
     |
5112 | /                 0x1e200800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5113 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5112 ~                 0x1e200800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5113 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5112:17
     |
5112 | /                 0x1e200800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5113 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e200800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5112:17
     |
5112 |                 0x1e200800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e200800 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5118:17
     |
5118 | /                 0x1e202800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5119 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5118 ~                 0x1e202800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5119 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5118:17
     |
5118 | /                 0x1e202800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5119 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5118:17
     |
5118 |                 0x1e202800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202800 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5124:17
     |
5124 | /                 0x1e203800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5125 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5124 ~                 0x1e203800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5125 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5124:17
     |
5124 | /                 0x1e203800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5125 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e203800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5124:17
     |
5124 |                 0x1e203800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e203800 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5130:17
     |
5130 | /                 0x1e201800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5131 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5130 ~                 0x1e201800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5131 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5130:17
     |
5130 | /                 0x1e201800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
5131 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e201800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5130:17
     |
5130 |                 0x1e201800 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | x
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e201800 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5136:17
     |
5136 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5137 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5136 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5137 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5136:17
     |
5136 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5137 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5136:17
     |
5136 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5143:17
     |
5143 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5144 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5143 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5144 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5143:17
     |
5143 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5144 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5143:17
     |
5143 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5150:17
     |
5150 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5151 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5150 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5151 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5150:17
     |
5150 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5151 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5150:17
     |
5150 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5157:17
     |
5157 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5158 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5157 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5158 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5157:17
     |
5157 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5158 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5157:17
     |
5157 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5164:17
     |
5164 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5165 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5164 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5165 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5164:17
     |
5164 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5165 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5164:17
     |
5164 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5171:17
     |
5171 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5172 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5171 ~                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5172 ~                     | a << 5 as libc::c_int | (b << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5171:17
     |
5171 | /                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
5172 | |                     | a << 5 as libc::c_int | b << 16 as libc::c_int,
     | |___________________________________________^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5171:17
     |
5171 |                 0x1e202000 as libc::c_int as uint32_t | dbl << 22 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e202000 as libc::c_int as uint32_t | (dbl << 22 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/arm64_gen.rs:5188:13
     |
5188 |             'c_22517: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5208:7
     |
5208 |     o(0x93407c00 as libc::c_uint | r | r << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x93407c00 as libc::c_uint | r | (r << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5214:9
     |
5214 | /         (0x13001c00 as libc::c_int
5215 | |             | ((t & 0xf as libc::c_int == 2 as libc::c_int) as libc::c_int)
5216 | |                 << 13 as libc::c_int) as uint32_t
5217 | |             | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5218 | |                 << 30 as libc::c_int | r as uint32_t
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5214 ~         (0x13001c00 as libc::c_int
5215 +             | ((t & 0xf as libc::c_int == 2 as libc::c_int) as libc::c_int)
5216 +                 << 13 as libc::c_int) as uint32_t | (((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5217 ~                 << 30 as libc::c_int) | r as uint32_t
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5214:10
     |
5214 |           (0x13001c00 as libc::c_int
     |  __________^
5215 | |             | ((t & 0xf as libc::c_int == 2 as libc::c_int) as libc::c_int)
5216 | |                 << 13 as libc::c_int) as uint32_t
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5214 ~         (0x13001c00 as libc::c_int | (((t & 0xf as libc::c_int == 2 as libc::c_int) as libc::c_int)
5215 ~                 << 13 as libc::c_int)) as uint32_t
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5248:13
     |
5248 | /             0x1e220000 as libc::c_int as uint32_t
5249 | |                 | ((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int
5250 | |                 | ((t != 8 as libc::c_int) as libc::c_int as uint32_t)
5251 | |                     << 22 as libc::c_int | fltr(d) | l << 31 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5248 ~             0x1e220000 as libc::c_int as uint32_t
5249 +                 | ((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int
5250 +                 | ((t != 8 as libc::c_int) as libc::c_int as uint32_t)
5251 +                     << 22 as libc::c_int | fltr(d) | (l << 31 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5248:13
     |
5248 | /             0x1e220000 as libc::c_int as uint32_t
5249 | |                 | ((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int
5250 | |                 | ((t != 8 as libc::c_int) as libc::c_int as uint32_t)
5251 | |                     << 22 as libc::c_int | fltr(d) | l << 31 as libc::c_int
     | |________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5248 ~             0x1e220000 as libc::c_int as uint32_t
5249 +                 | ((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int | (((t != 8 as libc::c_int) as libc::c_int as uint32_t)
5250 ~                     << 22 as libc::c_int) | fltr(d) | l << 31 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5248:13
     |
5248 | /             0x1e220000 as libc::c_int as uint32_t
5249 | |                 | ((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int
     | |____________________________________________________________________________^ help: consider parenthesizing your expression: `0x1e220000 as libc::c_int as uint32_t | (((s == 0) as libc::c_int as uint32_t) << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5279:13
     |
5279 | /             0x1e380000 as libc::c_int as uint32_t
5280 | |                 | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5281 | |                     << 16 as libc::c_int
5282 | |                 | ((t & 0xf as libc::c_int == 4 as libc::c_int) as libc::c_int
5283 | |                     as uint32_t) << 31 as libc::c_int | intr(d) | l << 22 as libc::c_int
     | |________________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5279 ~             0x1e380000 as libc::c_int as uint32_t
5280 +                 | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5281 +                     << 16 as libc::c_int
5282 +                 | ((t & 0xf as libc::c_int == 4 as libc::c_int) as libc::c_int
5283 +                     as uint32_t) << 31 as libc::c_int | intr(d) | (l << 22 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5279:13
     |
5279 | /             0x1e380000 as libc::c_int as uint32_t
5280 | |                 | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5281 | |                     << 16 as libc::c_int
5282 | |                 | ((t & 0xf as libc::c_int == 4 as libc::c_int) as libc::c_int
5283 | |                     as uint32_t) << 31 as libc::c_int | intr(d) | l << 22 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5279 ~             0x1e380000 as libc::c_int as uint32_t
5280 +                 | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5281 +                     << 16 as libc::c_int | (((t & 0xf as libc::c_int == 4 as libc::c_int) as libc::c_int
5282 ~                     as uint32_t) << 31 as libc::c_int) | intr(d) | l << 22 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5279:13
     |
5279 | /             0x1e380000 as libc::c_int as uint32_t
5280 | |                 | ((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5281 | |                     << 16 as libc::c_int
     | |________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5279 ~             0x1e380000 as libc::c_int as uint32_t | (((t & 0x10 as libc::c_int != 0) as libc::c_int as uint32_t)
5280 +                     << 16 as libc::c_int)
     |

warning: unused label
    --> src/arm64_gen.rs:5306:5
     |
5306 |     'c_23811: {
     |     ^^^^^^^^

warning: unused label
    --> src/arm64_gen.rs:5337:5
     |
5337 |     'c_23754: {
     |     ^^^^^^^^

warning: unused label
    --> src/arm64_gen.rs:5384:9
     |
5384 |         'c_23652: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5411:16
     |
5411 |             o((0x1e22c000 as libc::c_int | x | a << 5 as libc::c_int) as libc::c_uint);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e22c000 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5413:16
     |
5413 |             o((0x1e624000 as libc::c_int | x | a << 5 as libc::c_int) as libc::c_uint);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1e624000 as libc::c_int | x | (a << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5444:7
     |
5444 |     o(0xf9400000 as libc::c_uint | intr(r1) << 5 as libc::c_int | intr(r2));
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9400000 as libc::c_uint | (intr(r1) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5445:7
     |
5445 |     o(0x91000400 as libc::c_uint | intr(r2) << 5 as libc::c_int | intr(r2));
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x91000400 as libc::c_uint | (intr(r2) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5446:7
     |
5446 |     o(0xf9000000 as libc::c_uint | intr(r1) << 5 as libc::c_int | intr(r2));
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xf9000000 as libc::c_uint | (intr(r1) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5479:7
     |
5479 |     o(0x53104c00 as libc::c_int as uint32_t | dsz | isz << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x53104c00 as libc::c_int as uint32_t | dsz | (isz << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5481:9
     |
5481 | /         0x1ac02000 as libc::c_int as uint32_t | dsz | p << 5 as libc::c_int
5482 | |             | dsz << 16 as libc::c_int,
     | |______________________________________^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | dsz | p << 5 as libc::c_int | (dsz << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5481:9
     |
5481 |         0x1ac02000 as libc::c_int as uint32_t | dsz | p << 5 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | dsz | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5484:7
     |
5484 |     o(0x12000c00 as libc::c_int as uint32_t | isz | isz << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x12000c00 as libc::c_int as uint32_t | isz | (isz << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5486:9
     |
5486 | /         0x1ac02000 as libc::c_int as uint32_t | isz | p << 5 as libc::c_int
5487 | |             | isz << 16 as libc::c_int,
     | |______________________________________^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | isz | p << 5 as libc::c_int | (isz << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5486:9
     |
5486 |         0x1ac02000 as libc::c_int as uint32_t | isz | p << 5 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x1ac02000 as libc::c_int as uint32_t | isz | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5489:7
     |
5489 |     o(0x51000400 as libc::c_int as uint32_t | p | dsz << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x51000400 as libc::c_int as uint32_t | p | (dsz << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5490:7
     |
5490 |     o(0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | p << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | (p << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5490:7
     |
5490 |     o(0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | p << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8a240004 as libc::c_uint | p | (beg << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5495:7
     |
5495 |     o(0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | dsz << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | (dsz << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5495:7
     |
5495 |     o(0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | dsz << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b000000 as libc::c_uint | p | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5498:9
     |
5498 | /         0x14000000 as libc::c_int as uint32_t
5499 | |             | (ind as uint32_t).wrapping_sub(b1) >> 2 as libc::c_int,
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `0x14000000 as libc::c_int as uint32_t | ((ind as uint32_t).wrapping_sub(b1) >> 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5501:7
     |
5501 |     o(0xeb00001f as libc::c_uint | p << 5 as libc::c_int | end << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xeb00001f as libc::c_uint | p << 5 as libc::c_int | (end << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5501:7
     |
5501 |     o(0xeb00001f as libc::c_uint | p << 5 as libc::c_int | end << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xeb00001f as libc::c_uint | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5504:15
     |
5504 |               | lab1.wrapping_sub(ind as uint32_t) << 3 as libc::c_int
     |  _______________^
5505 | |                 & 0xffffe0 as libc::c_int as uint32_t,
     | |_____________________________________________________^ help: consider parenthesizing your expression: `(lab1.wrapping_sub(ind as uint32_t) << 3 as libc::c_int) & 0xffffe0 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5508:7
     |
5508 |     o(0x51000400 as libc::c_int as uint32_t | p | isz << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x51000400 as libc::c_int as uint32_t | p | (isz << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5509:7
     |
5509 |     o(0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | p << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | (p << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5509:7
     |
5509 |     o(0x8a240004 as libc::c_uint | p | beg << 5 as libc::c_int | p << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8a240004 as libc::c_uint | p | (beg << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5514:7
     |
5514 |     o(0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | isz << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | (isz << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5514:7
     |
5514 |     o(0x8b000000 as libc::c_uint | p | p << 5 as libc::c_int | isz << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8b000000 as libc::c_uint | p | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5517:9
     |
5517 | /         0x14000000 as libc::c_int as uint32_t
5518 | |             | (ind as uint32_t).wrapping_sub(b1) >> 2 as libc::c_int,
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `0x14000000 as libc::c_int as uint32_t | ((ind as uint32_t).wrapping_sub(b1) >> 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5520:7
     |
5520 |     o(0xeb00001f as libc::c_uint | p << 5 as libc::c_int | end << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xeb00001f as libc::c_uint | p << 5 as libc::c_int | (end << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5520:7
     |
5520 |     o(0xeb00001f as libc::c_uint | p << 5 as libc::c_int | end << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xeb00001f as libc::c_uint | (p << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5523:15
     |
5523 |               | lab1.wrapping_sub(ind as uint32_t) << 3 as libc::c_int
     |  _______________^
5524 | |                 & 0xffffe0 as libc::c_int as uint32_t,
     | |_____________________________________________________^ help: consider parenthesizing your expression: `(lab1.wrapping_sub(ind as uint32_t) << 3 as libc::c_int) & 0xffffe0 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5545:7
     |
5545 |     o(0x9100001f as libc::c_uint | r << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x9100001f as libc::c_uint | (r << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5555:11
     |
5555 |         o(0x91004000 as libc::c_uint | r | r << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x91004000 as libc::c_uint | r | (r << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5557:11
     |
5557 |         o(0x91003c00 as libc::c_uint | r | r << 5 as libc::c_int);
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x91003c00 as libc::c_uint | r | (r << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5559:7
     |
5559 |     o(0x927cec00 as libc::c_uint | r | r << 5 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x927cec00 as libc::c_uint | r | (r << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/arm64_gen.rs:5560:7
     |
5560 |     o(0xcb2063ff as libc::c_uint | r << 16 as libc::c_int);
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xcb2063ff as libc::c_uint | (r << 16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/arm64_link.rs:21:10
   |
21 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/arm64_link.rs:22:10
   |
22 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/arm64_link.rs:23:10
   |
23 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/arm64_link.rs:24:10
   |
24 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/arm64_link.rs:25:10
   |
25 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/arm64_link.rs:26:10
   |
26 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/arm64_link.rs:27:10
   |
27 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/arm64_link.rs:28:10
   |
28 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/arm64_link.rs:29:10
   |
29 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int32_t` should have an upper camel case name
  --> src/arm64_link.rs:30:10
   |
30 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/arm64_link.rs:31:10
   |
31 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/arm64_link.rs:70:10
   |
70 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/arm64_link.rs:72:10
   |
72 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/arm64_link.rs:80:10
   |
80 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/arm64_link.rs:284:10
    |
284 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/arm64_link.rs:285:10
    |
285 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/arm64_link.rs:293:10
    |
293 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/arm64_link.rs:294:10
    |
294 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/arm64_link.rs:434:10
    |
434 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/arm64_link.rs:451:10
    |
451 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/arm64_link.rs:452:10
    |
452 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/arm64_link.rs:456:10
    |
456 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:460:13
    |
460 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
461 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
462 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
460 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
461 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:473:14
    |
473 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:477:12
    |
477 |       return read16le(p) as uint32_t
    |  ____________^
478 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
479 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
477 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
478 ~             << 16 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:492:12
    |
492 |       return read32le(p) as uint64_t
    |  ____________^
493 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
494 | |             << 32 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
492 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
493 ~             << 32 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:585:14
    |
585 |               (0x90000010 as libc::c_uint as uint64_t
    |  ______________^
586 | |                 | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
587 | |                 | (off & 3 as libc::c_int as uint64_t) << 29 as libc::c_int) as uint32_t,
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
585 ~             (0x90000010 as libc::c_uint as uint64_t
586 ~                 | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int | ((off & 3 as libc::c_int as uint64_t) << 29 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:585:14
    |
585 |               (0x90000010 as libc::c_uint as uint64_t
    |  ______________^
586 | |                 | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
    | |_________________________________________________________________________________^ help: consider parenthesizing your expression: `0x90000010 as libc::c_uint as uint64_t | ((off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:591:14
    |
591 |               (0xf9400211 as libc::c_uint as uint64_t
    |  ______________^
592 | |                 | (got & 0xff8 as libc::c_int as uint64_t) << 7 as libc::c_int)
    | |______________________________________________________________________________^ help: consider parenthesizing your expression: `0xf9400211 as libc::c_uint as uint64_t | ((got & 0xff8 as libc::c_int as uint64_t) << 7 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:597:14
    |
597 |               (0x91000210 as libc::c_uint as uint64_t
    |  ______________^
598 | |                 | (got & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)
    | |_______________________________________________________________________________^ help: consider parenthesizing your expression: `0x91000210 as libc::c_uint as uint64_t | ((got & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:637:18
    |
637 |                   (0x90000010 as libc::c_uint as uint64_t
    |  __________________^
638 | |                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
639 | |                     | (off_0 & 3 as libc::c_int as uint64_t) << 29 as libc::c_int)
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
637 ~                 (0x90000010 as libc::c_uint as uint64_t
638 ~                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int | ((off_0 & 3 as libc::c_int as uint64_t) << 29 as libc::c_int))
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:637:18
    |
637 |                   (0x90000010 as libc::c_uint as uint64_t
    |  __________________^
638 | |                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
    | |_______________________________________________________________________________________^ help: consider parenthesizing your expression: `0x90000010 as libc::c_uint as uint64_t | ((off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:644:18
    |
644 |                   (0xf9400211 as libc::c_uint as uint64_t
    |  __________________^
645 | |                     | (addr & 0xff8 as libc::c_int as uint64_t) << 7 as libc::c_int)
    | |___________________________________________________________________________________^ help: consider parenthesizing your expression: `0xf9400211 as libc::c_uint as uint64_t | ((addr & 0xff8 as libc::c_int as uint64_t) << 7 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:650:18
    |
650 |                   (0x91000210 as libc::c_uint as uint64_t
    |  __________________^
651 | |                     | (addr & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)
    | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `0x91000210 as libc::c_uint as uint64_t | ((addr & 0xfff as libc::c_int as uint64_t) << 10 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:766:18
    |
766 |                   ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr
    |  __________________^
767 | |                     | (val & 0xffff as libc::c_int as Elf64_Addr) << 5 as libc::c_int)
    | |_____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr | ((val & 0xffff as libc::c_int as Elf64_Addr) << 5 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:775:18
    |
775 |                   ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr
    |  __________________^
776 | |                     | (val >> 16 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
777 | |                         << 5 as libc::c_int) as uint32_t,
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
775 ~                 ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr | ((val >> 16 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
776 ~                         << 5 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:776:24
    |
776 |                     | (val >> 16 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 16 as libc::c_int) & 0xffff as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:784:18
    |
784 |                   ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr
    |  __________________^
785 | |                     | (val >> 32 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
786 | |                         << 5 as libc::c_int) as uint32_t,
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
784 ~                 ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr | ((val >> 32 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
785 ~                         << 5 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:785:24
    |
785 |                     | (val >> 32 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 32 as libc::c_int) & 0xffff as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:793:18
    |
793 |                   ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr
    |  __________________^
794 | |                     | (val >> 48 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
795 | |                         << 5 as libc::c_int) as uint32_t,
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
793 ~                 ((read32le(ptr) & 0xffe0001f as libc::c_uint) as Elf64_Addr | ((val >> 48 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
794 ~                         << 5 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:794:24
    |
794 |                     | (val >> 48 as libc::c_int & 0xffff as libc::c_int as Elf64_Addr)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 48 as libc::c_int) & 0xffff as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:819:18
    |
819 |                   ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
    |  __________________^
820 | |                     | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
821 | |                     | (off & 3 as libc::c_int as uint64_t) << 29 as libc::c_int)
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
819 ~                 ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
820 ~                     | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int | ((off & 3 as libc::c_int as uint64_t) << 29 as libc::c_int))
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:819:18
    |
819 |                   ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
    |  __________________^
820 | |                     | (off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
    | |_____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t | ((off & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:829:18
    |
829 |                   ((read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr
    |  __________________^
830 | |                     | (val & 0xfff as libc::c_int as Elf64_Addr) << 10 as libc::c_int)
    | |_____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr | ((val & 0xfff as libc::c_int as Elf64_Addr) << 10 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:838:18
    |
838 |                   ((read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr
    |  __________________^
839 | |                     | (val & 0xffe as libc::c_int as Elf64_Addr) << 9 as libc::c_int)
    | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr | ((val & 0xffe as libc::c_int as Elf64_Addr) << 9 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:847:18
    |
847 |                   ((read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr
    |  __________________^
848 | |                     | (val & 0xffc as libc::c_int as Elf64_Addr) << 8 as libc::c_int)
    | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr | ((val & 0xffc as libc::c_int as Elf64_Addr) << 8 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:856:18
    |
856 |                   ((read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr
    |  __________________^
857 | |                     | (val & 0xff8 as libc::c_int as Elf64_Addr) << 7 as libc::c_int)
    | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr | ((val & 0xff8 as libc::c_int as Elf64_Addr) << 7 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:865:18
    |
865 |                   ((read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr
    |  __________________^
866 | |                     | (val & 0xff0 as libc::c_int as Elf64_Addr) << 6 as libc::c_int)
    | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0xffc003ff as libc::c_uint) as Elf64_Addr | ((val & 0xff0 as libc::c_int as Elf64_Addr) << 6 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:893:19
    |
893 |                   ((0x14000000 as libc::c_int as uint32_t
    |  ___________________^
894 | |                     | ((type_0 == 283 as libc::c_int) as libc::c_int as uint32_t)
895 | |                         << 31 as libc::c_int) as Elf64_Addr
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
893 ~                 ((0x14000000 as libc::c_int as uint32_t | (((type_0 == 283 as libc::c_int) as libc::c_int as uint32_t)
894 ~                         << 31 as libc::c_int)) as Elf64_Addr
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:896:23
    |
896 |                       | val.wrapping_sub(addr) >> 2 as libc::c_int
    |  _______________________^
897 | |                         & 0x3ffffff as libc::c_int as Elf64_Addr) as uint32_t,
    | |________________________________________________________________^ help: consider parenthesizing your expression: `(val.wrapping_sub(addr) >> 2 as libc::c_int) & 0x3ffffff as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:925:18
    |
925 |                   ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
    |  __________________^
926 | |                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
927 | |                     | (off_0 & 3 as libc::c_int as uint64_t) << 29 as libc::c_int)
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
925 ~                 ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
926 ~                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int | ((off_0 & 3 as libc::c_int as uint64_t) << 29 as libc::c_int))
    |

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:925:18
    |
925 |                   ((read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t
    |  __________________^
926 | |                     | (off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int
    | |_______________________________________________________________________________________^ help: consider parenthesizing your expression: `(read32le(ptr) & 0x9f00001f as libc::c_uint) as uint64_t | ((off_0 & 0x1ffffc as libc::c_int as uint64_t) << 3 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm64_link.rs:935:18
    |
935 |                   ((read32le(ptr) & 0xfff803ff as libc::c_uint) as Elf64_Addr
    |  __________________^
936 | |                     | (((*(*s1).got).sh_addr)
937 | |                         .wrapping_add(
938 | |                             (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).got_offset
939 | |                                 as Elf64_Addr,
940 | |                         ) & 0xff8 as libc::c_int as Elf64_Addr) << 7 as libc::c_int)
    | |___________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~                 ((read32le(ptr) & 0xfff803ff as libc::c_uint) as Elf64_Addr | ((((*(*s1).got).sh_addr)
936 +                         .wrapping_add(
937 +                             (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).got_offset
938 +                                 as Elf64_Addr,
939 ~                         ) & 0xff8 as libc::c_int as Elf64_Addr) << 7 as libc::c_int))
    |

warning: type `size_t` should have an upper camel case name
  --> src/arm_link.rs:43:10
   |
43 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/arm_link.rs:44:10
   |
44 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/arm_link.rs:45:10
   |
45 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/arm_link.rs:46:10
   |
46 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/arm_link.rs:47:10
   |
47 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/arm_link.rs:48:10
   |
48 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/arm_link.rs:49:10
   |
49 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/arm_link.rs:50:10
   |
50 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/arm_link.rs:51:10
   |
51 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/arm_link.rs:90:10
   |
90 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/arm_link.rs:92:10
   |
92 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/arm_link.rs:100:10
    |
100 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/arm_link.rs:304:10
    |
304 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/arm_link.rs:305:10
    |
305 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/arm_link.rs:313:10
    |
313 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/arm_link.rs:314:10
    |
314 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/arm_link.rs:454:10
    |
454 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/arm_link.rs:471:10
    |
471 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/arm_link.rs:472:10
    |
472 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/arm_link.rs:473:10
    |
473 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/arm_link.rs:474:10
    |
474 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/arm_link.rs:489:10
    |
489 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:492:13
    |
492 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
493 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
494 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
492 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
493 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:505:14
    |
505 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:509:12
    |
509 |       return read16le(p) as uint32_t
    |  ____________^
510 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
511 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
509 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
510 ~             << 16 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:570:23
    |
570 |                     | off >> 28 as libc::c_int & 0xf as libc::c_int as libc::c_uint,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(off >> 28 as libc::c_int) & 0xf as libc::c_int as libc::c_uint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:575:23
    |
575 |                     | off >> 20 as libc::c_int & 0xff as libc::c_int as libc::c_uint,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(off >> 20 as libc::c_int) & 0xff as libc::c_int as libc::c_uint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:580:23
    |
580 |                     | off >> 12 as libc::c_int & 0xff as libc::c_int as libc::c_uint,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(off >> 12 as libc::c_int) & 0xff as libc::c_int as libc::c_uint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:699:17
    |
699 |             s = hi >> 10 as libc::c_int & 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(hi >> 10 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:700:18
    |
700 |             j1 = lo >> 13 as libc::c_int & 1 as libc::c_int;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(lo >> 13 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:701:18
    |
701 |             j2 = lo >> 11 as libc::c_int & 1 as libc::c_int;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(lo >> 11 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:706:19
    |
706 |               x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
    |  ___________________^
707 | |                 | i2 << 22 as libc::c_int | imm10 << 12 as libc::c_int
708 | |                 | imm11 << 1 as libc::c_int;
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
707 ~                 | i2 << 22 as libc::c_int | imm10 << 12 as libc::c_int | (imm11 << 1 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:706:19
    |
706 |               x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
    |  ___________________^
707 | |                 | i2 << 22 as libc::c_int | imm10 << 12 as libc::c_int
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
707 +                 | i2 << 22 as libc::c_int | (imm10 << 12 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:706:19
    |
706 |               x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
    |  ___________________^
707 | |                 | i2 << 22 as libc::c_int | imm10 << 12 as libc::c_int
    | |_________________________________________^ help: consider parenthesizing your expression: `s << 24 as libc::c_int | i1 << 23 as libc::c_int | (i2 << 22 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:706:19
    |
706 |             x_0 = s << 24 as libc::c_int | i1 << 23 as libc::c_int
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(s << 24 as libc::c_int) | (i1 << 23 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:774:23
    |
774 |                 x_0 = x_0 + 3 as libc::c_int & -(4 as libc::c_int);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 + 3 as libc::c_int) & -(4 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
   --> src/arm_link.rs:776:13
    |
776 | /             if to_thumb == 0 || x_0 >= 0x1000000 as libc::c_int
777 | |                 || x_0 < -(0x1000000 as libc::c_int)
778 | |             {
779 | |                 if to_thumb != 0 || val & 2 as libc::c_int as Elf64_Addr != 0
...   |
799 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
    = note: `#[warn(clippy::collapsible_if)]` on by default
help: collapse nested if block
    |
776 ~             if (to_thumb == 0 || x_0 >= 0x1000000 as libc::c_int || x_0 < -(0x1000000 as libc::c_int)) && (to_thumb != 0 || val & 2 as libc::c_int as Elf64_Addr != 0 || is_call_0 == 0 && to_plt == 0) {
777 +                 tcc_enter_state(s1);
778 +                 (Some(
779 +                     _tcc_error_noabort
780 +                         as unsafe extern "C" fn(
781 +                             *const libc::c_char,
782 +                             ...
783 +                         ) -> libc::c_int,
784 +                 ))
785 +                     .expect(
786 +                         "non-null function pointer",
787 +                     )(
788 +                     b"can't relocate value at %x,%d\0" as *const u8
789 +                         as *const libc::c_char,
790 +                     addr,
791 +                     type_0,
792 +                 );
793 +             }
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:800:17
    |
800 |             s = x_0 >> 24 as libc::c_int & 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 >> 24 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:801:18
    |
801 |             i1 = x_0 >> 23 as libc::c_int & 1 as libc::c_int;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 >> 23 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:802:18
    |
802 |             i2 = x_0 >> 22 as libc::c_int & 1 as libc::c_int;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 >> 22 as libc::c_int) & 1 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:805:21
    |
805 |             imm10 = x_0 >> 12 as libc::c_int & 0x3ff as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 >> 12 as libc::c_int) & 0x3ff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:806:21
    |
806 |             imm11 = x_0 >> 1 as libc::c_int & 0x7ff as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x_0 >> 1 as libc::c_int) & 0x7ff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:808:38
    |
808 |                 as *mut uint16_t) = (hi & 0xf800 as libc::c_int | s << 10 as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `hi & 0xf800 as libc::c_int | (s << 10 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:811:38
    |
811 |                   as *mut uint16_t) = (lo & 0xc000 as libc::c_int | j1 << 13 as libc::c_int
    |  ______________________________________^
812 | |                 | blx_bit | j2 << 11 as libc::c_int | imm11) as uint16_t;
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
811 ~                 as *mut uint16_t) = (lo & 0xc000 as libc::c_int | j1 << 13 as libc::c_int
812 ~                 | blx_bit | (j2 << 11 as libc::c_int) | imm11) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:811:38
    |
811 |                 as *mut uint16_t) = (lo & 0xc000 as libc::c_int | j1 << 13 as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `lo & 0xc000 as libc::c_int | (j1 << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:823:21
    |
823 |             imm4 = (val >> 12 as libc::c_int & 0xf as libc::c_int as Elf64_Addr)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 12 as libc::c_int) & 0xf as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:825:19
    |
825 |             x_1 = imm4 << 16 as libc::c_int | imm12;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm4 << 16 as libc::c_int) | imm12`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:835:43
    |
835 |               let mut addend: libc::c_int = insn >> 4 as libc::c_int
    |  ___________________________________________^
836 | |                 & 0xf000 as libc::c_int | insn & 0xfff as libc::c_int;
    | |_______________________________________^ help: consider parenthesizing your expression: `(insn >> 4 as libc::c_int) & 0xf000 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:843:41
    |
843 |                   as *mut libc::c_int) = ((insn as libc::c_uint
    |  _________________________________________^
844 | |                 & 0xfff0f000 as libc::c_uint) as Elf64_Addr
845 | |                 | (val & 0xf000 as libc::c_int as Elf64_Addr) << 4 as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
843 ~                 as *mut libc::c_int) = ((insn as libc::c_uint
844 +                 & 0xfff0f000 as libc::c_uint) as Elf64_Addr | ((val & 0xf000 as libc::c_int as Elf64_Addr) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:859:21
    |
859 |             imm3 = (val >> 8 as libc::c_int & 0x7 as libc::c_int as Elf64_Addr)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 8 as libc::c_int) & 0x7 as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:861:18
    |
861 |             i = (val >> 11 as libc::c_int & 1 as libc::c_int as Elf64_Addr)
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 11 as libc::c_int) & 1 as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:863:23
    |
863 |             imm4_0 = (val >> 12 as libc::c_int & 0xf as libc::c_int as Elf64_Addr)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(val >> 12 as libc::c_int) & 0xf as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:865:19
    |
865 |               x_2 = imm3 << 28 as libc::c_int | imm8 << 16 as libc::c_int
    |  ___________________^
866 | |                 | i << 10 as libc::c_int | imm4_0;
    | |________________________________________^ help: consider parenthesizing your expression: `imm3 << 28 as libc::c_int | imm8 << 16 as libc::c_int | (i << 10 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:865:19
    |
865 |             x_2 = imm3 << 28 as libc::c_int | imm8 << 16 as libc::c_int
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm3 << 28 as libc::c_int) | (imm8 << 16 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/arm_link.rs:883:17
    |
883 |             if (x_3 ^ x_3 >> 1 as libc::c_int) & 0x40000000 as libc::c_int != 0 {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `x_3 ^ (x_3 >> 1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/c67_gen.rs:46:10
   |
46 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/c67_gen.rs:47:10
   |
47 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__int64_t` should have an upper camel case name
  --> src/c67_gen.rs:48:10
   |
48 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/c67_gen.rs:49:10
   |
49 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/c67_gen.rs:50:10
   |
50 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/c67_gen.rs:51:10
   |
51 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/c67_gen.rs:52:10
   |
52 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/c67_gen.rs:91:10
   |
91 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/c67_gen.rs:93:10
   |
93 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/c67_gen.rs:101:10
    |
101 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/c67_gen.rs:305:10
    |
305 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/c67_gen.rs:306:10
    |
306 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/c67_gen.rs:314:10
    |
314 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/c67_gen.rs:315:10
    |
315 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/c67_gen.rs:455:10
    |
455 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/c67_gen.rs:472:10
    |
472 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:574:14
    |
574 |         ) = (c >> 8 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 8 as libc::c_int) & 0xff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:578:14
    |
578 |         ) = (c >> 16 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 16 as libc::c_int) & 0xff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:582:14
    |
582 |         ) = (c >> 24 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 24 as libc::c_int) & 0xff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:593:13
    |
593 |         n = *ptr >> 7 as libc::c_int & 0xffff as libc::c_int;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*ptr >> 7 as libc::c_int) & 0xffff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:595:17
    |
595 |               |= (*ptr.offset(1 as libc::c_int as isize) >> 7 as libc::c_int
    |  _________________^
596 | |                 & 0xffff as libc::c_int) << 16 as libc::c_int;
    | |_______________________________________^ help: consider parenthesizing your expression: `(*ptr.offset(1 as libc::c_int as isize) >> 7 as libc::c_int) & 0xffff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:688:13
    |
688 | /             C67_map_regn(b) << 23 as libc::c_int
689 | |                 | (a & 0xffff as libc::c_int) << 7 as libc::c_int
690 | |                 | (0xa as libc::c_int) << 2 as libc::c_int
691 | |                 | C67_map_regs(b) << 1 as libc::c_int,
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
688 ~             C67_map_regn(b) << 23 as libc::c_int
689 +                 | (a & 0xffff as libc::c_int) << 7 as libc::c_int
690 ~                 | (0xa as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:688:13
    |
688 | /             C67_map_regn(b) << 23 as libc::c_int
689 | |                 | (a & 0xffff as libc::c_int) << 7 as libc::c_int
690 | |                 | (0xa as libc::c_int) << 2 as libc::c_int
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
688 ~             C67_map_regn(b) << 23 as libc::c_int
689 +                 | (a & 0xffff as libc::c_int) << 7 as libc::c_int | ((0xa as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:688:13
    |
688 | /             C67_map_regn(b) << 23 as libc::c_int
689 | |                 | (a & 0xffff as libc::c_int) << 7 as libc::c_int
    | |_________________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | ((a & 0xffff as libc::c_int) << 7 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:697:13
    |
697 | /             C67_map_regn(b) << 23 as libc::c_int
698 | |                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int
699 | |                 | (0x1a as libc::c_int) << 2 as libc::c_int
700 | |                 | C67_map_regs(b) << 1 as libc::c_int,
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
697 ~             C67_map_regn(b) << 23 as libc::c_int
698 +                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int
699 ~                 | (0x1a as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:697:13
    |
697 | /             C67_map_regn(b) << 23 as libc::c_int
698 | |                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int
699 | |                 | (0x1a as libc::c_int) << 2 as libc::c_int
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
697 ~             C67_map_regn(b) << 23 as libc::c_int
698 +                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int | ((0x1a as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:697:13
    |
697 | /             C67_map_regn(b) << 23 as libc::c_int
698 | |                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int
    | |______________________________________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | ((a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:698:20
    |
698 |                 | (a >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(a >> 16 as libc::c_int) & 0xffff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
...   |
714 | |                 | C67_map_regs(a) << 1 as libc::c_int
715 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int
710 +                 | (0 as libc::c_int) << 8 as libc::c_int
711 +                 | (1 as libc::c_int) << 7 as libc::c_int
712 +                 | (7 as libc::c_int) << 4 as libc::c_int
713 +                 | (1 as libc::c_int) << 2 as libc::c_int
714 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
...   |
713 | |                 | (1 as libc::c_int) << 2 as libc::c_int
714 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int
710 +                 | (0 as libc::c_int) << 8 as libc::c_int
711 +                 | (1 as libc::c_int) << 7 as libc::c_int
712 +                 | (7 as libc::c_int) << 4 as libc::c_int
713 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
...   |
712 | |                 | (7 as libc::c_int) << 4 as libc::c_int
713 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int
710 +                 | (0 as libc::c_int) << 8 as libc::c_int
711 +                 | (1 as libc::c_int) << 7 as libc::c_int
712 +                 | (7 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
710 | |                 | (0 as libc::c_int) << 8 as libc::c_int
711 | |                 | (1 as libc::c_int) << 7 as libc::c_int
712 | |                 | (7 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int
710 +                 | (0 as libc::c_int) << 8 as libc::c_int
711 +                 | (1 as libc::c_int) << 7 as libc::c_int | ((7 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
710 | |                 | (0 as libc::c_int) << 8 as libc::c_int
711 | |                 | (1 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int
710 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((1 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
710 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int
709 +                 | (0xa as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
709 | |                 | (0xa as libc::c_int) << 9 as libc::c_int
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int
708 +                 | (2 as libc::c_int) << 13 as libc::c_int | ((0xa as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
708 | |                 | (2 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
706 ~             C67_map_regn(a) << 23 as libc::c_int
707 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:706:13
    |
706 | /             C67_map_regn(a) << 23 as libc::c_int
707 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
729 | |                 | C67_map_regs(a) << 1 as libc::c_int
730 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int
725 +                 | (0 as libc::c_int) << 8 as libc::c_int
726 +                 | (0 as libc::c_int) << 7 as libc::c_int
727 +                 | (3 as libc::c_int) << 4 as libc::c_int
728 +                 | (1 as libc::c_int) << 2 as libc::c_int
729 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
728 | |                 | (1 as libc::c_int) << 2 as libc::c_int
729 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int
725 +                 | (0 as libc::c_int) << 8 as libc::c_int
726 +                 | (0 as libc::c_int) << 7 as libc::c_int
727 +                 | (3 as libc::c_int) << 4 as libc::c_int
728 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
727 | |                 | (3 as libc::c_int) << 4 as libc::c_int
728 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int
725 +                 | (0 as libc::c_int) << 8 as libc::c_int
726 +                 | (0 as libc::c_int) << 7 as libc::c_int
727 +                 | (3 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
725 | |                 | (0 as libc::c_int) << 8 as libc::c_int
726 | |                 | (0 as libc::c_int) << 7 as libc::c_int
727 | |                 | (3 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int
725 +                 | (0 as libc::c_int) << 8 as libc::c_int
726 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((3 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
725 | |                 | (0 as libc::c_int) << 8 as libc::c_int
726 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int
725 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
725 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int
724 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
724 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int
723 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
723 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
721 ~             C67_map_regn(a) << 23 as libc::c_int
722 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:721:13
    |
721 | /             C67_map_regn(a) << 23 as libc::c_int
722 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
744 | |                 | C67_map_regs(a) << 1 as libc::c_int
745 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int
740 +                 | (0 as libc::c_int) << 8 as libc::c_int
741 +                 | (0 as libc::c_int) << 7 as libc::c_int
742 +                 | (5 as libc::c_int) << 4 as libc::c_int
743 +                 | (1 as libc::c_int) << 2 as libc::c_int
744 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
743 | |                 | (1 as libc::c_int) << 2 as libc::c_int
744 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int
740 +                 | (0 as libc::c_int) << 8 as libc::c_int
741 +                 | (0 as libc::c_int) << 7 as libc::c_int
742 +                 | (5 as libc::c_int) << 4 as libc::c_int
743 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
742 | |                 | (5 as libc::c_int) << 4 as libc::c_int
743 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int
740 +                 | (0 as libc::c_int) << 8 as libc::c_int
741 +                 | (0 as libc::c_int) << 7 as libc::c_int
742 +                 | (5 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
740 | |                 | (0 as libc::c_int) << 8 as libc::c_int
741 | |                 | (0 as libc::c_int) << 7 as libc::c_int
742 | |                 | (5 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int
740 +                 | (0 as libc::c_int) << 8 as libc::c_int
741 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((5 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
740 | |                 | (0 as libc::c_int) << 8 as libc::c_int
741 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int
740 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
740 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int
739 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
739 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int
738 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
738 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
736 ~             C67_map_regn(a) << 23 as libc::c_int
737 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:736:13
    |
736 | /             C67_map_regn(a) << 23 as libc::c_int
737 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
759 | |                 | C67_map_regs(a) << 1 as libc::c_int
760 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int
755 +                 | (0 as libc::c_int) << 8 as libc::c_int
756 +                 | (0 as libc::c_int) << 7 as libc::c_int
757 +                 | (3 as libc::c_int) << 4 as libc::c_int
758 +                 | (1 as libc::c_int) << 2 as libc::c_int
759 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
758 | |                 | (1 as libc::c_int) << 2 as libc::c_int
759 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int
755 +                 | (0 as libc::c_int) << 8 as libc::c_int
756 +                 | (0 as libc::c_int) << 7 as libc::c_int
757 +                 | (3 as libc::c_int) << 4 as libc::c_int
758 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
757 | |                 | (3 as libc::c_int) << 4 as libc::c_int
758 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int
755 +                 | (0 as libc::c_int) << 8 as libc::c_int
756 +                 | (0 as libc::c_int) << 7 as libc::c_int
757 +                 | (3 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
755 | |                 | (0 as libc::c_int) << 8 as libc::c_int
756 | |                 | (0 as libc::c_int) << 7 as libc::c_int
757 | |                 | (3 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int
755 +                 | (0 as libc::c_int) << 8 as libc::c_int
756 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((3 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
755 | |                 | (0 as libc::c_int) << 8 as libc::c_int
756 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int
755 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
755 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int
754 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
754 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int
753 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
753 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
751 ~             C67_map_regn(a) << 23 as libc::c_int
752 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:751:13
    |
751 | /             C67_map_regn(a) << 23 as libc::c_int
752 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
774 | |                 | C67_map_regs(a) << 1 as libc::c_int
775 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int
770 +                 | (0 as libc::c_int) << 8 as libc::c_int
771 +                 | (0 as libc::c_int) << 7 as libc::c_int
772 +                 | (5 as libc::c_int) << 4 as libc::c_int
773 +                 | (1 as libc::c_int) << 2 as libc::c_int
774 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
773 | |                 | (1 as libc::c_int) << 2 as libc::c_int
774 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int
770 +                 | (0 as libc::c_int) << 8 as libc::c_int
771 +                 | (0 as libc::c_int) << 7 as libc::c_int
772 +                 | (5 as libc::c_int) << 4 as libc::c_int
773 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
772 | |                 | (5 as libc::c_int) << 4 as libc::c_int
773 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int
770 +                 | (0 as libc::c_int) << 8 as libc::c_int
771 +                 | (0 as libc::c_int) << 7 as libc::c_int
772 +                 | (5 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
770 | |                 | (0 as libc::c_int) << 8 as libc::c_int
771 | |                 | (0 as libc::c_int) << 7 as libc::c_int
772 | |                 | (5 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int
770 +                 | (0 as libc::c_int) << 8 as libc::c_int
771 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((5 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
770 | |                 | (0 as libc::c_int) << 8 as libc::c_int
771 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int
770 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
770 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int
769 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
769 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int
768 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
768 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
766 ~             C67_map_regn(a) << 23 as libc::c_int
767 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:766:13
    |
766 | /             C67_map_regn(a) << 23 as libc::c_int
767 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
789 | |                 | C67_map_regs(a) << 1 as libc::c_int
790 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int
785 +                 | (0 as libc::c_int) << 8 as libc::c_int
786 +                 | (0 as libc::c_int) << 7 as libc::c_int
787 +                 | (7 as libc::c_int) << 4 as libc::c_int
788 +                 | (1 as libc::c_int) << 2 as libc::c_int
789 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
788 | |                 | (1 as libc::c_int) << 2 as libc::c_int
789 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int
785 +                 | (0 as libc::c_int) << 8 as libc::c_int
786 +                 | (0 as libc::c_int) << 7 as libc::c_int
787 +                 | (7 as libc::c_int) << 4 as libc::c_int
788 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
787 | |                 | (7 as libc::c_int) << 4 as libc::c_int
788 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int
785 +                 | (0 as libc::c_int) << 8 as libc::c_int
786 +                 | (0 as libc::c_int) << 7 as libc::c_int
787 +                 | (7 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
785 | |                 | (0 as libc::c_int) << 8 as libc::c_int
786 | |                 | (0 as libc::c_int) << 7 as libc::c_int
787 | |                 | (7 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int
785 +                 | (0 as libc::c_int) << 8 as libc::c_int
786 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((7 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
785 | |                 | (0 as libc::c_int) << 8 as libc::c_int
786 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int
785 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
785 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int
784 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
784 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int
783 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
783 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
781 ~             C67_map_regn(a) << 23 as libc::c_int
782 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:781:13
    |
781 | /             C67_map_regn(a) << 23 as libc::c_int
782 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
803 | |                 | C67_map_regs(a) << 1 as libc::c_int
804 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int
799 +                 | (0 as libc::c_int) << 8 as libc::c_int
800 +                 | C67_map_regs(b) << 7 as libc::c_int
801 +                 | (7 as libc::c_int) << 4 as libc::c_int
802 +                 | (1 as libc::c_int) << 2 as libc::c_int
803 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
802 | |                 | (1 as libc::c_int) << 2 as libc::c_int
803 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int
799 +                 | (0 as libc::c_int) << 8 as libc::c_int
800 +                 | C67_map_regs(b) << 7 as libc::c_int
801 +                 | (7 as libc::c_int) << 4 as libc::c_int
802 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
800 | |                 | C67_map_regs(b) << 7 as libc::c_int
801 | |                 | (7 as libc::c_int) << 4 as libc::c_int
802 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int
799 +                 | (0 as libc::c_int) << 8 as libc::c_int
800 +                 | C67_map_regs(b) << 7 as libc::c_int
801 +                 | (7 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
800 | |                 | C67_map_regs(b) << 7 as libc::c_int
801 | |                 | (7 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int
799 +                 | (0 as libc::c_int) << 8 as libc::c_int
800 +                 | C67_map_regs(b) << 7 as libc::c_int | ((7 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
800 | |                 | C67_map_regs(b) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int
799 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(b) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
799 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int
798 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
798 | |                 | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
796 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
797 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:796:13
    |
796 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
817 | |                 | C67_map_regs(a) << 1 as libc::c_int
818 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int
813 +                 | (0 as libc::c_int) << 8 as libc::c_int
814 +                 | C67_map_regs(b) << 7 as libc::c_int
815 +                 | (5 as libc::c_int) << 4 as libc::c_int
816 +                 | (1 as libc::c_int) << 2 as libc::c_int
817 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
816 | |                 | (1 as libc::c_int) << 2 as libc::c_int
817 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int
813 +                 | (0 as libc::c_int) << 8 as libc::c_int
814 +                 | C67_map_regs(b) << 7 as libc::c_int
815 +                 | (5 as libc::c_int) << 4 as libc::c_int
816 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
814 | |                 | C67_map_regs(b) << 7 as libc::c_int
815 | |                 | (5 as libc::c_int) << 4 as libc::c_int
816 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int
813 +                 | (0 as libc::c_int) << 8 as libc::c_int
814 +                 | C67_map_regs(b) << 7 as libc::c_int
815 +                 | (5 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
814 | |                 | C67_map_regs(b) << 7 as libc::c_int
815 | |                 | (5 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int
813 +                 | (0 as libc::c_int) << 8 as libc::c_int
814 +                 | C67_map_regs(b) << 7 as libc::c_int | ((5 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
814 | |                 | C67_map_regs(b) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int
813 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(b) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
813 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int
812 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
812 | |                 | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
810 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
811 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:810:13
    |
810 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
831 | |                 | C67_map_regs(a) << 1 as libc::c_int
832 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int
827 +                 | (0 as libc::c_int) << 8 as libc::c_int
828 +                 | C67_map_regs(b) << 7 as libc::c_int
829 +                 | (3 as libc::c_int) << 4 as libc::c_int
830 +                 | (1 as libc::c_int) << 2 as libc::c_int
831 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
830 | |                 | (1 as libc::c_int) << 2 as libc::c_int
831 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int
827 +                 | (0 as libc::c_int) << 8 as libc::c_int
828 +                 | C67_map_regs(b) << 7 as libc::c_int
829 +                 | (3 as libc::c_int) << 4 as libc::c_int
830 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
828 | |                 | C67_map_regs(b) << 7 as libc::c_int
829 | |                 | (3 as libc::c_int) << 4 as libc::c_int
830 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int
827 +                 | (0 as libc::c_int) << 8 as libc::c_int
828 +                 | C67_map_regs(b) << 7 as libc::c_int
829 +                 | (3 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
828 | |                 | C67_map_regs(b) << 7 as libc::c_int
829 | |                 | (3 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int
827 +                 | (0 as libc::c_int) << 8 as libc::c_int
828 +                 | C67_map_regs(b) << 7 as libc::c_int | ((3 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
828 | |                 | C67_map_regs(b) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int
827 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(b) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
827 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int
826 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
826 | |                 | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
824 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
825 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:824:13
    |
824 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
850 | |                 | C67_map_regs(b) << 7 as libc::c_int
...   |
853 | |                 | C67_map_regs(a) << 1 as libc::c_int
854 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 +                 | (0 as libc::c_int) << 8 as libc::c_int
850 +                 | C67_map_regs(b) << 7 as libc::c_int
851 +                 | (7 as libc::c_int) << 4 as libc::c_int
852 +                 | (1 as libc::c_int) << 2 as libc::c_int
853 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
850 | |                 | C67_map_regs(b) << 7 as libc::c_int
851 | |                 | (7 as libc::c_int) << 4 as libc::c_int
852 | |                 | (1 as libc::c_int) << 2 as libc::c_int
853 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 +                 | (0 as libc::c_int) << 8 as libc::c_int
850 +                 | C67_map_regs(b) << 7 as libc::c_int
851 +                 | (7 as libc::c_int) << 4 as libc::c_int
852 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
850 | |                 | C67_map_regs(b) << 7 as libc::c_int
851 | |                 | (7 as libc::c_int) << 4 as libc::c_int
852 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 +                 | (0 as libc::c_int) << 8 as libc::c_int
850 +                 | C67_map_regs(b) << 7 as libc::c_int
851 +                 | (7 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
850 | |                 | C67_map_regs(b) << 7 as libc::c_int
851 | |                 | (7 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 +                 | (0 as libc::c_int) << 8 as libc::c_int
850 +                 | C67_map_regs(b) << 7 as libc::c_int | ((7 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
850 | |                 | C67_map_regs(b) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(b) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
849 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
847 ~             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 +                 | c << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 | /             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
848 | |                 | c << 13 as libc::c_int | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (c << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:847:13
    |
847 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
868 | |                 | C67_map_regs(a) << 1 as libc::c_int
869 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int
864 +                 | (0 as libc::c_int) << 8 as libc::c_int
865 +                 | (1 as libc::c_int) << 7 as libc::c_int
866 +                 | (6 as libc::c_int) << 4 as libc::c_int
867 +                 | (1 as libc::c_int) << 2 as libc::c_int
868 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
867 | |                 | (1 as libc::c_int) << 2 as libc::c_int
868 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int
864 +                 | (0 as libc::c_int) << 8 as libc::c_int
865 +                 | (1 as libc::c_int) << 7 as libc::c_int
866 +                 | (6 as libc::c_int) << 4 as libc::c_int
867 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
866 | |                 | (6 as libc::c_int) << 4 as libc::c_int
867 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int
864 +                 | (0 as libc::c_int) << 8 as libc::c_int
865 +                 | (1 as libc::c_int) << 7 as libc::c_int
866 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
864 | |                 | (0 as libc::c_int) << 8 as libc::c_int
865 | |                 | (1 as libc::c_int) << 7 as libc::c_int
866 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int
864 +                 | (0 as libc::c_int) << 8 as libc::c_int
865 +                 | (1 as libc::c_int) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
864 | |                 | (0 as libc::c_int) << 8 as libc::c_int
865 | |                 | (1 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int
864 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((1 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
864 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int
863 +                 | (9 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
863 | |                 | (9 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int
862 +                 | (2 as libc::c_int) << 13 as libc::c_int | ((9 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
862 | |                 | (2 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
860 ~             C67_map_regn(a) << 23 as libc::c_int
861 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:860:13
    |
860 | /             C67_map_regn(a) << 23 as libc::c_int
861 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
883 | |                 | C67_map_regs(a) << 1 as libc::c_int
884 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int
879 +                 | (1 as libc::c_int) << 8 as libc::c_int
880 +                 | (1 as libc::c_int) << 7 as libc::c_int
881 +                 | (6 as libc::c_int) << 4 as libc::c_int
882 +                 | (1 as libc::c_int) << 2 as libc::c_int
883 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
882 | |                 | (1 as libc::c_int) << 2 as libc::c_int
883 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int
879 +                 | (1 as libc::c_int) << 8 as libc::c_int
880 +                 | (1 as libc::c_int) << 7 as libc::c_int
881 +                 | (6 as libc::c_int) << 4 as libc::c_int
882 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
...   |
881 | |                 | (6 as libc::c_int) << 4 as libc::c_int
882 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int
879 +                 | (1 as libc::c_int) << 8 as libc::c_int
880 +                 | (1 as libc::c_int) << 7 as libc::c_int
881 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
879 | |                 | (1 as libc::c_int) << 8 as libc::c_int
880 | |                 | (1 as libc::c_int) << 7 as libc::c_int
881 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int
879 +                 | (1 as libc::c_int) << 8 as libc::c_int
880 +                 | (1 as libc::c_int) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
879 | |                 | (1 as libc::c_int) << 8 as libc::c_int
880 | |                 | (1 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int
879 +                 | (1 as libc::c_int) << 8 as libc::c_int | ((1 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
879 | |                 | (1 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int
878 +                 | (9 as libc::c_int) << 9 as libc::c_int | ((1 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
878 | |                 | (9 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int
877 +                 | (1 as libc::c_int) << 13 as libc::c_int | ((9 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
877 | |                 | (1 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
875 ~             C67_map_regn(a) << 23 as libc::c_int
876 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:875:13
    |
875 | /             C67_map_regn(a) << 23 as libc::c_int
876 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
898 | |                 | C67_map_regs(a) << 1 as libc::c_int
899 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int
894 +                 | (0 as libc::c_int) << 8 as libc::c_int
895 +                 | (0 as libc::c_int) << 7 as libc::c_int
896 +                 | (6 as libc::c_int) << 4 as libc::c_int
897 +                 | (1 as libc::c_int) << 2 as libc::c_int
898 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
897 | |                 | (1 as libc::c_int) << 2 as libc::c_int
898 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int
894 +                 | (0 as libc::c_int) << 8 as libc::c_int
895 +                 | (0 as libc::c_int) << 7 as libc::c_int
896 +                 | (6 as libc::c_int) << 4 as libc::c_int
897 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
896 | |                 | (6 as libc::c_int) << 4 as libc::c_int
897 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int
894 +                 | (0 as libc::c_int) << 8 as libc::c_int
895 +                 | (0 as libc::c_int) << 7 as libc::c_int
896 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
894 | |                 | (0 as libc::c_int) << 8 as libc::c_int
895 | |                 | (0 as libc::c_int) << 7 as libc::c_int
896 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int
894 +                 | (0 as libc::c_int) << 8 as libc::c_int
895 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
894 | |                 | (0 as libc::c_int) << 8 as libc::c_int
895 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int
894 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
894 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int
893 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
893 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int
892 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
892 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
890 ~             C67_map_regn(a) << 23 as libc::c_int
891 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:890:13
    |
890 | /             C67_map_regn(a) << 23 as libc::c_int
891 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
913 | |                 | C67_map_regs(a) << 1 as libc::c_int
914 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int
909 +                 | (1 as libc::c_int) << 8 as libc::c_int
910 +                 | (0 as libc::c_int) << 7 as libc::c_int
911 +                 | (6 as libc::c_int) << 4 as libc::c_int
912 +                 | (1 as libc::c_int) << 2 as libc::c_int
913 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
912 | |                 | (1 as libc::c_int) << 2 as libc::c_int
913 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int
909 +                 | (1 as libc::c_int) << 8 as libc::c_int
910 +                 | (0 as libc::c_int) << 7 as libc::c_int
911 +                 | (6 as libc::c_int) << 4 as libc::c_int
912 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
911 | |                 | (6 as libc::c_int) << 4 as libc::c_int
912 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int
909 +                 | (1 as libc::c_int) << 8 as libc::c_int
910 +                 | (0 as libc::c_int) << 7 as libc::c_int
911 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
909 | |                 | (1 as libc::c_int) << 8 as libc::c_int
910 | |                 | (0 as libc::c_int) << 7 as libc::c_int
911 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int
909 +                 | (1 as libc::c_int) << 8 as libc::c_int
910 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
909 | |                 | (1 as libc::c_int) << 8 as libc::c_int
910 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int
909 +                 | (1 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
909 | |                 | (1 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int
908 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((1 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
908 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int
907 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
907 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
905 ~             C67_map_regn(a) << 23 as libc::c_int
906 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:905:13
    |
905 | /             C67_map_regn(a) << 23 as libc::c_int
906 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
928 | |                 | C67_map_regs(a) << 1 as libc::c_int
929 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int
924 +                 | (0 as libc::c_int) << 8 as libc::c_int
925 +                 | (0 as libc::c_int) << 7 as libc::c_int
926 +                 | (4 as libc::c_int) << 4 as libc::c_int
927 +                 | (1 as libc::c_int) << 2 as libc::c_int
928 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
927 | |                 | (1 as libc::c_int) << 2 as libc::c_int
928 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int
924 +                 | (0 as libc::c_int) << 8 as libc::c_int
925 +                 | (0 as libc::c_int) << 7 as libc::c_int
926 +                 | (4 as libc::c_int) << 4 as libc::c_int
927 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
926 | |                 | (4 as libc::c_int) << 4 as libc::c_int
927 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int
924 +                 | (0 as libc::c_int) << 8 as libc::c_int
925 +                 | (0 as libc::c_int) << 7 as libc::c_int
926 +                 | (4 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
924 | |                 | (0 as libc::c_int) << 8 as libc::c_int
925 | |                 | (0 as libc::c_int) << 7 as libc::c_int
926 | |                 | (4 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int
924 +                 | (0 as libc::c_int) << 8 as libc::c_int
925 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((4 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
924 | |                 | (0 as libc::c_int) << 8 as libc::c_int
925 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int
924 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
924 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int
923 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
923 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int
922 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
922 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
920 ~             C67_map_regn(a) << 23 as libc::c_int
921 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:920:13
    |
920 | /             C67_map_regn(a) << 23 as libc::c_int
921 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
943 | |                 | C67_map_regs(a) << 1 as libc::c_int
944 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int
939 +                 | (0 as libc::c_int) << 8 as libc::c_int
940 +                 | (0 as libc::c_int) << 7 as libc::c_int
941 +                 | (2 as libc::c_int) << 4 as libc::c_int
942 +                 | (1 as libc::c_int) << 2 as libc::c_int
943 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
942 | |                 | (1 as libc::c_int) << 2 as libc::c_int
943 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int
939 +                 | (0 as libc::c_int) << 8 as libc::c_int
940 +                 | (0 as libc::c_int) << 7 as libc::c_int
941 +                 | (2 as libc::c_int) << 4 as libc::c_int
942 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
941 | |                 | (2 as libc::c_int) << 4 as libc::c_int
942 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int
939 +                 | (0 as libc::c_int) << 8 as libc::c_int
940 +                 | (0 as libc::c_int) << 7 as libc::c_int
941 +                 | (2 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
939 | |                 | (0 as libc::c_int) << 8 as libc::c_int
940 | |                 | (0 as libc::c_int) << 7 as libc::c_int
941 | |                 | (2 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int
939 +                 | (0 as libc::c_int) << 8 as libc::c_int
940 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((2 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
939 | |                 | (0 as libc::c_int) << 8 as libc::c_int
940 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int
939 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
939 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int
938 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
938 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int
937 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
937 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
935 ~             C67_map_regn(a) << 23 as libc::c_int
936 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:935:13
    |
935 | /             C67_map_regn(a) << 23 as libc::c_int
936 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
958 | |                 | C67_map_regs(a) << 1 as libc::c_int
959 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int
954 +                 | (0 as libc::c_int) << 8 as libc::c_int
955 +                 | (0 as libc::c_int) << 7 as libc::c_int
956 +                 | (0 as libc::c_int) << 4 as libc::c_int
957 +                 | (1 as libc::c_int) << 2 as libc::c_int
958 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
957 | |                 | (1 as libc::c_int) << 2 as libc::c_int
958 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int
954 +                 | (0 as libc::c_int) << 8 as libc::c_int
955 +                 | (0 as libc::c_int) << 7 as libc::c_int
956 +                 | (0 as libc::c_int) << 4 as libc::c_int
957 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
956 | |                 | (0 as libc::c_int) << 4 as libc::c_int
957 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int
954 +                 | (0 as libc::c_int) << 8 as libc::c_int
955 +                 | (0 as libc::c_int) << 7 as libc::c_int
956 +                 | (0 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
954 | |                 | (0 as libc::c_int) << 8 as libc::c_int
955 | |                 | (0 as libc::c_int) << 7 as libc::c_int
956 | |                 | (0 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int
954 +                 | (0 as libc::c_int) << 8 as libc::c_int
955 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((0 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
954 | |                 | (0 as libc::c_int) << 8 as libc::c_int
955 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int
954 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
954 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int
953 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
953 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int
952 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
952 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
950 ~             C67_map_regn(a) << 23 as libc::c_int
951 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:950:13
    |
950 | /             C67_map_regn(a) << 23 as libc::c_int
951 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
973 | |                 | C67_map_regs(a) << 1 as libc::c_int
974 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int
969 +                 | (0 as libc::c_int) << 8 as libc::c_int
970 +                 | (0 as libc::c_int) << 7 as libc::c_int
971 +                 | (1 as libc::c_int) << 4 as libc::c_int
972 +                 | (1 as libc::c_int) << 2 as libc::c_int
973 ~                 | C67_map_regs(a) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
972 | |                 | (1 as libc::c_int) << 2 as libc::c_int
973 | |                 | C67_map_regs(a) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int
969 +                 | (0 as libc::c_int) << 8 as libc::c_int
970 +                 | (0 as libc::c_int) << 7 as libc::c_int
971 +                 | (1 as libc::c_int) << 4 as libc::c_int
972 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(a) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
...   |
971 | |                 | (1 as libc::c_int) << 4 as libc::c_int
972 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int
969 +                 | (0 as libc::c_int) << 8 as libc::c_int
970 +                 | (0 as libc::c_int) << 7 as libc::c_int
971 +                 | (1 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
969 | |                 | (0 as libc::c_int) << 8 as libc::c_int
970 | |                 | (0 as libc::c_int) << 7 as libc::c_int
971 | |                 | (1 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int
969 +                 | (0 as libc::c_int) << 8 as libc::c_int
970 +                 | (0 as libc::c_int) << 7 as libc::c_int | ((1 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
969 | |                 | (0 as libc::c_int) << 8 as libc::c_int
970 | |                 | (0 as libc::c_int) << 7 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int
969 +                 | (0 as libc::c_int) << 8 as libc::c_int | ((0 as libc::c_int) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
969 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int
968 +                 | (5 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
968 | |                 | (5 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int
967 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((5 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
967 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
965 ~             C67_map_regn(a) << 23 as libc::c_int
966 +                 | (15 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:965:13
    |
965 | /             C67_map_regn(a) << 23 as libc::c_int
966 | |                 | (15 as libc::c_int) << 18 as libc::c_int
    | |__________________________________________________________^ help: consider parenthesizing your expression: `(C67_map_regn(a) << 23 as libc::c_int) | ((15 as libc::c_int) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
987 | |                 | C67_map_regs(b) << 1 as libc::c_int
988 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int
983 +                 | (0 as libc::c_int) << 8 as libc::c_int
984 +                 | C67_map_regs(a) << 7 as libc::c_int
985 +                 | (6 as libc::c_int) << 4 as libc::c_int
986 +                 | (1 as libc::c_int) << 2 as libc::c_int
987 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...   |
986 | |                 | (1 as libc::c_int) << 2 as libc::c_int
987 | |                 | C67_map_regs(b) << 1 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int
983 +                 | (0 as libc::c_int) << 8 as libc::c_int
984 +                 | C67_map_regs(a) << 7 as libc::c_int
985 +                 | (6 as libc::c_int) << 4 as libc::c_int
986 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
984 | |                 | C67_map_regs(a) << 7 as libc::c_int
985 | |                 | (6 as libc::c_int) << 4 as libc::c_int
986 | |                 | (1 as libc::c_int) << 2 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int
983 +                 | (0 as libc::c_int) << 8 as libc::c_int
984 +                 | C67_map_regs(a) << 7 as libc::c_int
985 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
984 | |                 | C67_map_regs(a) << 7 as libc::c_int
985 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int
983 +                 | (0 as libc::c_int) << 8 as libc::c_int
984 +                 | C67_map_regs(a) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
984 | |                 | C67_map_regs(a) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int
983 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
983 | |                 | (0 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int
982 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
982 | |                 | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
980 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
981 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:980:13
    |
980 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:994:13
     |
994  | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  | |                 | (0 as libc::c_int) << 13 as libc::c_int
996  | |                 | (1 as libc::c_int) << 9 as libc::c_int
997  | |                 | (1 as libc::c_int) << 8 as libc::c_int
...    |
1001 | |                 | C67_map_regs(b) << 1 as libc::c_int
1002 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
994  ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  +                 | (0 as libc::c_int) << 13 as libc::c_int
996  +                 | (1 as libc::c_int) << 9 as libc::c_int
997  +                 | (1 as libc::c_int) << 8 as libc::c_int
998  +                 | C67_map_regs(a) << 7 as libc::c_int
999  +                 | (6 as libc::c_int) << 4 as libc::c_int
1000 +                 | (1 as libc::c_int) << 2 as libc::c_int
1001 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:994:13
     |
994  | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  | |                 | (0 as libc::c_int) << 13 as libc::c_int
996  | |                 | (1 as libc::c_int) << 9 as libc::c_int
997  | |                 | (1 as libc::c_int) << 8 as libc::c_int
...    |
1000 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1001 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
994  ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  +                 | (0 as libc::c_int) << 13 as libc::c_int
996  +                 | (1 as libc::c_int) << 9 as libc::c_int
997  +                 | (1 as libc::c_int) << 8 as libc::c_int
998  +                 | C67_map_regs(a) << 7 as libc::c_int
999  +                 | (6 as libc::c_int) << 4 as libc::c_int
1000 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:994:13
     |
994  | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  | |                 | (0 as libc::c_int) << 13 as libc::c_int
996  | |                 | (1 as libc::c_int) << 9 as libc::c_int
997  | |                 | (1 as libc::c_int) << 8 as libc::c_int
998  | |                 | C67_map_regs(a) << 7 as libc::c_int
999  | |                 | (6 as libc::c_int) << 4 as libc::c_int
1000 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
994  ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995  +                 | (0 as libc::c_int) << 13 as libc::c_int
996  +                 | (1 as libc::c_int) << 9 as libc::c_int
997  +                 | (1 as libc::c_int) << 8 as libc::c_int
998  +                 | C67_map_regs(a) << 7 as libc::c_int
999  +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 | |                 | (0 as libc::c_int) << 13 as libc::c_int
996 | |                 | (1 as libc::c_int) << 9 as libc::c_int
997 | |                 | (1 as libc::c_int) << 8 as libc::c_int
998 | |                 | C67_map_regs(a) << 7 as libc::c_int
999 | |                 | (6 as libc::c_int) << 4 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
994 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 +                 | (0 as libc::c_int) << 13 as libc::c_int
996 +                 | (1 as libc::c_int) << 9 as libc::c_int
997 +                 | (1 as libc::c_int) << 8 as libc::c_int
998 +                 | C67_map_regs(a) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 | |                 | (0 as libc::c_int) << 13 as libc::c_int
996 | |                 | (1 as libc::c_int) << 9 as libc::c_int
997 | |                 | (1 as libc::c_int) << 8 as libc::c_int
998 | |                 | C67_map_regs(a) << 7 as libc::c_int
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
994 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 +                 | (0 as libc::c_int) << 13 as libc::c_int
996 +                 | (1 as libc::c_int) << 9 as libc::c_int
997 +                 | (1 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 | |                 | (0 as libc::c_int) << 13 as libc::c_int
996 | |                 | (1 as libc::c_int) << 9 as libc::c_int
997 | |                 | (1 as libc::c_int) << 8 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
994 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 +                 | (0 as libc::c_int) << 13 as libc::c_int
996 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((1 as libc::c_int) << 8 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 | |                 | (0 as libc::c_int) << 13 as libc::c_int
996 | |                 | (1 as libc::c_int) << 9 as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
994 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
995 | |                 | (0 as libc::c_int) << 13 as libc::c_int
    | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_gen.rs:994:13
    |
994 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1015 | |                 | C67_map_regs(b) << 1 as libc::c_int
1016 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int
1011 +                 | (0 as libc::c_int) << 8 as libc::c_int
1012 +                 | C67_map_regs(a) << 7 as libc::c_int
1013 +                 | (4 as libc::c_int) << 4 as libc::c_int
1014 +                 | (1 as libc::c_int) << 2 as libc::c_int
1015 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1014 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1015 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int
1011 +                 | (0 as libc::c_int) << 8 as libc::c_int
1012 +                 | C67_map_regs(a) << 7 as libc::c_int
1013 +                 | (4 as libc::c_int) << 4 as libc::c_int
1014 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1012 | |                 | C67_map_regs(a) << 7 as libc::c_int
1013 | |                 | (4 as libc::c_int) << 4 as libc::c_int
1014 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int
1011 +                 | (0 as libc::c_int) << 8 as libc::c_int
1012 +                 | C67_map_regs(a) << 7 as libc::c_int
1013 +                 | (4 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1012 | |                 | C67_map_regs(a) << 7 as libc::c_int
1013 | |                 | (4 as libc::c_int) << 4 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int
1011 +                 | (0 as libc::c_int) << 8 as libc::c_int
1012 +                 | C67_map_regs(a) << 7 as libc::c_int | ((4 as libc::c_int) << 4 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1012 | |                 | C67_map_regs(a) << 7 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int
1011 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1011 | |                 | (0 as libc::c_int) << 8 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int
1010 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1010 | |                 | (1 as libc::c_int) << 9 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1008 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1009 | |                 | (0 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1008:13
     |
1008 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1029 | |                 | C67_map_regs(b) << 1 as libc::c_int
1030 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int
1025 +                 | (0 as libc::c_int) << 8 as libc::c_int
1026 +                 | C67_map_regs(a) << 7 as libc::c_int
1027 +                 | (2 as libc::c_int) << 4 as libc::c_int
1028 +                 | (1 as libc::c_int) << 2 as libc::c_int
1029 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1028 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1029 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int
1025 +                 | (0 as libc::c_int) << 8 as libc::c_int
1026 +                 | C67_map_regs(a) << 7 as libc::c_int
1027 +                 | (2 as libc::c_int) << 4 as libc::c_int
1028 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1026 | |                 | C67_map_regs(a) << 7 as libc::c_int
1027 | |                 | (2 as libc::c_int) << 4 as libc::c_int
1028 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int
1025 +                 | (0 as libc::c_int) << 8 as libc::c_int
1026 +                 | C67_map_regs(a) << 7 as libc::c_int
1027 +                 | (2 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1026 | |                 | C67_map_regs(a) << 7 as libc::c_int
1027 | |                 | (2 as libc::c_int) << 4 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int
1025 +                 | (0 as libc::c_int) << 8 as libc::c_int
1026 +                 | C67_map_regs(a) << 7 as libc::c_int | ((2 as libc::c_int) << 4 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1026 | |                 | C67_map_regs(a) << 7 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int
1025 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1025 | |                 | (0 as libc::c_int) << 8 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int
1024 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1024 | |                 | (1 as libc::c_int) << 9 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1022 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1023 | |                 | (0 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1022:13
     |
1022 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1043 | |                 | C67_map_regs(b) << 1 as libc::c_int
1044 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int
1039 +                 | (0 as libc::c_int) << 8 as libc::c_int
1040 +                 | C67_map_regs(a) << 7 as libc::c_int
1041 +                 | (0 as libc::c_int) << 4 as libc::c_int
1042 +                 | (1 as libc::c_int) << 2 as libc::c_int
1043 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1042 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1043 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int
1039 +                 | (0 as libc::c_int) << 8 as libc::c_int
1040 +                 | C67_map_regs(a) << 7 as libc::c_int
1041 +                 | (0 as libc::c_int) << 4 as libc::c_int
1042 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1040 | |                 | C67_map_regs(a) << 7 as libc::c_int
1041 | |                 | (0 as libc::c_int) << 4 as libc::c_int
1042 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int
1039 +                 | (0 as libc::c_int) << 8 as libc::c_int
1040 +                 | C67_map_regs(a) << 7 as libc::c_int
1041 +                 | (0 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1040 | |                 | C67_map_regs(a) << 7 as libc::c_int
1041 | |                 | (0 as libc::c_int) << 4 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int
1039 +                 | (0 as libc::c_int) << 8 as libc::c_int
1040 +                 | C67_map_regs(a) << 7 as libc::c_int | ((0 as libc::c_int) << 4 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1040 | |                 | C67_map_regs(a) << 7 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int
1039 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1039 | |                 | (0 as libc::c_int) << 8 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int
1038 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1038 | |                 | (1 as libc::c_int) << 9 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1036 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1037 | |                 | (0 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1036:13
     |
1036 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1057 | |                 | C67_map_regs(b) << 1 as libc::c_int
1058 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int
1053 +                 | (0 as libc::c_int) << 8 as libc::c_int
1054 +                 | C67_map_regs(a) << 7 as libc::c_int
1055 +                 | (1 as libc::c_int) << 4 as libc::c_int
1056 +                 | (1 as libc::c_int) << 2 as libc::c_int
1057 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1056 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1057 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int
1053 +                 | (0 as libc::c_int) << 8 as libc::c_int
1054 +                 | C67_map_regs(a) << 7 as libc::c_int
1055 +                 | (1 as libc::c_int) << 4 as libc::c_int
1056 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1054 | |                 | C67_map_regs(a) << 7 as libc::c_int
1055 | |                 | (1 as libc::c_int) << 4 as libc::c_int
1056 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int
1053 +                 | (0 as libc::c_int) << 8 as libc::c_int
1054 +                 | C67_map_regs(a) << 7 as libc::c_int
1055 +                 | (1 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1054 | |                 | C67_map_regs(a) << 7 as libc::c_int
1055 | |                 | (1 as libc::c_int) << 4 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int
1053 +                 | (0 as libc::c_int) << 8 as libc::c_int
1054 +                 | C67_map_regs(a) << 7 as libc::c_int | ((1 as libc::c_int) << 4 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1054 | |                 | C67_map_regs(a) << 7 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int
1053 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1053 | |                 | (0 as libc::c_int) << 8 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int
1052 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1052 | |                 | (1 as libc::c_int) << 9 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1050 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1051 | |                 | (0 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1050:13
     |
1050 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1071 | |                 | C67_map_regs(b) << 1 as libc::c_int
1072 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int
1067 +                 | (0 as libc::c_int) << 8 as libc::c_int
1068 +                 | C67_map_regs(a) << 7 as libc::c_int
1069 +                 | (6 as libc::c_int) << 4 as libc::c_int
1070 +                 | (1 as libc::c_int) << 2 as libc::c_int
1071 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
...    |
1070 | |                 | (1 as libc::c_int) << 2 as libc::c_int
1071 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int
1067 +                 | (0 as libc::c_int) << 8 as libc::c_int
1068 +                 | C67_map_regs(a) << 7 as libc::c_int
1069 +                 | (6 as libc::c_int) << 4 as libc::c_int
1070 +                 | (1 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1068 | |                 | C67_map_regs(a) << 7 as libc::c_int
1069 | |                 | (6 as libc::c_int) << 4 as libc::c_int
1070 | |                 | (1 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int
1067 +                 | (0 as libc::c_int) << 8 as libc::c_int
1068 +                 | C67_map_regs(a) << 7 as libc::c_int
1069 +                 | (6 as libc::c_int) << 4 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1068 | |                 | C67_map_regs(a) << 7 as libc::c_int
1069 | |                 | (6 as libc::c_int) << 4 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int
1067 +                 | (0 as libc::c_int) << 8 as libc::c_int
1068 +                 | C67_map_regs(a) << 7 as libc::c_int | ((6 as libc::c_int) << 4 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
1068 | |                 | C67_map_regs(a) << 7 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int
1067 +                 | (0 as libc::c_int) << 8 as libc::c_int | (C67_map_regs(a) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
1067 | |                 | (0 as libc::c_int) << 8 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int
1066 +                 | (1 as libc::c_int) << 9 as libc::c_int | ((0 as libc::c_int) << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
1066 | |                 | (1 as libc::c_int) << 9 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1064 ~             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 +                 | (1 as libc::c_int) << 13 as libc::c_int | ((1 as libc::c_int) << 9 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 | /             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
1065 | |                 | (1 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1064:13
     |
1064 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(b) << 23 as libc::c_int) | (C67_map_regn(a) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 | |                 | (0x3a as libc::c_int) << 6 as libc::c_int
1091 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1092 | |                 | C67_map_regs(c) << 1 as libc::c_int
1093 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1088 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 +                 | (0x3a as libc::c_int) << 6 as libc::c_int
1091 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1092 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 | |                 | (0x3a as libc::c_int) << 6 as libc::c_int
1091 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1092 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1088 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 +                 | (0x3a as libc::c_int) << 6 as libc::c_int
1091 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 | |                 | (0x3a as libc::c_int) << 6 as libc::c_int
1091 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1088 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 +                 | (0x3a as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1090 | |                 | (0x3a as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1088 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x3a as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1088 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1089 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1088:13
     |
1088 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 | |                 | (0x39 as libc::c_int) << 6 as libc::c_int
1112 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1113 | |                 | C67_map_regs(c) << 1 as libc::c_int
1114 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1109 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 +                 | (0x39 as libc::c_int) << 6 as libc::c_int
1112 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1113 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 | |                 | (0x39 as libc::c_int) << 6 as libc::c_int
1112 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1113 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1109 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 +                 | (0x39 as libc::c_int) << 6 as libc::c_int
1112 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 | |                 | (0x39 as libc::c_int) << 6 as libc::c_int
1112 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1109 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 +                 | (0x39 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1111 | |                 | (0x39 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1109 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x39 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1109 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1110 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1109:13
     |
1109 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 | |                 | (0x38 as libc::c_int) << 6 as libc::c_int
1133 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1134 | |                 | C67_map_regs(c) << 1 as libc::c_int
1135 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1130 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 +                 | (0x38 as libc::c_int) << 6 as libc::c_int
1133 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1134 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 | |                 | (0x38 as libc::c_int) << 6 as libc::c_int
1133 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1134 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1130 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 +                 | (0x38 as libc::c_int) << 6 as libc::c_int
1133 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 | |                 | (0x38 as libc::c_int) << 6 as libc::c_int
1133 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1130 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 +                 | (0x38 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1132 | |                 | (0x38 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1130 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x38 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1130 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1131 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1130:13
     |
1130 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 | |                 | (0x2a as libc::c_int) << 6 as libc::c_int
1154 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1155 | |                 | C67_map_regs(c) << 1 as libc::c_int
1156 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1151 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 +                 | (0x2a as libc::c_int) << 6 as libc::c_int
1154 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1155 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 | |                 | (0x2a as libc::c_int) << 6 as libc::c_int
1154 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1155 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1151 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 +                 | (0x2a as libc::c_int) << 6 as libc::c_int
1154 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 | |                 | (0x2a as libc::c_int) << 6 as libc::c_int
1154 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1151 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 +                 | (0x2a as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1153 | |                 | (0x2a as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1151 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x2a as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1151 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1152 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1151:13
     |
1151 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 | |                 | (0x29 as libc::c_int) << 6 as libc::c_int
1175 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1176 | |                 | C67_map_regs(c) << 1 as libc::c_int
1177 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1172 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 +                 | (0x29 as libc::c_int) << 6 as libc::c_int
1175 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1176 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 | |                 | (0x29 as libc::c_int) << 6 as libc::c_int
1175 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1176 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1172 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 +                 | (0x29 as libc::c_int) << 6 as libc::c_int
1175 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 | |                 | (0x29 as libc::c_int) << 6 as libc::c_int
1175 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1172 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 +                 | (0x29 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1174 | |                 | (0x29 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1172 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x29 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1172 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1173 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1172:13
     |
1172 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 | |                 | (0x28 as libc::c_int) << 6 as libc::c_int
1196 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1197 | |                 | C67_map_regs(c) << 1 as libc::c_int
1198 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1193 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 +                 | (0x28 as libc::c_int) << 6 as libc::c_int
1196 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1197 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 | |                 | (0x28 as libc::c_int) << 6 as libc::c_int
1196 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1197 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1193 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 +                 | (0x28 as libc::c_int) << 6 as libc::c_int
1196 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 | |                 | (0x28 as libc::c_int) << 6 as libc::c_int
1196 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1193 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 +                 | (0x28 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1195 | |                 | (0x28 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1193 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x28 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1193 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1194 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1193:13
     |
1193 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 | |                 | (0x57 as libc::c_int) << 5 as libc::c_int
1217 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1218 | |                 | C67_map_regs(c) << 1 as libc::c_int
1219 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1214 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 +                 | (0x57 as libc::c_int) << 5 as libc::c_int
1217 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1218 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 | |                 | (0x57 as libc::c_int) << 5 as libc::c_int
1217 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1218 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1214 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 +                 | (0x57 as libc::c_int) << 5 as libc::c_int
1217 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 | |                 | (0x57 as libc::c_int) << 5 as libc::c_int
1217 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1214 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 +                 | (0x57 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1216 | |                 | (0x57 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1214 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x57 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1214 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1215 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1214:13
     |
1214 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 | |                 | (0x47 as libc::c_int) << 5 as libc::c_int
1238 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1239 | |                 | C67_map_regs(c) << 1 as libc::c_int
1240 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1235 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 +                 | (0x47 as libc::c_int) << 5 as libc::c_int
1238 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1239 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 | |                 | (0x47 as libc::c_int) << 5 as libc::c_int
1238 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1239 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1235 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 +                 | (0x47 as libc::c_int) << 5 as libc::c_int
1238 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 | |                 | (0x47 as libc::c_int) << 5 as libc::c_int
1238 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1235 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 +                 | (0x47 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1237 | |                 | (0x47 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1235 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x47 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1235 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1236 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1235:13
     |
1235 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 | |                 | (0x53 as libc::c_int) << 5 as libc::c_int
1259 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1260 | |                 | C67_map_regs(c) << 1 as libc::c_int
1261 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1256 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 +                 | (0x53 as libc::c_int) << 5 as libc::c_int
1259 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1260 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 | |                 | (0x53 as libc::c_int) << 5 as libc::c_int
1259 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1260 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1256 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 +                 | (0x53 as libc::c_int) << 5 as libc::c_int
1259 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 | |                 | (0x53 as libc::c_int) << 5 as libc::c_int
1259 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1256 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 +                 | (0x53 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1258 | |                 | (0x53 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1256 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x53 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1256 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1257 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1256:13
     |
1256 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 | |                 | (0x5f as libc::c_int) << 5 as libc::c_int
1280 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1281 | |                 | C67_map_regs(c) << 1 as libc::c_int
1282 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1277 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 +                 | (0x5f as libc::c_int) << 5 as libc::c_int
1280 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1281 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 | |                 | (0x5f as libc::c_int) << 5 as libc::c_int
1280 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1281 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1277 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 +                 | (0x5f as libc::c_int) << 5 as libc::c_int
1280 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 | |                 | (0x5f as libc::c_int) << 5 as libc::c_int
1280 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1277 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 +                 | (0x5f as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1279 | |                 | (0x5f as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1277 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x5f as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1277 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1278 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1277:13
     |
1277 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 | |                 | (0x4f as libc::c_int) << 5 as libc::c_int
1301 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1302 | |                 | C67_map_regs(c) << 1 as libc::c_int
1303 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1298 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 +                 | (0x4f as libc::c_int) << 5 as libc::c_int
1301 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1302 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 | |                 | (0x4f as libc::c_int) << 5 as libc::c_int
1301 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1302 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1298 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 +                 | (0x4f as libc::c_int) << 5 as libc::c_int
1301 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 | |                 | (0x4f as libc::c_int) << 5 as libc::c_int
1301 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1298 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 +                 | (0x4f as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1300 | |                 | (0x4f as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1298 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x4f as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1298 ~             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 | /             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
1299 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^ help: consider parenthesizing your expression: `C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1298:13
     |
1298 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regn(c) << 23 as libc::c_int) | (C67_map_regn(b) << 18 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1309:13
     |
1309 | /             (0 as libc::c_int) << 29 as libc::c_int
1310 | |                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
1311 | |                 | (0x4 as libc::c_int) << 2 as libc::c_int
1312 | |                 | (0 as libc::c_int) << 1 as libc::c_int
1313 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1309 ~             (0 as libc::c_int) << 29 as libc::c_int
1310 +                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
1311 +                 | (0x4 as libc::c_int) << 2 as libc::c_int
1312 ~                 | (0 as libc::c_int) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1309:13
     |
1309 | /             (0 as libc::c_int) << 29 as libc::c_int
1310 | |                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
1311 | |                 | (0x4 as libc::c_int) << 2 as libc::c_int
1312 | |                 | (0 as libc::c_int) << 1 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1309 ~             (0 as libc::c_int) << 29 as libc::c_int
1310 +                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
1311 +                 | (0x4 as libc::c_int) << 2 as libc::c_int | ((0 as libc::c_int) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1309:13
     |
1309 | /             (0 as libc::c_int) << 29 as libc::c_int
1310 | |                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
1311 | |                 | (0x4 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1309 ~             (0 as libc::c_int) << 29 as libc::c_int
1310 +                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int | ((0x4 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1309:13
     |
1309 | /             (0 as libc::c_int) << 29 as libc::c_int
1310 | |                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
     | |_________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1309 ~             (0 as libc::c_int) << 29 as libc::c_int
1310 +                 | (0 as libc::c_int) << 28 as libc::c_int | (a << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1309:13
     |
1309 | /             (0 as libc::c_int) << 29 as libc::c_int
1310 | |                 | (0 as libc::c_int) << 28 as libc::c_int | a << 7 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
...    |
1326 | |                 | (1 as libc::c_int) << 1 as libc::c_int
1327 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 +                 | C67_map_regn(c) << 18 as libc::c_int
1323 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 +                 | (0xd as libc::c_int) << 6 as libc::c_int
1325 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1326 ~                 | (1 as libc::c_int) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 | |                 | (0xd as libc::c_int) << 6 as libc::c_int
1325 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1326 | |                 | (1 as libc::c_int) << 1 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 +                 | C67_map_regn(c) << 18 as libc::c_int
1323 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 +                 | (0xd as libc::c_int) << 6 as libc::c_int
1325 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | ((1 as libc::c_int) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 | |                 | (0xd as libc::c_int) << 6 as libc::c_int
1325 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 +                 | C67_map_regn(c) << 18 as libc::c_int
1323 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 +                 | (0xd as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1324 | |                 | (0xd as libc::c_int) << 6 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 +                 | C67_map_regn(c) << 18 as libc::c_int
1323 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0xd as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 +                 | C67_map_regn(c) << 18 as libc::c_int
1323 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
1323 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int
1322 ~                 | C67_map_regn(c) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
1322 | |                 | C67_map_regn(c) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1320 ~             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 +                 | (0 as libc::c_int) << 23 as libc::c_int | (C67_map_regn(c) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 | /             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
1321 | |                 | (0 as libc::c_int) << 23 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int | ((0 as libc::c_int) << 23 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1320:13
     |
1320 |             C67_map_regc(b) << 29 as libc::c_int | a << 28 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(C67_map_regc(b) << 29 as libc::c_int) | (a << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1341 | |                 | C67_map_regs(c) << 1 as libc::c_int
1342 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 +                 | C67_map_regn(b) << 18 as libc::c_int
1338 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1339 +                 | (0x2 as libc::c_int) << 5 as libc::c_int
1340 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1341 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1340 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1341 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 +                 | C67_map_regn(b) << 18 as libc::c_int
1338 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1339 +                 | (0x2 as libc::c_int) << 5 as libc::c_int
1340 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
1338 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1339 | |                 | (0x2 as libc::c_int) << 5 as libc::c_int
1340 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 +                 | C67_map_regn(b) << 18 as libc::c_int
1338 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1339 +                 | (0x2 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
1338 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1339 | |                 | (0x2 as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 +                 | C67_map_regn(b) << 18 as libc::c_int
1338 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x2 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
1338 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 +                 | C67_map_regn(b) << 18 as libc::c_int
1338 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
1338 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int
1337 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
1337 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int
1336 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1336 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1334 ~             (0 as libc::c_int) << 29 as libc::c_int
1335 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1334:13
     |
1334 | /             (0 as libc::c_int) << 29 as libc::c_int
1335 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1356 | |                 | C67_map_regs(c) << 1 as libc::c_int
1357 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 +                 | C67_map_regn(b) << 18 as libc::c_int
1353 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1354 +                 | (0xb as libc::c_int) << 5 as libc::c_int
1355 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1356 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1355 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1356 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 +                 | C67_map_regn(b) << 18 as libc::c_int
1353 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1354 +                 | (0xb as libc::c_int) << 5 as libc::c_int
1355 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
1353 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1354 | |                 | (0xb as libc::c_int) << 5 as libc::c_int
1355 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 +                 | C67_map_regn(b) << 18 as libc::c_int
1353 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1354 +                 | (0xb as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
1353 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1354 | |                 | (0xb as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 +                 | C67_map_regn(b) << 18 as libc::c_int
1353 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0xb as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
1353 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 +                 | C67_map_regn(b) << 18 as libc::c_int
1353 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
1353 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int
1352 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
1352 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int
1351 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1351 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1349 ~             (0 as libc::c_int) << 29 as libc::c_int
1350 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1349:13
     |
1349 | /             (0 as libc::c_int) << 29 as libc::c_int
1350 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1371 | |                 | C67_map_regs(c) << 1 as libc::c_int
1372 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1369 +                 | (0x1 as libc::c_int) << 5 as libc::c_int
1370 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1371 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1370 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1371 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1369 +                 | (0x1 as libc::c_int) << 5 as libc::c_int
1370 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1369 | |                 | (0x1 as libc::c_int) << 5 as libc::c_int
1370 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1369 +                 | (0x1 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1369 | |                 | (0x1 as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x1 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1368 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int
1367 ~                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
1367 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int
1366 +                 | C67_map_regn(c) << 23 as libc::c_int | ((C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1366 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1364 ~             (0 as libc::c_int) << 29 as libc::c_int
1365 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1364:13
     |
1364 | /             (0 as libc::c_int) << 29 as libc::c_int
1365 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1386 | |                 | C67_map_regs(c) << 1 as libc::c_int
1387 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 +                 | C67_map_regn(b) << 18 as libc::c_int
1383 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1384 +                 | (0x4a as libc::c_int) << 5 as libc::c_int
1385 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1386 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1385 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1386 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 +                 | C67_map_regn(b) << 18 as libc::c_int
1383 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1384 +                 | (0x4a as libc::c_int) << 5 as libc::c_int
1385 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
1383 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1384 | |                 | (0x4a as libc::c_int) << 5 as libc::c_int
1385 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 +                 | C67_map_regn(b) << 18 as libc::c_int
1383 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1384 +                 | (0x4a as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
1383 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1384 | |                 | (0x4a as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 +                 | C67_map_regn(b) << 18 as libc::c_int
1383 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x4a as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
1383 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 +                 | C67_map_regn(b) << 18 as libc::c_int
1383 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
1383 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int
1382 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
1382 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int
1381 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1381 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1379 ~             (0 as libc::c_int) << 29 as libc::c_int
1380 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1379:13
     |
1379 | /             (0 as libc::c_int) << 29 as libc::c_int
1380 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1401 | |                 | C67_map_regs(c) << 1 as libc::c_int
1402 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 +                 | C67_map_regn(b) << 18 as libc::c_int
1398 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1399 +                 | (0x49 as libc::c_int) << 5 as libc::c_int
1400 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1401 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1400 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1401 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 +                 | C67_map_regn(b) << 18 as libc::c_int
1398 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1399 +                 | (0x49 as libc::c_int) << 5 as libc::c_int
1400 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
1398 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1399 | |                 | (0x49 as libc::c_int) << 5 as libc::c_int
1400 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 +                 | C67_map_regn(b) << 18 as libc::c_int
1398 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1399 +                 | (0x49 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
1398 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1399 | |                 | (0x49 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 +                 | C67_map_regn(b) << 18 as libc::c_int
1398 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x49 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
1398 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 +                 | C67_map_regn(b) << 18 as libc::c_int
1398 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
1398 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int
1397 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
1397 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int
1396 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1396 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1394 ~             (0 as libc::c_int) << 29 as libc::c_int
1395 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1394:13
     |
1394 | /             (0 as libc::c_int) << 29 as libc::c_int
1395 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1416 | |                 | C67_map_regs(c) << 1 as libc::c_int
1417 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 +                 | C67_map_regn(b) << 18 as libc::c_int
1413 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1414 +                 | (0x39 as libc::c_int) << 5 as libc::c_int
1415 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1416 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1415 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1416 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 +                 | C67_map_regn(b) << 18 as libc::c_int
1413 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1414 +                 | (0x39 as libc::c_int) << 5 as libc::c_int
1415 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
1413 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1414 | |                 | (0x39 as libc::c_int) << 5 as libc::c_int
1415 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 +                 | C67_map_regn(b) << 18 as libc::c_int
1413 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1414 +                 | (0x39 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
1413 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1414 | |                 | (0x39 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 +                 | C67_map_regn(b) << 18 as libc::c_int
1413 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x39 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
1413 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 +                 | C67_map_regn(b) << 18 as libc::c_int
1413 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
1413 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int
1412 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
1412 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int
1411 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1411 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1409 ~             (0 as libc::c_int) << 29 as libc::c_int
1410 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1409:13
     |
1409 | /             (0 as libc::c_int) << 29 as libc::c_int
1410 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1431 | |                 | C67_map_regs(c) << 1 as libc::c_int
1432 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1429 +                 | (0x3b as libc::c_int) << 5 as libc::c_int
1430 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1431 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1430 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1431 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1429 +                 | (0x3b as libc::c_int) << 5 as libc::c_int
1430 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1429 | |                 | (0x3b as libc::c_int) << 5 as libc::c_int
1430 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1429 +                 | (0x3b as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1429 | |                 | (0x3b as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x3b as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1428 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int
1427 ~                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
1427 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int
1426 +                 | C67_map_regn(c) << 23 as libc::c_int | ((C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1426 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1424 ~             (0 as libc::c_int) << 29 as libc::c_int
1425 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1424:13
     |
1424 | /             (0 as libc::c_int) << 29 as libc::c_int
1425 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1446 | |                 | C67_map_regs(c) << 1 as libc::c_int
1447 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 +                 | C67_map_regn(b) << 18 as libc::c_int
1443 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1444 +                 | (0x2 as libc::c_int) << 6 as libc::c_int
1445 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1446 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1445 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1446 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 +                 | C67_map_regn(b) << 18 as libc::c_int
1443 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1444 +                 | (0x2 as libc::c_int) << 6 as libc::c_int
1445 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
1443 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1444 | |                 | (0x2 as libc::c_int) << 6 as libc::c_int
1445 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 +                 | C67_map_regn(b) << 18 as libc::c_int
1443 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1444 +                 | (0x2 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
1443 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
1444 | |                 | (0x2 as libc::c_int) << 6 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 +                 | C67_map_regn(b) << 18 as libc::c_int
1443 +                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x2 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
1443 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 +                 | C67_map_regn(b) << 18 as libc::c_int
1443 +                 | (0 as libc::c_int) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
1443 | |                 | (0 as libc::c_int) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int
1442 ~                 | C67_map_regn(b) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
1442 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int
1441 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1441 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1439 ~             (0 as libc::c_int) << 29 as libc::c_int
1440 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1439:13
     |
1439 | /             (0 as libc::c_int) << 29 as libc::c_int
1440 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1470 | |                 | C67_map_regs(c) << 1 as libc::c_int
1471 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 +                 | (0 as libc::c_int) << 13 as libc::c_int
1467 +                 | (0 as libc::c_int) << 12 as libc::c_int
1468 +                 | (0x9 as libc::c_int) << 5 as libc::c_int
1469 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1470 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1469 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1470 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 +                 | (0 as libc::c_int) << 13 as libc::c_int
1467 +                 | (0 as libc::c_int) << 12 as libc::c_int
1468 +                 | (0x9 as libc::c_int) << 5 as libc::c_int
1469 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
...    |
1468 | |                 | (0x9 as libc::c_int) << 5 as libc::c_int
1469 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 +                 | (0 as libc::c_int) << 13 as libc::c_int
1467 +                 | (0 as libc::c_int) << 12 as libc::c_int
1468 +                 | (0x9 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1467 | |                 | (0 as libc::c_int) << 12 as libc::c_int
1468 | |                 | (0x9 as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 +                 | (0 as libc::c_int) << 13 as libc::c_int
1467 +                 | (0 as libc::c_int) << 12 as libc::c_int | ((0x9 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 | |                 | (0 as libc::c_int) << 13 as libc::c_int
1467 | |                 | (0 as libc::c_int) << 12 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 +                 | (0 as libc::c_int) << 13 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
1466 | |                 | (0 as libc::c_int) << 13 as libc::c_int
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int
1465 +                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
1465 | |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     | |___________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int
1464 +                 | C67_map_regn(c) << 23 as libc::c_int | ((C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1464 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1462 ~             (0 as libc::c_int) << 29 as libc::c_int
1463 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1462:13
     |
1462 | /             (0 as libc::c_int) << 29 as libc::c_int
1463 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1494 | |                 | C67_map_regs(c) << 1 as libc::c_int
1495 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 +                 | C67_map_regn(b) << 18 as libc::c_int
1491 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1492 +                 | (0x3 as libc::c_int) << 5 as libc::c_int
1493 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1494 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1493 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1494 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 +                 | C67_map_regn(b) << 18 as libc::c_int
1491 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1492 +                 | (0x3 as libc::c_int) << 5 as libc::c_int
1493 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
1491 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1492 | |                 | (0x3 as libc::c_int) << 5 as libc::c_int
1493 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 +                 | C67_map_regn(b) << 18 as libc::c_int
1491 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1492 +                 | (0x3 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
1491 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1492 | |                 | (0x3 as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 +                 | C67_map_regn(b) << 18 as libc::c_int
1491 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x3 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
1491 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 +                 | C67_map_regn(b) << 18 as libc::c_int
1491 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
1491 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int
1490 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
1490 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int
1489 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1489 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1487 ~             (0 as libc::c_int) << 29 as libc::c_int
1488 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1487:13
     |
1487 | /             (0 as libc::c_int) << 29 as libc::c_int
1488 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1518 | |                 | C67_map_regs(c) << 1 as libc::c_int
1519 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 +                 | C67_map_regn(b) << 18 as libc::c_int
1515 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1516 +                 | (0x7 as libc::c_int) << 5 as libc::c_int
1517 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1518 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1517 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1518 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 +                 | C67_map_regn(b) << 18 as libc::c_int
1515 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1516 +                 | (0x7 as libc::c_int) << 5 as libc::c_int
1517 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
1515 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1516 | |                 | (0x7 as libc::c_int) << 5 as libc::c_int
1517 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 +                 | C67_map_regn(b) << 18 as libc::c_int
1515 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1516 +                 | (0x7 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
1515 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1516 | |                 | (0x7 as libc::c_int) << 5 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 +                 | C67_map_regn(b) << 18 as libc::c_int
1515 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x7 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
1515 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 +                 | C67_map_regn(b) << 18 as libc::c_int
1515 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
1515 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int
1514 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
1514 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int
1513 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1513 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1511 ~             (0 as libc::c_int) << 29 as libc::c_int
1512 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1511:13
     |
1511 | /             (0 as libc::c_int) << 29 as libc::c_int
1512 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1542 | |                 | C67_map_regs(c) << 1 as libc::c_int
1543 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 +                 | C67_map_regn(b) << 18 as libc::c_int
1539 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1540 +                 | (0x7f as libc::c_int) << 5 as libc::c_int
1541 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1542 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1541 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1542 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 +                 | C67_map_regn(b) << 18 as libc::c_int
1539 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1540 +                 | (0x7f as libc::c_int) << 5 as libc::c_int
1541 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
1539 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1540 | |                 | (0x7f as libc::c_int) << 5 as libc::c_int
1541 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 +                 | C67_map_regn(b) << 18 as libc::c_int
1539 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1540 +                 | (0x7f as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
1539 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1540 | |                 | (0x7f as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 +                 | C67_map_regn(b) << 18 as libc::c_int
1539 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x7f as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
1539 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 +                 | C67_map_regn(b) << 18 as libc::c_int
1539 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
1539 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int
1538 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
1538 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int
1537 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1537 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1535 ~             (0 as libc::c_int) << 29 as libc::c_int
1536 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1535:13
     |
1535 | /             (0 as libc::c_int) << 29 as libc::c_int
1536 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1566 | |                 | C67_map_regs(c) << 1 as libc::c_int
1567 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 +                 | C67_map_regn(b) << 18 as libc::c_int
1563 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1564 +                 | (0x7b as libc::c_int) << 5 as libc::c_int
1565 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1566 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1565 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1566 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 +                 | C67_map_regn(b) << 18 as libc::c_int
1563 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1564 +                 | (0x7b as libc::c_int) << 5 as libc::c_int
1565 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
1563 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1564 | |                 | (0x7b as libc::c_int) << 5 as libc::c_int
1565 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 +                 | C67_map_regn(b) << 18 as libc::c_int
1563 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1564 +                 | (0x7b as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
1563 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1564 | |                 | (0x7b as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 +                 | C67_map_regn(b) << 18 as libc::c_int
1563 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x7b as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
1563 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 +                 | C67_map_regn(b) << 18 as libc::c_int
1563 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
1563 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int
1562 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
1562 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int
1561 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1561 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1559 ~             (0 as libc::c_int) << 29 as libc::c_int
1560 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1559:13
     |
1559 | /             (0 as libc::c_int) << 29 as libc::c_int
1560 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1590 | |                 | C67_map_regs(c) << 1 as libc::c_int
1591 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 +                 | C67_map_regn(b) << 18 as libc::c_int
1587 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1588 +                 | (0x6f as libc::c_int) << 5 as libc::c_int
1589 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1590 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1589 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1590 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 +                 | C67_map_regn(b) << 18 as libc::c_int
1587 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1588 +                 | (0x6f as libc::c_int) << 5 as libc::c_int
1589 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
1587 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1588 | |                 | (0x6f as libc::c_int) << 5 as libc::c_int
1589 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 +                 | C67_map_regn(b) << 18 as libc::c_int
1587 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1588 +                 | (0x6f as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
1587 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1588 | |                 | (0x6f as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 +                 | C67_map_regn(b) << 18 as libc::c_int
1587 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x6f as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
1587 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 +                 | C67_map_regn(b) << 18 as libc::c_int
1587 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
1587 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int
1586 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
1586 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int
1585 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1585 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1583 ~             (0 as libc::c_int) << 29 as libc::c_int
1584 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1583:13
     |
1583 | /             (0 as libc::c_int) << 29 as libc::c_int
1584 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1614 | |                 | C67_map_regs(c) << 1 as libc::c_int
1615 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 +                 | C67_map_regn(b) << 18 as libc::c_int
1611 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1612 +                 | (0x10 as libc::c_int) << 5 as libc::c_int
1613 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1614 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1613 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1614 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 +                 | C67_map_regn(b) << 18 as libc::c_int
1611 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1612 +                 | (0x10 as libc::c_int) << 5 as libc::c_int
1613 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
1611 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1612 | |                 | (0x10 as libc::c_int) << 5 as libc::c_int
1613 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 +                 | C67_map_regn(b) << 18 as libc::c_int
1611 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1612 +                 | (0x10 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
1611 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1612 | |                 | (0x10 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 +                 | C67_map_regn(b) << 18 as libc::c_int
1611 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x10 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
1611 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 +                 | C67_map_regn(b) << 18 as libc::c_int
1611 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
1611 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int
1610 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
1610 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int
1609 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1609 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1607 ~             (0 as libc::c_int) << 29 as libc::c_int
1608 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1607:13
     |
1607 | /             (0 as libc::c_int) << 29 as libc::c_int
1608 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1638 | |                 | C67_map_regs(c) << 1 as libc::c_int
1639 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 +                 | C67_map_regn(b) << 18 as libc::c_int
1635 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1636 +                 | (0x18 as libc::c_int) << 5 as libc::c_int
1637 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1638 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1637 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1638 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 +                 | C67_map_regn(b) << 18 as libc::c_int
1635 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1636 +                 | (0x18 as libc::c_int) << 5 as libc::c_int
1637 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
1635 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1636 | |                 | (0x18 as libc::c_int) << 5 as libc::c_int
1637 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 +                 | C67_map_regn(b) << 18 as libc::c_int
1635 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1636 +                 | (0x18 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
1635 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1636 | |                 | (0x18 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 +                 | C67_map_regn(b) << 18 as libc::c_int
1635 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x18 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
1635 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 +                 | C67_map_regn(b) << 18 as libc::c_int
1635 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
1635 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int
1634 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
1634 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int
1633 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1633 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1631 ~             (0 as libc::c_int) << 29 as libc::c_int
1632 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1631:13
     |
1631 | /             (0 as libc::c_int) << 29 as libc::c_int
1632 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1662 | |                 | C67_map_regs(c) << 1 as libc::c_int
1663 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 +                 | C67_map_regn(b) << 18 as libc::c_int
1659 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1660 +                 | (0x11 as libc::c_int) << 5 as libc::c_int
1661 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1662 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1661 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1662 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 +                 | C67_map_regn(b) << 18 as libc::c_int
1659 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1660 +                 | (0x11 as libc::c_int) << 5 as libc::c_int
1661 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
1659 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1660 | |                 | (0x11 as libc::c_int) << 5 as libc::c_int
1661 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 +                 | C67_map_regn(b) << 18 as libc::c_int
1659 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1660 +                 | (0x11 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
1659 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1660 | |                 | (0x11 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 +                 | C67_map_regn(b) << 18 as libc::c_int
1659 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x11 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
1659 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 +                 | C67_map_regn(b) << 18 as libc::c_int
1659 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
1659 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int
1658 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
1658 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int
1657 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1657 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1655 ~             (0 as libc::c_int) << 29 as libc::c_int
1656 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1655:13
     |
1655 | /             (0 as libc::c_int) << 29 as libc::c_int
1656 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1686 | |                 | C67_map_regs(c) << 1 as libc::c_int
1687 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 +                 | C67_map_regn(b) << 18 as libc::c_int
1683 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1684 +                 | (0x19 as libc::c_int) << 5 as libc::c_int
1685 +                 | (0x6 as libc::c_int) << 2 as libc::c_int
1686 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1685 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
1686 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 +                 | C67_map_regn(b) << 18 as libc::c_int
1683 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1684 +                 | (0x19 as libc::c_int) << 5 as libc::c_int
1685 +                 | (0x6 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
1683 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1684 | |                 | (0x19 as libc::c_int) << 5 as libc::c_int
1685 | |                 | (0x6 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 +                 | C67_map_regn(b) << 18 as libc::c_int
1683 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1684 +                 | (0x19 as libc::c_int) << 5 as libc::c_int | ((0x6 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
1683 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1684 | |                 | (0x19 as libc::c_int) << 5 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 +                 | C67_map_regn(b) << 18 as libc::c_int
1683 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x19 as libc::c_int) << 5 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
1683 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 +                 | C67_map_regn(b) << 18 as libc::c_int
1683 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
1683 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int
1682 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
1682 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int
1681 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1681 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1679 ~             (0 as libc::c_int) << 29 as libc::c_int
1680 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1679:13
     |
1679 | /             (0 as libc::c_int) << 29 as libc::c_int
1680 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1710 | |                 | C67_map_regs(c) << 1 as libc::c_int
1711 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 +                 | C67_map_regn(b) << 18 as libc::c_int
1707 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1708 +                 | (0x1c as libc::c_int) << 7 as libc::c_int
1709 +                 | (0 as libc::c_int) << 2 as libc::c_int
1710 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1709 | |                 | (0 as libc::c_int) << 2 as libc::c_int
1710 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 +                 | C67_map_regn(b) << 18 as libc::c_int
1707 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1708 +                 | (0x1c as libc::c_int) << 7 as libc::c_int
1709 +                 | (0 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
1707 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1708 | |                 | (0x1c as libc::c_int) << 7 as libc::c_int
1709 | |                 | (0 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 +                 | C67_map_regn(b) << 18 as libc::c_int
1707 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1708 +                 | (0x1c as libc::c_int) << 7 as libc::c_int | ((0 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
1707 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1708 | |                 | (0x1c as libc::c_int) << 7 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 +                 | C67_map_regn(b) << 18 as libc::c_int
1707 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x1c as libc::c_int) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
1707 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 +                 | C67_map_regn(b) << 18 as libc::c_int
1707 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
1707 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int
1706 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
1706 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int
1705 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1705 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1703 ~             (0 as libc::c_int) << 29 as libc::c_int
1704 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1703:13
     |
1703 | /             (0 as libc::c_int) << 29 as libc::c_int
1704 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1734 | |                 | C67_map_regs(c) << 1 as libc::c_int
1735 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 +                 | C67_map_regn(b) << 18 as libc::c_int
1731 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1732 +                 | (0xe as libc::c_int) << 7 as libc::c_int
1733 +                 | (0 as libc::c_int) << 2 as libc::c_int
1734 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1733 | |                 | (0 as libc::c_int) << 2 as libc::c_int
1734 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 +                 | C67_map_regn(b) << 18 as libc::c_int
1731 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1732 +                 | (0xe as libc::c_int) << 7 as libc::c_int
1733 +                 | (0 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
1731 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1732 | |                 | (0xe as libc::c_int) << 7 as libc::c_int
1733 | |                 | (0 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 +                 | C67_map_regn(b) << 18 as libc::c_int
1731 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1732 +                 | (0xe as libc::c_int) << 7 as libc::c_int | ((0 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
1731 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1732 | |                 | (0xe as libc::c_int) << 7 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 +                 | C67_map_regn(b) << 18 as libc::c_int
1731 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0xe as libc::c_int) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
1731 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 +                 | C67_map_regn(b) << 18 as libc::c_int
1731 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
1731 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int
1730 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
1730 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int
1729 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1729 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1727 ~             (0 as libc::c_int) << 29 as libc::c_int
1728 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1727:13
     |
1727 | /             (0 as libc::c_int) << 29 as libc::c_int
1728 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1758 | |                 | C67_map_regs(c) << 1 as libc::c_int
1759 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 +                 | C67_map_regn(b) << 18 as libc::c_int
1755 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1756 +                 | (0x4 as libc::c_int) << 7 as libc::c_int
1757 +                 | (0 as libc::c_int) << 2 as libc::c_int
1758 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1757 | |                 | (0 as libc::c_int) << 2 as libc::c_int
1758 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 +                 | C67_map_regn(b) << 18 as libc::c_int
1755 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1756 +                 | (0x4 as libc::c_int) << 7 as libc::c_int
1757 +                 | (0 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
1755 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1756 | |                 | (0x4 as libc::c_int) << 7 as libc::c_int
1757 | |                 | (0 as libc::c_int) << 2 as libc::c_int
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 +                 | C67_map_regn(b) << 18 as libc::c_int
1755 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1756 +                 | (0x4 as libc::c_int) << 7 as libc::c_int | ((0 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
1755 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1756 | |                 | (0x4 as libc::c_int) << 7 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 +                 | C67_map_regn(b) << 18 as libc::c_int
1755 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x4 as libc::c_int) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
1755 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 +                 | C67_map_regn(b) << 18 as libc::c_int
1755 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
1755 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int
1754 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
1754 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int
1753 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1753 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1751 ~             (0 as libc::c_int) << 29 as libc::c_int
1752 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1751:13
     |
1751 | /             (0 as libc::c_int) << 29 as libc::c_int
1752 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1782 | |                 | C67_map_regs(c) << 1 as libc::c_int
1783 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 +                 | C67_map_regn(b) << 18 as libc::c_int
1779 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1780 +                 | (0x37 as libc::c_int) << 6 as libc::c_int
1781 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1782 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1781 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1782 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 +                 | C67_map_regn(b) << 18 as libc::c_int
1779 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1780 +                 | (0x37 as libc::c_int) << 6 as libc::c_int
1781 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
1779 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1780 | |                 | (0x37 as libc::c_int) << 6 as libc::c_int
1781 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 +                 | C67_map_regn(b) << 18 as libc::c_int
1779 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1780 +                 | (0x37 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
1779 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1780 | |                 | (0x37 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 +                 | C67_map_regn(b) << 18 as libc::c_int
1779 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x37 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
1779 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 +                 | C67_map_regn(b) << 18 as libc::c_int
1779 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
1779 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int
1778 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
1778 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int
1777 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1777 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1775 ~             (0 as libc::c_int) << 29 as libc::c_int
1776 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1775:13
     |
1775 | /             (0 as libc::c_int) << 29 as libc::c_int
1776 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1806 | |                 | C67_map_regs(c) << 1 as libc::c_int
1807 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 +                 | C67_map_regn(b) << 18 as libc::c_int
1803 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1804 +                 | (0x27 as libc::c_int) << 6 as libc::c_int
1805 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1806 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1805 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1806 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 +                 | C67_map_regn(b) << 18 as libc::c_int
1803 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1804 +                 | (0x27 as libc::c_int) << 6 as libc::c_int
1805 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
1803 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1804 | |                 | (0x27 as libc::c_int) << 6 as libc::c_int
1805 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 +                 | C67_map_regn(b) << 18 as libc::c_int
1803 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1804 +                 | (0x27 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
1803 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1804 | |                 | (0x27 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 +                 | C67_map_regn(b) << 18 as libc::c_int
1803 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x27 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
1803 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 +                 | C67_map_regn(b) << 18 as libc::c_int
1803 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
1803 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int
1802 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
1802 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int
1801 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1801 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1799 ~             (0 as libc::c_int) << 29 as libc::c_int
1800 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1799:13
     |
1799 | /             (0 as libc::c_int) << 29 as libc::c_int
1800 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1830 | |                 | C67_map_regs(c) << 1 as libc::c_int
1831 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 +                 | C67_map_regn(b) << 18 as libc::c_int
1827 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1828 +                 | (0x33 as libc::c_int) << 6 as libc::c_int
1829 +                 | (0x8 as libc::c_int) << 2 as libc::c_int
1830 ~                 | C67_map_regs(c) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
...    |
1829 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
1830 | |                 | C67_map_regs(c) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 +                 | C67_map_regn(b) << 18 as libc::c_int
1827 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1828 +                 | (0x33 as libc::c_int) << 6 as libc::c_int
1829 +                 | (0x8 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(c) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
1827 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1828 | |                 | (0x33 as libc::c_int) << 6 as libc::c_int
1829 | |                 | (0x8 as libc::c_int) << 2 as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 +                 | C67_map_regn(b) << 18 as libc::c_int
1827 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1828 +                 | (0x33 as libc::c_int) << 6 as libc::c_int | ((0x8 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
1827 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
1828 | |                 | (0x33 as libc::c_int) << 6 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 +                 | C67_map_regn(b) << 18 as libc::c_int
1827 +                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int | ((0x33 as libc::c_int) << 6 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
1827 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |___________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 +                 | C67_map_regn(b) << 18 as libc::c_int
1827 +                 | C67_map_regn(a) << 13 as libc::c_int | (xpath << 12 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
1827 | |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int
1826 ~                 | C67_map_regn(b) << 18 as libc::c_int | (C67_map_regn(a) << 13 as libc::c_int) | xpath << 12 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
1826 | |                 | C67_map_regn(b) << 18 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int
1825 +                 | C67_map_regn(c) << 23 as libc::c_int | (C67_map_regn(b) << 18 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1825 | |                 | C67_map_regn(c) << 23 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1823 ~             (0 as libc::c_int) << 29 as libc::c_int
1824 +                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(c) << 23 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1823:13
     |
1823 | /             (0 as libc::c_int) << 29 as libc::c_int
1824 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1840 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1841 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
1842 | |                 | C67_map_regs(b) << 1 as libc::c_int
1843 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1838 ~             (0 as libc::c_int) << 29 as libc::c_int
1839 +                 | (0 as libc::c_int) << 28 as libc::c_int
1840 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1841 +                 | (0x14 as libc::c_int) << 2 as libc::c_int
1842 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((1 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1840 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1841 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
1842 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1838 ~             (0 as libc::c_int) << 29 as libc::c_int
1839 +                 | (0 as libc::c_int) << 28 as libc::c_int
1840 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1841 +                 | (0x14 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1840 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1841 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1838 ~             (0 as libc::c_int) << 29 as libc::c_int
1839 +                 | (0 as libc::c_int) << 28 as libc::c_int
1840 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int | ((0x14 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1840 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1838 ~             (0 as libc::c_int) << 29 as libc::c_int
1839 +                 | (0 as libc::c_int) << 28 as libc::c_int
1840 +                 | C67_map_regn(b) << 23 as libc::c_int | (a << 0o7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1840 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1838 ~             (0 as libc::c_int) << 29 as libc::c_int
1839 ~                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(b) << 23 as libc::c_int) | a << 0o7 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1838:13
     |
1838 | /             (0 as libc::c_int) << 29 as libc::c_int
1839 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1852 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1853 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
1854 | |                 | C67_map_regs(b) << 1 as libc::c_int
1855 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1850 ~             (0 as libc::c_int) << 29 as libc::c_int
1851 +                 | (0 as libc::c_int) << 28 as libc::c_int
1852 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1853 +                 | (0x14 as libc::c_int) << 2 as libc::c_int
1854 ~                 | C67_map_regs(b) << 1 as libc::c_int | ((0 as libc::c_int) << 0 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1852 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1853 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
1854 | |                 | C67_map_regs(b) << 1 as libc::c_int
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1850 ~             (0 as libc::c_int) << 29 as libc::c_int
1851 +                 | (0 as libc::c_int) << 28 as libc::c_int
1852 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1853 +                 | (0x14 as libc::c_int) << 2 as libc::c_int | (C67_map_regs(b) << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1852 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
1853 | |                 | (0x14 as libc::c_int) << 2 as libc::c_int
     | |___________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1850 ~             (0 as libc::c_int) << 29 as libc::c_int
1851 +                 | (0 as libc::c_int) << 28 as libc::c_int
1852 +                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int | ((0x14 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1852 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     | |________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1850 ~             (0 as libc::c_int) << 29 as libc::c_int
1851 +                 | (0 as libc::c_int) << 28 as libc::c_int
1852 +                 | C67_map_regn(b) << 23 as libc::c_int | (a << 0o7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
1852 | |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     | |______________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1850 ~             (0 as libc::c_int) << 29 as libc::c_int
1851 ~                 | (0 as libc::c_int) << 28 as libc::c_int | (C67_map_regn(b) << 23 as libc::c_int) | a << 0o7 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1850:13
     |
1850 | /             (0 as libc::c_int) << 29 as libc::c_int
1851 | |                 | (0 as libc::c_int) << 28 as libc::c_int
     | |_________________________________________________________^ help: consider parenthesizing your expression: `((0 as libc::c_int) << 29 as libc::c_int) | ((0 as libc::c_int) << 28 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:1861:13
     |
1861 | /             (a - 1 as libc::c_int) << 13 as libc::c_int
1862 | |                 | (0 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^ help: consider parenthesizing your expression: `((a - 1 as libc::c_int) << 13 as libc::c_int) | ((0 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2192:13
     |
2192 |       *inst = *inst & !((0xffff as libc::c_int) << 7 as libc::c_int)
     |  _____________^
2193 | |         | (n & 0xffff as libc::c_int) << 7 as libc::c_int;
     | |_________________________________________________________^ help: consider parenthesizing your expression: `*inst & !((0xffff as libc::c_int) << 7 as libc::c_int) | ((n & 0xffff as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2339:20
     |
2339 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2340 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2341 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2339 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2340 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2339:21
     |
2339 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2348:20
     |
2348 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2349 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2350 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2348 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2349 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2348:21
     |
2348 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2358:20
     |
2358 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2359 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2360 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2358 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2359 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2358:21
     |
2358 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2367:20
     |
2367 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2368 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2369 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2367 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2368 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2367:21
     |
2367 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2790:16
     |
2790 |         size = size + 3 as libc::c_int & !(3 as libc::c_int);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 3 as libc::c_int) & !(3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2819:34
     |
2819 |     let mut local: libc::c_int = -loc + 7 as libc::c_int & -(8 as libc::c_int);
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 7 as libc::c_int) & -(8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2886:17
     |
2886 |             n = *p >> 7 as libc::c_int & 0xffff as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*p >> 7 as libc::c_int) & 0xffff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2888:21
     |
2888 |                   |= (*p.offset(1 as libc::c_int as isize) >> 7 as libc::c_int
     |  _____________________^
2889 | |                     & 0xffff as libc::c_int) << 16 as libc::c_int;
     | |___________________________________________^ help: consider parenthesizing your expression: `(*p.offset(1 as libc::c_int as isize) >> 7 as libc::c_int) & 0xffff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/c67_gen.rs:2893:17
     |
2893 |             |= (t >> 16 as libc::c_int & 0xffff as libc::c_int) << 7 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(t >> 16 as libc::c_int) & 0xffff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/c67_link.rs:15:10
   |
15 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/c67_link.rs:16:10
   |
16 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/c67_link.rs:17:10
   |
17 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/c67_link.rs:18:10
   |
18 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/c67_link.rs:19:10
   |
19 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/c67_link.rs:20:10
   |
20 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/c67_link.rs:21:10
   |
21 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/c67_link.rs:22:10
   |
22 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/c67_link.rs:61:10
   |
61 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/c67_link.rs:63:10
   |
63 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/c67_link.rs:71:10
   |
71 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/c67_link.rs:275:10
    |
275 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/c67_link.rs:276:10
    |
276 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/c67_link.rs:284:10
    |
284 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/c67_link.rs:285:10
    |
285 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/c67_link.rs:425:10
    |
425 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint32_t` should have an upper camel case name
   --> src/c67_link.rs:442:10
    |
442 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/c67_link.rs:446:10
    |
446 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/c67_link.rs:513:21
    |
513 |               orig = (*(ptr as *mut libc::c_int) >> 7 as libc::c_int
    |  _____________________^
514 | |                 & 0xffff as libc::c_int) as uint32_t;
    | |_______________________________________^ help: consider parenthesizing your expression: `(*(ptr as *mut libc::c_int) >> 7 as libc::c_int) & 0xffff as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/c67_link.rs:516:22
    |
516 |                   |= ((*(ptr.offset(4 as libc::c_int as isize) as *mut libc::c_int)
    |  ______________________^
517 | |                     >> 7 as libc::c_int & 0xffff as libc::c_int) << 16 as libc::c_int)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
516 ~                 |= (((*(ptr.offset(4 as libc::c_int as isize) as *mut libc::c_int)
517 ~                     >> 7 as libc::c_int) & 0xffff as libc::c_int) << 16 as libc::c_int)
    |

warning: operator precedence can trip the unwary
   --> src/c67_link.rs:520:41
    |
520 |                   as *mut libc::c_int) = ((*(ptr as *mut libc::c_int)
    |  _________________________________________^
521 | |                 & !((0xffff as libc::c_int) << 7 as libc::c_int)) as Elf64_Addr
522 | |                 | (val.wrapping_add(orig as Elf64_Addr)
523 | |                     & 0xffff as libc::c_int as Elf64_Addr) << 7 as libc::c_int)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
520 ~                 as *mut libc::c_int) = ((*(ptr as *mut libc::c_int)
521 +                 & !((0xffff as libc::c_int) << 7 as libc::c_int)) as Elf64_Addr | ((val.wrapping_add(orig as Elf64_Addr)
522 ~                     & 0xffff as libc::c_int as Elf64_Addr) << 7 as libc::c_int))
    |

warning: operator precedence can trip the unwary
   --> src/c67_link.rs:526:41
    |
526 |                   as *mut libc::c_int) = ((*(ptr.offset(4 as libc::c_int as isize)
    |  _________________________________________^
527 | |                 as *mut libc::c_int) & !((0xffff as libc::c_int) << 7 as libc::c_int))
528 | |                 as Elf64_Addr
529 | |                 | (val.wrapping_add(orig as Elf64_Addr) >> 16 as libc::c_int
530 | |                     & 0xffff as libc::c_int as Elf64_Addr) << 7 as libc::c_int)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
526 ~                 as *mut libc::c_int) = ((*(ptr.offset(4 as libc::c_int as isize)
527 +                 as *mut libc::c_int) & !((0xffff as libc::c_int) << 7 as libc::c_int))
528 +                 as Elf64_Addr | ((val.wrapping_add(orig as Elf64_Addr) >> 16 as libc::c_int
529 ~                     & 0xffff as libc::c_int as Elf64_Addr) << 7 as libc::c_int))
    |

warning: operator precedence can trip the unwary
   --> src/c67_link.rs:529:20
    |
529 |                   | (val.wrapping_add(orig as Elf64_Addr) >> 16 as libc::c_int
    |  ____________________^
530 | |                     & 0xffff as libc::c_int as Elf64_Addr) << 7 as libc::c_int)
    | |_________________________________________________________^ help: consider parenthesizing your expression: `(val.wrapping_add(orig as Elf64_Addr) >> 16 as libc::c_int) & 0xffff as libc::c_int as Elf64_Addr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/conftest.rs:24:10
   |
24 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__off_t` should have an upper camel case name
  --> src/conftest.rs:25:10
   |
25 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/conftest.rs:26:10
   |
26 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/conftest.rs:60:10
   |
60 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `size_t` should have an upper camel case name
  --> src/i386_asm.rs:71:10
   |
71 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__int8_t` should have an upper camel case name
  --> src/i386_asm.rs:72:10
   |
72 | pub type __int8_t = libc::c_schar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `__uint8_t` should have an upper camel case name
  --> src/i386_asm.rs:73:10
   |
73 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/i386_asm.rs:74:10
   |
74 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/i386_asm.rs:75:10
   |
75 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/i386_asm.rs:76:10
   |
76 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/i386_asm.rs:77:10
   |
77 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/i386_asm.rs:78:10
   |
78 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/i386_asm.rs:79:10
   |
79 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/i386_asm.rs:80:10
   |
80 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int8_t` should have an upper camel case name
  --> src/i386_asm.rs:81:10
   |
81 | pub type int8_t = __int8_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `int32_t` should have an upper camel case name
  --> src/i386_asm.rs:82:10
   |
82 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/i386_asm.rs:83:10
   |
83 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/i386_asm.rs:122:10
    |
122 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/i386_asm.rs:124:10
    |
124 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/i386_asm.rs:132:10
    |
132 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/i386_asm.rs:336:10
    |
336 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/i386_asm.rs:337:10
    |
337 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/i386_asm.rs:345:10
    |
345 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/i386_asm.rs:346:10
    |
346 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/i386_asm.rs:486:10
    |
486 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/i386_asm.rs:503:10
    |
503 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/i386_asm.rs:504:10
    |
504 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/i386_asm.rs:505:10
    |
505 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/i386_asm.rs:506:10
    |
506 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/i386_asm.rs:517:10
    |
517 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: type `tcc_token` should have an upper camel case name
   --> src/i386_asm.rs:622:10
    |
622 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `C2RustUnnamed_10` should have an upper camel case name
    --> src/i386_asm.rs:1737:10
     |
1737 | pub type C2RustUnnamed_10 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed10`

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:1745:13
     |
1745 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1746 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1747 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1745 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1746 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:1758:14
     |
1758 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:1762:12
     |
1762 |       return read16le(p) as uint32_t
     |  ____________^
1763 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1764 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1762 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1763 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2087:20
     |
2087 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2089 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2090 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2087 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2088 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2089 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2087:20
     |
2087 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2089 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2087 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2088 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2087:20
     |
2087 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2161:32
     |
2161 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________________________^
2162 | |                     | (1 as libc::c_int) << OPT_REG8_LOW as libc::c_int) as uint32_t;
     | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG8_LOW as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2336:12
     |
2336 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
2337 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2339 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2340 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
2341 | |             | (1 as libc::c_int) << OPT_SSE as libc::c_int) as uint32_t != 0
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2336 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2337 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2339 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2340 ~             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)) as uint32_t != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2336:12
     |
2336 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
2337 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2339 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2340 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
     | |__________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2336 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2337 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2339 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2336:12
     |
2336 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
2337 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2339 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2336 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2337 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2336:12
     |
2336 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
2337 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2338 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2336 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2337 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2336:12
     |
2336 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
2337 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2418:20
     |
2418 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2419 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2420 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2421 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2422 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2418 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2419 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2420 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2421 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2418:20
     |
2418 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2419 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2420 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2421 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2418 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2419 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2420 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2418:20
     |
2418 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2419 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2420 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2418 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2419 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2418:20
     |
2418 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
2419 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2467 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
2468 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
2469 | |                 | (1 as libc::c_int) << OPT_CR as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2463 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2464 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2467 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
2468 +                 | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2467 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
2468 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2463 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2464 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2467 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
2467 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2463 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2464 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2466 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2463 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2464 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2465 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2463 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2464 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2463:16
     |
2463 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________^
2464 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/i386_asm.rs:2745:21
     |
2745 | /                     if !((*pa).nb_ops as libc::c_int != nb_ops) {
2746 | |                         if !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
2747 | |                             && ops[0 as libc::c_int as usize].type_0
2748 | |                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
...    |
2826 | |                     }
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2745 ~                     if !((*pa).nb_ops as libc::c_int != nb_ops) && !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
2746 +                             && ops[0 as libc::c_int as usize].type_0
2747 +                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
2748 +                                     as uint32_t
2749 +                             && ops[1 as libc::c_int as usize].type_0
2750 +                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2751 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2752 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2753 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
2754 +                                     as uint32_t
2755 +                                 == ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
2756 +                                     as uint32_t
2757 +                             && (*pa).instr_type as libc::c_int & 0x100 as libc::c_int
2758 +                                 == 0) {
2759 +                         alltypes = 0 as libc::c_int;
2760 +                         i = 0 as libc::c_int;
2761 +                         loop {
2762 +                             if !(i < nb_ops) {
2763 +                                 current_block_53 = 8834769789432328951;
2764 +                                 break;
2765 +                             }
2766 +                             let mut op1_0: libc::c_int = 0;
2767 +                             let mut op2: libc::c_int = 0;
2768 +                             op1_0 = (*pa).op_type[i as usize] as libc::c_int;
2769 +                             op2 = op1_0 & 0x1f as libc::c_int;
2770 +                             match op2 {
2771 +                                 24 => {
2772 +                                     v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
2773 +                                         | (1 as libc::c_int) << OPT_IM16 as libc::c_int
2774 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
2775 +                                 }
2776 +                                 25 => {
2777 +                                     v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
2778 +                                         | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2779 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2780 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
2781 +                                 }
2782 +                                 26 => {
2783 +                                     v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
2784 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2785 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
2786 +                                 }
2787 +                                 27 => {
2788 +                                     v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
2789 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
2790 +                                 }
2791 +                                 28 => {
2792 +                                     v = (1 as libc::c_int) << OPT_MMX as libc::c_int
2793 +                                         | (1 as libc::c_int) << OPT_SSE as libc::c_int;
2794 +                                 }
2795 +                                 29 | 30 => {
2796 +                                     v = (1 as libc::c_int) << OPT_ADDR as libc::c_int;
2797 +                                 }
2798 +                                 _ => {
2799 +                                     v = (1 as libc::c_int) << op2;
2800 +                                 }
2801 +                             }
2802 +                             if op1_0 & OPT_EA as libc::c_int != 0 {
2803 +                                 v |= 0x40000000 as libc::c_int;
2804 +                             }
2805 +                             op_type[i as usize] = v;
2806 +                             if ops[i as usize].type_0 & v as uint32_t
2807 +                                 == 0 as libc::c_int as uint32_t
2808 +                             {
2809 +                                 current_block_53 = 15768484401365413375;
2810 +                                 break;
2811 +                             }
2812 +                             alltypes = (alltypes as uint32_t | ops[i as usize].type_0)
2813 +                                 as libc::c_int;
2814 +                             i += 1;
2815 +                             i;
2816 +                         }
2817 +                         match current_block_53 {
2818 +                             15768484401365413375 => {}
2819 +                             _ => {
2820 +                                 break;
2821 +                             }
2822 +                         }
2823 +                     }
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2751:36
     |
2751 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2752 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2753 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2754 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2751 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2752 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2753 ~                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2751:36
     |
2751 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2752 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2753 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2751 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2752 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2751:36
     |
2751 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2752 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2774:45
     |
2774 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ___________________________^
2775 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
2776 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2774 ~                                         v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
2775 ~                                             | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2774:45
     |
2774 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ___________________________^
2775 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2779:45
     |
2779 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ___________________________^
2780 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2781 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2782 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2779 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
2780 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2781 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2779:45
     |
2779 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ___________________________^
2780 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2781 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2779 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
2780 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2779:45
     |
2779 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ___________________________^
2780 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2785:45
     |
2785 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
     |  ___________________________^
2786 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2787 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2785 ~                                         v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
2786 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2785:45
     |
2785 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
     |  ___________________________^
2786 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG16 as libc::c_int) | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2790:45
     |
2790 |   ...                   v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
     |  ___________________________^
2791 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM16 as libc::c_int) | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2794:45
     |
2794 |   ...                   v = (1 as libc::c_int) << OPT_MMX as libc::c_int
     |  ___________________________^
2795 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int;
     | |________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2893:28
     |
2893 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
2894 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2895 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2896 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2893 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2894 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2895 ~                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2893:28
     |
2893 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
2894 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2895 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2893 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2894 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2893:28
     |
2893 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
2894 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2899:32
     |
2899 |   ...                   & ((1 as libc::c_int) << OPT_CL as libc::c_int
     |  __________________________^
2900 | | ...                       | (1 as libc::c_int) << OPT_DX as libc::c_int) == 0
     | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_CL as libc::c_int) | ((1 as libc::c_int) << OPT_DX as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2903:32
     |
2903 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2904 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2905 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
2906 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2903 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2904 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2905 ~                                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2903:32
     |
2903 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2904 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
2905 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2903 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
2904 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2903:32
     |
2903 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
2904 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2916:32
     |
2916 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
     |  __________________________^
2917 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
2918 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int) as uint32_t
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2916 ~                             & ((1 as libc::c_int) << OPT_SEG as libc::c_int
2917 ~                                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)) as uint32_t
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2916:32
     |
2916 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
     |  __________________________^
2917 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_SEG as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2940:20
     |
2940 |                 || alltypes & (1 as libc::c_int) << OPT_REG64 as libc::c_int != 0
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `alltypes & ((1 as libc::c_int) << OPT_REG64 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2997:28
     |
2997 |                           & ((1 as libc::c_int) << OPT_MMX as libc::c_int
     |  ____________________________^
2998 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int)
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:2999:28
     |
2999 |                           == (1 as libc::c_int) << OPT_MMX as libc::c_int
     |  ____________________________^
3000 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3032:21
     |
3032 |                   v = (v & !(0xff as libc::c_int)) << 8 as libc::c_int
     |  _____________________^
3033 | |                     | 0xf00 as libc::c_int | v & 0xff as libc::c_int;
     | |__________________________________________^ help: consider parenthesizing your expression: `((v & !(0xff as libc::c_int)) << 8 as libc::c_int) | 0xf00 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3087:32
     |
3087 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________________________^
3088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3089 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3090 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3087 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3088 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3089 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t;
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3087:32
     |
3087 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________________________^
3088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3089 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3087 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3088 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3087:32
     |
3087 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ________________________________^
3088 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3127 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
3128 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
3129 | | ...                       | (1 as libc::c_int) << OPT_INDIR as libc::c_int) != 0
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3123 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3124 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3127 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int
3128 ~                                     | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_INDIR as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3127 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
3128 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
     | |________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3123 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3124 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3127 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3127 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
     | |________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3123 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3124 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3126 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3123 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3124 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3125 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3123 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3124 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3123:36
     |
3123 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  __________________________^
3124 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...    |
3153 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
3154 | |                             | (1 as libc::c_int) << OPT_SEG as libc::c_int) != 0
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
3151 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
3152 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int
3153 ~                             | (1 as libc::c_int) << OPT_DB as libc::c_int | ((1 as libc::c_int) << OPT_SEG as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...    |
3152 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
3153 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
3151 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
3152 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int | ((1 as libc::c_int) << OPT_DB as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...    |
3151 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
3152 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
3151 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int | ((1 as libc::c_int) << OPT_TR as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
3151 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
3150 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3149 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
     | |__________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3148 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3147 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3145 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3146 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3145:28
     |
3145 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________________^
3146 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3181:20
     |
3181 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
3182 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3183 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3184 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
3185 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3181 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3182 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3183 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3184 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3181:20
     |
3181 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
3182 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3183 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3184 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3181 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3182 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3183 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3181:20
     |
3181 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
3182 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3183 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3181 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3182 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3181:20
     |
3181 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________________^
3182 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3253:11
     |
3253 |     op1 = v >> 8 as libc::c_int & 0xff as libc::c_int;
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v >> 8 as libc::c_int) & 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3272:15
     |
3272 |         reg = (*pa).instr_type as libc::c_int >> 13 as libc::c_int & 7 as libc::c_int;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*pa).instr_type as libc::c_int >> 13 as libc::c_int) & 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3285:16
     |
3285 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3286 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3288 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
3289 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
3290 | |                 | (1 as libc::c_int) << OPT_ADDR as libc::c_int) != 0
     | |_______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3285 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
3286 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3288 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
3289 ~                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_ADDR as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3285:16
     |
3285 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3286 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3288 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
3289 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
     | |_______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3285 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
3286 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3288 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3285:16
     |
3285 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3286 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3288 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
     | |_______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3285 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
3286 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3285:16
     |
3285 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3286 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3287 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
     | |_______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3285 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
3286 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3285:16
     |
3285 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3286 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3292:16
     |
3292 |               if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ________________^
3293 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `v | (1 as libc::c_int) << OPT_IM8 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3292:16
     |
3292 |             if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v | ((1 as libc::c_int) << OPT_IM8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3294:20
     |
3294 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3295 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3296 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
3297 | |                     | (1 as libc::c_int) << OPT_IM64 as libc::c_int
     | |___________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3294 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
3295 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3296 +                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3294:20
     |
3294 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3295 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
3296 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
     | |___________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3294 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
3295 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3294:20
     |
3294 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3295 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3304:24
     |
3304 |                     || v & (1 as libc::c_int) << OPT_IM64 as libc::c_int
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3313:20
     |
3313 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3314 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
3315 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int) != 0
     | |___________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3313 ~                 & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
3314 ~                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)) != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3313:20
     |
3313 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3314 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3321:20
     |
3321 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
     |  ____________________^
3322 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int) != 0
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3325:23
     |
3325 |             } else if v & (1 as libc::c_int) << OPT_IM16 as libc::c_int != 0 {
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3327:23
     |
3327 |             } else if v & (1 as libc::c_int) << OPT_IM64 as libc::c_int != 0 {
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3428:12
     |
3428 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
3429 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3430 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
3431 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3428 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3429 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3430 ~             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3428:12
     |
3428 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
3429 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
3430 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3428 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
3429 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:3428:12
     |
3428 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
     |  ____________^
3429 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
     | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4242:21
     |
4242 |                     0xc1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4247:30
     |
4247 |                   instr_type: (0x60 as libc::c_int
     |  ______________________________^
4248 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4267:21
     |
4267 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4272:30
     |
4272 |                   instr_type: (0x60 as libc::c_int
     |  ______________________________^
4273 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4292:21
     |
4292 |                     0xc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4297:30
     |
4297 |                   instr_type: (0x60 as libc::c_int
     |  ______________________________^
4298 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4317:21
     |
4317 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4322:30
     |
4322 |                   instr_type: (0x60 as libc::c_int
     |  ______________________________^
4323 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4342:21
     |
4342 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4347:30
     |
4347 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4348 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4367:21
     |
4367 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4372:30
     |
4372 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4373 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4392:21
     |
4392 |                     0x6c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4397:30
     |
4397 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
4398 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4417:21
     |
4417 |                     0x6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4422:30
     |
4422 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
4423 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4442:21
     |
4442 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4447:30
     |
4447 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4448 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4467:21
     |
4467 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4472:30
     |
4472 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4473 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4492:21
     |
4492 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4497:30
     |
4497 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4498 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4517:21
     |
4517 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4522:30
     |
4522 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4523 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4542:21
     |
4542 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4547:30
     |
4547 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4548 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4567:21
     |
4567 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4572:30
     |
4572 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4573 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4592:21
     |
4592 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4597:30
     |
4597 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4598 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4617:21
     |
4617 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4622:30
     |
4622 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4623 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4642:21
     |
4642 |                     0xfbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4647:30
     |
4647 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4648 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4671:21
     |
4671 |                     0xfbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4676:30
     |
4676 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4677 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4700:21
     |
4700 |                     0xfa3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4705:30
     |
4705 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4706 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4729:21
     |
4729 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4734:30
     |
4734 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4735 | |                     | (4 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4758:21
     |
4758 |                     0xfab as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfab as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4763:30
     |
4763 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4764 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4787:21
     |
4787 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4792:30
     |
4792 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4793 | |                     | (5 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4816:21
     |
4816 |                     0xfb3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4821:30
     |
4821 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4822 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4845:21
     |
4845 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4850:30
     |
4850 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4851 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4874:21
     |
4874 |                     0xfbb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4879:30
     |
4879 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4880 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4903:21
     |
4903 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4908:30
     |
4908 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4909 | |                     | (7 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4932:21
     |
4932 |                     0xf30fb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4937:30
     |
4937 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4938 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4961:21
     |
4961 |                     0xf30fbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4966:30
     |
4966 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4967 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4990:21
     |
4990 |                     0xf30fbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:4995:30
     |
4995 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
4996 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5019:21
     |
5019 |                     0x480f07 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x480f07 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5024:30
     |
5024 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5043:21
     |
5043 |                     0x88 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x88 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5048:30
     |
5048 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
5049 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
5050 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5048 ~                 instr_type: (0x8 as libc::c_int
5049 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5073:21
     |
5073 |                     0x8a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5078:30
     |
5078 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
5079 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
5080 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5078 ~                 instr_type: (0x8 as libc::c_int
5079 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5103:21
     |
5103 |                     0xb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5108:30
     |
5108 |                   instr_type: (0x4 as libc::c_int
     |  ______________________________^
5109 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
5110 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5108 ~                 instr_type: (0x4 as libc::c_int
5109 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5133:21
     |
5133 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5138:30
     |
5138 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5161:21
     |
5161 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5166:30
     |
5166 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5189:21
     |
5189 |                     0xc6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5194:30
     |
5194 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
5195 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
5196 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5194 ~                 instr_type: (0x8 as libc::c_int
5195 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5219:21
     |
5219 |                     0x8c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5224:30
     |
5224 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5225 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5248:21
     |
5248 |                     0x8e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5253:30
     |
5253 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5254 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5277:21
     |
5277 |                     0xf20 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf20 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5282:30
     |
5282 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5283 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5306:21
     |
5306 |                     0xf21 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf21 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5311:30
     |
5311 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5312 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5335:21
     |
5335 |                     0xf22 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf22 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5340:30
     |
5340 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5341 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5364:21
     |
5364 |                     0xf23 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf23 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5369:30
     |
5369 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5370 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5393:21
     |
5393 |                     0x660fbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5398:30
     |
5398 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5421:21
     |
5421 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5426:30
     |
5426 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5449:21
     |
5449 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5454:30
     |
5454 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5477:21
     |
5477 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5482:30
     |
5482 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5505:21
     |
5505 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5510:30
     |
5510 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5533:21
     |
5533 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5538:30
     |
5538 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5561:21
     |
5561 |                     0xfb6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5566:30
     |
5566 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5567 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5590:21
     |
5590 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5595:30
     |
5595 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5618:21
     |
5618 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5623:30
     |
5623 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5646:21
     |
5646 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5651:30
     |
5651 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5670:21
     |
5670 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5675:30
     |
5675 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5694:21
     |
5694 |                     0x666a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x666a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5699:30
     |
5699 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5718:21
     |
5718 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5723:30
     |
5723 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5724 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5743:21
     |
5743 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5748:30
     |
5748 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5749 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5768:21
     |
5768 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5773:30
     |
5773 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5774 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5797:21
     |
5797 |                     0x6668 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6668 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5802:30
     |
5802 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5821:21
     |
5821 |                     0x68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5826:30
     |
5826 |                   instr_type: (0x1000 as libc::c_int
     |  ______________________________^
5827 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5846:21
     |
5846 |                     0x6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5851:30
     |
5851 |                   instr_type: (0x1000 as libc::c_int
     |  ______________________________^
5852 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5871:21
     |
5871 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5876:30
     |
5876 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5877 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5896:21
     |
5896 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5901:30
     |
5901 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5902 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5921:21
     |
5921 |                     0x8f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5926:30
     |
5926 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5927 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5950:21
     |
5950 |                     0x7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5955:30
     |
5955 |                   instr_type: (0x1000 as libc::c_int
     |  ______________________________^
5956 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5975:21
     |
5975 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:5980:30
     |
5980 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
5981 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6004:21
     |
6004 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6009:30
     |
6009 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6010 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6033:21
     |
6033 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6038:30
     |
6038 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6039 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6040 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6038 ~                 instr_type: (0x8 as libc::c_int
6039 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6063:21
     |
6063 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6068:30
     |
6068 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6069 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6070 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6068 ~                 instr_type: (0x8 as libc::c_int
6069 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6093:21
     |
6093 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6098:30
     |
6098 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6099 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6122:21
     |
6122 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6127:30
     |
6127 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6128 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6147:21
     |
6147 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6152:30
     |
6152 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6153 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6176:21
     |
6176 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6181:30
     |
6181 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6182 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6201:21
     |
6201 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6206:30
     |
6206 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6207 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6230:21
     |
6230 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6235:30
     |
6235 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6236 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6255:21
     |
6255 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6260:30
     |
6260 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6261 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6284:21
     |
6284 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6289:30
     |
6289 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
     |  ______________________________^
6290 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6309:21
     |
6309 |                     0x8d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6314:30
     |
6314 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6315 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6338:21
     |
6338 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6343:30
     |
6343 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6366:21
     |
6366 |                     0xc5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6371:30
     |
6371 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6394:21
     |
6394 |                     0xfb2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6399:30
     |
6399 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6422:21
     |
6422 |                     0xfb4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6427:30
     |
6427 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6450:21
     |
6450 |                     0xfb5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6455:30
     |
6455 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6478:21
     |
6478 |                     0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6483:30
     |
6483 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
6484 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6485 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6483 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
6484 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6508:21
     |
6508 |                     0x2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6513:30
     |
6513 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
6514 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6515 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6513 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
6514 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6538:21
     |
6538 |                     0x4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6543:30
     |
6543 |                   instr_type: (0x30 as libc::c_int
     |  ______________________________^
6544 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6545 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6543 ~                 instr_type: (0x30 as libc::c_int
6544 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6568:21
     |
6568 |                     0x83 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x83 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6573:30
     |
6573 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
6574 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6573 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
6574 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6597:21
     |
6597 |                     0x80 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x80 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6602:30
     |
6602 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
6603 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6604 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6602 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
6603 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6627:21
     |
6627 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6632:30
     |
6632 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6633 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6634 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6632 ~                 instr_type: (0x8 as libc::c_int
6633 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6657:21
     |
6657 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6662:30
     |
6662 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6663 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6664 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6662 ~                 instr_type: (0x8 as libc::c_int
6663 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6687:21
     |
6687 |                     0xa8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6692:30
     |
6692 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6693 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6716:21
     |
6716 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6721:30
     |
6721 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6722 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6723 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6721 ~                 instr_type: (0x8 as libc::c_int
6722 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6746:21
     |
6746 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6751:30
     |
6751 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6752 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6753 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6751 ~                 instr_type: (0x8 as libc::c_int
6752 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6776:21
     |
6776 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6781:30
     |
6781 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6782 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6783 | |                     | (1 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6781 ~                 instr_type: (0x8 as libc::c_int
6782 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((1 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6806:21
     |
6806 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6811:30
     |
6811 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6812 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6813 | |                     | (2 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6811 ~                 instr_type: (0x8 as libc::c_int
6812 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((2 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6836:21
     |
6836 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6841:30
     |
6841 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6842 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6843 | |                     | (3 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6841 ~                 instr_type: (0x8 as libc::c_int
6842 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((3 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6866:21
     |
6866 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6871:30
     |
6871 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6872 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6873 | |                     | (4 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6871 ~                 instr_type: (0x8 as libc::c_int
6872 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((4 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6896:21
     |
6896 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6901:30
     |
6901 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
6902 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
6903 | |                     | (5 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6901 ~                 instr_type: (0x8 as libc::c_int
6902 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((5 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6926:21
     |
6926 |                     0xfaf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfaf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6931:30
     |
6931 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6932 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6955:21
     |
6955 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6960:30
     |
6960 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6961 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6984:21
     |
6984 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:6989:30
     |
6989 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
6990 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7013:21
     |
7013 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7018:30
     |
7018 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7019 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7042:21
     |
7042 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7047:30
     |
7047 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7048 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7071:21
     |
7071 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7076:30
     |
7076 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7077 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
7078 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7076 ~                 instr_type: (0x8 as libc::c_int
7077 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7101:21
     |
7101 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7106:30
     |
7106 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7107 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
7108 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7106 ~                 instr_type: (0x8 as libc::c_int
7107 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7131:21
     |
7131 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7136:30
     |
7136 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7137 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
7138 | |                     | (7 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7136 ~                 instr_type: (0x8 as libc::c_int
7137 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7161:21
     |
7161 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7166:30
     |
7166 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7167 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
7168 | |                     | (7 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7166 ~                 instr_type: (0x8 as libc::c_int
7167 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7191:21
     |
7191 |                     0xc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7196:30
     |
7196 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7197 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
7198 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7196 ~                 instr_type: (0x8 as libc::c_int
7197 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7221:21
     |
7221 |                     0xd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7226:30
     |
7226 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7227 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
7228 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7226 ~                 instr_type: (0x8 as libc::c_int
7227 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7251:21
     |
7251 |                     0xd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7256:30
     |
7256 |                   instr_type: (0x8 as libc::c_int
     |  ______________________________^
7257 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
7258 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
7256 ~                 instr_type: (0x8 as libc::c_int
7257 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7281:21
     |
7281 |                     0xfa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7286:30
     |
7286 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7287 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7310:21
     |
7310 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7315:30
     |
7315 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7316 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7339:21
     |
7339 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7344:30
     |
7344 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7345 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7368:21
     |
7368 |                     0xfac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7373:30
     |
7373 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7374 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7397:21
     |
7397 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7402:30
     |
7402 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7403 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7426:21
     |
7426 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7431:30
     |
7431 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
7432 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7455:21
     |
7455 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7460:30
     |
7460 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7479:21
     |
7479 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7484:30
     |
7484 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7503:21
     |
7503 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7508:30
     |
7508 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7527:21
     |
7527 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7532:30
     |
7532 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7551:21
     |
7551 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7556:30
     |
7556 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7575:21
     |
7575 |                     0xeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7580:30
     |
7580 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7599:21
     |
7599 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7604:30
     |
7604 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7623:21
     |
7623 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7628:30
     |
7628 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7647:21
     |
7647 |                     0x66ff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x66ff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7652:30
     |
7652 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7671:21
     |
7671 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7676:30
     |
7676 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7695:21
     |
7695 |                     0xcd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xcd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7700:30
     |
7700 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7719:21
     |
7719 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7724:30
     |
7724 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
     |  ______________________________^
7725 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7748:21
     |
7748 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7753:30
     |
7753 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
     |  ______________________________^
7754 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7777:21
     |
7777 |                     0xc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7782:30
     |
7782 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7805:21
     |
7805 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7810:30
     |
7810 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7829:21
     |
7829 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7834:30
     |
7834 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7853:21
     |
7853 |                     0xca as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xca as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7858:30
     |
7858 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7877:21
     |
7877 |                     0x70 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x70 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7882:30
     |
7882 |                   instr_type: (0x50 as libc::c_int
     |  ______________________________^
7883 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7902:21
     |
7902 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7907:30
     |
7907 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7926:21
     |
7926 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7931:30
     |
7931 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7950:21
     |
7950 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7955:30
     |
7955 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7974:21
     |
7974 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7979:30
     |
7979 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:7998:21
     |
7998 |                     0xe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8003:30
     |
8003 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8022:21
     |
8022 |                     0x67e3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x67e3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8027:30
     |
8027 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8046:21
     |
8046 |                     0xd8d9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8d9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8051:30
     |
8051 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8070:21
     |
8070 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8075:30
     |
8075 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8076 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8095:21
     |
8095 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8100:30
     |
8100 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8101 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8124:21
     |
8124 |                     0xdcc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8129:30
     |
8129 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8130 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8153:21
     |
8153 |                     0xdcc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8158:30
     |
8158 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8159 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8182:21
     |
8182 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8187:30
     |
8187 |                   instr_type: (0x40 as libc::c_int
     |  ______________________________^
8188 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8207:21
     |
8207 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8212:30
     |
8212 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8213 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8232:21
     |
8232 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8237:30
     |
8237 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8238 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8261:21
     |
8261 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8266:30
     |
8266 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
     |  ______________________________^
8267 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8290:21
     |
8290 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8295:30
     |
8295 |                   instr_type: (0x40 as libc::c_int
     |  ______________________________^
8296 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8315:21
     |
8315 |                     0xd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8320:30
     |
8320 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
8321 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8340:21
     |
8340 |                     0xda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8345:30
     |
8345 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
8346 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8365:21
     |
8365 |                     0xdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8370:30
     |
8370 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
8371 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8390:21
     |
8390 |                     0xde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8395:30
     |
8395 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
     |  ______________________________^
8396 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8415:21
     |
8415 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8420:30
     |
8420 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8439:21
     |
8439 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8444:30
     |
8444 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8463:21
     |
8463 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8468:30
     |
8468 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8487:21
     |
8487 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8492:30
     |
8492 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8511:21
     |
8511 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8516:30
     |
8516 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8535:21
     |
8535 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8540:30
     |
8540 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8559:21
     |
8559 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8564:30
     |
8564 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8583:21
     |
8583 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8588:30
     |
8588 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8607:21
     |
8607 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8612:30
     |
8612 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8631:21
     |
8631 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8636:30
     |
8636 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8655:21
     |
8655 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8660:30
     |
8660 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8679:21
     |
8679 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8684:30
     |
8684 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8703:21
     |
8703 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8708:30
     |
8708 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8727:21
     |
8727 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8732:30
     |
8732 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8751:21
     |
8751 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8756:30
     |
8756 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8775:21
     |
8775 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8780:30
     |
8780 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8799:21
     |
8799 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8804:30
     |
8804 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8823:21
     |
8823 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8828:30
     |
8828 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8847:21
     |
8847 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8852:30
     |
8852 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8871:21
     |
8871 |                     0xddd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8876:30
     |
8876 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8895:21
     |
8895 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8900:30
     |
8900 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8919:21
     |
8919 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8924:30
     |
8924 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8943:21
     |
8943 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8948:30
     |
8948 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8967:21
     |
8967 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8972:30
     |
8972 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8991:21
     |
8991 |                     0xd9c8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:8996:30
     |
8996 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9015:21
     |
9015 |                     0xdde0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9020:30
     |
9020 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9039:21
     |
9039 |                     0xdde8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9044:30
     |
9044 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9063:21
     |
9063 |                     0xdbe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9068:30
     |
9068 |                   instr_type: (0x10 as libc::c_int
     |  ______________________________^
9069 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9088:21
     |
9088 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9093:30
     |
9093 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9112:21
     |
9112 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9117:30
     |
9117 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9136:21
     |
9136 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9141:30
     |
9141 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
     |  ______________________________^
9142 | |                     | (7 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9161:21
     |
9161 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9166:30
     |
9166 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9185:21
     |
9185 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9190:30
     |
9190 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9209:21
     |
9209 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9214:30
     |
9214 |                   instr_type: (0x10 as libc::c_int
     |  ______________________________^
9215 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9234:21
     |
9234 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9239:30
     |
9239 |                   instr_type: (0x10 as libc::c_int
     |  ______________________________^
9240 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9259:21
     |
9259 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9264:30
     |
9264 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
     |  ______________________________^
9265 | |                     | (7 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9284:21
     |
9284 |                     0xdbe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9289:30
     |
9289 |                   instr_type: (0x10 as libc::c_int
     |  ______________________________^
9290 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9309:21
     |
9309 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9314:30
     |
9314 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9333:21
     |
9333 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9338:30
     |
9338 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
     |  ______________________________^
9339 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9358:21
     |
9358 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9363:30
     |
9363 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9382:21
     |
9382 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9387:30
     |
9387 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9406:21
     |
9406 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9411:30
     |
9411 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
     |  ______________________________^
9412 | |                     | (6 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9431:21
     |
9431 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9436:30
     |
9436 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9455:21
     |
9455 |                     0xddc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9460:30
     |
9460 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9479:21
     |
9479 |                     0xdfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9484:30
     |
9484 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9503:21
     |
9503 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9508:30
     |
9508 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9527:21
     |
9527 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9532:30
     |
9532 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9551:21
     |
9551 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9556:30
     |
9556 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
     |  ______________________________^
9557 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9576:21
     |
9576 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9581:30
     |
9581 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
     |  ______________________________^
9582 | |                     | (1 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9601:21
     |
9601 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9606:30
     |
9606 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9629:21
     |
9629 |                     0xf02 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf02 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9634:30
     |
9634 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
9635 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9658:21
     |
9658 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9663:30
     |
9663 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9682:21
     |
9682 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9687:30
     |
9687 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9706:21
     |
9706 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9711:30
     |
9711 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9730:21
     |
9730 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9735:30
     |
9735 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9754:21
     |
9754 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9759:30
     |
9759 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9782:21
     |
9782 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9787:30
     |
9787 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9810:21
     |
9810 |                     0xf03 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf03 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9815:30
     |
9815 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
     |  ______________________________^
9816 | |                     | (0 as libc::c_int) << 13 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9839:21
     |
9839 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9844:30
     |
9844 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9867:21
     |
9867 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9872:30
     |
9872 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9891:21
     |
9891 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9896:30
     |
9896 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9915:21
     |
9915 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9920:30
     |
9920 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9939:21
     |
9939 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9944:30
     |
9944 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9963:21
     |
9963 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9968:30
     |
9968 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9991:21
     |
9991 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/i386_asm.rs:9996:30
     |
9996 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10019:21
      |
10019 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10024:30
      |
10024 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10047:21
      |
10047 |                     0x660f00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660f00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10052:30
      |
10052 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10071:21
      |
10071 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10076:30
      |
10076 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
10077 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10096:21
      |
10096 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10101:30
      |
10101 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10124:21
      |
10124 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10129:30
      |
10129 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10152:21
      |
10152 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10157:30
      |
10157 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10176:21
      |
10176 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10181:30
      |
10181 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10200:21
      |
10200 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10205:30
      |
10205 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10224:21
      |
10224 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10229:30
      |
10229 |                   instr_type: (0x4 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
10230 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10249:21
      |
10249 |                     0xfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10254:30
      |
10254 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
10255 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
10256 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10254 ~                 instr_type: (0x8 as libc::c_int
10255 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10279:21
      |
10279 |                     0xfb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10284:30
      |
10284 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
10285 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
10286 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10284 ~                 instr_type: (0x8 as libc::c_int
10285 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10309:21
      |
10309 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10314:30
      |
10314 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10333:21
      |
10333 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10338:30
      |
10338 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10357:21
      |
10357 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10362:30
      |
10362 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
10363 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10382:21
      |
10382 |                     0xf40 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf40 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10387:30
      |
10387 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
10388 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10387 ~                 instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
10388 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10411:21
      |
10411 |                     0xdac0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10416:30
      |
10416 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10439:21
      |
10439 |                     0xdac8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10444:30
      |
10444 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10467:21
      |
10467 |                     0xdad0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10472:30
      |
10472 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10495:21
      |
10495 |                     0xdad8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10500:30
      |
10500 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10523:21
      |
10523 |                     0xdbc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10528:30
      |
10528 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10551:21
      |
10551 |                     0xdbc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10556:30
      |
10556 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10579:21
      |
10579 |                     0xdbd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10584:30
      |
10584 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10607:21
      |
10607 |                     0xdbd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10612:30
      |
10612 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10635:21
      |
10635 |                     0xdbe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10640:30
      |
10640 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10663:21
      |
10663 |                     0xdbf0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbf0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10668:30
      |
10668 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10691:21
      |
10691 |                     0xdfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10696:30
      |
10696 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10719:21
      |
10719 |                     0xdff0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdff0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10724:30
      |
10724 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10747:21
      |
10747 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10752:30
      |
10752 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10775:21
      |
10775 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10780:30
      |
10780 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10803:21
      |
10803 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10808:30
      |
10808 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
10809 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10832:21
      |
10832 |                     0xf6f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10837:30
      |
10837 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10860:21
      |
10860 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10865:30
      |
10865 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10888:21
      |
10888 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10893:30
      |
10893 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10916:21
      |
10916 |                     0xf7f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10921:30
      |
10921 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10944:21
      |
10944 |                     0x660fd6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fd6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10949:30
      |
10949 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10972:21
      |
10972 |                     0xf30f7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:10977:30
      |
10977 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11000:21
      |
11000 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11005:30
      |
11005 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11028:21
      |
11028 |                     0xf6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11033:30
      |
11033 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11056:21
      |
11056 |                     0xf63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11061:30
      |
11061 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11084:21
      |
11084 |                     0xf67 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf67 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11089:30
      |
11089 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11112:21
      |
11112 |                     0xffc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11117:30
      |
11117 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11140:21
      |
11140 |                     0xffd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11145:30
      |
11145 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11168:21
      |
11168 |                     0xffe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11173:30
      |
11173 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11196:21
      |
11196 |                     0xfec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11201:30
      |
11201 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11224:21
      |
11224 |                     0xfed as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfed as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11229:30
      |
11229 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11252:21
      |
11252 |                     0xfdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11257:30
      |
11257 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11280:21
      |
11280 |                     0xfdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11285:30
      |
11285 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11308:21
      |
11308 |                     0xfdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11313:30
      |
11313 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11336:21
      |
11336 |                     0xfdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11341:30
      |
11341 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11364:21
      |
11364 |                     0xf74 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf74 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11369:30
      |
11369 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11392:21
      |
11392 |                     0xf75 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf75 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11397:30
      |
11397 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11420:21
      |
11420 |                     0xf76 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf76 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11425:30
      |
11425 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11448:21
      |
11448 |                     0xf64 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf64 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11453:30
      |
11453 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11476:21
      |
11476 |                     0xf65 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf65 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11481:30
      |
11481 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11504:21
      |
11504 |                     0xf66 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf66 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11509:30
      |
11509 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11532:21
      |
11532 |                     0xff5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11537:30
      |
11537 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11560:21
      |
11560 |                     0xfe5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11565:30
      |
11565 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11588:21
      |
11588 |                     0xfd5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11593:30
      |
11593 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11616:21
      |
11616 |                     0xfeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11621:30
      |
11621 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11644:21
      |
11644 |                     0xff1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11649:30
      |
11649 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11672:21
      |
11672 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11677:30
      |
11677 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11700:21
      |
11700 |                     0xff2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11705:30
      |
11705 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11728:21
      |
11728 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11733:30
      |
11733 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11756:21
      |
11756 |                     0xff3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11761:30
      |
11761 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11784:21
      |
11784 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11789:30
      |
11789 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11812:21
      |
11812 |                     0xfe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11817:30
      |
11817 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11840:21
      |
11840 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11845:30
      |
11845 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11868:21
      |
11868 |                     0xfe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11873:30
      |
11873 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11896:21
      |
11896 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11901:30
      |
11901 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11924:21
      |
11924 |                     0xfd1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11929:30
      |
11929 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11952:21
      |
11952 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11957:30
      |
11957 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11980:21
      |
11980 |                     0xfd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:11985:30
      |
11985 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12008:21
      |
12008 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12013:30
      |
12013 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12036:21
      |
12036 |                     0xfd3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12041:30
      |
12041 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12064:21
      |
12064 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12069:30
      |
12069 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12092:21
      |
12092 |                     0xff8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12097:30
      |
12097 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12120:21
      |
12120 |                     0xff9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12125:30
      |
12125 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12148:21
      |
12148 |                     0xffa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12153:30
      |
12153 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12176:21
      |
12176 |                     0xfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12181:30
      |
12181 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12204:21
      |
12204 |                     0xfe9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12209:30
      |
12209 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12232:21
      |
12232 |                     0xfd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12237:30
      |
12237 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12260:21
      |
12260 |                     0xfd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12265:30
      |
12265 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12288:21
      |
12288 |                     0xf68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12293:30
      |
12293 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12316:21
      |
12316 |                     0xf69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12321:30
      |
12321 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12344:21
      |
12344 |                     0xf6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12349:30
      |
12349 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12372:21
      |
12372 |                     0xf60 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf60 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12377:30
      |
12377 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12400:21
      |
12400 |                     0xf61 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf61 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12405:30
      |
12405 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12428:21
      |
12428 |                     0xf62 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf62 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12433:30
      |
12433 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12456:21
      |
12456 |                     0xfef as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfef as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12461:30
      |
12461 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12484:21
      |
12484 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12489:30
      |
12489 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12508:21
      |
12508 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12513:30
      |
12513 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12532:21
      |
12532 |                     0xf10 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf10 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12537:30
      |
12537 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12560:21
      |
12560 |                     0xf11 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf11 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12565:30
      |
12565 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12588:21
      |
12588 |                     0xf28 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf28 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12593:30
      |
12593 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12616:21
      |
12616 |                     0xf29 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf29 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12621:30
      |
12621 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12644:21
      |
12644 |                     0xf16 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf16 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12649:30
      |
12649 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12672:21
      |
12672 |                     0xf17 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf17 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12677:30
      |
12677 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12700:21
      |
12700 |                     0xf58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12705:30
      |
12705 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12728:21
      |
12728 |                     0xf2a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12733:30
      |
12733 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12756:21
      |
12756 |                     0xf2d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12761:30
      |
12761 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12784:21
      |
12784 |                     0xf2c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12789:30
      |
12789 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12812:21
      |
12812 |                     0xf5e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12817:30
      |
12817 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12840:21
      |
12840 |                     0xf5f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12845:30
      |
12845 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12868:21
      |
12868 |                     0xf5d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12873:30
      |
12873 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12896:21
      |
12896 |                     0xf59 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf59 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12901:30
      |
12901 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12924:21
      |
12924 |                     0xfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12929:30
      |
12929 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12952:21
      |
12952 |                     0xfe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12957:30
      |
12957 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12980:21
      |
12980 |                     0xfee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:12985:30
      |
12985 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13008:21
      |
13008 |                     0xfde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13013:30
      |
13013 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13036:21
      |
13036 |                     0xfea as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfea as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13041:30
      |
13041 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13064:21
      |
13064 |                     0xfda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13069:30
      |
13069 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13092:21
      |
13092 |                     0xf53 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf53 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13097:30
      |
13097 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13120:21
      |
13120 |                     0xf52 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf52 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13125:30
      |
13125 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13148:21
      |
13148 |                     0xf51 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf51 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13153:30
      |
13153 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13176:21
      |
13176 |                     0xf5c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13181:30
      |
13181 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13204:21
      |
13204 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13209:30
      |
13209 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13232:21
      |
13232 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13237:30
      |
13237 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13260:21
      |
13260 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13265:30
      |
13265 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
13266 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13289:21
      |
13289 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13294:30
      |
13294 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13313:21
      |
13313 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13318:30
      |
13318 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13337:21
      |
13337 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13342:30
      |
13342 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13361:21
      |
13361 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13366:30
      |
13366 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13385:21
      |
13385 |                     0xf0d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf0d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13390:30
      |
13390 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13409:21
      |
13409 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13414:30
      |
13414 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13433:21
      |
13433 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13438:30
      |
13438 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13457:21
      |
13457 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13462:30
      |
13462 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13481:21
      |
13481 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13486:30
      |
13486 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13505:21
      |
13505 |                     0xf30f1e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f1e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/i386_asm.rs:13510:30
      |
13510 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/i386_link.rs:31:10
   |
31 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/i386_link.rs:32:10
   |
32 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/i386_link.rs:33:10
   |
33 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/i386_link.rs:34:10
   |
34 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/i386_link.rs:35:10
   |
35 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/i386_link.rs:36:10
   |
36 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/i386_link.rs:37:10
   |
37 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/i386_link.rs:38:10
   |
38 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/i386_link.rs:39:10
   |
39 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int32_t` should have an upper camel case name
  --> src/i386_link.rs:40:10
   |
40 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/i386_link.rs:41:10
   |
41 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/i386_link.rs:80:10
   |
80 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/i386_link.rs:82:10
   |
82 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/i386_link.rs:90:10
   |
90 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/i386_link.rs:294:10
    |
294 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/i386_link.rs:295:10
    |
295 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/i386_link.rs:303:10
    |
303 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/i386_link.rs:304:10
    |
304 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/i386_link.rs:444:10
    |
444 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/i386_link.rs:461:10
    |
461 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/i386_link.rs:462:10
    |
462 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/i386_link.rs:463:10
    |
463 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/i386_link.rs:464:10
    |
464 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/i386_link.rs:479:10
    |
479 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/i386_link.rs:482:13
    |
482 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
483 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
484 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
482 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
483 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/i386_link.rs:495:14
    |
495 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/i386_link.rs:499:12
    |
499 |       return read16le(p) as uint32_t
    |  ____________^
500 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
501 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
499 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
500 ~             << 16 as libc::c_int);
    |

warning: type `__builtin_va_list` should have an upper camel case name
   --> src/libtcc.rs:165:10
    |
165 | pub type __builtin_va_list = [__va_list_tag; 1];
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuiltinVaList`

warning: type `va_list` should have an upper camel case name
   --> src/libtcc.rs:174:10
    |
174 | pub type va_list = __builtin_va_list;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `VaList`

warning: type `size_t` should have an upper camel case name
   --> src/libtcc.rs:175:10
    |
175 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__int8_t` should have an upper camel case name
   --> src/libtcc.rs:176:10
    |
176 | pub type __int8_t = libc::c_schar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `__uint8_t` should have an upper camel case name
   --> src/libtcc.rs:177:10
    |
177 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/libtcc.rs:178:10
    |
178 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
   --> src/libtcc.rs:179:10
    |
179 | pub type __int32_t = libc::c_int;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/libtcc.rs:180:10
    |
180 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/libtcc.rs:181:10
    |
181 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/libtcc.rs:182:10
    |
182 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__uid_t` should have an upper camel case name
   --> src/libtcc.rs:183:10
    |
183 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__off_t` should have an upper camel case name
   --> src/libtcc.rs:184:10
    |
184 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/libtcc.rs:185:10
    |
185 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/libtcc.rs:186:10
    |
186 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__clock_t` should have an upper camel case name
   --> src/libtcc.rs:187:10
    |
187 | pub type __clock_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `ClockT`

warning: type `__time_t` should have an upper camel case name
   --> src/libtcc.rs:188:10
    |
188 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/libtcc.rs:189:10
    |
189 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `ssize_t` should have an upper camel case name
   --> src/libtcc.rs:190:10
    |
190 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/libtcc.rs:191:10
    |
191 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `int8_t` should have an upper camel case name
   --> src/libtcc.rs:192:10
    |
192 | pub type int8_t = __int8_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `int32_t` should have an upper camel case name
   --> src/libtcc.rs:193:10
    |
193 | pub type int32_t = __int32_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
   --> src/libtcc.rs:194:10
    |
194 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `sigset_t` should have an upper camel case name
   --> src/libtcc.rs:200:10
    |
200 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/libtcc.rs:201:10
    |
201 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/libtcc.rs:237:10
    |
237 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/libtcc.rs:239:10
    |
239 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/libtcc.rs:247:10
    |
247 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `__sigval_t` should have an upper camel case name
   --> src/libtcc.rs:263:10
    |
263 | pub type __sigval_t = sigval;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `SigvalT`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/libtcc.rs:685:10
    |
685 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/libtcc.rs:686:10
    |
686 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/libtcc.rs:697:10
    |
697 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/libtcc.rs:698:10
    |
698 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `uint16_t` should have an upper camel case name
   --> src/libtcc.rs:699:10
    |
699 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/libtcc.rs:700:10
    |
700 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `uint32_t` should have an upper camel case name
   --> src/libtcc.rs:701:10
    |
701 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/libtcc.rs:770:10
    |
770 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `uint8_t` should have an upper camel case name
    --> src/libtcc.rs:1013:10
     |
1013 | pub type uint8_t = __uint8_t;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `nwchar_t` should have an upper camel case name
    --> src/libtcc.rs:1077:10
     |
1077 | pub type nwchar_t = libc::c_int;
     |          ^^^^^^^^ help: convert the identifier to upper camel case: `NwcharT`

warning: type `X86_64_Mode` should have an upper camel case name
    --> src/libtcc.rs:1200:10
     |
1200 | pub type X86_64_Mode = libc::c_uint;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `X86_64Mode`

warning: type `__va_arg_type` should have an upper camel case name
    --> src/libtcc.rs:1353:10
     |
1353 | pub type __va_arg_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `VaArgType`

warning: type `Elf64_Half` should have an upper camel case name
    --> src/libtcc.rs:1981:10
     |
1981 | pub type Elf64_Half = uint16_t;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Half`

warning: type `Elf64_Off` should have an upper camel case name
    --> src/libtcc.rs:2026:10
     |
2026 | pub type Elf64_Off = uint64_t;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Off`

warning: type `uintptr_t` should have an upper camel case name
    --> src/libtcc.rs:2094:10
     |
2094 | pub type uintptr_t = libc::c_ulong;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UintptrT`

warning: type `Elf32_Word` should have an upper camel case name
    --> src/libtcc.rs:2138:10
     |
2138 | pub type Elf32_Word = uint32_t;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf32Word`

warning: type `__sighandler_t` should have an upper camel case name
    --> src/libtcc.rs:2247:10
     |
2247 | pub type __sighandler_t = Option::<unsafe extern "C" fn(libc::c_int) -> ()>;
     |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SighandlerT`

warning: type `fpregset_t` should have an upper camel case name
    --> src/libtcc.rs:2327:10
     |
2327 | pub type fpregset_t = *mut _libc_fpstate;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `FpregsetT`

warning: type `gregset_t` should have an upper camel case name
    --> src/libtcc.rs:2328:10
     |
2328 | pub type gregset_t = [greg_t; 23];
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `GregsetT`

warning: type `greg_t` should have an upper camel case name
    --> src/libtcc.rs:2329:10
     |
2329 | pub type greg_t = libc::c_longlong;
     |          ^^^^^^ help: convert the identifier to upper camel case: `GregT`

warning: type `__stab_debug_code` should have an upper camel case name
    --> src/libtcc.rs:2345:10
     |
2345 | pub type __stab_debug_code = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `StabDebugCode`

warning: type `C2RustUnnamed_38` should have an upper camel case name
    --> src/libtcc.rs:2376:10
     |
2376 | pub type C2RustUnnamed_38 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed38`

warning: type `C2RustUnnamed_39` should have an upper camel case name
    --> src/libtcc.rs:2384:10
     |
2384 | pub type C2RustUnnamed_39 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed39`

warning: type `C2RustUnnamed_40` should have an upper camel case name
    --> src/libtcc.rs:2450:10
     |
2450 | pub type C2RustUnnamed_40 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed40`

warning: type `C2RustUnnamed_41` should have an upper camel case name
    --> src/libtcc.rs:2607:10
     |
2607 | pub type C2RustUnnamed_41 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed41`

warning: type `C2RustUnnamed_42` should have an upper camel case name
    --> src/libtcc.rs:2640:10
     |
2640 | pub type C2RustUnnamed_42 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed42`

warning: type `C2RustUnnamed_43` should have an upper camel case name
    --> src/libtcc.rs:2818:10
     |
2818 | pub type C2RustUnnamed_43 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed43`

warning: type `C2RustUnnamed_44` should have an upper camel case name
    --> src/libtcc.rs:2834:10
     |
2834 | pub type C2RustUnnamed_44 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed44`

warning: type `C2RustUnnamed_45` should have an upper camel case name
    --> src/libtcc.rs:2873:10
     |
2873 | pub type C2RustUnnamed_45 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed45`

warning: type `C2RustUnnamed_46` should have an upper camel case name
    --> src/libtcc.rs:2879:10
     |
2879 | pub type C2RustUnnamed_46 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed46`

warning: type `C2RustUnnamed_47` should have an upper camel case name
    --> src/libtcc.rs:2885:10
     |
2885 | pub type C2RustUnnamed_47 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed47`

warning: type `C2RustUnnamed_48` should have an upper camel case name
    --> src/libtcc.rs:2890:10
     |
2890 | pub type C2RustUnnamed_48 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed48`

warning: type `C2RustUnnamed_49` should have an upper camel case name
    --> src/libtcc.rs:2918:10
     |
2918 | pub type C2RustUnnamed_49 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed49`

warning: type `C2RustUnnamed_50` should have an upper camel case name
    --> src/libtcc.rs:2930:10
     |
2930 | pub type C2RustUnnamed_50 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed50`

warning: type `tcc_token` should have an upper camel case name
    --> src/libtcc.rs:2937:10
     |
2937 | pub type tcc_token = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `line_macro_output_format` should have an upper camel case name
    --> src/libtcc.rs:3494:10
     |
3494 | pub type line_macro_output_format = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `LineMacroOutputFormat`

warning: type `gotplt_entry` should have an upper camel case name
    --> src/libtcc.rs:3496:10
     |
3496 | pub type gotplt_entry = libc::c_uint;
     |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: type `C2RustUnnamed_51` should have an upper camel case name
    --> src/libtcc.rs:3497:10
     |
3497 | pub type C2RustUnnamed_51 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed51`

warning: type `C2RustUnnamed_52` should have an upper camel case name
    --> src/libtcc.rs:3506:10
     |
3506 | pub type C2RustUnnamed_52 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed52`

warning: type `C2RustUnnamed_53` should have an upper camel case name
    --> src/libtcc.rs:3528:10
     |
3528 | pub type C2RustUnnamed_53 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed53`

warning: type `C2RustUnnamed_54` should have an upper camel case name
    --> src/libtcc.rs:3530:10
     |
3530 | pub type C2RustUnnamed_54 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed54`

warning: type `C2RustUnnamed_55` should have an upper camel case name
    --> src/libtcc.rs:3531:10
     |
3531 | pub type C2RustUnnamed_55 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed55`

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3570:13
     |
3570 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
3571 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
3572 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3570 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
3571 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3583:14
     |
3583 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3587:12
     |
3587 |       return read16le(p) as uint32_t
     |  ____________^
3588 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
3589 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3587 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
3588 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3602:12
     |
3602 |       return read32le(p) as uint64_t
     |  ____________^
3603 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
3604 | |             << 32 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3602 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
3603 ~             << 32 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3637:19
     |
3637 |         retval |= (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3669:19
     |
3669 |           retval = (retval as uint64_t
     |  ___________________^
3670 | |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     | |______________________________________________________________________________^ help: consider parenthesizing your expression: `retval as uint64_t | ((byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3670:15
     |
3670 |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3676:27
     |
3676 |                   retval = (retval as libc::c_longlong
     |  ___________________________^
3677 | |                     | -(1 as libc::c_longlong)
3678 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3676 ~                 retval = (retval as libc::c_longlong | (-(1 as libc::c_longlong)
3677 ~                         << (i + 1 as libc::c_int) * 7 as libc::c_int)) as int64_t;
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:3677:23
     |
3677 |                       | -(1 as libc::c_longlong)
     |  _______________________^
3678 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `-(1 as libc::c_longlong) << ((i + 1 as libc::c_int) * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:4371:16
     |
4371 |               |= (1 as libc::c_int) << 4 as libc::c_int
     |  ________________^
4372 | |                 | (1 as libc::c_int) << 5 as libc::c_int;
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 4 as libc::c_int) | ((1 as libc::c_int) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:4746:33
     |
4746 |             as *mut uint8_t) = (byte as libc::c_int | 0x80 as libc::c_int * more)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:4789:14
     |
4789 |             (byte as libc::c_int | 0x80 as libc::c_int * more) as libc::c_uchar,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `else` branch is empty
    --> src/libtcc.rs:5068:31
     |
5068 | ...                   } else {};
     |                         ^^^^^^^ help: you can remove it
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else
     = note: `#[warn(clippy::needless_else)]` on by default

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:5578:20
     |
5578 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
5579 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
5580 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5578 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
5579 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:5578:21
     |
5578 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:5582:21
     |
5582 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6409:24
     |
6409 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________________^
6410 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
6411 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint
     | |__________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6409 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6410 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
6411 +                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6409:25
     |
6409 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6413:25
     |
6413 |                     == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6445:28
     |
6445 |                         + ((*t).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6446:28
     |
6446 |                       size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |  ____________________________^
6447 | |                         & 0x3f as libc::c_int;
     | |_____________________________________________^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6446:28
     |
6446 |                     size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*t).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6478:12
     |
6478 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
6479 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
6480 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6478 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6479 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6478:13
     |
6478 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6541:17
     |
6541 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
6542 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
6543 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6541 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6542 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6541:18
     |
6541 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6675:20
     |
6675 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
6676 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
6677 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6675 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6676 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6675:21
     |
6675 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6679:21
     |
6679 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6773:28
     |
6773 |                         + ((*e).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*e).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6774:49
     |
6774 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
6775 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6774 ~                     let mut size: libc::c_int = ((*e).type_0.t
6775 ~                         >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6774:49
     |
6774 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
6775 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `(*e).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6827:12
     |
6827 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
6828 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
6829 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6827 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6828 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6827:13
     |
6827 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6949:17
     |
6949 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
6950 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
6951 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6949 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
6950 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:6949:18
     |
6949 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:7978:14
     |
7978 |             ((*(*s1).dState).tcov_data.line << 8 as libc::c_int | 0xff as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*(*s1).dState).tcov_data.line << 8 as libc::c_int) | 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:8020:14
     |
8020 |               (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
     |  ______________^
8021 | |                 & 0xfffffffff as libc::c_ulonglong | nline << 36 as libc::c_int)
     | |_______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8020 ~             (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
8021 ~                 & 0xfffffffff as libc::c_ulonglong | (nline << 36 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:8062:13
     |
8062 | /             (1 as libc::c_int) << 1 as libc::c_int
8063 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:8097:9
     |
8097 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 2 as libc::c_int,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:8104:9
     |
8104 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:8118:9
     |
8118 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9317:33
     |
9317 |     while ndef >= bloom_size * ((1 as libc::c_int) << bloom_shift - 3 as libc::c_int) {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (bloom_shift - 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9490:24
     |
9490 |                       |= (1 as libc::c_int as Elf64_Addr)
     |  ________________________^
9491 | |                         << *hash.offset(cur as isize)
9492 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
9493 | |                         | (1 as libc::c_int as Elf64_Addr)
9494 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
9495 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9490 ~                     |= ((1 as libc::c_int as Elf64_Addr)
9491 +                         << *hash.offset(cur as isize)
9492 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word) | ((1 as libc::c_int as Elf64_Addr)
9493 +                             << (*hash.offset(cur as isize) >> bloom_shift)
9494 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9490:24
     |
9490 |                       |= (1 as libc::c_int as Elf64_Addr)
     |  ________________________^
9491 | |                         << *hash.offset(cur as isize)
9492 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
     | |_________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9490 ~                     |= (1 as libc::c_int as Elf64_Addr) << (*hash.offset(cur as isize)
9491 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word)
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9493:27
     |
9493 |                           | (1 as libc::c_int as Elf64_Addr)
     |  ___________________________^
9494 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
9495 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9493 ~                         | (1 as libc::c_int as Elf64_Addr) << ((*hash.offset(cur as isize) >> bloom_shift)
9494 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9687:8
     |
9687 |     if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9721:16
     |
9721 |             if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/libtcc.rs:9767:24
     |
9767 |                   } else if !((*s1).output_type != 4 as libc::c_int) {
     |  ________________________^
9768 | |                     if (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
9769 | |                         count += 1;
9770 | |                         count;
9771 | |                     }
9772 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
9767 ~                 } else if !((*s1).output_type != 4 as libc::c_int) && (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
9768 +                     count += 1;
9769 +                     count;
9770 +                 }
     |

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9787:9
     |
9787 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/libtcc.rs:9828:17
     |
9828 | /                 (1 as libc::c_int) << 1 as libc::c_int
9829 | |                     | (1 as libc::c_int) << 2 as libc::c_int,
     | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:9930:13
      |
9930  | /             if !((*s).sh_type != 4 as libc::c_int) {
9931  | |                 if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
9932  | |                     let mut current_block_19: u64;
9933  | |                     rel = ((*s).data as *mut Elf64_Rela)
...     |
10103 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
9930  ~             if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
9931  +                 let mut current_block_19: u64;
9932  +                 rel = ((*s).data as *mut Elf64_Rela)
9933  +                     .offset(0 as libc::c_int as isize);
9934  +                 while rel
9935  +                     < ((*s).data).offset((*s).data_offset as isize)
9936  +                         as *mut Elf64_Rela
9937  +                 {
9938  +                     type_0 = ((*rel).r_info
9939  +                         & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
9940  +                     gotplt_entry = gotplt_entry_type(type_0);
9941  +                     if gotplt_entry == -(1 as libc::c_int) {
9942  +                         tcc_enter_state(s1);
9943  +                         (Some(
9944  +                             _tcc_error_noabort
9945  +                                 as unsafe extern "C" fn(
9946  +                                     *const libc::c_char,
9947  +                                     ...
9948  +                                 ) -> libc::c_int,
9949  +                         ))
9950  +                             .expect(
9951  +                                 "non-null function pointer",
9952  +                             )(
9953  +                             b"Unknown relocation type for got: %d\0" as *const u8
9954  +                                 as *const libc::c_char,
9955  +                             type_0,
9956  +                         );
9957  +                     } else {
9958  +                         sym_index = ((*rel).r_info >> 32 as libc::c_int)
9959  +                             as libc::c_int;
9960  +                         sym = &mut *((*(*s1).c2rust_unnamed.symtab_section).data
9961  +                             as *mut Elf64_Sym)
9962  +                             .offset(sym_index as isize) as *mut Elf64_Sym;
9963  +                         if !(gotplt_entry == NO_GOTPLT_ENTRY as libc::c_int) {
9964  +                             if gotplt_entry == AUTO_GOTPLT_ENTRY as libc::c_int {
9965  +                                 if (*sym).st_shndx as libc::c_int == 0 as libc::c_int {
9966  +                                     let mut esym: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
9967  +                                     let mut dynindex: libc::c_int = 0;
9968  +                                     if 1 as libc::c_int == 0
9969  +                                         && (*s1).output_type & 4 as libc::c_int != 0
9970  +                                     {
9971  +                                         current_block_19 = 7351195479953500246;
9972  +                                     } else if !((*s1).dynsym).is_null() {
9973  +                                         dynindex = (*get_sym_attr(s1, sym_index, 0 as libc::c_int))
9974  +                                             .dyn_index;
9975  +                                         esym = ((*(*s1).dynsym).data as *mut Elf64_Sym)
9976  +                                             .offset(dynindex as isize);
9977  +                                         if dynindex != 0
9978  +                                             && ((*esym).st_info as libc::c_int & 0xf as libc::c_int
9979  +                                                 == 2 as libc::c_int
9980  +                                                 || (*esym).st_info as libc::c_int & 0xf as libc::c_int
9981  +                                                     == 0 as libc::c_int
9982  +                                                     && (*sym).st_info as libc::c_int & 0xf as libc::c_int
9983  +                                                         == 2 as libc::c_int)
9984  +                                         {
9985  +                                             current_block_19 = 11793550633721587306;
9986  +                                         } else {
9987  +                                             current_block_19 = 4068382217303356765;
9988  +                                         }
9989  +                                     } else {
9990  +                                         current_block_19 = 4068382217303356765;
9991  +                                     }
9992  +                                 } else if (*sym).st_shndx as libc::c_int
9993  +                                     == 0xfff1 as libc::c_int
9994  +                                 {
9995  +                                     if (*sym).st_value == 0 as libc::c_int as Elf64_Addr {
9996  +                                         current_block_19 = 7351195479953500246;
9997  +                                     } else if 8 as libc::c_int != 8 as libc::c_int {
9998  +                                         current_block_19 = 7351195479953500246;
9999  +                                     } else {
10000 +                                         current_block_19 = 4068382217303356765;
10001 +                                     }
10002 +                                 } else {
10003 +                                     current_block_19 = 7351195479953500246;
10004 +                                 }
10005 +                             } else {
10006 +                                 current_block_19 = 4068382217303356765;
10007 +                             }
10008 +                             match current_block_19 {
10009 +                                 7351195479953500246 => {}
10010 +                                 _ => {
10011 +                                     match current_block_19 {
10012 +                                         4068382217303356765 => {
10013 +                                             if (type_0 == 4 as libc::c_int
10014 +                                                 || type_0 == 2 as libc::c_int)
10015 +                                                 && (*sym).st_shndx as libc::c_int != 0 as libc::c_int
10016 +                                                 && ((*sym).st_other as libc::c_int & 0x3 as libc::c_int
10017 +                                                     != 0 as libc::c_int
10018 +                                                     || (*sym).st_info as libc::c_int >> 4 as libc::c_int
10019 +                                                         == 0 as libc::c_int
10020 +                                                     || (*s1).output_type & 2 as libc::c_int != 0)
10021 +                                             {
10022 +                                                 if pass != 0 as libc::c_int {
10023 +                                                     current_block_19 = 7351195479953500246;
10024 +                                                 } else {
10025 +                                                     (*rel)
10026 +                                                         .r_info = ((sym_index as Elf64_Xword) << 32 as libc::c_int)
10027 +                                                         .wrapping_add(2 as libc::c_int as Elf64_Xword);
10028 +                                                     current_block_19 = 7351195479953500246;
10029 +                                                 }
10030 +                                             } else {
10031 +                                                 reloc_type = code_reloc(type_0);
10032 +                                                 if reloc_type == -(1 as libc::c_int) {
10033 +                                                     tcc_enter_state(s1);
10034 +                                                     (Some(
10035 +                                                         _tcc_error_noabort
10036 +                                                             as unsafe extern "C" fn(
10037 +                                                                 *const libc::c_char,
10038 +                                                                 ...
10039 +                                                             ) -> libc::c_int,
10040 +                                                     ))
10041 +                                                         .expect(
10042 +                                                             "non-null function pointer",
10043 +                                                         )(
10044 +                                                         b"Unknown relocation type: %d\0" as *const u8
10045 +                                                             as *const libc::c_char,
10046 +                                                         type_0,
10047 +                                                     );
10048 +                                                     current_block_19 = 7351195479953500246;
10049 +                                                 } else if reloc_type != 0 as libc::c_int {
10050 +                                                     current_block_19 = 11793550633721587306;
10051 +                                                 } else if pass != 1 as libc::c_int {
10052 +                                                     current_block_19 = 7351195479953500246;
10053 +                                                 } else {
10054 +                                                     reloc_type = 6 as libc::c_int;
10055 +                                                     current_block_19 = 14832935472441733737;
10056 +                                                 }
10057 +                                             }
10058 +                                         }
10059 +                                         _ => {}
10060 +                                     }
10061 +                                     match current_block_19 {
10062 +                                         7351195479953500246 => {}
10063 +                                         _ => {
10064 +                                             match current_block_19 {
10065 +                                                 11793550633721587306 => {
10066 +                                                     if pass != 0 as libc::c_int {
10067 +                                                         current_block_19 = 7351195479953500246;
10068 +                                                     } else {
10069 +                                                         reloc_type = 7 as libc::c_int;
10070 +                                                         current_block_19 = 14832935472441733737;
10071 +                                                     }
10072 +                                                 }
10073 +                                                 _ => {}
10074 +                                             }
10075 +                                             match current_block_19 {
10076 +                                                 7351195479953500246 => {}
10077 +                                                 _ => {
10078 +                                                     if ((*s1).got).is_null() {
10079 +                                                         got_sym = build_got(s1);
10080 +                                                     }
10081 +                                                     if !(gotplt_entry == BUILD_GOT_ONLY as libc::c_int) {
10082 +                                                         attr = put_got_entry(s1, reloc_type, sym_index);
10083 +                                                         if reloc_type == 7 as libc::c_int {
10084 +                                                             (*rel)
10085 +                                                                 .r_info = (((*attr).plt_sym as Elf64_Xword)
10086 +                                                                 << 32 as libc::c_int)
10087 +                                                                 .wrapping_add(type_0 as Elf64_Xword);
10088 +                                                         }
10089 +                                                     }
10090 +                                                 }
10091 +                                             }
10092 +                                         }
10093 +                                     }
10094 +                                 }
10095 +                             }
10096 +                         }
10097 +                     }
10098 +                     rel = rel.offset(1);
10099 +                     rel;
10100 +                 }
10101 +             }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10156:23
      |
10156 |     if s.is_null() || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10459:12
      |
10459 |         if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:10564:9
      |
10564 | /         if !((*s).sh_type != 4 as libc::c_int) {
10565 | |             if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
10566 | |                 rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
10567 | |                 while rel
...     |
10580 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
10564 ~         if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
10565 +             rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
10566 +             while rel
10567 +                 < ((*s).data).offset((*s).data_offset as isize) as *mut Elf64_Rela
10568 +             {
10569 +                 match (*rel).r_info & 0xffffffff as libc::c_uint as Elf64_Xword {
10570 +                     3 | 9 | 41 | 42 | 4 => {
10571 +                         fill_got_entry(s1, rel);
10572 +                     }
10573 +                     _ => {}
10574 +                 }
10575 +                 rel = rel.offset(1);
10576 +                 rel;
10577 +             }
10578 +         }
      |

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:10796:13
      |
10796 | /             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int {
10797 | |                 if (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int
10798 | |                 {
10799 | |                     tcc_enter_state(s1);
...     |
10812 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
10796 ~             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int && (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int {
10797 +                 tcc_enter_state(s1);
10798 +                 (Some(
10799 +                     _tcc_warning
10800 +                         as unsafe extern "C" fn(*const libc::c_char, ...) -> (),
10801 +                 ))
10802 +                     .expect(
10803 +                         "non-null function pointer",
10804 +                     )(
10805 +                     b"undefined dynamic symbol '%s'\0" as *const u8
10806 +                         as *const libc::c_char,
10807 +                     name,
10808 +                 );
10809 +             }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10862:16
      |
10862 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10865:20
      |
10865 |                   && (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
      |  ____________________^
10866 | |                     & (1 as libc::c_int) << 1 as libc::c_int != 0
      | |____________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10876:24
      |
10876 |                       if (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
      |  ________________________^
10877 | |                         & (1 as libc::c_int) << 2 as libc::c_int != 0
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10883:19
      |
10883 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10912:19
      |
10912 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10914:16
      |
10914 |             if (*s).sh_flags & (1 as libc::c_int) << 0 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10917:16
      |
10917 |             if (*s).sh_flags & (1 as libc::c_int) << 10 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 10 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10953:19
      |
10953 |         } else if (*s).sh_flags & (1 as libc::c_int) << 2 as libc::c_int != 0 {
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:10966:16
      |
10966 |             && (*(*s).reloc).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*(*s).reloc).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11017:20
      |
11017 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
11018 | |                     | (1 as libc::c_int) << 0 as libc::c_int
11019 | |                     | (1 as libc::c_int) << 2 as libc::c_int
11020 | |                     | (1 as libc::c_int) << 10 as libc::c_int);
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
11017 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
11018 +                     | (1 as libc::c_int) << 0 as libc::c_int
11019 ~                     | (1 as libc::c_int) << 2 as libc::c_int | ((1 as libc::c_int) << 10 as libc::c_int));
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11017:20
      |
11017 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
11018 | |                     | (1 as libc::c_int) << 0 as libc::c_int
11019 | |                     | (1 as libc::c_int) << 2 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
11017 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
11018 +                     | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11017:20
      |
11017 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
11018 | |                     | (1 as libc::c_int) << 0 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11143:16
      |
11143 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 && n != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11159:16
      |
11159 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11164:20
      |
11164 |                 if f & (1 as libc::c_int) << 0 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11168:20
      |
11168 |                 if f & (1 as libc::c_int) << 2 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11172:20
      |
11172 |                 if f & (1 as libc::c_int) << 10 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 10 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11186:16
      |
11186 |             if f & (1 as libc::c_int) << 4 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 4 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11569:16
      |
11569 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11816:13
      |
11816 | /             (1 as libc::c_int) << 1 as libc::c_int
11817 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
      | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:11977:16
      |
11977 |             || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 || is_obj != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:12007:23
      |
12007 |         file_offset = file_offset + 15 as libc::c_int & -(16 as libc::c_int);
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(file_offset + 15 as libc::c_int) & -(16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:12089:12
      |
12089 |       } else if size >= 8 as libc::c_int {
      |  ____________^
12090 | |         if 0 as libc::c_int
12091 | |             == memcmp(
12092 | |                 h as *const libc::c_void,
...     |
12100 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
12089 ~     } else if size >= 8 as libc::c_int && 0 as libc::c_int == memcmp(
12090 +                 h as *const libc::c_void,
12091 +                 b"!<arch>\n\0" as *const u8 as *const libc::c_char
12092 +                     as *const libc::c_void,
12093 +                 8 as libc::c_int as libc::c_ulong,
12094 +             ) {
12095 +         return 3 as libc::c_int;
12096 +     }
      |

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:12150:5
      |
12150 | /     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) {
12151 | |         if !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
12152 | |             || ehdr.e_machine as libc::c_int != 62 as libc::c_int)
...     |
12619 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
12150 ~     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) && !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
12151 +             || ehdr.e_machine as libc::c_int != 62 as libc::c_int) {
12152 +         shdr = load_data(
12153 +             fd,
12154 +             file_offset.wrapping_add(ehdr.e_shoff),
12155 +             (::core::mem::size_of::<Elf64_Shdr>() as libc::c_ulong)
12156 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
12157 +         ) as *mut Elf64_Shdr;
12158 +         sm_table = tcc_mallocz(
12159 +             (::core::mem::size_of::<SectionMergeInfo>() as libc::c_ulong)
12160 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
12161 +         ) as *mut SectionMergeInfo;
12162 +         sh = &mut *shdr.offset(ehdr.e_shstrndx as isize) as *mut Elf64_Shdr;
12163 +         strsec = load_data(
12164 +             fd,
12165 +             file_offset.wrapping_add((*sh).sh_offset),
12166 +             (*sh).sh_size,
12167 +         ) as *mut libc::c_char;
12168 +         old_to_new_syms = 0 as *mut libc::c_int;
12169 +         symtab = 0 as *mut Elf64_Sym;
12170 +         strtab = 0 as *mut libc::c_char;
12171 +         nb_syms = 0 as libc::c_int;
12172 +         seencompressed = 0 as libc::c_int;
12173 +         stabstr_index = 0 as libc::c_int;
12174 +         stab_index = stabstr_index;
12175 +         ret = -(1 as libc::c_int);
12176 +         i = 1 as libc::c_int;
12177 +         loop {
12178 +             if !(i < ehdr.e_shnum as libc::c_int) {
12179 +                 current_block = 6669252993407410313;
12180 +                 break;
12181 +             }
12182 +             sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
12183 +             if (*sh).sh_type == 2 as libc::c_int as Elf64_Word {
12184 +                 if !symtab.is_null() {
12185 +                     tcc_enter_state(s1);
12186 +                     (Some(
12187 +                         _tcc_error_noabort
12188 +                             as unsafe extern "C" fn(
12189 +                                 *const libc::c_char,
12190 +                                 ...
12191 +                             ) -> libc::c_int,
12192 +                     ))
12193 +                         .expect(
12194 +                             "non-null function pointer",
12195 +                         )(
12196 +                         b"object must contain only one symtab\0" as *const u8
12197 +                             as *const libc::c_char,
12198 +                     );
12199 +                     current_block = 3957405341070239145;
12200 +                     break;
12201 +                 } else {
12202 +                     nb_syms = ((*sh).sh_size)
12203 +                         .wrapping_div(
12204 +                             ::core::mem::size_of::<Elf64_Sym>() as libc::c_ulong,
12205 +                         ) as libc::c_int;
12206 +                     symtab = load_data(
12207 +                         fd,
12208 +                         file_offset.wrapping_add((*sh).sh_offset),
12209 +                         (*sh).sh_size,
12210 +                     ) as *mut Elf64_Sym;
12211 +                     let ref mut fresh44 = (*sm_table.offset(i as isize)).s;
12212 +                     *fresh44 = (*s1).c2rust_unnamed.symtab_section;
12213 +                     sh = &mut *shdr.offset((*sh).sh_link as isize)
12214 +                         as *mut Elf64_Shdr;
12215 +                     strtab = load_data(
12216 +                         fd,
12217 +                         file_offset.wrapping_add((*sh).sh_offset),
12218 +                         (*sh).sh_size,
12219 +                     ) as *mut libc::c_char;
12220 +                 }
12221 +             }
12222 +             if (*sh).sh_flags
12223 +                 & ((1 as libc::c_int) << 11 as libc::c_int) as Elf64_Xword != 0
12224 +             {
12225 +                 seencompressed = 1 as libc::c_int;
12226 +             }
12227 +             i += 1;
12228 +             i;
12229 +         }
12230 +         match current_block {
12231 +             6669252993407410313 => {
12232 +                 i = 1 as libc::c_int;
12233 +                 's_132: loop {
12234 +                     if !(i < ehdr.e_shnum as libc::c_int) {
12235 +                         current_block = 5028470053297453708;
12236 +                         break;
12237 +                     }
12238 +                     if !(i == ehdr.e_shstrndx as libc::c_int) {
12239 +                         sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
12240 +                         if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
12241 +                             sh = &mut *shdr.offset((*sh).sh_info as isize)
12242 +                                 as *mut Elf64_Shdr;
12243 +                         }
12244 +                         sh_name = strsec.offset((*sh).sh_name as isize);
12245 +                         if 0 as libc::c_int
12246 +                             == strncmp(
12247 +                                 sh_name,
12248 +                                 b".debug_\0" as *const u8 as *const libc::c_char,
12249 +                                 7 as libc::c_int as libc::c_ulong,
12250 +                             )
12251 +                             || 0 as libc::c_int
12252 +                                 == strncmp(
12253 +                                     sh_name,
12254 +                                     b".stab\0" as *const u8 as *const libc::c_char,
12255 +                                     5 as libc::c_int as libc::c_ulong,
12256 +                                 )
12257 +                         {
12258 +                             if (*s1).do_debug == 0 || seencompressed != 0 {
12259 +                                 current_block = 7056779235015430508;
12260 +                             } else {
12261 +                                 current_block = 15597372965620363352;
12262 +                             }
12263 +                         } else if 0 as libc::c_int
12264 +                             == strncmp(
12265 +                                 sh_name,
12266 +                                 b".eh_frame\0" as *const u8 as *const libc::c_char,
12267 +                                 9 as libc::c_int as libc::c_ulong,
12268 +                             )
12269 +                         {
12270 +                             if ((*s1).eh_frame_section).is_null() {
12271 +                                 current_block = 7056779235015430508;
12272 +                             } else {
12273 +                                 current_block = 15597372965620363352;
12274 +                             }
12275 +                         } else if (*sh).sh_type != 1 as libc::c_int as Elf64_Word
12276 +                             && (*sh).sh_type != 7 as libc::c_int as Elf64_Word
12277 +                             && (*sh).sh_type != 8 as libc::c_int as Elf64_Word
12278 +                             && (*sh).sh_type != 16 as libc::c_int as Elf64_Word
12279 +                             && (*sh).sh_type != 14 as libc::c_int as Elf64_Word
12280 +                             && (*sh).sh_type != 15 as libc::c_int as Elf64_Word
12281 +                         {
12282 +                             current_block = 7056779235015430508;
12283 +                         } else {
12284 +                             current_block = 15597372965620363352;
12285 +                         }
12286 +                         match current_block {
12287 +                             7056779235015430508 => {}
12288 +                             _ => {
12289 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
12290 +                                 sh_name = strsec.offset((*sh).sh_name as isize);
12291 +                                 if (*sh).sh_addralign < 1 as libc::c_int as Elf64_Xword {
12292 +                                     (*sh).sh_addralign = 1 as libc::c_int as Elf64_Xword;
12293 +                                 }
12294 +                                 j = 1 as libc::c_int;
12295 +                                 loop {
12296 +                                     if !(j < (*s1).nb_sections) {
12297 +                                         current_block = 2290177392965769716;
12298 +                                         break;
12299 +                                     }
12300 +                                     s = *((*s1).sections).offset(j as isize);
12301 +                                     if strcmp(((*s).name).as_mut_ptr(), sh_name) != 0 {
12302 +                                         j += 1;
12303 +                                         j;
12304 +                                     } else if (*sh).sh_type != (*s).sh_type as Elf64_Word
12305 +                                         && strcmp(
12306 +                                             ((*s).name).as_mut_ptr(),
12307 +                                             b".eh_frame\0" as *const u8 as *const libc::c_char,
12308 +                                         ) != 0
12309 +                                     {
12310 +                                         tcc_enter_state(s1);
12311 +                                         (Some(
12312 +                                             _tcc_error_noabort
12313 +                                                 as unsafe extern "C" fn(
12314 +                                                     *const libc::c_char,
12315 +                                                     ...
12316 +                                                 ) -> libc::c_int,
12317 +                                         ))
12318 +                                             .expect(
12319 +                                                 "non-null function pointer",
12320 +                                             )(
12321 +                                             b"section type conflict: %s %02x <> %02x\0" as *const u8
12322 +                                                 as *const libc::c_char,
12323 +                                             ((*s).name).as_mut_ptr(),
12324 +                                             (*sh).sh_type,
12325 +                                             (*s).sh_type,
12326 +                                         );
12327 +                                         current_block = 3957405341070239145;
12328 +                                         break 's_132;
12329 +                                     } else if strncmp(
12330 +                                         sh_name,
12331 +                                         b".gnu.linkonce\0" as *const u8 as *const libc::c_char,
12332 +                                         13 as libc::c_int as libc::c_ulong,
12333 +                                     ) == 0
12334 +                                     {
12335 +                                         (*sm_table.offset(i as isize))
12336 +                                             .link_once = 1 as libc::c_int as uint8_t;
12337 +                                         current_block = 7056779235015430508;
12338 +                                         break;
12339 +                                     } else {
12340 +                                         if !((*s1).stab_section).is_null() {
12341 +                                             if s == (*s1).stab_section {
12342 +                                                 stab_index = i;
12343 +                                             }
12344 +                                             if s == (*(*s1).stab_section).link {
12345 +                                                 stabstr_index = i;
12346 +                                             }
12347 +                                         }
12348 +                                         current_block = 18390240475710248433;
12349 +                                         break;
12350 +                                     }
12351 +                                 }
12352 +                                 match current_block {
12353 +                                     7056779235015430508 => {}
12354 +                                     _ => {
12355 +                                         match current_block {
12356 +                                             2290177392965769716 => {
12357 +                                                 s = new_section(
12358 +                                                     s1,
12359 +                                                     sh_name,
12360 +                                                     (*sh).sh_type as libc::c_int,
12361 +                                                     ((*sh).sh_flags
12362 +                                                         & !((1 as libc::c_int) << 9 as libc::c_int) as Elf64_Xword)
12363 +                                                         as libc::c_int,
12364 +                                                 );
12365 +                                                 (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
12366 +                                                 (*s).sh_entsize = (*sh).sh_entsize as libc::c_int;
12367 +                                                 (*sm_table.offset(i as isize))
12368 +                                                     .new_section = 1 as libc::c_int as uint8_t;
12369 +                                             }
12370 +                                             _ => {}
12371 +                                         }
12372 +                                         (*s)
12373 +                                             .data_offset = ((*s).data_offset)
12374 +                                             .wrapping_add(
12375 +                                                 ((*s).data_offset).wrapping_neg()
12376 +                                                     & ((*sh).sh_addralign)
12377 +                                                         .wrapping_sub(1 as libc::c_int as Elf64_Xword),
12378 +                                             );
12379 +                                         if (*sh).sh_addralign > (*s).sh_addralign as Elf64_Xword {
12380 +                                             (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
12381 +                                         }
12382 +                                         (*sm_table.offset(i as isize)).offset = (*s).data_offset;
12383 +                                         let ref mut fresh45 = (*sm_table.offset(i as isize)).s;
12384 +                                         *fresh45 = s;
12385 +                                         size = (*sh).sh_size;
12386 +                                         if (*sh).sh_type != 8 as libc::c_int as Elf64_Word {
12387 +                                             let mut ptr: *mut libc::c_uchar = 0 as *mut libc::c_uchar;
12388 +                                             lseek(
12389 +                                                 fd,
12390 +                                                 file_offset.wrapping_add((*sh).sh_offset) as __off_t,
12391 +                                                 0 as libc::c_int,
12392 +                                             );
12393 +                                             ptr = section_ptr_add(s, size) as *mut libc::c_uchar;
12394 +                                             full_read(fd, ptr as *mut libc::c_void, size);
12395 +                                         } else {
12396 +                                             (*s).data_offset = ((*s).data_offset).wrapping_add(size);
12397 +                                         }
12398 +                                     }
12399 +                                 }
12400 +                             }
12401 +                         }
12402 +                     }
12403 +                     i += 1;
12404 +                     i;
12405 +                 }
12406 +                 match current_block {
12407 +                     3957405341070239145 => {}
12408 +                     _ => {
12409 +                         if stab_index != 0 && stabstr_index != 0 {
12410 +                             let mut a: *mut Stab_Sym = 0 as *mut Stab_Sym;
12411 +                             let mut b: *mut Stab_Sym = 0 as *mut Stab_Sym;
12412 +                             let mut o_0: libc::c_uint = 0;
12413 +                             s = (*sm_table.offset(stab_index as isize)).s;
12414 +                             a = ((*s).data)
12415 +                                 .offset(
12416 +                                     (*sm_table.offset(stab_index as isize)).offset as isize,
12417 +                                 ) as *mut Stab_Sym;
12418 +                             b = ((*s).data).offset((*s).data_offset as isize)
12419 +                                 as *mut Stab_Sym;
12420 +                             o_0 = (*sm_table.offset(stabstr_index as isize)).offset
12421 +                                 as libc::c_uint;
12422 +                             while a < b {
12423 +                                 if (*a).n_strx != 0 {
12424 +                                     (*a).n_strx = ((*a).n_strx).wrapping_add(o_0);
12425 +                                 }
12426 +                                 a = a.offset(1);
12427 +                                 a;
12428 +                             }
12429 +                         }
12430 +                         i = 1 as libc::c_int;
12431 +                         while i < ehdr.e_shnum as libc::c_int {
12432 +                             s = (*sm_table.offset(i as isize)).s;
12433 +                             if !(s.is_null()
12434 +                                 || (*sm_table.offset(i as isize)).new_section == 0)
12435 +                             {
12436 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
12437 +                                 if (*sh).sh_link > 0 as libc::c_int as Elf64_Word {
12438 +                                     (*s).link = (*sm_table.offset((*sh).sh_link as isize)).s;
12439 +                                 }
12440 +                                 if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
12441 +                                     (*s)
12442 +                                         .sh_info = (*(*sm_table.offset((*sh).sh_info as isize)).s)
12443 +                                         .sh_num;
12444 +                                     let ref mut fresh46 = (**((*s1).sections)
12445 +                                         .offset((*s).sh_info as isize))
12446 +                                         .reloc;
12447 +                                     *fresh46 = s;
12448 +                                 }
12449 +                             }
12450 +                             i += 1;
12451 +                             i;
12452 +                         }
12453 +                         old_to_new_syms = tcc_mallocz(
12454 +                             (nb_syms as libc::c_ulong)
12455 +                                 .wrapping_mul(
12456 +                                     ::core::mem::size_of::<libc::c_int>() as libc::c_ulong,
12457 +                                 ),
12458 +                         ) as *mut libc::c_int;
12459 +                         sym = symtab.offset(1 as libc::c_int as isize);
12460 +                         let mut current_block_95: u64;
12461 +                         i = 1 as libc::c_int;
12462 +                         while i < nb_syms {
12463 +                             if (*sym).st_shndx as libc::c_int != 0 as libc::c_int
12464 +                                 && ((*sym).st_shndx as libc::c_int) < 0xff00 as libc::c_int
12465 +                             {
12466 +                                 sm = &mut *sm_table.offset((*sym).st_shndx as isize)
12467 +                                     as *mut SectionMergeInfo;
12468 +                                 if (*sm).link_once != 0 {
12469 +                                     if (*sym).st_info as libc::c_int >> 4 as libc::c_int
12470 +                                         != 0 as libc::c_int
12471 +                                     {
12472 +                                         name = strtab.offset((*sym).st_name as isize);
12473 +                                         sym_index = find_elf_sym(
12474 +                                             (*s1).c2rust_unnamed.symtab_section,
12475 +                                             name,
12476 +                                         );
12477 +                                         if sym_index != 0 {
12478 +                                             *old_to_new_syms.offset(i as isize) = sym_index;
12479 +                                         }
12480 +                                     }
12481 +                                     current_block_95 = 12705158477165241210;
12482 +                                 } else if ((*sm).s).is_null() {
12483 +                                     current_block_95 = 12705158477165241210;
12484 +                                 } else {
12485 +                                     (*sym).st_shndx = (*(*sm).s).sh_num as Elf64_Section;
12486 +                                     (*sym)
12487 +                                         .st_value = ((*sym).st_value as libc::c_ulong)
12488 +                                         .wrapping_add((*sm).offset) as Elf64_Addr as Elf64_Addr;
12489 +                                     current_block_95 = 1417769144978639029;
12490 +                                 }
12491 +                             } else {
12492 +                                 current_block_95 = 1417769144978639029;
12493 +                             }
12494 +                             match current_block_95 {
12495 +                                 1417769144978639029 => {
12496 +                                     name = strtab.offset((*sym).st_name as isize);
12497 +                                     sym_index = set_elf_sym(
12498 +                                         (*s1).c2rust_unnamed.symtab_section,
12499 +                                         (*sym).st_value,
12500 +                                         (*sym).st_size,
12501 +                                         (*sym).st_info as libc::c_int,
12502 +                                         (*sym).st_other as libc::c_int,
12503 +                                         (*sym).st_shndx as libc::c_int,
12504 +                                         name,
12505 +                                     );
12506 +                                     *old_to_new_syms.offset(i as isize) = sym_index;
12507 +                                 }
12508 +                                 _ => {}
12509 +                             }
12510 +                             i += 1;
12511 +                             i;
12512 +                             sym = sym.offset(1);
12513 +                             sym;
12514 +                         }
12515 +                         i = 1 as libc::c_int;
12516 +                         's_516: loop {
12517 +                             if !(i < ehdr.e_shnum as libc::c_int) {
12518 +                                 current_block = 9180031981464905198;
12519 +                                 break;
12520 +                             }
12521 +                             s = (*sm_table.offset(i as isize)).s;
12522 +                             if !s.is_null() {
12523 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
12524 +                                 offset = (*sm_table.offset(i as isize)).offset;
12525 +                                 size = (*sh).sh_size;
12526 +                                 match (*s).sh_type {
12527 +                                     4 => {
12528 +                                         offseti = (*sm_table.offset((*sh).sh_info as isize)).offset;
12529 +                                         rel = ((*s).data as *mut Elf64_Rela)
12530 +                                             .offset(
12531 +                                                 offset
12532 +                                                     .wrapping_div(
12533 +                                                         ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
12534 +                                                     ) as isize,
12535 +                                             );
12536 +                                         while rel
12537 +                                             < ((*s).data as *mut Elf64_Rela)
12538 +                                                 .offset(
12539 +                                                     offset
12540 +                                                         .wrapping_add(size)
12541 +                                                         .wrapping_div(
12542 +                                                             ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
12543 +                                                         ) as isize,
12544 +                                                 )
12545 +                                         {
12546 +                                             let mut type_0: libc::c_int = 0;
12547 +                                             let mut sym_index_0: libc::c_uint = 0;
12548 +                                             type_0 = ((*rel).r_info
12549 +                                                 & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
12550 +                                             sym_index_0 = ((*rel).r_info >> 32 as libc::c_int)
12551 +                                                 as libc::c_uint;
12552 +                                             if !(sym_index_0 >= nb_syms as libc::c_uint) {
12553 +                                                 sym_index_0 = *old_to_new_syms.offset(sym_index_0 as isize)
12554 +                                                     as libc::c_uint;
12555 +                                                 if !(sym_index_0 == 0
12556 +                                                     && (*sm_table.offset((*sh).sh_info as isize)).link_once
12557 +                                                         == 0)
12558 +                                                 {
12559 +                                                     (*rel)
12560 +                                                         .r_info = ((sym_index_0 as Elf64_Xword)
12561 +                                                         << 32 as libc::c_int)
12562 +                                                         .wrapping_add(type_0 as Elf64_Xword);
12563 +                                                     (*rel)
12564 +                                                         .r_offset = ((*rel).r_offset as libc::c_ulong)
12565 +                                                         .wrapping_add(offseti) as Elf64_Addr as Elf64_Addr;
12566 +                                                     rel = rel.offset(1);
12567 +                                                     rel;
12568 +                                                     continue;
12569 +                                                 }
12570 +                                             }
12571 +                                             tcc_enter_state(s1);
12572 +                                             (Some(
12573 +                                                 _tcc_error_noabort
12574 +                                                     as unsafe extern "C" fn(
12575 +                                                         *const libc::c_char,
12576 +                                                         ...
12577 +                                                     ) -> libc::c_int,
12578 +                                             ))
12579 +                                                 .expect(
12580 +                                                     "non-null function pointer",
12581 +                                                 )(
12582 +                                                 b"Invalid relocation entry [%2d] '%s' @ %.8x\0" as *const u8
12583 +                                                     as *const libc::c_char,
12584 +                                                 i,
12585 +                                                 strsec.offset((*sh).sh_name as isize),
12586 +                                                 (*rel).r_offset as libc::c_int,
12587 +                                             );
12588 +                                             current_block = 3957405341070239145;
12589 +                                             break 's_516;
12590 +                                         }
12591 +                                     }
12592 +                                     _ => {}
12593 +                                 }
12594 +                             }
12595 +                             i += 1;
12596 +                             i;
12597 +                         }
12598 +                         match current_block {
12599 +                             3957405341070239145 => {}
12600 +                             _ => {
12601 +                                 ret = 0 as libc::c_int;
12602 +                             }
12603 +                         }
12604 +                     }
12605 +                 }
12606 +             }
12607 +             _ => {}
12608 +         }
12609 +         tcc_free(symtab as *mut libc::c_void);
12610 +         tcc_free(strtab as *mut libc::c_void);
12611 +         tcc_free(old_to_new_syms as *mut libc::c_void);
12612 +         tcc_free(sm_table as *mut libc::c_void);
12613 +         tcc_free(strsec as *mut libc::c_void);
12614 +         tcc_free(shdr as *mut libc::c_void);
12615 +         return ret;
12616 +     }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:12637:15
      |
12637 |         ret = ret << 8 as libc::c_int | *fresh47 as libc::c_ulonglong;
      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ret << 8 as libc::c_int) | *fresh47 as libc::c_ulonglong`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:13872:22
      |
13872 |                       ((1 as libc::c_int) << 1 as libc::c_int
      |  ______________________^
13873 | |                         | (1 as libc::c_int) << 2 as libc::c_int) as libc::c_char,
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:13875:22
      |
13875 |                       ((1 as libc::c_int) << 1 as libc::c_int
      |  ______________________^
13876 | |                         | (1 as libc::c_int) << 0 as libc::c_int) as libc::c_char,
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:13881:28
      |
13881 |                           & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________________^
13882 | |                             | (1 as libc::c_int) << 0 as libc::c_int
13883 | |                             | (1 as libc::c_int) << 2 as libc::c_int))
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
13881 ~                         & ((1 as libc::c_int) << 1 as libc::c_int
13882 ~                             | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:13881:28
      |
13881 |                           & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________________^
13882 | |                             | (1 as libc::c_int) << 0 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:13955:13
      |
13955 | /             if copy == 2 as libc::c_int as libc::c_uint {
13956 | |                 if !(n == 0 as libc::c_int as libc::c_uint) {
13957 | |                     f = k;
13958 | |                     if f >= 0 as libc::c_int as libc::c_uint {
...     |
14013 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
13955 ~             if copy == 2 as libc::c_int as libc::c_uint && !(n == 0 as libc::c_int as libc::c_uint) {
13956 +                 f = k;
13957 +                 if f >= 0 as libc::c_int as libc::c_uint {
13958 +                     if f != 0 as libc::c_int as libc::c_uint {
13959 +                         current_block_50 = 12209867499936983673;
13960 +                     } else {
13961 +                         f = 3 as libc::c_int as libc::c_uint;
13962 +                         current_block_50 = 1356832168064818221;
13963 +                     }
13964 +                 } else {
13965 +                     current_block_50 = 1356832168064818221;
13966 +                 }
13967 +                 match current_block_50 {
13968 +                     12209867499936983673 => {}
13969 +                     _ => {
13970 +                         n = (n as Elf64_Addr)
13971 +                             .wrapping_add(
13972 +                                 (n as Elf64_Addr).wrapping_neg()
13973 +                                     & (sysconf(_SC_PAGESIZE as libc::c_int)
13974 +                                         - 1 as libc::c_int as libc::c_long) as Elf64_Addr,
13975 +                             ) as libc::c_uint;
13976 +                         if (*s1).verbose as libc::c_int == 2 as libc::c_int {
13977 +                             printf(
13978 +                                 b"protect         %3s %p  len %05x\n\0" as *const u8
13979 +                                     as *const libc::c_char,
13980 +                                 &*(b"rx\0ro\0rw\0rwx\0" as *const u8 as *const libc::c_char)
13981 +                                     .offset(
13982 +                                         f.wrapping_mul(3 as libc::c_int as libc::c_uint) as isize,
13983 +                                     ) as *const libc::c_char,
13984 +                                 addr as *mut libc::c_void,
13985 +                                 n,
13986 +                             );
13987 +                         }
13988 +                         if protect_pages(
13989 +                             addr as *mut libc::c_void,
13990 +                             n as libc::c_ulong,
13991 +                             f as libc::c_int,
13992 +                         ) < 0 as libc::c_int
13993 +                         {
13994 +                             tcc_enter_state(s1);
13995 +                             return (Some(
13996 +                                 _tcc_error_noabort
13997 +                                     as unsafe extern "C" fn(
13998 +                                         *const libc::c_char,
13999 +                                         ...
14000 +                                     ) -> libc::c_int,
14001 +                             ))
14002 +                                 .expect(
14003 +                                     "non-null function pointer",
14004 +                                 )(
14005 +                                 b"mprotect failed (did you mean to configure --with-selinux?)\0"
14006 +                                     as *const u8 as *const libc::c_char,
14007 +                             );
14008 +                         }
14009 +                     }
14010 +                 }
14011 +             }
      |

warning: this `else { if .. }` block can be collapsed
     --> src/libtcc.rs:14624:32
      |
14624 |                           } else {
      |  ________________________________^
14625 | |                             if ln.offset(7 as libc::c_int as isize) < end {
14626 | |                                 ln = ln.offset(8 as libc::c_int as isize);
14627 | |                                 read64le(ln.offset(-(8 as libc::c_int as isize)));
14628 | |                             } else {};
14629 | |                         };
      | |_________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
      = note: `#[warn(clippy::collapsible_else_if)]` on by default
help: collapse nested if block
      |
14624 ~                         } else if ln.offset(7 as libc::c_int as isize) < end {
14625 +                             ln = ln.offset(8 as libc::c_int as isize);
14626 +                             read64le(ln.offset(-(8 as libc::c_int as isize)));
14627 ~                         } else {};
      |

warning: this `else` branch is empty
     --> src/libtcc.rs:14623:31
      |
14623 | ...                   } else {};
      |                         ^^^^^^^ help: you can remove it
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: this `else` branch is empty
     --> src/libtcc.rs:14628:31
      |
14628 | ...                   } else {};
      |                         ^^^^^^^ help: you can remove it
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15502:19
      |
15502 |     if ll != 0 || r >> 3 as libc::c_int & 1 as libc::c_int != 0
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15503:12
      |
15503 |         || r2 >> 3 as libc::c_int & 1 as libc::c_int != 0
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15506:14
      |
15506 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |  ______________^
15507 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
15508 | |                 | ll << 3 as libc::c_int) as libc::c_uint,
      | |________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15506 ~             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
15507 ~                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int | (ll << 3 as libc::c_int)) as libc::c_uint,
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15506:14
      |
15506 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |  ______________^
15507 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
      | |_________________________________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int | ((r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15506:36
      |
15506 |             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15507:20
      |
15507 |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15781:20
      |
15781 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
15782 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
15783 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15781 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15782 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15781:21
      |
15781 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15788:24
      |
15788 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
15789 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
15790 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint))
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15788 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15789 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
15790 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15788:25
      |
15788 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15797:20
      |
15797 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
15798 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
15799 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15797 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15798 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15797:21
      |
15797 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15806:20
      |
15806 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
15807 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
15808 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15806 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15807 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15806:21
      |
15806 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15815:20
      |
15815 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
15816 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
15817 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15815 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15816 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15815:21
      |
15815 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15824:20
      |
15824 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
15825 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
15826 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
15824 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
15825 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15824:21
      |
15824 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/libtcc.rs:15849:13
      |
15849 |             'c_32725: {
      |             ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15943:25
      |
15943 |                     + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:15961:21
      |
15961 |                 + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/libtcc.rs:15993:17
      |
15993 |                 'c_23764: {
      |                 ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16027:21
      |
16027 |                     'c_23709: {
      |                     ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16065:13
      |
16065 |             'c_23606: {
      |             ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16354:5
      |
16354 |     'c_42430: {
      |     ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:16388:18
      |
16388 |         *psize = size + 7 as libc::c_int & !(7 as libc::c_int);
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & !(7 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:16389:19
      |
16389 |         *palign = align + 7 as libc::c_int & !(7 as libc::c_int);
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(align + 7 as libc::c_int) & !(7 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/libtcc.rs:16650:17
      |
16650 |                 'c_43010: {
      |                 ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16694:17
      |
16694 |                 'c_42931: {
      |                 ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16743:5
      |
16743 |     'c_42793: {
      |     ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16771:5
      |
16771 |     'c_42757: {
      |     ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16828:21
      |
16828 |                     'c_42090: {
      |                     ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16893:5
      |
16893 |     'c_41835: {
      |     ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:16921:5
      |
16921 |     'c_41798: {
      |     ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17032:32
      |
17032 |             seen_stack_size = (seen_stack_size + align - 1 as libc::c_int & -align)
      |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(seen_stack_size + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17114:28
      |
17114 |                     addr = addr + align - 1 as libc::c_int & -align;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17120:24
      |
17120 |                 addr = addr + align - 1 as libc::c_int & -align;
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17143:28
      |
17143 |                     addr = addr + align - 1 as libc::c_int & -align;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17175:9
      |
17175 |     v = -loc + 15 as libc::c_int & -(16 as libc::c_int);
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 15 as libc::c_int) & -(16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17351:19
      |
17351 |             opc = 0xc0 as libc::c_int | opc << 3 as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17385:26
      |
17385 |                         (0xc0 as libc::c_int | opc << 3 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17392:25
      |
17392 |                         0xc0 as libc::c_int | opc << 3 as libc::c_int
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:17401:33
      |
17401 |                 orex(ll, r, fr, opc << 3 as libc::c_int | 0x1 as libc::c_int);
      |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(opc << 3 as libc::c_int) | 0x1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/libtcc.rs:17614:9
      |
17614 |         'c_38059: {
      |         ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:17674:9
      |
17674 |         'c_37881: {
      |         ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:17719:9
      |
17719 |         'c_37787: {
      |         ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:17781:9
      |
17781 |         'c_37661: {
      |         ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:17812:13
      |
17812 |             'c_37617: {
      |             ^^^^^^^^

warning: unused label
     --> src/libtcc.rs:18034:9
      |
18034 |         'c_40936: {
      |         ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18081:9
      |
18081 | /         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
18082 | |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
18083 | |                 << 16 as libc::c_int,
      | |____________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18081 ~         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int | (((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
18082 ~                 << 16 as libc::c_int),
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18081:9
      |
18081 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0b60f as libc::c_int | ((sz << 3 as libc::c_int | xl) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18081:36
      |
18081 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
      |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(sz << 3 as libc::c_int) | xl`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18082:16
      |
18082 |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((r & 7 as libc::c_int) << 3 as libc::c_int) | r & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18674:43
      |
18674 |             cstr_ccat(cstr, '0' as i32 + (c >> 6 as libc::c_int & 7 as libc::c_int));
      |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 6 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:18675:43
      |
18675 |             cstr_ccat(cstr, '0' as i32 + (c >> 3 as libc::c_int & 7 as libc::c_int));
      |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 3 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:20305:36
      |
20305 | ...                   || val & val - 1 as libc::c_int != 0 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `val & (val - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:20638:17
      |
20638 | /                 if is_bof != 0 {
20639 | |                     if c != 0 {
20640 | |                         (*file).ifndef_macro = tok;
20641 | |                     }
20642 | |                 }
      | |_________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
20638 ~                 if is_bof != 0 && c != 0 {
20639 +                     (*file).ifndef_macro = tok;
20640 +                 }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:22687:37
      |
22687 |   ...                   n = n << 6 as libc::c_int
      |  ___________________________^
22688 | | ...                       | *p.offset(i_0 as isize) as libc::c_int
22689 | | ...                           & 0x3f as libc::c_int;
      | |___________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
22687 ~                                 n = (n << 6 as libc::c_int) | *p.offset(i_0 as isize) as libc::c_int
22688 ~                                         & 0x3f as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:22808:21
      |
22808 |                   c = c << 8 as libc::c_int
      |  _____________________^
22809 | |                     | *(tokcstr.data).offset(i as isize) as libc::c_int;
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `(c << 8 as libc::c_int) | *(tokcstr.data).offset(i as isize) as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:22835:34
      |
22835 |         *bn.offset(i as isize) = v << shift | or_val as libc::c_uint;
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v << shift) | or_val as libc::c_uint`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:22836:19
      |
22836 |         or_val = (v >> 32 as libc::c_int - shift) as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v >> (32 as libc::c_int - shift)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:23148:25
      |
23148 | /                         if lcount
23149 | |                             <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int
23150 | |                         {
23151 | |                             if n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
...     |
23155 | |                         }
      | |_________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
23148 ~                         if lcount <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int && n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
23149 +                             lcount = (8 as libc::c_int == 4 as libc::c_int)
23150 +                                 as libc::c_int + 1 as libc::c_int;
23151 +                         }
      |

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:24771:17
      |
24771 | /                 if t == '\\' as i32 {
24772 | |                     if parse_flags & 0x20 as libc::c_int == 0 {
24773 | |                         _tcc_error(
24774 | |                             b"stray '\\' in program\0" as *const u8
...     |
24778 | |                 }
      | |_________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
24771 ~                 if t == '\\' as i32 && parse_flags & 0x20 as libc::c_int == 0 {
24772 +                     _tcc_error(
24773 +                         b"stray '\\' in program\0" as *const u8
24774 +                             as *const libc::c_char,
24775 +                     );
24776 +                 }
      |

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:24788:12
      |
24788 |       } else if t == 0xce as libc::c_int {
      |  ____________^
24789 | |         if parse_flags & 0x40 as libc::c_int != 0 {
24790 | |             parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
24791 | |         }
24792 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
24788 ~     } else if t == 0xce as libc::c_int && parse_flags & 0x40 as libc::c_int != 0 {
24789 +         parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
24790 +     }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25635:20
      |
25635 |       debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
      |  ____________________^
25636 | |         1 as libc::c_int
25637 | |     } else {
25638 | |         0 as libc::c_int
25639 | |     }) | ((*s1).test_coverage as libc::c_int) << 1 as libc::c_int) as libc::c_char;
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
25635 ~     debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
25636 +         1 as libc::c_int
25637 +     } else {
25638 +         0 as libc::c_int
25639 ~     }) | (((*s1).test_coverage as libc::c_int) << 1 as libc::c_int)) as libc::c_char;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25740:24
      |
25740 |                       | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ________________________^
25741 | |                         | (2 as libc::c_int) << 20 as libc::c_int))
      | |_________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25740:24
      |
25740 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25742:20
      |
25742 |                   == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ____________________^
25743 | |                     | (2 as libc::c_int) << 20 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25742:20
      |
25742 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25940:12
      |
25940 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
25941 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
25942 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
25940 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
25941 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:25940:13
      |
25940 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26510:16
      |
26510 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26511:12
      |
26511 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26522:16
      |
26522 |               t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ________________^
26523 | |                 | (2 as libc::c_int) << 20 as libc::c_int,
      | |_________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26522:16
      |
26522 |             t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26602:16
      |
26602 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
26603 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
26604 | |                 | 0x80 as libc::c_int as libc::c_uint)
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
26602 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
26603 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26602:17
      |
26602 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26617:16
      |
26617 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26618:12
      |
26618 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:26646:9
      |
26646 | /         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 {
26647 | |             if ((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0
26648 | |                 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0
...     |
26652 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
26646 ~         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 && (((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0) {
26647 +             static_proto |= 0x8000 as libc::c_int;
26648 +         }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:26983:19
      |
26983 |             loc = loc - size & -align;
      |                   ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:27177:9
      |
27177 | /         if !((*s).v == 0
27178 | |             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int)
27179 | |         {
27180 | |             if (*s).type_0.t & 0x40 as libc::c_int != 0
...     |
27199 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
27177 ~         if !((*s).v == 0
27178 +             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int) && ((*s).type_0.t & 0x40 as libc::c_int != 0
27179 +                 || (*s).type_0.t & 0xf as libc::c_int == 7 as libc::c_int || ((*s).a).addrtaken() as libc::c_int != 0) {
27180 +             let mut align: libc::c_int = 0;
27181 +             let mut size: libc::c_int = type_size(&mut (*s).type_0, &mut align);
27182 +             let mut bounds_ptr: *mut Elf64_Addr = section_ptr_add(
27183 +                 (*tcc_state).lbounds_section,
27184 +                 (2 as libc::c_int as libc::c_ulong)
27185 +                     .wrapping_mul(
27186 +                         ::core::mem::size_of::<Elf64_Addr>() as libc::c_ulong,
27187 +                     ),
27188 +             ) as *mut Elf64_Addr;
27189 +             *bounds_ptr
27190 +                 .offset(
27191 +                     0 as libc::c_int as isize,
27192 +                 ) = (*s).c2rust_unnamed.c2rust_unnamed.c as Elf64_Addr;
27193 +             *bounds_ptr.offset(1 as libc::c_int as isize) = size as Elf64_Addr;
27194 +         }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27386:19
      |
27386 |         bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27387:20
      |
27387 |           bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ____________________^
27388 | |             & 0x3f as libc::c_int;
      | |_________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27387:20
      |
27387 |         bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27392:17
      |
27392 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  _________________^
27393 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
27394 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
27392 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
27393 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27392:18
      |
27392 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27591:14
      |
27591 |     return ((a ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int)
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:27592:11
      |
27592 |         < b ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int) as libc::c_int;
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `b ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:31892:20
      |
31892 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
31893 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
31894 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
31892 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
31893 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:31892:21
      |
31892 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:31953:20
      |
31953 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
31954 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
31955 | |                     | 0x80 as libc::c_int as libc::c_uint
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
31953 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
31954 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:31953:21
      |
31953 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:31957:21
      |
31957 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32096:20
      |
32096 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
32097 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32098 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32096 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32097 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32096:21
      |
32096 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32273:12
      |
32273 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
32274 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32275 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32273 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32274 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32273:13
      |
32273 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32279:16
      |
32279 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
32280 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32281 | |                 | 0x80 as libc::c_int as libc::c_uint)
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32279 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32280 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32279:17
      |
32279 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32288:12
      |
32288 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
32289 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32290 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32288 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32289 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32288:13
      |
32288 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32298:16
      |
32298 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
32299 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32300 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32298 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32299 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32298:17
      |
32298 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32304:16
      |
32304 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
32305 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32306 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32304 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32305 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32304:17
      |
32304 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32797:12
      |
32797 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
32798 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
32799 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
32797 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
32798 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:32797:13
      |
32797 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33144:12
      |
33144 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
33145 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
33146 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
33144 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
33145 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33144:13
      |
33144 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33309:44
      |
33309 |   ...                   & (((1 as libc::c_uint)
      |  __________________________^
33310 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
33311 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
33312 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
33309 ~                                         & ((((1 as libc::c_uint)
33310 +                                             << 6 as libc::c_int + 6 as libc::c_int)
33311 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
33312 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33309:45
      |
33309 |   ...                   & (((1 as libc::c_uint)
      |  ___________________________^
33310 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33316:48
      |
33316 |   ...                   & (((1 as libc::c_uint)
      |  __________________________^
33317 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
33318 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
33319 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
33316 ~                                             & ((((1 as libc::c_uint)
33317 +                                                 << 6 as libc::c_int + 6 as libc::c_int)
33318 +                                                 .wrapping_sub(1 as libc::c_int as libc::c_uint)
33319 ~                                                 << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33316:49
      |
33316 |   ...                   & (((1 as libc::c_uint)
      |  ___________________________^
33317 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33449:19
      |
33449 |         bit_pos = ft >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33450:20
      |
33450 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33450:20
      |
33450 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ft >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33454:17
      |
33454 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  _________________^
33455 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
33456 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
33454 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
33455 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33454:18
      |
33454 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33537:24
      |
33537 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
33538 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
33539 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)))
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
33537 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
33538 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
33539 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33537:25
      |
33537 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33771:32
      |
33771 | ...                   || n & n - 1 as libc::c_int != 0 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33784:28
      |
33784 |                           != (1 as libc::c_int)
      |  ____________________________^
33785 | |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33999:24
      |
33999 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
34000 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:33999:24
      |
33999 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34006:13
      |
34006 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*f).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34033:16
      |
34033 |             == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34036:24
      |
34036 |                 size = bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34044:22
      |
34044 |                 c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34046:17
      |
34046 |             c = c + align - 1 as libc::c_int & -align;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34074:29
      |
34074 |                           c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |  _____________________________^
34075 | |                             - 1 as libc::c_int & -align;
      | |_______________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34074 ~                         c = (c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
34075 ~                             - 1 as libc::c_int) & -align;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34074:34
      |
34074 |                         c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34100:25
      |
34100 |                     c = c + align - 1 as libc::c_int & -align;
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34115:22
      |
34115 |                   .t = (*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int)
      |  ______________________^
34116 | |                 | bit_pos << 20 as libc::c_int;
      | |______________________________________________^ help: consider parenthesizing your expression: `(*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34127:14
      |
34127 |         c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34130:9
      |
34130 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34145:9
      |
34145 |     c = c + a - 1 as libc::c_int & -a;
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + a - 1 as libc::c_int) & -a`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34164:24
      |
34164 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
34165 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34164:24
      |
34164 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34167:27
      |
34167 |                 bit_pos = (*f).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34179:30
      |
34179 |                         cx = px >> 3 as libc::c_int & -align;
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px >> 3 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34184:29
      |
34184 |                         s = px + bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px + bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34202:34
      |
34202 |   ...                   .t = (*f).type_0.t
      |  ____________________________^
34203 | | ...                   & !((0x3f as libc::c_int) << 20 as libc::c_int)
34204 | | ...                   | bit_pos << 20 as libc::c_int;
      | |____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34202 ~                             .t = (*f).type_0.t
34203 ~                             & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34312:24
      |
34312 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
34313 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
34314 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34312 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
34313 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
34314 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34312:25
      |
34312 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34375:22
      |
34375 |                   .t = 3 as libc::c_int | 0x2000 as libc::c_int
      |  ______________________^
34376 | |                 | (3 as libc::c_int) << 20 as libc::c_int;
      | |_________________________________________________________^ help: consider parenthesizing your expression: `3 as libc::c_int | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34379:26
      |
34379 |                       .t = bt | 0x2000 as libc::c_int
      |  __________________________^
34380 | |                     | (3 as libc::c_int) << 20 as libc::c_int;
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `bt | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34479:27
      |
34479 |             (*type_0).t = t.t | (2 as libc::c_int) << 20 as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `t.t | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:34512:37
      |
34512 | / ...                   if v_0 & 0x20000000 as libc::c_int == 0
34513 | | ...                       && v_0 & !(0x40000000 as libc::c_int)
34514 | | ...                           < 0x10000000 as libc::c_int
...     |
34521 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
34512 ~                                     if v_0 & 0x20000000 as libc::c_int == 0 && v_0 & !(0x40000000 as libc::c_int)
34513 +                                             < 0x10000000 as libc::c_int && (*tcc_state).ms_extensions as libc::c_int == 0 as libc::c_int {
34514 +                                         expect(b"identifier\0" as *const u8 as *const libc::c_char);
34515 +                                     }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34599:45
      |
34599 |   ...                   & !(((1 as libc::c_uint)
      |  ___________________________^
34600 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
34601 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
34602 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34599 ~                                         & !((((1 as libc::c_uint)
34600 +                                             << 6 as libc::c_int + 6 as libc::c_int)
34601 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
34602 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34599:46
      |
34599 |   ...                   & !(((1 as libc::c_uint)
      |  ____________________________^
34600 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34604:44
      |
34604 | ...                   | (bit_size << 20 as libc::c_int + 6 as libc::c_int)
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `bit_size << (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34758:31
      |
34758 |                           n_0 = (1 as libc::c_int)
      |  _______________________________^
34759 | |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      | |__________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << ((ad1.a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34766:28
      |
34766 |                         || n_0 & n_0 - 1 as libc::c_int != 0 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n_0 & (n_0 - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:34839:21
      |
34839 |                     (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int,
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:35048:5
      |
35048 | /     if (*tcc_state).char_is_unsigned != 0 {
35049 | |         if t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
35050 | |             t |= 0x10 as libc::c_int;
35051 | |         }
35052 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
35048 ~     if (*tcc_state).char_is_unsigned != 0 && t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
35049 +         t |= 0x10 as libc::c_int;
35050 +     }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:35712:47
      |
35712 |                 if size > 8 as libc::c_int || size & size - 1 as libc::c_int != 0
      |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `size & (size - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36052:33
      |
36052 |                           align = (1 as libc::c_int)
      |  _________________________________^
36053 | |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |___________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*s).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36416:28
      |
36416 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36417:24
      |
36417 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36455:24
      |
36455 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
36456 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
36457 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36455 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
36456 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
36457 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36455:25
      |
36455 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36609:27
      |
36609 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36719:28
      |
36719 |                     size = size + regsize - 1 as libc::c_int & -regsize;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + regsize - 1 as libc::c_int) & -regsize`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:36723:27
      |
36723 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unnecessary parentheses around assigned value
     --> src/libtcc.rs:36807:14
      |
36807 |         p2 = (if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
      |              ^
...
36811 |         });
      |          ^
      |
help: remove these parentheses
      |
36807 ~         p2 = if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
36808 |             prec[t as usize] as libc::c_int
36809 |         } else {
36810 |             0 as libc::c_int
36811 ~         };
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:37163:20
      |
37163 |                 if align & ret_align - 1 as libc::c_int != 0
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `align & (ret_align - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:37169:27
      |
37169 |                     loc = loc - size & -ret_align;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -ret_align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:37699:13
      |
37699 | /             if tok != ';' as i32 {
37700 | |                 if decl(0x34 as libc::c_int) == 0 {
37701 | |                     gexpr();
37702 | |                     vpop();
37703 | |                 }
37704 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
37699 ~             if tok != ';' as i32 && decl(0x34 as libc::c_int) == 0 {
37700 +                 gexpr();
37701 +                 vpop();
37702 +             }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38393:18
      |
38393 |         size = (((*type_0).t >> 20 as libc::c_int & 0x3f as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38394:16
      |
38394 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38394:16
      |
38394 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*type_0).t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38477:23
      |
38477 |             bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38478:24
      |
38478 |               bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
38479 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38478:24
      |
38478 |             bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:38870:28
      |
38870 |                         == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:39001:38
      |
39001 |           let mut speca: libc::c_int = (1 as libc::c_int)
      |  ______________________________________^
39002 | |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:39018:15
      |
39018 |         loc = loc - size & -align;
      |               ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:39273:13
      |
39273 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*sym).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:39502:20
      |
39502 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
39503 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
39504 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
39502 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
39503 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:39502:21
      |
39502 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:40349:9
      |
40349 |         0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:40759:24
      |
40759 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:40760:20
      |
40760 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:40908:44
      |
40908 |                 if n < 0 as libc::c_int || n & n - 1 as libc::c_int != 0 as libc::c_int {
      |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:40914:26
      |
40914 |                 offset = ind + n - 1 as libc::c_int & -n;
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ind + n - 1 as libc::c_int) & -n`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:41285:28
      |
41285 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:41286:24
      |
41286 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:41291:29
      |
41291 |                         & !(0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int)
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:41292:28
      |
41292 |                           | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ____________________________^
41293 | |                             | (2 as libc::c_int) << 20 as libc::c_int);
      | |_____________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:41292:28
      |
41292 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42340:20
      |
42340 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42341 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42342 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42343 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42340 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42341 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42342 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42340:20
      |
42340 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42341 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42342 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42340 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42341 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42340:20
      |
42340 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42341 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42414:32
      |
42414 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
42415 | |                     | (1 as libc::c_int) << OPT_REG8_LOW as libc::c_int) as uint32_t;
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG8_LOW as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42587:12
      |
42587 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
42588 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42590 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42591 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
42592 | |             | (1 as libc::c_int) << OPT_SSE as libc::c_int) as uint32_t != 0
      | |__________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42587 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42588 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42590 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42591 ~             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42587:12
      |
42587 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
42588 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42590 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42591 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |__________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42587 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42588 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42590 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42587:12
      |
42587 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
42588 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42590 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42587 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42588 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42587:12
      |
42587 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
42588 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42589 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42587 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42588 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42587:12
      |
42587 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
42588 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42669:20
      |
42669 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42670 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42671 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42672 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42673 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42669 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42670 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42671 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42672 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42669:20
      |
42669 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42670 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42671 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42672 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42669 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42670 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42671 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42669:20
      |
42669 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42670 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42671 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42669 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42670 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42669:20
      |
42669 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
42670 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42718 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
42719 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
42720 | |                 | (1 as libc::c_int) << OPT_CR as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42714 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42715 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42718 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
42719 +                 | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42718 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
42719 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42714 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42715 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42718 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
42718 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42714 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42715 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
42717 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42714 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42715 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
42716 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42714 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
42715 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:42714:16
      |
42714 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
42715 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/libtcc.rs:42995:21
      |
42995 | /                     if !((*pa).nb_ops as libc::c_int != nb_ops) {
42996 | |                         if !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
42997 | |                             && ops[0 as libc::c_int as usize].type_0
42998 | |                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
...     |
43068 | |                     }
      | |_____________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
42995 ~                     if !((*pa).nb_ops as libc::c_int != nb_ops) && !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
42996 +                             && ops[0 as libc::c_int as usize].type_0
42997 +                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
42998 +                                     as uint32_t
42999 +                             && ops[1 as libc::c_int as usize].type_0
43000 +                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43001 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43002 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43003 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
43004 +                                     as uint32_t
43005 +                                 == ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
43006 +                                     as uint32_t
43007 +                             && (*pa).instr_type as libc::c_int & 0x100 as libc::c_int
43008 +                                 == 0) {
43009 +                         alltypes = 0 as libc::c_int;
43010 +                         i = 0 as libc::c_int;
43011 +                         loop {
43012 +                             if !(i < nb_ops) {
43013 +                                 break 's_124;
43014 +                             }
43015 +                             let mut op1_0: libc::c_int = 0;
43016 +                             let mut op2: libc::c_int = 0;
43017 +                             op1_0 = (*pa).op_type[i as usize] as libc::c_int;
43018 +                             op2 = op1_0 & 0x1f as libc::c_int;
43019 +                             match op2 {
43020 +                                 24 => {
43021 +                                     v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
43022 +                                         | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43023 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
43024 +                                 }
43025 +                                 25 => {
43026 +                                     v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
43027 +                                         | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43028 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43029 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
43030 +                                 }
43031 +                                 26 => {
43032 +                                     v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
43033 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43034 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
43035 +                                 }
43036 +                                 27 => {
43037 +                                     v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
43038 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
43039 +                                 }
43040 +                                 28 => {
43041 +                                     v = (1 as libc::c_int) << OPT_MMX as libc::c_int
43042 +                                         | (1 as libc::c_int) << OPT_SSE as libc::c_int;
43043 +                                 }
43044 +                                 29 | 30 => {
43045 +                                     v = (1 as libc::c_int) << OPT_ADDR as libc::c_int;
43046 +                                 }
43047 +                                 _ => {
43048 +                                     v = (1 as libc::c_int) << op2;
43049 +                                 }
43050 +                             }
43051 +                             if op1_0 & OPT_EA as libc::c_int != 0 {
43052 +                                 v |= 0x40000000 as libc::c_int;
43053 +                             }
43054 +                             op_type[i as usize] = v;
43055 +                             if ops[i as usize].type_0 & v as uint32_t
43056 +                                 == 0 as libc::c_int as uint32_t
43057 +                             {
43058 +                                 break;
43059 +                             }
43060 +                             alltypes = (alltypes as uint32_t | ops[i as usize].type_0)
43061 +                                 as libc::c_int;
43062 +                             i += 1;
43063 +                             i;
43064 +                         }
43065 +                     }
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43001:36
      |
43001 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43002 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43003 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43004 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43001 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43002 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43003 ~                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43001:36
      |
43001 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43002 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43003 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43001 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43002 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43001:36
      |
43001 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43002 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43023:45
      |
43023 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ___________________________^
43024 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43025 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43023 ~                                         v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
43024 ~                                             | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43023:45
      |
43023 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ___________________________^
43024 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43028:45
      |
43028 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
43029 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43030 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43031 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43028 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
43029 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43030 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43028:45
      |
43028 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
43029 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43030 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43028 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
43029 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43028:45
      |
43028 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
43029 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43034:45
      |
43034 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
      |  ___________________________^
43035 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43036 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43034 ~                                         v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
43035 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43034:45
      |
43034 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
      |  ___________________________^
43035 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG16 as libc::c_int) | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43039:45
      |
43039 |   ...                   v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
      |  ___________________________^
43040 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM16 as libc::c_int) | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43043:45
      |
43043 |   ...                   v = (1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ___________________________^
43044 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int;
      | |________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43135:28
      |
43135 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43136 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43137 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43138 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43135 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43136 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43137 ~                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43135:28
      |
43135 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43136 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43137 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43135 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43136 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43135:28
      |
43135 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43136 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43141:32
      |
43141 |   ...                   & ((1 as libc::c_int) << OPT_CL as libc::c_int
      |  __________________________^
43142 | | ...                       | (1 as libc::c_int) << OPT_DX as libc::c_int) == 0
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_CL as libc::c_int) | ((1 as libc::c_int) << OPT_DX as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43145:32
      |
43145 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43146 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43147 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43148 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43145 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43146 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43147 ~                                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43145:32
      |
43145 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43146 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43147 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43145 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43146 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43145:32
      |
43145 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43146 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43158:32
      |
43158 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
      |  __________________________^
43159 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
43160 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int) as uint32_t
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43158 ~                             & ((1 as libc::c_int) << OPT_SEG as libc::c_int
43159 ~                                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)) as uint32_t
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43158:32
      |
43158 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
      |  __________________________^
43159 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_SEG as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43182:20
      |
43182 |                 || alltypes & (1 as libc::c_int) << OPT_REG64 as libc::c_int != 0
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `alltypes & ((1 as libc::c_int) << OPT_REG64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43239:28
      |
43239 |                           & ((1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ____________________________^
43240 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int)
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43241:28
      |
43241 |                           == (1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ____________________________^
43242 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43273:21
      |
43273 |                   v = (v & !(0xff as libc::c_int)) << 8 as libc::c_int
      |  _____________________^
43274 | |                     | 0xf00 as libc::c_int | v & 0xff as libc::c_int;
      | |__________________________________________^ help: consider parenthesizing your expression: `((v & !(0xff as libc::c_int)) << 8 as libc::c_int) | 0xf00 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43328:32
      |
43328 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
43329 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43330 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43331 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t;
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43328 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43329 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43330 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t;
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43328:32
      |
43328 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
43329 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43330 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43328 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43329 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43328:32
      |
43328 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
43329 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43368 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
43369 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
43370 | | ...                       | (1 as libc::c_int) << OPT_INDIR as libc::c_int) != 0
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43364 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43365 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43368 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int
43369 ~                                     | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_INDIR as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43368 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
43369 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43364 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43365 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43368 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43368 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43364 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43365 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43367 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43364 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43365 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43366 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43364 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43365 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43364:36
      |
43364 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
43365 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
43394 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
43395 | |                             | (1 as libc::c_int) << OPT_SEG as libc::c_int) != 0
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
43392 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
43393 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int
43394 ~                             | (1 as libc::c_int) << OPT_DB as libc::c_int | ((1 as libc::c_int) << OPT_SEG as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
43393 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
43394 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
43392 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
43393 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int | ((1 as libc::c_int) << OPT_DB as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
43392 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
43393 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
43392 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int | ((1 as libc::c_int) << OPT_TR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
43392 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
43391 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43390 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43389 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43388 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43386 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43387 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43386:28
      |
43386 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
43387 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43422:20
      |
43422 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
43423 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43424 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43425 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
43426 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43422 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43423 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43424 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43425 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43422:20
      |
43422 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
43423 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43424 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43425 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43422 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43423 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43424 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43422:20
      |
43422 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
43423 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43424 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43422 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43423 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43422:20
      |
43422 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
43423 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43494:11
      |
43494 |     op1 = v >> 8 as libc::c_int & 0xff as libc::c_int;
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v >> 8 as libc::c_int) & 0xff as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43513:15
      |
43513 |         reg = (*pa).instr_type as libc::c_int >> 13 as libc::c_int & 7 as libc::c_int;
      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*pa).instr_type as libc::c_int >> 13 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43526:16
      |
43526 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43527 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43529 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
43530 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
43531 | |                 | (1 as libc::c_int) << OPT_ADDR as libc::c_int) != 0
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43526 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
43527 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43529 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
43530 ~                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_ADDR as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43526:16
      |
43526 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43527 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43529 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
43530 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43526 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
43527 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43529 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43526:16
      |
43526 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43527 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43529 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43526 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
43527 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43526:16
      |
43526 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43527 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43528 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43526 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
43527 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43526:16
      |
43526 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43527 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |_______________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43533:16
      |
43533 |               if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
43534 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |_______________________________________________________________^ help: consider parenthesizing your expression: `v | (1 as libc::c_int) << OPT_IM8 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43533:16
      |
43533 |             if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v | ((1 as libc::c_int) << OPT_IM8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43535:20
      |
43535 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43536 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43537 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
43538 | |                     | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43535 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
43536 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43537 +                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43535:20
      |
43535 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43536 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
43537 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43535 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
43536 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43535:20
      |
43535 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43536 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43545:24
      |
43545 |                     || v & (1 as libc::c_int) << OPT_IM64 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43554:20
      |
43554 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43555 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
43556 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int) != 0
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43554 ~                 & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
43555 ~                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43554:20
      |
43554 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43555 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43562:20
      |
43562 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
43563 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int) != 0
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43566:23
      |
43566 |             } else if v & (1 as libc::c_int) << OPT_IM16 as libc::c_int != 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43568:23
      |
43568 |             } else if v & (1 as libc::c_int) << OPT_IM64 as libc::c_int != 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43668:12
      |
43668 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
43669 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43670 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
43671 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43668 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43669 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43670 ~             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43668:12
      |
43668 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
43669 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
43670 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
43668 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
43669 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:43668:12
      |
43668 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
43669 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:44712:8
      |
44712 |     if nb & nb - 1 as libc::c_int == 0 as libc::c_int {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `nb & (nb - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unnecessary parentheses around assigned value
     --> src/libtcc.rs:46581:17
      |
46581 |         value = (if value != 0 {
      |                 ^
...
46585 |         });
      |          ^
      |
help: remove these parentheses
      |
46581 ~         value = if value != 0 {
46582 |             1 as libc::c_int | 2 as libc::c_int
46583 |         } else {
46584 |             4 as libc::c_int
46585 ~         };
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47368:21
      |
47368 |                     0xc1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47373:30
      |
47373 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
47374 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47393:21
      |
47393 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47398:30
      |
47398 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
47399 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47418:21
      |
47418 |                     0xc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47423:30
      |
47423 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
47424 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47443:21
      |
47443 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47448:30
      |
47448 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
47449 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47468:21
      |
47468 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47473:30
      |
47473 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47474 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47493:21
      |
47493 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47498:30
      |
47498 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47499 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47518:21
      |
47518 |                     0x6c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47523:30
      |
47523 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
47524 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47543:21
      |
47543 |                     0x6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47548:30
      |
47548 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
47549 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47568:21
      |
47568 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47573:30
      |
47573 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47574 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47593:21
      |
47593 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47598:30
      |
47598 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47599 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47618:21
      |
47618 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47623:30
      |
47623 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47624 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47643:21
      |
47643 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47648:30
      |
47648 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47649 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47668:21
      |
47668 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47673:30
      |
47673 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47674 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47693:21
      |
47693 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47698:30
      |
47698 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47699 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47718:21
      |
47718 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47723:30
      |
47723 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47724 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47743:21
      |
47743 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47748:30
      |
47748 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47749 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47768:21
      |
47768 |                     0xfbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47773:30
      |
47773 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47774 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47797:21
      |
47797 |                     0xfbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47802:30
      |
47802 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47803 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47826:21
      |
47826 |                     0xfa3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47831:30
      |
47831 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47832 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47855:21
      |
47855 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47860:30
      |
47860 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47861 | |                     | (4 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47884:21
      |
47884 |                     0xfab as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfab as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47889:30
      |
47889 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47890 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47913:21
      |
47913 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47918:30
      |
47918 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47919 | |                     | (5 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47942:21
      |
47942 |                     0xfb3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47947:30
      |
47947 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47948 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47971:21
      |
47971 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:47976:30
      |
47976 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
47977 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48000:21
      |
48000 |                     0xfbb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48005:30
      |
48005 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48006 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48029:21
      |
48029 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48034:30
      |
48034 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48035 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48058:21
      |
48058 |                     0xf30fb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48063:30
      |
48063 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48064 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48087:21
      |
48087 |                     0xf30fbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48092:30
      |
48092 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48093 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48116:21
      |
48116 |                     0xf30fbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48121:30
      |
48121 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48122 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48145:21
      |
48145 |                     0x480f07 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x480f07 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48150:30
      |
48150 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48169:21
      |
48169 |                     0x88 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x88 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48174:30
      |
48174 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
48175 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
48176 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
48174 ~                 instr_type: (0x8 as libc::c_int
48175 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48199:21
      |
48199 |                     0x8a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48204:30
      |
48204 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
48205 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
48206 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
48204 ~                 instr_type: (0x8 as libc::c_int
48205 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48229:21
      |
48229 |                     0xb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48234:30
      |
48234 |                   instr_type: (0x4 as libc::c_int
      |  ______________________________^
48235 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
48236 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
48234 ~                 instr_type: (0x4 as libc::c_int
48235 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48259:21
      |
48259 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48264:30
      |
48264 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48287:21
      |
48287 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48292:30
      |
48292 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48315:21
      |
48315 |                     0xc6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48320:30
      |
48320 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
48321 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
48322 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
48320 ~                 instr_type: (0x8 as libc::c_int
48321 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48345:21
      |
48345 |                     0x8c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48350:30
      |
48350 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48351 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48374:21
      |
48374 |                     0x8e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48379:30
      |
48379 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48380 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48403:21
      |
48403 |                     0xf20 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf20 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48408:30
      |
48408 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48409 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48432:21
      |
48432 |                     0xf21 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf21 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48437:30
      |
48437 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48438 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48461:21
      |
48461 |                     0xf22 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf22 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48466:30
      |
48466 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48467 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48490:21
      |
48490 |                     0xf23 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf23 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48495:30
      |
48495 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48496 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48519:21
      |
48519 |                     0x660fbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48524:30
      |
48524 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48547:21
      |
48547 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48552:30
      |
48552 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48575:21
      |
48575 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48580:30
      |
48580 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48603:21
      |
48603 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48608:30
      |
48608 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48631:21
      |
48631 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48636:30
      |
48636 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48659:21
      |
48659 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48664:30
      |
48664 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48687:21
      |
48687 |                     0xfb6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48692:30
      |
48692 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48693 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48716:21
      |
48716 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48721:30
      |
48721 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48744:21
      |
48744 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48749:30
      |
48749 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48772:21
      |
48772 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48777:30
      |
48777 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48796:21
      |
48796 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48801:30
      |
48801 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48820:21
      |
48820 |                     0x666a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x666a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48825:30
      |
48825 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48844:21
      |
48844 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48849:30
      |
48849 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48850 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48869:21
      |
48869 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48874:30
      |
48874 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48875 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48894:21
      |
48894 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48899:30
      |
48899 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48900 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48923:21
      |
48923 |                     0x6668 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6668 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48928:30
      |
48928 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48947:21
      |
48947 |                     0x68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48952:30
      |
48952 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
48953 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48972:21
      |
48972 |                     0x6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48977:30
      |
48977 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
48978 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:48997:21
      |
48997 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49002:30
      |
49002 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49003 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49022:21
      |
49022 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49027:30
      |
49027 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49028 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49047:21
      |
49047 |                     0x8f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49052:30
      |
49052 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49053 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49076:21
      |
49076 |                     0x7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49081:30
      |
49081 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
49082 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49101:21
      |
49101 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49106:30
      |
49106 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49107 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49130:21
      |
49130 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49135:30
      |
49135 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49136 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49159:21
      |
49159 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49164:30
      |
49164 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49165 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49166 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49164 ~                 instr_type: (0x8 as libc::c_int
49165 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49189:21
      |
49189 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49194:30
      |
49194 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49195 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49196 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49194 ~                 instr_type: (0x8 as libc::c_int
49195 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49219:21
      |
49219 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49224:30
      |
49224 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49225 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49248:21
      |
49248 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49253:30
      |
49253 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49254 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49273:21
      |
49273 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49278:30
      |
49278 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49279 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49302:21
      |
49302 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49307:30
      |
49307 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49308 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49327:21
      |
49327 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49332:30
      |
49332 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49333 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49356:21
      |
49356 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49361:30
      |
49361 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49362 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49381:21
      |
49381 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49386:30
      |
49386 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49387 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49410:21
      |
49410 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49415:30
      |
49415 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49416 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49435:21
      |
49435 |                     0x8d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49440:30
      |
49440 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49441 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49464:21
      |
49464 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49469:30
      |
49469 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49492:21
      |
49492 |                     0xc5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49497:30
      |
49497 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49520:21
      |
49520 |                     0xfb2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49525:30
      |
49525 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49548:21
      |
49548 |                     0xfb4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49553:30
      |
49553 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49576:21
      |
49576 |                     0xfb5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49581:30
      |
49581 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49604:21
      |
49604 |                     0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49609:30
      |
49609 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
49610 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49611 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49609 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
49610 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49634:21
      |
49634 |                     0x2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49639:30
      |
49639 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
49640 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49641 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49639 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
49640 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49664:21
      |
49664 |                     0x4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49669:30
      |
49669 |                   instr_type: (0x30 as libc::c_int
      |  ______________________________^
49670 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49671 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49669 ~                 instr_type: (0x30 as libc::c_int
49670 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49694:21
      |
49694 |                     0x83 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x83 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49699:30
      |
49699 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
49700 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49699 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
49700 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49723:21
      |
49723 |                     0x80 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x80 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49728:30
      |
49728 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
49729 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49730 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49728 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
49729 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49753:21
      |
49753 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49758:30
      |
49758 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49759 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49760 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49758 ~                 instr_type: (0x8 as libc::c_int
49759 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49783:21
      |
49783 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49788:30
      |
49788 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49789 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49790 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49788 ~                 instr_type: (0x8 as libc::c_int
49789 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49813:21
      |
49813 |                     0xa8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49818:30
      |
49818 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49819 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49842:21
      |
49842 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49847:30
      |
49847 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49848 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49849 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49847 ~                 instr_type: (0x8 as libc::c_int
49848 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49872:21
      |
49872 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49877:30
      |
49877 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49878 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49879 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49877 ~                 instr_type: (0x8 as libc::c_int
49878 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49902:21
      |
49902 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49907:30
      |
49907 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49908 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49909 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49907 ~                 instr_type: (0x8 as libc::c_int
49908 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((1 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49932:21
      |
49932 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49937:30
      |
49937 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49938 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49939 | |                     | (2 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49937 ~                 instr_type: (0x8 as libc::c_int
49938 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((2 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49962:21
      |
49962 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49967:30
      |
49967 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49968 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49969 | |                     | (3 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49967 ~                 instr_type: (0x8 as libc::c_int
49968 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((3 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49992:21
      |
49992 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:49997:30
      |
49997 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49998 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49999 | |                     | (4 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49997 ~                 instr_type: (0x8 as libc::c_int
49998 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((4 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50022:21
      |
50022 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50027:30
      |
50027 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50028 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50029 | |                     | (5 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50027 ~                 instr_type: (0x8 as libc::c_int
50028 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((5 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50052:21
      |
50052 |                     0xfaf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfaf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50057:30
      |
50057 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50058 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50081:21
      |
50081 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50086:30
      |
50086 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50087 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50110:21
      |
50110 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50115:30
      |
50115 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50116 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50139:21
      |
50139 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50144:30
      |
50144 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50145 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50168:21
      |
50168 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50173:30
      |
50173 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50174 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50197:21
      |
50197 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50202:30
      |
50202 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50203 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50204 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50202 ~                 instr_type: (0x8 as libc::c_int
50203 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50227:21
      |
50227 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50232:30
      |
50232 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50233 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50234 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50232 ~                 instr_type: (0x8 as libc::c_int
50233 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50257:21
      |
50257 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50262:30
      |
50262 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50263 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50264 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50262 ~                 instr_type: (0x8 as libc::c_int
50263 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50287:21
      |
50287 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50292:30
      |
50292 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50293 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50294 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50292 ~                 instr_type: (0x8 as libc::c_int
50293 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50317:21
      |
50317 |                     0xc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50322:30
      |
50322 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50323 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
50324 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50322 ~                 instr_type: (0x8 as libc::c_int
50323 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50347:21
      |
50347 |                     0xd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50352:30
      |
50352 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50353 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
50354 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50352 ~                 instr_type: (0x8 as libc::c_int
50353 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50377:21
      |
50377 |                     0xd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50382:30
      |
50382 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50383 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
50384 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50382 ~                 instr_type: (0x8 as libc::c_int
50383 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50407:21
      |
50407 |                     0xfa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50412:30
      |
50412 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50413 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50436:21
      |
50436 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50441:30
      |
50441 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50442 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50465:21
      |
50465 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50470:30
      |
50470 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50471 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50494:21
      |
50494 |                     0xfac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50499:30
      |
50499 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50500 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50523:21
      |
50523 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50528:30
      |
50528 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50529 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50552:21
      |
50552 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50557:30
      |
50557 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50558 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50581:21
      |
50581 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50586:30
      |
50586 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50605:21
      |
50605 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50610:30
      |
50610 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50629:21
      |
50629 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50634:30
      |
50634 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50653:21
      |
50653 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50658:30
      |
50658 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50677:21
      |
50677 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50682:30
      |
50682 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50701:21
      |
50701 |                     0xeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50706:30
      |
50706 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50725:21
      |
50725 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50730:30
      |
50730 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50749:21
      |
50749 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50754:30
      |
50754 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50773:21
      |
50773 |                     0x66ff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x66ff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50778:30
      |
50778 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50797:21
      |
50797 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50802:30
      |
50802 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50821:21
      |
50821 |                     0xcd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xcd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50826:30
      |
50826 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50845:21
      |
50845 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50850:30
      |
50850 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
50851 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50874:21
      |
50874 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50879:30
      |
50879 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
50880 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50903:21
      |
50903 |                     0xc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50908:30
      |
50908 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50931:21
      |
50931 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50936:30
      |
50936 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50955:21
      |
50955 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50960:30
      |
50960 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50979:21
      |
50979 |                     0xca as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xca as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:50984:30
      |
50984 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51003:21
      |
51003 |                     0x70 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x70 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51008:30
      |
51008 |                   instr_type: (0x50 as libc::c_int
      |  ______________________________^
51009 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51028:21
      |
51028 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51033:30
      |
51033 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51052:21
      |
51052 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51057:30
      |
51057 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51076:21
      |
51076 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51081:30
      |
51081 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51100:21
      |
51100 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51105:30
      |
51105 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51124:21
      |
51124 |                     0xe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51129:30
      |
51129 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51148:21
      |
51148 |                     0x67e3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x67e3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51153:30
      |
51153 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51172:21
      |
51172 |                     0xd8d9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8d9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51177:30
      |
51177 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51196:21
      |
51196 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51201:30
      |
51201 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51202 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51221:21
      |
51221 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51226:30
      |
51226 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51227 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51250:21
      |
51250 |                     0xdcc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51255:30
      |
51255 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51256 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51279:21
      |
51279 |                     0xdcc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51284:30
      |
51284 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51285 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51308:21
      |
51308 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51313:30
      |
51313 |                   instr_type: (0x40 as libc::c_int
      |  ______________________________^
51314 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51333:21
      |
51333 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51338:30
      |
51338 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51339 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51358:21
      |
51358 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51363:30
      |
51363 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51364 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51387:21
      |
51387 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51392:30
      |
51392 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
51393 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51416:21
      |
51416 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51421:30
      |
51421 |                   instr_type: (0x40 as libc::c_int
      |  ______________________________^
51422 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51441:21
      |
51441 |                     0xd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51446:30
      |
51446 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51447 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51466:21
      |
51466 |                     0xda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51471:30
      |
51471 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51472 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51491:21
      |
51491 |                     0xdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51496:30
      |
51496 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51497 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51516:21
      |
51516 |                     0xde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51521:30
      |
51521 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51522 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51541:21
      |
51541 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51546:30
      |
51546 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51565:21
      |
51565 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51570:30
      |
51570 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51589:21
      |
51589 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51594:30
      |
51594 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51613:21
      |
51613 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51618:30
      |
51618 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51637:21
      |
51637 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51642:30
      |
51642 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51661:21
      |
51661 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51666:30
      |
51666 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51685:21
      |
51685 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51690:30
      |
51690 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51709:21
      |
51709 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51714:30
      |
51714 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51733:21
      |
51733 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51738:30
      |
51738 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51757:21
      |
51757 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51762:30
      |
51762 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51781:21
      |
51781 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51786:30
      |
51786 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51805:21
      |
51805 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51810:30
      |
51810 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51829:21
      |
51829 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51834:30
      |
51834 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51853:21
      |
51853 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51858:30
      |
51858 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51877:21
      |
51877 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51882:30
      |
51882 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51901:21
      |
51901 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51906:30
      |
51906 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51925:21
      |
51925 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51930:30
      |
51930 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51949:21
      |
51949 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51954:30
      |
51954 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51973:21
      |
51973 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51978:30
      |
51978 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:51997:21
      |
51997 |                     0xddd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52002:30
      |
52002 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52021:21
      |
52021 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52026:30
      |
52026 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52045:21
      |
52045 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52050:30
      |
52050 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52069:21
      |
52069 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52074:30
      |
52074 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52093:21
      |
52093 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52098:30
      |
52098 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52117:21
      |
52117 |                     0xd9c8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52122:30
      |
52122 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52141:21
      |
52141 |                     0xdde0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52146:30
      |
52146 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52165:21
      |
52165 |                     0xdde8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52170:30
      |
52170 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52189:21
      |
52189 |                     0xdbe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52194:30
      |
52194 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
52195 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52214:21
      |
52214 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52219:30
      |
52219 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52238:21
      |
52238 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52243:30
      |
52243 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52262:21
      |
52262 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52267:30
      |
52267 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
52268 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52287:21
      |
52287 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52292:30
      |
52292 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52311:21
      |
52311 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52316:30
      |
52316 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52335:21
      |
52335 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52340:30
      |
52340 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
52341 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52360:21
      |
52360 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52365:30
      |
52365 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
52366 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52385:21
      |
52385 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52390:30
      |
52390 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
52391 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52410:21
      |
52410 |                     0xdbe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52415:30
      |
52415 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
52416 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52435:21
      |
52435 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52440:30
      |
52440 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52459:21
      |
52459 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52464:30
      |
52464 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
52465 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52484:21
      |
52484 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52489:30
      |
52489 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52508:21
      |
52508 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52513:30
      |
52513 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52532:21
      |
52532 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52537:30
      |
52537 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
52538 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52557:21
      |
52557 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52562:30
      |
52562 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52581:21
      |
52581 |                     0xddc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52586:30
      |
52586 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52605:21
      |
52605 |                     0xdfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52610:30
      |
52610 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52629:21
      |
52629 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52634:30
      |
52634 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52653:21
      |
52653 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52658:30
      |
52658 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52677:21
      |
52677 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52682:30
      |
52682 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
52683 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52702:21
      |
52702 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52707:30
      |
52707 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
52708 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52727:21
      |
52727 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52732:30
      |
52732 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52755:21
      |
52755 |                     0xf02 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf02 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52760:30
      |
52760 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
52761 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52784:21
      |
52784 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52789:30
      |
52789 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52808:21
      |
52808 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52813:30
      |
52813 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52832:21
      |
52832 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52837:30
      |
52837 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52856:21
      |
52856 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52861:30
      |
52861 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52880:21
      |
52880 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52885:30
      |
52885 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52908:21
      |
52908 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52913:30
      |
52913 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52936:21
      |
52936 |                     0xf03 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf03 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52941:30
      |
52941 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
52942 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52965:21
      |
52965 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52970:30
      |
52970 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52993:21
      |
52993 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:52998:30
      |
52998 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53017:21
      |
53017 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53022:30
      |
53022 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53041:21
      |
53041 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53046:30
      |
53046 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53065:21
      |
53065 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53070:30
      |
53070 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53089:21
      |
53089 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53094:30
      |
53094 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53117:21
      |
53117 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53122:30
      |
53122 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53145:21
      |
53145 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53150:30
      |
53150 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53173:21
      |
53173 |                     0x660f00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660f00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53178:30
      |
53178 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53197:21
      |
53197 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53202:30
      |
53202 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
53203 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53222:21
      |
53222 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53227:30
      |
53227 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53250:21
      |
53250 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53255:30
      |
53255 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53278:21
      |
53278 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53283:30
      |
53283 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53302:21
      |
53302 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53307:30
      |
53307 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53326:21
      |
53326 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53331:30
      |
53331 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53350:21
      |
53350 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53355:30
      |
53355 |                   instr_type: (0x4 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
53356 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53375:21
      |
53375 |                     0xfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53380:30
      |
53380 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
53381 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
53382 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
53380 ~                 instr_type: (0x8 as libc::c_int
53381 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53405:21
      |
53405 |                     0xfb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53410:30
      |
53410 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
53411 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
53412 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
53410 ~                 instr_type: (0x8 as libc::c_int
53411 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53435:21
      |
53435 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53440:30
      |
53440 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53459:21
      |
53459 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53464:30
      |
53464 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53483:21
      |
53483 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53488:30
      |
53488 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
53489 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53508:21
      |
53508 |                     0xf40 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf40 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53513:30
      |
53513 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
53514 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
53513 ~                 instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
53514 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53537:21
      |
53537 |                     0xdac0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53542:30
      |
53542 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53565:21
      |
53565 |                     0xdac8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53570:30
      |
53570 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53593:21
      |
53593 |                     0xdad0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53598:30
      |
53598 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53621:21
      |
53621 |                     0xdad8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53626:30
      |
53626 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53649:21
      |
53649 |                     0xdbc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53654:30
      |
53654 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53677:21
      |
53677 |                     0xdbc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53682:30
      |
53682 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53705:21
      |
53705 |                     0xdbd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53710:30
      |
53710 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53733:21
      |
53733 |                     0xdbd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53738:30
      |
53738 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53761:21
      |
53761 |                     0xdbe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53766:30
      |
53766 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53789:21
      |
53789 |                     0xdbf0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbf0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53794:30
      |
53794 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53817:21
      |
53817 |                     0xdfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53822:30
      |
53822 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53845:21
      |
53845 |                     0xdff0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdff0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53850:30
      |
53850 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53873:21
      |
53873 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53878:30
      |
53878 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53901:21
      |
53901 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53906:30
      |
53906 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53929:21
      |
53929 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53934:30
      |
53934 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
53935 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53958:21
      |
53958 |                     0xf6f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53963:30
      |
53963 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53986:21
      |
53986 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:53991:30
      |
53991 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54014:21
      |
54014 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54019:30
      |
54019 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54042:21
      |
54042 |                     0xf7f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54047:30
      |
54047 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54070:21
      |
54070 |                     0x660fd6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fd6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54075:30
      |
54075 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54098:21
      |
54098 |                     0xf30f7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54103:30
      |
54103 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54126:21
      |
54126 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54131:30
      |
54131 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54154:21
      |
54154 |                     0xf6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54159:30
      |
54159 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54182:21
      |
54182 |                     0xf63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54187:30
      |
54187 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54210:21
      |
54210 |                     0xf67 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf67 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54215:30
      |
54215 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54238:21
      |
54238 |                     0xffc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54243:30
      |
54243 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54266:21
      |
54266 |                     0xffd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54271:30
      |
54271 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54294:21
      |
54294 |                     0xffe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54299:30
      |
54299 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54322:21
      |
54322 |                     0xfec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54327:30
      |
54327 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54350:21
      |
54350 |                     0xfed as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfed as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54355:30
      |
54355 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54378:21
      |
54378 |                     0xfdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54383:30
      |
54383 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54406:21
      |
54406 |                     0xfdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54411:30
      |
54411 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54434:21
      |
54434 |                     0xfdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54439:30
      |
54439 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54462:21
      |
54462 |                     0xfdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54467:30
      |
54467 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54490:21
      |
54490 |                     0xf74 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf74 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54495:30
      |
54495 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54518:21
      |
54518 |                     0xf75 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf75 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54523:30
      |
54523 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54546:21
      |
54546 |                     0xf76 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf76 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54551:30
      |
54551 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54574:21
      |
54574 |                     0xf64 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf64 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54579:30
      |
54579 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54602:21
      |
54602 |                     0xf65 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf65 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54607:30
      |
54607 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54630:21
      |
54630 |                     0xf66 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf66 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54635:30
      |
54635 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54658:21
      |
54658 |                     0xff5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54663:30
      |
54663 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54686:21
      |
54686 |                     0xfe5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54691:30
      |
54691 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54714:21
      |
54714 |                     0xfd5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54719:30
      |
54719 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54742:21
      |
54742 |                     0xfeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54747:30
      |
54747 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54770:21
      |
54770 |                     0xff1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54775:30
      |
54775 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54798:21
      |
54798 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54803:30
      |
54803 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54826:21
      |
54826 |                     0xff2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54831:30
      |
54831 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54854:21
      |
54854 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54859:30
      |
54859 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54882:21
      |
54882 |                     0xff3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54887:30
      |
54887 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54910:21
      |
54910 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54915:30
      |
54915 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54938:21
      |
54938 |                     0xfe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54943:30
      |
54943 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54966:21
      |
54966 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54971:30
      |
54971 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54994:21
      |
54994 |                     0xfe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:54999:30
      |
54999 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55022:21
      |
55022 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55027:30
      |
55027 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55050:21
      |
55050 |                     0xfd1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55055:30
      |
55055 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55078:21
      |
55078 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55083:30
      |
55083 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55106:21
      |
55106 |                     0xfd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55111:30
      |
55111 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55134:21
      |
55134 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55139:30
      |
55139 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55162:21
      |
55162 |                     0xfd3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55167:30
      |
55167 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55190:21
      |
55190 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55195:30
      |
55195 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55218:21
      |
55218 |                     0xff8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55223:30
      |
55223 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55246:21
      |
55246 |                     0xff9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55251:30
      |
55251 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55274:21
      |
55274 |                     0xffa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55279:30
      |
55279 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55302:21
      |
55302 |                     0xfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55307:30
      |
55307 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55330:21
      |
55330 |                     0xfe9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55335:30
      |
55335 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55358:21
      |
55358 |                     0xfd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55363:30
      |
55363 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55386:21
      |
55386 |                     0xfd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55391:30
      |
55391 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55414:21
      |
55414 |                     0xf68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55419:30
      |
55419 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55442:21
      |
55442 |                     0xf69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55447:30
      |
55447 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55470:21
      |
55470 |                     0xf6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55475:30
      |
55475 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55498:21
      |
55498 |                     0xf60 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf60 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55503:30
      |
55503 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55526:21
      |
55526 |                     0xf61 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf61 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55531:30
      |
55531 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55554:21
      |
55554 |                     0xf62 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf62 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55559:30
      |
55559 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55582:21
      |
55582 |                     0xfef as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfef as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55587:30
      |
55587 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55610:21
      |
55610 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55615:30
      |
55615 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55634:21
      |
55634 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55639:30
      |
55639 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55658:21
      |
55658 |                     0xf10 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf10 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55663:30
      |
55663 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55686:21
      |
55686 |                     0xf11 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf11 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55691:30
      |
55691 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55714:21
      |
55714 |                     0xf28 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf28 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55719:30
      |
55719 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55742:21
      |
55742 |                     0xf29 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf29 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55747:30
      |
55747 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55770:21
      |
55770 |                     0xf16 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf16 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55775:30
      |
55775 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55798:21
      |
55798 |                     0xf17 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf17 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55803:30
      |
55803 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55826:21
      |
55826 |                     0xf58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55831:30
      |
55831 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55854:21
      |
55854 |                     0xf2a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55859:30
      |
55859 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55882:21
      |
55882 |                     0xf2d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55887:30
      |
55887 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55910:21
      |
55910 |                     0xf2c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55915:30
      |
55915 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55938:21
      |
55938 |                     0xf5e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55943:30
      |
55943 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55966:21
      |
55966 |                     0xf5f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55971:30
      |
55971 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55994:21
      |
55994 |                     0xf5d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:55999:30
      |
55999 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56022:21
      |
56022 |                     0xf59 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf59 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56027:30
      |
56027 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56050:21
      |
56050 |                     0xfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56055:30
      |
56055 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56078:21
      |
56078 |                     0xfe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56083:30
      |
56083 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56106:21
      |
56106 |                     0xfee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56111:30
      |
56111 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56134:21
      |
56134 |                     0xfde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56139:30
      |
56139 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56162:21
      |
56162 |                     0xfea as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfea as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56167:30
      |
56167 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56190:21
      |
56190 |                     0xfda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56195:30
      |
56195 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56218:21
      |
56218 |                     0xf53 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf53 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56223:30
      |
56223 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56246:21
      |
56246 |                     0xf52 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf52 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56251:30
      |
56251 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56274:21
      |
56274 |                     0xf51 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf51 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56279:30
      |
56279 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56302:21
      |
56302 |                     0xf5c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56307:30
      |
56307 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56330:21
      |
56330 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56335:30
      |
56335 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56358:21
      |
56358 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56363:30
      |
56363 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56386:21
      |
56386 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56391:30
      |
56391 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
56392 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56415:21
      |
56415 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56420:30
      |
56420 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56439:21
      |
56439 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56444:30
      |
56444 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56463:21
      |
56463 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56468:30
      |
56468 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56487:21
      |
56487 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56492:30
      |
56492 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56511:21
      |
56511 |                     0xf0d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf0d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56516:30
      |
56516 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56535:21
      |
56535 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56540:30
      |
56540 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56559:21
      |
56559 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56564:30
      |
56564 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56583:21
      |
56583 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56588:30
      |
56588 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56607:21
      |
56607 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56612:30
      |
56612 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56631:21
      |
56631 |                     0xf30f1e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f1e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/libtcc.rs:56636:30
      |
56636 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/riscv64_asm.rs:55:10
   |
55 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__int8_t` should have an upper camel case name
  --> src/riscv64_asm.rs:56:10
   |
56 | pub type __int8_t = libc::c_schar;
   |          ^^^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `__uint8_t` should have an upper camel case name
  --> src/riscv64_asm.rs:57:10
   |
57 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/riscv64_asm.rs:58:10
   |
58 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/riscv64_asm.rs:59:10
   |
59 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/riscv64_asm.rs:60:10
   |
60 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/riscv64_asm.rs:61:10
   |
61 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/riscv64_asm.rs:62:10
   |
62 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/riscv64_asm.rs:63:10
   |
63 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/riscv64_asm.rs:64:10
   |
64 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int8_t` should have an upper camel case name
  --> src/riscv64_asm.rs:65:10
   |
65 | pub type int8_t = __int8_t;
   |          ^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `int32_t` should have an upper camel case name
  --> src/riscv64_asm.rs:66:10
   |
66 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/riscv64_asm.rs:67:10
   |
67 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/riscv64_asm.rs:106:10
    |
106 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/riscv64_asm.rs:108:10
    |
108 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/riscv64_asm.rs:116:10
    |
116 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/riscv64_asm.rs:320:10
    |
320 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/riscv64_asm.rs:321:10
    |
321 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/riscv64_asm.rs:329:10
    |
329 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/riscv64_asm.rs:330:10
    |
330 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/riscv64_asm.rs:470:10
    |
470 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/riscv64_asm.rs:487:10
    |
487 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/riscv64_asm.rs:488:10
    |
488 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `tcc_token` should have an upper camel case name
   --> src/riscv64_asm.rs:573:10
    |
573 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `C2RustUnnamed_10` should have an upper camel case name
    --> src/riscv64_asm.rs:1655:10
     |
1655 | pub type C2RustUnnamed_10 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed10`

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1722:14
     |
1722 |         ) = (i >> 8 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(i >> 8 as libc::c_int) & 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1728:14
     |
1728 |         ) = (i >> 16 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(i >> 16 as libc::c_int) & 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1734:14
     |
1734 |         ) = (i >> 24 as libc::c_int & 0xff as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(i >> 24 as libc::c_int) & 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1748:18
     |
1748 |                 ((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int) as uint32_t,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1757:18
     |
1757 |                   (0x67 as libc::c_int | (0 as libc::c_int) << 12 as libc::c_int
     |  __________________^
1758 | |                     | (1 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
1759 | |                         << 15 as libc::c_int) as uint32_t,
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1757 ~                 (0x67 as libc::c_int | (0 as libc::c_int) << 12 as libc::c_int | ((1 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
1758 ~                         << 15 as libc::c_int)) as uint32_t,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1757:18
     |
1757 |                 (0x67 as libc::c_int | (0 as libc::c_int) << 12 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x67 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:1758:24
     |
1758 |                     | (1 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `1 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2005:14
     |
2005 |             (0x67 as libc::c_int | (0 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x67 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2032:10
     |
2032 |         (0x67 as libc::c_int | (0 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x67 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2039:33
     |
2039 |       let mut opcode: uint32_t = ((0x1c as libc::c_int) << 2 as libc::c_int
     |  _________________________________^
2040 | |         | 3 as libc::c_int | (2 as libc::c_int) << 12 as libc::c_int) as uint32_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2039 ~     let mut opcode: uint32_t = ((0x1c as libc::c_int) << 2 as libc::c_int
2040 ~         | 3 as libc::c_int | ((2 as libc::c_int) << 12 as libc::c_int)) as uint32_t;
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2039:33
     |
2039 |       let mut opcode: uint32_t = ((0x1c as libc::c_int) << 2 as libc::c_int
     |  _________________________________^
2040 | |         | 3 as libc::c_int | (2 as libc::c_int) << 12 as libc::c_int) as uint32_t;
     | |__________________________^ help: consider parenthesizing your expression: `((0x1c as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2047:14
     |
2047 |           |= ((op.c2rust_unnamed.reg as libc::c_int
     |  ______________^
2048 | |             & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int) as uint32_t;
     | |____________________________________________________^ help: consider parenthesizing your expression: `op.c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2079:10
     |
2079 |           ((opcode
     |  __________^
2080 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2081 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2082 | |                 as uint32_t) as uint64_t
2083 | |             | (*rs2).c2rust_unnamed.e.v << 12 as libc::c_int) as libc::c_int,
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2079 ~         ((opcode
2080 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2081 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2082 ~                 as uint32_t) as uint64_t | ((*rs2).c2rust_unnamed.e.v << 12 as libc::c_int)) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2080:17
     |
2080 |               | (((*rd).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2081 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2115:10
     |
2115 |           ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________^
2116 | |             | (0 as libc::c_int) << 12 as libc::c_int | succ << 20 as libc::c_int
2117 | |             | pred << 24 as libc::c_int) as uint32_t,
     | |_______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2115 ~         ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2116 ~             | (0 as libc::c_int) << 12 as libc::c_int | succ << 20 as libc::c_int | (pred << 24 as libc::c_int)) as uint32_t,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2115:10
     |
2115 |           ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________^
2116 | |             | (0 as libc::c_int) << 12 as libc::c_int | succ << 20 as libc::c_int
     | |_________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2115 ~         ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2116 +             | (0 as libc::c_int) << 12 as libc::c_int | (succ << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2115:10
     |
2115 |           ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________^
2116 | |             | (0 as libc::c_int) << 12 as libc::c_int | succ << 20 as libc::c_int
     | |_____________________________________________________^ help: consider parenthesizing your expression: `(0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2115:10
     |
2115 |         ((0x3 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x3 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2144:18
     |
2144 |                   ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2145 | |                     | (4 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2144:18
     |
2144 |                 ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2156:18
     |
2156 |                   ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2157 | |                     | (4 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2156:18
     |
2156 |                 ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2168:18
     |
2168 |                   ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2169 | |                     | (4 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2168:18
     |
2168 |                 ((0x4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2211:17
     |
2211 |               | (((*rd).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2212 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2214:17
     |
2214 |               | (((*rs1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2215 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2217:17
     |
2217 |               | (((*rs2).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2218 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs2).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2251:10
     |
2251 |           ((opcode
     |  __________^
2252 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2253 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2254 | |                 as uint32_t
...    |
2257 | |                 as uint32_t) as uint64_t
2258 | |             | (*rs2).c2rust_unnamed.e.v << 20 as libc::c_int) as libc::c_int,
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2251 ~         ((opcode
2252 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2253 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2254 +                 as uint32_t
2255 +             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2256 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2257 ~                 as uint32_t) as uint64_t | ((*rs2).c2rust_unnamed.e.v << 20 as libc::c_int)) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2252:17
     |
2252 |               | (((*rd).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2253 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2255:17
     |
2255 |               | (((*rs1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2256 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2304:10
     |
2304 |           (opcode
     |  __________^
2305 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 | |                 as uint32_t
...    |
2314 | |             | (imm >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
2315 | |                 << 12 as libc::c_int) as libc::c_int,
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2304 ~         (opcode
2305 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 +                 as uint32_t
2308 +             | (imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
2309 +                 << 31 as libc::c_int
2310 +             | (imm >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
2311 +                 << 21 as libc::c_int
2312 +             | (imm >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2313 +                 << 20 as libc::c_int | ((imm >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
2314 ~                 << 12 as libc::c_int)) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2304:10
     |
2304 |           (opcode
     |  __________^
2305 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 | |                 as uint32_t
...    |
2312 | |             | (imm >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2313 | |                 << 20 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2304 ~         (opcode
2305 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 +                 as uint32_t
2308 +             | (imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
2309 +                 << 31 as libc::c_int
2310 +             | (imm >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
2311 +                 << 21 as libc::c_int | ((imm >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2312 +                 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2304:10
     |
2304 |           (opcode
     |  __________^
2305 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 | |                 as uint32_t
...    |
2310 | |             | (imm >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
2311 | |                 << 21 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2304 ~         (opcode
2305 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 +                 as uint32_t
2308 +             | (imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
2309 +                 << 31 as libc::c_int | ((imm >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
2310 +                 << 21 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2304:10
     |
2304 |           (opcode
     |  __________^
2305 | |             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 | |                 as uint32_t
2308 | |             | (imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
2309 | |                 << 31 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2304 ~         (opcode
2305 +             | (((*rd).c2rust_unnamed.reg as libc::c_int
2306 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
2307 +                 as uint32_t | ((imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
2308 +                 << 31 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2305:17
     |
2305 |               | (((*rd).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2306 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2308:16
     |
2308 |             | (imm >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm >> 20 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2310:16
     |
2310 |             | (imm >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm >> 1 as libc::c_int) & 0x3ff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2312:16
     |
2312 |             | (imm >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm >> 11 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2314:16
     |
2314 |             | (imm >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(imm >> 12 as libc::c_int) & 0xff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2342:14
     |
2342 |             ((0x5 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int) as uint32_t,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x5 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2388:18
     |
2388 |                 ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xc as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2399:18
     |
2399 |                   ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2400 | |                     | (32 as libc::c_int) << 25 as libc::c_int) as uint32_t,
     | |______________________________________________________________^ help: consider parenthesizing your expression: `(0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((32 as libc::c_int) << 25 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2399:18
     |
2399 |                 ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xc as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2410:18
     |
2410 |                   ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2411 | |                     | (0 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2410:18
     |
2410 |                 ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xe as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2421:18
     |
2421 |                   ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2422 | |                     | (0 as libc::c_int) << 12 as libc::c_int
2423 | |                     | (32 as libc::c_int) << 25 as libc::c_int) as uint32_t,
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2421 ~                 ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2422 ~                     | (0 as libc::c_int) << 12 as libc::c_int | ((32 as libc::c_int) << 25 as libc::c_int)) as uint32_t,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2421:18
     |
2421 |                   ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2422 | |                     | (0 as libc::c_int) << 12 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((0 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2421:18
     |
2421 |                 ((0xe as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xe as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2433:18
     |
2433 |                   ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2434 | |                     | (4 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2433:18
     |
2433 |                 ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xc as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2444:18
     |
2444 |                   ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2445 | |                     | (6 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((6 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2444:18
     |
2444 |                 ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xc as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2455:18
     |
2455 |                   ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  __________________^
2456 | |                     | (7 as libc::c_int) << 12 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `(0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((7 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2455:18
     |
2455 |                 ((0xc as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0xc as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2466:18
     |
2466 |                   (0x33 as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int
     |  __________________^
2467 | |                     | (1 as libc::c_int) << 25 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x33 as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int | ((1 as libc::c_int) << 25 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2466:18
     |
2466 |                 (0x33 as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x33 as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2477:18
     |
2477 |                   (0x3b as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int
     |  __________________^
2478 | |                     | (1 as libc::c_int) << 25 as libc::c_int) as uint32_t,
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x3b as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int | ((1 as libc::c_int) << 25 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2477:18
     |
2477 |                 (0x3b as libc::c_int | (4 as libc::c_int) << 12 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3b as libc::c_int | ((4 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2488:18
     |
2488 |                 (0x33 as libc::c_int | (1 as libc::c_int) << 25 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x33 as libc::c_int | ((1 as libc::c_int) << 25 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2499:18
     |
2499 |                 (0x3b as libc::c_int | (1 as libc::c_int) << 25 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x3b as libc::c_int | ((1 as libc::c_int) << 25 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2544:17
     |
2544 |               | (((*rs1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2545 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2547:17
     |
2547 |               | (((*rs2).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2548 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs2).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2550:17
     |
2550 |               | (((*rd1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2551 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2587:17
     |
2587 |               | (((*rs1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2588 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2590:17
     |
2590 |               | (((*rs2).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2591 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs2).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2629:9
     |
2629 | /         opcode
2630 | |             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 | |                 as uint32_t
...    |
2642 | |             | (offset >> 12 as libc::c_int & 1 as libc::c_int as uint32_t)
2643 | |                 << 31 as libc::c_int,
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2629 ~         opcode
2630 +             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 +                 as uint32_t
2633 +             | (((*rs2).c2rust_unnamed.reg as libc::c_int
2634 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
2635 +                 as uint32_t
2636 +             | (offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
2637 +                 << 8 as libc::c_int
2638 +             | (offset >> 5 as libc::c_int & 0x1f as libc::c_int as uint32_t)
2639 +                 << 25 as libc::c_int
2640 +             | (offset >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2641 +                 << 7 as libc::c_int | ((offset >> 12 as libc::c_int & 1 as libc::c_int as uint32_t)
2642 ~                 << 31 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2629:9
     |
2629 | /         opcode
2630 | |             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 | |                 as uint32_t
...    |
2640 | |             | (offset >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2641 | |                 << 7 as libc::c_int
     | |___________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2629 ~         opcode
2630 +             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 +                 as uint32_t
2633 +             | (((*rs2).c2rust_unnamed.reg as libc::c_int
2634 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
2635 +                 as uint32_t
2636 +             | (offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
2637 +                 << 8 as libc::c_int
2638 +             | (offset >> 5 as libc::c_int & 0x1f as libc::c_int as uint32_t)
2639 +                 << 25 as libc::c_int | ((offset >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
2640 +                 << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2629:9
     |
2629 | /         opcode
2630 | |             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 | |                 as uint32_t
...    |
2638 | |             | (offset >> 5 as libc::c_int & 0x1f as libc::c_int as uint32_t)
2639 | |                 << 25 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2629 ~         opcode
2630 +             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 +                 as uint32_t
2633 +             | (((*rs2).c2rust_unnamed.reg as libc::c_int
2634 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
2635 +                 as uint32_t
2636 +             | (offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
2637 +                 << 8 as libc::c_int | ((offset >> 5 as libc::c_int & 0x1f as libc::c_int as uint32_t)
2638 +                 << 25 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2629:9
     |
2629 | /         opcode
2630 | |             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 | |                 as uint32_t
...    |
2636 | |             | (offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
2637 | |                 << 8 as libc::c_int
     | |___________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2629 ~         opcode
2630 +             | (((*rs1).c2rust_unnamed.reg as libc::c_int
2631 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
2632 +                 as uint32_t
2633 +             | (((*rs2).c2rust_unnamed.reg as libc::c_int
2634 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
2635 +                 as uint32_t | ((offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
2636 +                 << 8 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2630:17
     |
2630 |               | (((*rs1).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2631 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 15 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs1).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2633:17
     |
2633 |               | (((*rs2).c2rust_unnamed.reg as libc::c_int
     |  _________________^
2634 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs2).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2636:16
     |
2636 |             | (offset >> 1 as libc::c_int & 0xf as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(offset >> 1 as libc::c_int) & 0xf as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2638:16
     |
2638 |             | (offset >> 5 as libc::c_int & 0x1f as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(offset >> 5 as libc::c_int) & 0x1f as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2640:16
     |
2640 |             | (offset >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(offset >> 11 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2642:16
     |
2642 |             | (offset >> 12 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(offset >> 12 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2783:13
     |
2783 |     return (r & 0x20 as libc::c_int - 1 as libc::c_int) - 10 as libc::c_int;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `r & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2786:13
     |
2786 |     return (r & 0x20 as libc::c_int - 1 as libc::c_int) - 10 as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `r & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2851:22
     |
2851 |                       (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  ______________________^
2852 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2853 | |                             << 7 as libc::c_int
2854 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2855 | |                             << 15 as libc::c_int) as libc::c_uint
2856 | |                         | (-(8 as libc::c_int) as libc::c_uint) << 20 as libc::c_int)
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2851 ~                     (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2852 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2853 +                             << 7 as libc::c_int
2854 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2855 ~                             << 15 as libc::c_int) as libc::c_uint | ((-(8 as libc::c_int) as libc::c_uint) << 20 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2851:23
     |
2851 |                       (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  _______________________^
2852 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2853 | |                             << 7 as libc::c_int
2854 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2855 | |                             << 15 as libc::c_int) as libc::c_uint
     | |________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2851 ~                     (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2852 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2853 +                             << 7 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2854 ~                             << 15 as libc::c_int)) as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2851:23
     |
2851 |                       (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |  _______________________^
2852 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2853 | |                             << 7 as libc::c_int
     | |_______________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2851 ~                     (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2852 +                             << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2851:23
     |
2851 |                     (((4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2852:28
     |
2852 |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2854:28
     |
2854 |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2861:25
     |
2861 | /                         0x27 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
2862 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2863 | |                                 << 20 as libc::c_int
2864 | |                             | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2865 | |                                 << 15 as libc::c_int,
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2861 ~                         0x27 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
2862 +                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2863 +                                 << 20 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2864 ~                                 << 15 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2861:25
     |
2861 | /                         0x27 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
2862 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2863 | |                                 << 20 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2861 ~                         0x27 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int | ((reg & 0x20 as libc::c_int - 1 as libc::c_int)
2862 +                                 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2861:25
     |
2861 |                         0x27 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x27 as libc::c_int | ((3 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2862:32
     |
2862 | ...                   | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `reg & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2864:32
     |
2864 | ...                   | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2869:25
     |
2869 | /                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2870 | |                             | (3 as libc::c_int) << 12 as libc::c_int
2871 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2872 | |                                 << 20 as libc::c_int
2873 | |                             | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2874 | |                                 << 15 as libc::c_int,
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2869 ~                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2870 +                             | (3 as libc::c_int) << 12 as libc::c_int
2871 +                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2872 +                                 << 20 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
2873 ~                                 << 15 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2869:25
     |
2869 | /                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2870 | |                             | (3 as libc::c_int) << 12 as libc::c_int
2871 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
2872 | |                                 << 20 as libc::c_int
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2869 ~                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2870 +                             | (3 as libc::c_int) << 12 as libc::c_int | ((reg & 0x20 as libc::c_int - 1 as libc::c_int)
2871 +                                 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2869:25
     |
2869 | /                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
2870 | |                             | (3 as libc::c_int) << 12 as libc::c_int
     | |_____________________________________________________________________^ help: consider parenthesizing your expression: `(0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((3 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2869:25
     |
2869 |                         (0x8 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x8 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2871:32
     |
2871 | ...                   | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `reg & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:2873:32
     |
2873 | ...                   | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3001:25
     |
3001 | /                         7 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3002 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3003 | |                                 << 7 as libc::c_int
3004 | |                             | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3005 | |                                 << 15 as libc::c_int | 0 as libc::c_int,
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3001 ~                         7 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3002 +                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3003 +                                 << 7 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3004 ~                                 << 15 as libc::c_int) | 0 as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3001:25
     |
3001 | /                         7 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3002 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3003 | |                                 << 7 as libc::c_int
     | |___________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3001 ~                         7 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int | ((reg & 0x20 as libc::c_int - 1 as libc::c_int)
3002 +                                 << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3001:25
     |
3001 |                         7 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `7 as libc::c_int | ((3 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3002:32
     |
3002 | ...                   | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `reg & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3004:32
     |
3004 | ...                   | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3009:25
     |
3009 | /                         3 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3010 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3011 | |                                 << 7 as libc::c_int
3012 | |                             | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3013 | |                                 << 15 as libc::c_int | 0 as libc::c_int,
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3009 ~                         3 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3010 +                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3011 +                                 << 7 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3012 ~                                 << 15 as libc::c_int) | 0 as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3009:25
     |
3009 | /                         3 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
3010 | |                             | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
3011 | |                                 << 7 as libc::c_int
     | |___________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3009 ~                         3 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int | ((reg & 0x20 as libc::c_int - 1 as libc::c_int)
3010 +                                 << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3009:25
     |
3009 |                         3 as libc::c_int | (3 as libc::c_int) << 12 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `3 as libc::c_int | ((3 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3010:32
     |
3010 | ...                   | (reg & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `reg & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3012:32
     |
3012 | ...                   | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3017:21
     |
3017 | /                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
3018 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3019 | |                             << 7 as libc::c_int
3020 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3021 | |                             << 15 as libc::c_int
3022 | |                         | (8 as libc::c_int) << 20 as libc::c_int,
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3017 ~                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
3018 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3019 +                             << 7 as libc::c_int
3020 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3021 ~                             << 15 as libc::c_int | ((8 as libc::c_int) << 20 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3017:21
     |
3017 | /                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
3018 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3019 | |                             << 7 as libc::c_int
3020 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3021 | |                             << 15 as libc::c_int
     | |________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3017 ~                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
3018 +                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3019 +                             << 7 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3020 +                             << 15 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3017:21
     |
3017 | /                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
3018 | |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3019 | |                             << 7 as libc::c_int
     | |_______________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3017 ~                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int | ((2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3018 +                             << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3017:21
     |
3017 |                     (4 as libc::c_int) << 2 as libc::c_int | 3 as libc::c_int
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((4 as libc::c_int) << 2 as libc::c_int) | 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3018:28
     |
3018 |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3020:28
     |
3020 |                         | (2 as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `2 as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3529:9
     |
3529 | /         opcode as libc::c_int
3530 | |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3531 | |                 << 2 as libc::c_int
3532 | |             | (dst as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3533 | |                 << 7 as libc::c_int,
     | |___________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3529 ~         opcode as libc::c_int
3530 +             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3531 +                 << 2 as libc::c_int | ((dst as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3532 ~                 << 7 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3529:9
     |
3529 | /         opcode as libc::c_int
3530 | |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3531 | |                 << 2 as libc::c_int
     | |___________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3529 ~         opcode as libc::c_int | ((src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3530 +                 << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3530:16
     |
3530 |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `src as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3532:16
     |
3532 |             | (dst as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `dst as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3580:10
     |
3580 |           ((opcode as libc::c_int
     |  __________^
3581 | |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3582 | |                 << 7 as libc::c_int) as uint32_t
3583 | |             | (offset & 0x1f as libc::c_int as uint32_t) << 2 as libc::c_int
3584 | |             | (offset >> 5 as libc::c_int & 1 as libc::c_int as uint32_t)
3585 | |                 << 12 as libc::c_int) as libc::c_int,
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3580 ~         ((opcode as libc::c_int
3581 +             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3582 +                 << 7 as libc::c_int) as uint32_t
3583 +             | (offset & 0x1f as libc::c_int as uint32_t) << 2 as libc::c_int | ((offset >> 5 as libc::c_int & 1 as libc::c_int as uint32_t)
3584 ~                 << 12 as libc::c_int)) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3580:10
     |
3580 |           ((opcode as libc::c_int
     |  __________^
3581 | |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3582 | |                 << 7 as libc::c_int) as uint32_t
3583 | |             | (offset & 0x1f as libc::c_int as uint32_t) << 2 as libc::c_int
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3580 ~         ((opcode as libc::c_int
3581 +             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3582 +                 << 7 as libc::c_int) as uint32_t | ((offset & 0x1f as libc::c_int as uint32_t) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3580:11
     |
3580 |           ((opcode as libc::c_int
     |  ___________^
3581 | |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3582 | |                 << 7 as libc::c_int) as uint32_t
     | |___________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3580 ~         ((opcode as libc::c_int | ((src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
3581 ~                 << 7 as libc::c_int)) as uint32_t
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3581:16
     |
3581 |             | (src as libc::c_int & 0x20 as libc::c_int - 1 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `src as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3584:16
     |
3584 |             | (offset >> 5 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(offset >> 5 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3665:10
     |
3665 |           ((opcode as libc::c_int
     |  __________^
3666 | |             | ((*rd).c2rust_unnamed.reg as libc::c_int
3667 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
3668 | |             as uint32_t
...    |
3674 | |                 | (nzuimm >> 4 as libc::c_int & 3 as libc::c_int as uint32_t)
3675 | |                     << 6 as libc::c_int) << 5 as libc::c_int) as libc::c_int,
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3665 ~         ((opcode as libc::c_int
3666 +             | ((*rd).c2rust_unnamed.reg as libc::c_int
3667 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
3668 +             as uint32_t | ((nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
3669 +                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3670 +                     << 1 as libc::c_int
3671 +                 | (nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
3672 +                     << 2 as libc::c_int
3673 +                 | (nzuimm >> 4 as libc::c_int & 3 as libc::c_int as uint32_t)
3674 ~                     << 6 as libc::c_int) << 5 as libc::c_int)) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3665:11
     |
3665 |           ((opcode as libc::c_int
     |  ___________^
3666 | |             | ((*rd).c2rust_unnamed.reg as libc::c_int
3667 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3665 ~         ((opcode as libc::c_int | (((*rd).c2rust_unnamed.reg as libc::c_int
3666 ~                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3666:16
     |
3666 |               | ((*rd).c2rust_unnamed.reg as libc::c_int
     |  ________________^
3667 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 20 as libc::c_int)
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3669:16
     |
3669 |               | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
     |  ________________^
3670 | |                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3671 | |                     << 1 as libc::c_int
3672 | |                 | (nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
3673 | |                     << 2 as libc::c_int
3674 | |                 | (nzuimm >> 4 as libc::c_int & 3 as libc::c_int as uint32_t)
3675 | |                     << 6 as libc::c_int) << 5 as libc::c_int) as libc::c_int,
     | |_______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3669 ~             | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
3670 +                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3671 +                     << 1 as libc::c_int
3672 +                 | (nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
3673 +                     << 2 as libc::c_int | ((nzuimm >> 4 as libc::c_int & 3 as libc::c_int as uint32_t)
3674 ~                     << 6 as libc::c_int)) << 5 as libc::c_int) as libc::c_int,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3669:16
     |
3669 |               | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
     |  ________________^
3670 | |                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3671 | |                     << 1 as libc::c_int
3672 | |                 | (nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
3673 | |                     << 2 as libc::c_int
     | |_______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3669 ~             | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
3670 +                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3671 +                     << 1 as libc::c_int | ((nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
3672 +                     << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3669:16
     |
3669 |               | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
     |  ________________^
3670 | |                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3671 | |                     << 1 as libc::c_int
     | |_______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3669 ~             | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t | ((nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
3670 +                     << 1 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3669:16
     |
3669 |             | (nzuimm >> 3 as libc::c_int & 1 as libc::c_int as uint32_t
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(nzuimm >> 3 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3670:20
     |
3670 |                 | (nzuimm >> 2 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(nzuimm >> 2 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3672:20
     |
3672 |                 | (nzuimm >> 6 as libc::c_int & 0xf as libc::c_int as uint32_t)
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(nzuimm >> 6 as libc::c_int) & 0xf as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3674:20
     |
3674 |                 | (nzuimm >> 4 as libc::c_int & 3 as libc::c_int as uint32_t)
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(nzuimm >> 4 as libc::c_int) & 3 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3768:9
     |
3768 | /         opcode as libc::c_int
3769 | |             | ((*rd).c2rust_unnamed.reg as libc::c_int
3770 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int
3771 | |             | ((*rs2).c2rust_unnamed.reg as libc::c_int
3772 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int,
     | |_____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3768 ~         opcode as libc::c_int
3769 +             | ((*rd).c2rust_unnamed.reg as libc::c_int
3770 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int | (((*rs2).c2rust_unnamed.reg as libc::c_int
3771 ~                 & 0x20 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3768:9
     |
3768 | /         opcode as libc::c_int
3769 | |             | ((*rd).c2rust_unnamed.reg as libc::c_int
3770 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int
     | |_____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3768 ~         opcode as libc::c_int | (((*rd).c2rust_unnamed.reg as libc::c_int
3769 +                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3769:16
     |
3769 |               | ((*rd).c2rust_unnamed.reg as libc::c_int
     |  ________________^
3770 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 7 as libc::c_int
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rd).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_asm.rs:3771:16
     |
3771 |               | ((*rs2).c2rust_unnamed.reg as libc::c_int
     |  ________________^
3772 | |                 & 0x20 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int,
     | |________________________________________________________^ help: consider parenthesizing your expression: `(*rs2).c2rust_unnamed.reg as libc::c_int & (0x20 as libc::c_int - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/riscv64_gen.rs:83:10
   |
83 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/riscv64_gen.rs:84:10
   |
84 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/riscv64_gen.rs:85:10
   |
85 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/riscv64_gen.rs:86:10
   |
86 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/riscv64_gen.rs:87:10
   |
87 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/riscv64_gen.rs:88:10
   |
88 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/riscv64_gen.rs:89:10
   |
89 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/riscv64_gen.rs:90:10
   |
90 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/riscv64_gen.rs:91:10
   |
91 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/riscv64_gen.rs:130:10
    |
130 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/riscv64_gen.rs:132:10
    |
132 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/riscv64_gen.rs:140:10
    |
140 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/riscv64_gen.rs:344:10
    |
344 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/riscv64_gen.rs:345:10
    |
345 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/riscv64_gen.rs:353:10
    |
353 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/riscv64_gen.rs:354:10
    |
354 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/riscv64_gen.rs:494:10
    |
494 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/riscv64_gen.rs:511:10
    |
511 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/riscv64_gen.rs:512:10
    |
512 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/riscv64_gen.rs:513:10
    |
513 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: type `tcc_token` should have an upper camel case name
   --> src/riscv64_gen.rs:583:10
    |
583 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1651:13
     |
1651 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1652 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1653 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1651 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1652 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1664:14
     |
1664 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1668:12
     |
1668 |       return read16le(p) as uint32_t
     |  ____________^
1669 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1670 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1668 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1669 ~             << 16 as libc::c_int);
     |

warning: unused label
    --> src/riscv64_gen.rs:1734:5
     |
1734 |     'c_11508: {
     |     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:1769:5
     |
1769 |     'c_11436: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1809:9
     |
1809 | /         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1810 | |             | rs1 << 15 as libc::c_int | imm << 20 as libc::c_int,
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1809 ~         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1810 ~             | rs1 << 15 as libc::c_int | (imm << 20 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1809:9
     |
1809 | /         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1810 | |             | rs1 << 15 as libc::c_int | imm << 20 as libc::c_int,
     | |______________________________________^ help: consider parenthesizing your expression: `opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int | (rs1 << 15 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1809:9
     |
1809 |         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `opcode | func3 << 12 as libc::c_int | (rd << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1809:9
     |
1809 |         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `opcode | (func3 << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1822:9
     |
1822 | /         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1823 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
1824 | |             | func7 << 25 as libc::c_int,
     | |________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1822 ~         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1823 ~             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int | (func7 << 25 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1822:9
     |
1822 | /         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1823 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1822 ~         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1823 +             | rs1 << 15 as libc::c_int | (rs2 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1822:9
     |
1822 | /         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
1823 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
     | |______________________________________^ help: consider parenthesizing your expression: `opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int | (rs1 << 15 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1822:9
     |
1822 |         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `opcode | func3 << 12 as libc::c_int | (rd << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1822:9
     |
1822 |         opcode | func3 << 12 as libc::c_int | rd << 7 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `opcode | (func3 << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:1849:5
     |
1849 |     'c_11712: {
     |     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:1890:5
     |
1890 |     'c_14043: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1908:9
     |
1908 | /         opcode | func3 << 12 as libc::c_int
1909 | |             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
1910 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
1911 | |             | (imm >> 5 as libc::c_int) << 25 as libc::c_int,
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1908 ~         opcode | func3 << 12 as libc::c_int
1909 +             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
1910 ~             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int | ((imm >> 5 as libc::c_int) << 25 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1908:9
     |
1908 | /         opcode | func3 << 12 as libc::c_int
1909 | |             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
1910 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1908 ~         opcode | func3 << 12 as libc::c_int
1909 +             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
1910 +             | rs1 << 15 as libc::c_int | (rs2 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1908:9
     |
1908 | /         opcode | func3 << 12 as libc::c_int
1909 | |             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
1910 | |             | rs1 << 15 as libc::c_int | rs2 << 20 as libc::c_int
     | |______________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1908 ~         opcode | func3 << 12 as libc::c_int
1909 ~             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int | (rs1 << 15 as libc::c_int) | rs2 << 20 as libc::c_int
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1908:9
     |
1908 | /         opcode | func3 << 12 as libc::c_int
1909 | |             | (imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int
     | |_________________________________________________________________________^ help: consider parenthesizing your expression: `opcode | func3 << 12 as libc::c_int | ((imm & 0x1f as libc::c_int as uint32_t) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1908:9
     |
1908 |         opcode | func3 << 12 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `opcode | (func3 << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1932:15
     |
1932 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
1933 | |             << 12 as libc::c_int
1934 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1935 | |                 << 20 as libc::c_int
...    |
1938 | |             | (r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
1939 | |                 << 31 as libc::c_int;
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1932 ~         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
1933 +             << 12 as libc::c_int
1934 +             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1935 +                 << 20 as libc::c_int
1936 +             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
1937 +                 << 21 as libc::c_int | ((r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
1938 ~                 << 31 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1932:15
     |
1932 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
1933 | |             << 12 as libc::c_int
1934 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1935 | |                 << 20 as libc::c_int
1936 | |             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
1937 | |                 << 21 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1932 ~         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
1933 +             << 12 as libc::c_int
1934 +             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1935 +                 << 20 as libc::c_int | ((r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
1936 +                 << 21 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1932:15
     |
1932 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
1933 | |             << 12 as libc::c_int
1934 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1935 | |                 << 20 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1932 ~         imm = ((r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
1933 +             << 12 as libc::c_int) | ((r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
1934 +                 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1932:16
     |
1932 |         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 12 as libc::c_int) & 0xff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1934:16
     |
1934 |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 11 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1936:16
     |
1936 |             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 1 as libc::c_int) & 0x3ff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:1938:16
     |
1938 |             | (r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 20 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:2000:9
     |
2000 |         'c_12952: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2050:12
     |
2050 |         o((0x17 as libc::c_int | rr << 7 as libc::c_int) as libc::c_uint);
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2072:22
     |
2072 |                     (0x37 as libc::c_int | (6 as libc::c_int) << 7 as libc::c_int)
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((6 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2106:18
     |
2106 |                 (0x37 as libc::c_int | rr << 7 as libc::c_int) as libc::c_uint
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2138:10
     |
2138 |         (0x37 as libc::c_int | rr << 7 as libc::c_int) as libc::c_uint
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2161:10
     |
2161 |         (fc + ((1 as libc::c_int) << 19 as libc::c_int) >> 20 as libc::c_int) as uint32_t,
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(fc + ((1 as libc::c_int) << 19 as libc::c_int)) >> 20 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:2218:9
     |
2218 |         'c_13822: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2278:22
     |
2278 |                     (0x37 as libc::c_int | rr << 7 as libc::c_int) as libc::c_uint
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:2316:9
     |
2316 |         'c_13459: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2359:18
     |
2359 |                 (0x37 as libc::c_int | rr << 7 as libc::c_int) as libc::c_uint
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:2405:9
     |
2405 |         'c_13010: {
     |         ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:2473:13
     |
2473 |             'c_12348: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2489:18
     |
2489 |                   (0x53 as libc::c_int | rr << 7 as libc::c_int
     |  __________________^
2490 | |                     | (if is_freg(v) != 0 { freg(v) } else { ireg(v) })
2491 | |                         << 15 as libc::c_int | func7 << 25 as libc::c_int)
     | |_________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2489 ~                 (0x53 as libc::c_int | rr << 7 as libc::c_int
2490 +                     | (if is_freg(v) != 0 { freg(v) } else { ireg(v) })
2491 ~                         << 15 as libc::c_int | (func7 << 25 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2489:18
     |
2489 |                   (0x53 as libc::c_int | rr << 7 as libc::c_int
     |  __________________^
2490 | |                     | (if is_freg(v) != 0 { freg(v) } else { ireg(v) })
2491 | |                         << 15 as libc::c_int | func7 << 25 as libc::c_int)
     | |____________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2489 ~                 (0x53 as libc::c_int | rr << 7 as libc::c_int | ((if is_freg(v) != 0 { freg(v) } else { ireg(v) })
2490 ~                         << 15 as libc::c_int) | func7 << 25 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2489:18
     |
2489 |                 (0x53 as libc::c_int | rr << 7 as libc::c_int
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x53 as libc::c_int | (rr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2500:34
     |
2500 |           let mut b: libc::c_int = (*vtop).c2rust_unnamed_0.c2rust_unnamed.cmp_r
     |  __________________________________^
2501 | |             as libc::c_int >> 8 as libc::c_int & 0xff as libc::c_int;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2500 ~         let mut b: libc::c_int = ((*vtop).c2rust_unnamed_0.c2rust_unnamed.cmp_r
2501 ~             as libc::c_int >> 8 as libc::c_int) & 0xff as libc::c_int;
     |

warning: unused label
    --> src/riscv64_gen.rs:2585:9
     |
2585 |         'c_11948: {
     |         ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:2643:5
     |
2643 |     'c_14327: {
     |     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:2682:5
     |
2682 |     'c_14245: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2712:18
     |
2712 |                 (0x37 as libc::c_int | ptrreg << 7 as libc::c_int) as libc::c_uint
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | (ptrreg << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2761:12
     |
2761 |         o((0x17 as libc::c_int | tr << 7 as libc::c_int) as libc::c_uint);
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | (tr << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2800:8
     |
2800 |     o((0x17 as libc::c_int | (1 as libc::c_int) << 7 as libc::c_int) as libc::c_uint);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | ((1 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2881:14
     |
2881 |             (0x17 as libc::c_int | (10 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | ((10 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2917:8
     |
2917 |     o((0x17 as libc::c_int | (10 as libc::c_int) << 7 as libc::c_int) as libc::c_uint);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | ((10 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2945:16
     |
2945 |             == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2985:25
     |
2985 |                       ) = ofs + sz << 4 as libc::c_int
     |  _________________________^
2986 | |                     | (*(*type_0).ref_0).type_0.t & 0xf as libc::c_int;
     | |______________________________________________________________________^ help: consider parenthesizing your expression: `(ofs + sz << 4 as libc::c_int) | (*(*type_0).ref_0).type_0.t & 0xf as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:2985:25
     |
2985 |                     ) = ofs + sz << 4 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ofs + sz) << 4 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3015:17
     |
3015 |               ) = ofs << 4 as libc::c_int
     |  _________________^
3016 | |             | (if (*type_0).t & 0xf as libc::c_int == 5 as libc::c_int {
3017 | |                 4 as libc::c_int
3018 | |             } else {
3019 | |                 (*type_0).t & 0xf as libc::c_int
3020 | |             });
     | |______________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3015 ~             ) = (ofs << 4 as libc::c_int) | (if (*type_0).t & 0xf as libc::c_int == 5 as libc::c_int {
3016 +                 4 as libc::c_int
3017 +             } else {
3018 +                 (*type_0).t & 0xf as libc::c_int
3019 ~             });
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3039:17
     |
3039 |             ) = size + 7 as libc::c_int >> 3 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) >> 3 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3046:17
     |
3046 |               ) = (0 as libc::c_int) << 4 as libc::c_int
     |  _________________^
3047 | |             | (if size <= 1 as libc::c_int {
3048 | |                 1 as libc::c_int
3049 | |             } else {
...    |
3058 | |                 })
3059 | |             });
     | |______________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3046 ~             ) = ((0 as libc::c_int) << 4 as libc::c_int) | (if size <= 1 as libc::c_int {
3047 +                 1 as libc::c_int
3048 +             } else {
3049 +                 (if size <= 2 as libc::c_int {
3050 +                     2 as libc::c_int
3051 +                 } else {
3052 +                     (if size <= 4 as libc::c_int {
3053 +                         3 as libc::c_int
3054 +                     } else {
3055 +                         4 as libc::c_int
3056 +                     })
3057 +                 })
3058 ~             });
     |

warning: unnecessary parentheses around block return value
    --> src/riscv64_gen.rs:3050:17
     |
3050 |                 (if size <= 2 as libc::c_int {
     |                 ^
...
3058 |                 })
     |                  ^
     |
help: remove these parentheses
     |
3050 ~                 if size <= 2 as libc::c_int {
3051 |                     2 as libc::c_int
 ...
3057 |                     })
3058 ~                 }
     |

warning: unnecessary parentheses around block return value
    --> src/riscv64_gen.rs:3053:21
     |
3053 |                     (if size <= 4 as libc::c_int {
     |                     ^
...
3057 |                     })
     |                      ^
     |
help: remove these parentheses
     |
3053 ~                     if size <= 4 as libc::c_int {
3054 |                         3 as libc::c_int
3055 |                     } else {
3056 |                         4 as libc::c_int
3057 ~                     }
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3063:17
     |
3063 |               ) = (8 as libc::c_int) << 4 as libc::c_int
     |  _________________^
3064 | |             | (if size <= 9 as libc::c_int {
3065 | |                 1 as libc::c_int
3066 | |             } else {
...    |
3075 | |                 })
3076 | |             });
     | |______________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3063 ~             ) = ((8 as libc::c_int) << 4 as libc::c_int) | (if size <= 9 as libc::c_int {
3064 +                 1 as libc::c_int
3065 +             } else {
3066 +                 (if size <= 10 as libc::c_int {
3067 +                     2 as libc::c_int
3068 +                 } else {
3069 +                     (if size <= 12 as libc::c_int {
3070 +                         3 as libc::c_int
3071 +                     } else {
3072 +                         4 as libc::c_int
3073 +                     })
3074 +                 })
3075 ~             });
     |

warning: unnecessary parentheses around block return value
    --> src/riscv64_gen.rs:3067:17
     |
3067 |                 (if size <= 10 as libc::c_int {
     |                 ^
...
3075 |                 })
     |                  ^
     |
help: remove these parentheses
     |
3067 ~                 if size <= 10 as libc::c_int {
3068 |                     2 as libc::c_int
 ...
3074 |                     })
3075 ~                 }
     |

warning: unnecessary parentheses around block return value
    --> src/riscv64_gen.rs:3070:21
     |
3070 |                     (if size <= 12 as libc::c_int {
     |                     ^
...
3074 |                     })
     |                      ^
     |
help: remove these parentheses
     |
3070 ~                     if size <= 12 as libc::c_int {
3071 |                         3 as libc::c_int
3072 |                     } else {
3073 |                         4 as libc::c_int
3074 ~                     }
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3117:25
     |
3117 |             tempspace = tempspace + align - 1 as libc::c_int & -align;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(tempspace + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3122:21
     |
3122 |             byref = 64 as libc::c_int | tempofs << 7 as libc::c_int;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `64 as libc::c_int | (tempofs << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3134:29
     |
3134 |                   as usize] = areg[0 as libc::c_int as usize] + 1 as libc::c_int
     |  _____________________________^
3135 | |                 & !(1 as libc::c_int);
     | |_____________________________________^ help: consider parenthesizing your expression: `(areg[0 as libc::c_int as usize] + 1 as libc::c_int) & !(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3157:26
     |
3157 |             stack_adj += size + align - 1 as libc::c_int & -align;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3187:13
     |
3187 |             'c_16728: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3212:28
     |
3212 |                         |= 1 as libc::c_int + fresh4 << 7 as libc::c_int;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int + fresh4) << 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3234:21
     |
3234 |                     'c_16621: {
     |                     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3253:28
     |
3253 |                           |= fieldofs[2 as libc::c_int as usize]
     |  ____________________________^
3254 | |                             << 12 as libc::c_int + 4 as libc::c_int;
     | |___________________________________________________________________^ help: consider parenthesizing your expression: `fieldofs[2 as libc::c_int as usize] << (12 as libc::c_int + 4 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3265:17
     |
3265 |     stack_adj = stack_adj + 15 as libc::c_int & -(16 as libc::c_int);
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(stack_adj + 15 as libc::c_int) & -(16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3266:17
     |
3266 |     tempspace = tempspace + 15 as libc::c_int & -(16 as libc::c_int);
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(tempspace + 15 as libc::c_int) & -(16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3270:43
     |
3270 |               let mut bit11: libc::c_uint = -stack_add as libc::c_uint >> 11 as libc::c_int
     |  ___________________________________________^
3271 | |                 & 1 as libc::c_int as libc::c_uint;
     | |__________________________________________________^ help: consider parenthesizing your expression: `(-stack_add as libc::c_uint >> 11 as libc::c_int) & 1 as libc::c_int as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3273:18
     |
3273 |                 (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3334:27
     |
3334 |                     ofs = ofs + align - 1 as libc::c_int & -align;
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ofs + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3360:17
     |
3360 |                 'c_16141: {
     |                 ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3398:17
     |
3398 |                 r2 >> 7 as libc::c_int & 31 as libc::c_int
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 7 as libc::c_int) & 31 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3413:13
     |
3413 |             'c_16048: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3434:29
     |
3434 |                     loadt = ii >> 12 as libc::c_int & 0xf as libc::c_int;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ii >> 12 as libc::c_int) & 0xf as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3452:21
     |
3452 |                     'c_15947: {
     |                     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:3483:21
     |
3483 |                     'c_15902: {
     |                     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:3530:21
     |
3530 |                     'c_15785: {
     |                     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3559:33
     |
3559 |                         loadt = ii >> 16 as libc::c_int & 0xf as libc::c_int;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ii >> 16 as libc::c_int) & 0xf as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3577:21
     |
3577 |                     'c_15633: {
     |                     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:3624:21
     |
3624 |                     'c_15495: {
     |                     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3663:45
     |
3663 |               let mut bit11_0: libc::c_uint = stack_add as libc::c_uint
     |  _____________________________________________^
3664 | |                 >> 11 as libc::c_int & 1 as libc::c_int as libc::c_uint;
     | |_______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3663 ~             let mut bit11_0: libc::c_uint = (stack_add as libc::c_uint
3664 ~                 >> 11 as libc::c_int) & 1 as libc::c_int as libc::c_uint;
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3666:18
     |
3666 |                 (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:3772:20
     |
3772 |             addr = addr + align - 1 as libc::c_int & -align;
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/riscv64_gen.rs:3799:21
     |
3799 |                     'c_17475: {
     |                     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:3953:5
     |
3953 |     'c_22570: {
     |     ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:3985:5
     |
3985 |     'c_22520: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4054:9
     |
4054 |     v = -loc + 15 as libc::c_int & -(16 as libc::c_int);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 15 as libc::c_int) & -(16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4059:14
     |
4059 |             (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4119:14
     |
4119 |             (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4229:14
     |
4229 |             (0x17 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4243:15
     |
4243 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
4244 | |             << 12 as libc::c_int
4245 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4246 | |                 << 20 as libc::c_int
...    |
4249 | |             | (r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
4250 | |                 << 31 as libc::c_int;
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4243 ~         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
4244 +             << 12 as libc::c_int
4245 +             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4246 +                 << 20 as libc::c_int
4247 +             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
4248 +                 << 21 as libc::c_int | ((r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
4249 ~                 << 31 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4243:15
     |
4243 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
4244 | |             << 12 as libc::c_int
4245 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4246 | |                 << 20 as libc::c_int
4247 | |             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
4248 | |                 << 21 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4243 ~         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
4244 +             << 12 as libc::c_int
4245 +             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4246 +                 << 20 as libc::c_int | ((r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
4247 +                 << 21 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4243:15
     |
4243 |           imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |  _______________^
4244 | |             << 12 as libc::c_int
4245 | |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4246 | |                 << 20 as libc::c_int
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4243 ~         imm = ((r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
4244 +             << 12 as libc::c_int) | ((r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
4245 +                 << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4243:16
     |
4243 |         imm = (r >> 12 as libc::c_int & 0xff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 12 as libc::c_int) & 0xff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4245:16
     |
4245 |             | (r >> 11 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 11 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4247:16
     |
4247 |             | (r >> 1 as libc::c_int & 0x3ff as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 1 as libc::c_int) & 0x3ff as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4249:16
     |
4249 |             | (r >> 20 as libc::c_int & 1 as libc::c_int as uint32_t)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 20 as libc::c_int) & 1 as libc::c_int as uint32_t`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4262:30
     |
4262 |       let mut b: libc::c_int = (*vtop).c2rust_unnamed_0.c2rust_unnamed.cmp_r as libc::c_int
     |  ______________________________^
4263 | |         >> 8 as libc::c_int & 0xff as libc::c_int;
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4262 ~     let mut b: libc::c_int = ((*vtop).c2rust_unnamed_0.c2rust_unnamed.cmp_r as libc::c_int
4263 ~         >> 8 as libc::c_int) & 0xff as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4310:10
     |
4310 |           (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
     |  __________^
4311 | |             | a << 15 as libc::c_int | b << 20 as libc::c_int
4312 | |             | (8 as libc::c_int) << 7 as libc::c_int) as libc::c_uint,
     | |____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4310 ~         (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
4311 ~             | a << 15 as libc::c_int | b << 20 as libc::c_int | ((8 as libc::c_int) << 7 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4310:10
     |
4310 |           (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
     |  __________^
4311 | |             | a << 15 as libc::c_int | b << 20 as libc::c_int
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4310 ~         (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
4311 +             | a << 15 as libc::c_int | (b << 20 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4310:10
     |
4310 |           (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
     |  __________^
4311 | |             | a << 15 as libc::c_int | b << 20 as libc::c_int
     | |____________________________________^ help: consider parenthesizing your expression: `0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int | (a << 15 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4310:10
     |
4310 |         (0x63 as libc::c_int | (op ^ 1 as libc::c_int) << 12 as libc::c_int
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x63 as libc::c_int | ((op ^ 1 as libc::c_int) << 12 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4450:43
     |
4450 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4506:55
     |
4506 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4596:43
     |
4596 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4652:55
     |
4652 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4742:43
     |
4742 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4798:55
     |
4798 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4888:43
     |
4888 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:4944:55
     |
4944 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5034:43
     |
5034 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5090:55
     |
5090 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5180:43
     |
5180 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5236:55
     |
5236 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5326:43
     |
5326 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5382:55
     |
5382 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5472:43
     |
5472 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5528:55
     |
5528 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5618:43
     |
5618 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5674:55
     |
5674 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5764:43
     |
5764 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5820:55
     |
5820 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5910:43
     |
5910 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:5966:55
     |
5966 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6056:43
     |
6056 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6112:55
     |
6112 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6202:43
     |
6202 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6258:55
     |
6258 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6348:43
     |
6348 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6404:55
     |
6404 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6494:43
     |
6494 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6550:55
     |
6550 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6640:43
     |
6640 | ...                   .cmp_r = (a | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6696:55
     |
6696 | ...                   .cmp_r = (ireg(d) | (0 as libc::c_int) << 8 as libc::c_int)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ireg(d) | ((0 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6859:31
     |
6859 |                     .cmp_r = (a | b << 8 as libc::c_int) as libc::c_ushort;
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a | (b << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6913:14
     |
6913 |               ((0x68 as libc::c_int
     |  ______________^
6914 | |                 | (if t == 9 as libc::c_int {
6915 | |                     1 as libc::c_int
6916 | |                 } else {
6917 | |                     0 as libc::c_int
6918 | |                 })) << 5 as libc::c_int
6919 | |                 | (if u != 0 { 1 as libc::c_int } else { 0 as libc::c_int })
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6913 ~             (((0x68 as libc::c_int
6914 +                 | (if t == 9 as libc::c_int {
6915 +                     1 as libc::c_int
6916 +                 } else {
6917 +                     0 as libc::c_int
6918 +                 })) << 5 as libc::c_int) | (if u != 0 { 1 as libc::c_int } else { 0 as libc::c_int })
     |

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:6952:14
     |
6952 |               ((0x60 as libc::c_int
     |  ______________^
6953 | |                 | (if ft == 9 as libc::c_int {
6954 | |                     1 as libc::c_int
6955 | |                 } else {
6956 | |                     0 as libc::c_int
6957 | |                 })) << 5 as libc::c_int
6958 | |                 | (if u != 0 { 1 as libc::c_int } else { 0 as libc::c_int })
     | |____________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6952 ~             (((0x60 as libc::c_int
6953 +                 | (if ft == 9 as libc::c_int {
6954 +                     1 as libc::c_int
6955 +                 } else {
6956 +                     0 as libc::c_int
6957 +                 })) << 5 as libc::c_int) | (if u != 0 { 1 as libc::c_int } else { 0 as libc::c_int })
     |

warning: unused label
    --> src/riscv64_gen.rs:6992:13
     |
6992 |             'c_21117: {
     |             ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:7046:9
     |
7046 |         'c_20947: {
     |         ^^^^^^^^

warning: unused label
    --> src/riscv64_gen.rs:7076:9
     |
7076 |         'c_20892: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:7108:18
     |
7108 |                 ((0x20 as libc::c_int) << 5 as libc::c_int | 1 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((0x20 as libc::c_int) << 5 as libc::c_int) | 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:7164:8
     |
7164 |     o((0x17 as libc::c_int | r1 << 7 as libc::c_int) as libc::c_uint);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | (r1 << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:7200:8
     |
7200 |     o((0x17 as libc::c_int | r1 << 7 as libc::c_int) as libc::c_uint);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x17 as libc::c_int | (r1 << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:7230:14
     |
7230 |             (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/riscv64_gen.rs:7267:14
     |
7267 |             (0x37 as libc::c_int | (5 as libc::c_int) << 7 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x37 as libc::c_int | ((5 as libc::c_int) << 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/riscv64_link.rs:21:10
   |
21 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/riscv64_link.rs:22:10
   |
22 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/riscv64_link.rs:23:10
   |
23 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/riscv64_link.rs:24:10
   |
24 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/riscv64_link.rs:25:10
   |
25 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/riscv64_link.rs:26:10
   |
26 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/riscv64_link.rs:27:10
   |
27 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/riscv64_link.rs:28:10
   |
28 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/riscv64_link.rs:29:10
   |
29 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int32_t` should have an upper camel case name
  --> src/riscv64_link.rs:30:10
   |
30 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/riscv64_link.rs:31:10
   |
31 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/riscv64_link.rs:70:10
   |
70 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/riscv64_link.rs:72:10
   |
72 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/riscv64_link.rs:80:10
   |
80 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/riscv64_link.rs:284:10
    |
284 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/riscv64_link.rs:285:10
    |
285 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/riscv64_link.rs:293:10
    |
293 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/riscv64_link.rs:294:10
    |
294 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/riscv64_link.rs:434:10
    |
434 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/riscv64_link.rs:451:10
    |
451 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/riscv64_link.rs:452:10
    |
452 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/riscv64_link.rs:453:10
    |
453 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/riscv64_link.rs:454:10
    |
454 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/riscv64_link.rs:468:10
    |
468 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:472:13
    |
472 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
473 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
474 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
472 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
473 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:485:14
    |
485 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:489:12
    |
489 |       return read16le(p) as uint32_t
    |  ____________^
490 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
491 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
489 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
490 ~             << 16 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:504:12
    |
504 |       return read32le(p) as uint64_t
    |  ____________^
505 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
506 | |             << 32 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
504 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
505 ~             << 32 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:596:14
    |
596 |             (0x397 as libc::c_int as uint64_t | off << 12 as libc::c_int) as uint32_t,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x397 as libc::c_int as uint64_t | (off << 12 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:604:14
    |
604 |               (0x3be03 as libc::c_int as uint64_t
    |  ______________^
605 | |                 | (got.wrapping_sub(plt) & 0xfff as libc::c_int as uint64_t)
606 | |                     << 20 as libc::c_int) as uint32_t,
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
604 ~             (0x3be03 as libc::c_int as uint64_t | ((got.wrapping_sub(plt) & 0xfff as libc::c_int as uint64_t)
605 ~                     << 20 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:611:14
    |
611 |               (0x38293 as libc::c_int as uint64_t
    |  ______________^
612 | |                 | (got.wrapping_sub(plt) & 0xfff as libc::c_int as uint64_t)
613 | |                     << 20 as libc::c_int) as uint32_t,
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
611 ~             (0x38293 as libc::c_int as uint64_t | ((got.wrapping_sub(plt) & 0xfff as libc::c_int as uint64_t)
612 ~                     << 20 as libc::c_int)) as uint32_t,
    |

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:659:18
    |
659 |                 (0xe17 as libc::c_int as uint64_t | off_0 << 12 as libc::c_int)
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xe17 as libc::c_int as uint64_t | (off_0 << 12 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/riscv64_link.rs:664:18
    |
664 |                   (0xe3e03 as libc::c_int as uint64_t
    |  __________________^
665 | |                     | (addr.wrapping_sub(pc) & 0xfff as libc::c_int as uint64_t)
666 | |                         << 20 as libc::c_int) as uint32_t,
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
664 ~                 (0xe3e03 as libc::c_int as uint64_t | ((addr.wrapping_sub(pc) & 0xfff as libc::c_int as uint64_t)
665 ~                         << 20 as libc::c_int)) as uint32_t,
    |

warning: type `__builtin_va_list` should have an upper camel case name
   --> src/tcc.rs:186:10
    |
186 | pub type __builtin_va_list = [__va_list_tag; 1];
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuiltinVaList`

warning: type `va_list` should have an upper camel case name
   --> src/tcc.rs:195:10
    |
195 | pub type va_list = __builtin_va_list;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `VaList`

warning: type `size_t` should have an upper camel case name
   --> src/tcc.rs:196:10
    |
196 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__int8_t` should have an upper camel case name
   --> src/tcc.rs:197:10
    |
197 | pub type __int8_t = libc::c_schar;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tcc.rs:198:10
    |
198 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tcc.rs:199:10
    |
199 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
   --> src/tcc.rs:200:10
    |
200 | pub type __int32_t = libc::c_int;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tcc.rs:201:10
    |
201 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tcc.rs:202:10
    |
202 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tcc.rs:203:10
    |
203 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__uid_t` should have an upper camel case name
   --> src/tcc.rs:204:10
    |
204 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__off_t` should have an upper camel case name
   --> src/tcc.rs:205:10
    |
205 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tcc.rs:206:10
    |
206 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/tcc.rs:207:10
    |
207 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__clock_t` should have an upper camel case name
   --> src/tcc.rs:208:10
    |
208 | pub type __clock_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `ClockT`

warning: type `__time_t` should have an upper camel case name
   --> src/tcc.rs:209:10
    |
209 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__suseconds_t` should have an upper camel case name
   --> src/tcc.rs:210:10
    |
210 | pub type __suseconds_t = libc::c_long;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SusecondsT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/tcc.rs:211:10
    |
211 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `ssize_t` should have an upper camel case name
   --> src/tcc.rs:212:10
    |
212 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/tcc.rs:213:10
    |
213 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `int8_t` should have an upper camel case name
   --> src/tcc.rs:214:10
    |
214 | pub type int8_t = __int8_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `Int8T`

warning: type `int32_t` should have an upper camel case name
   --> src/tcc.rs:215:10
    |
215 | pub type int32_t = __int32_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
   --> src/tcc.rs:216:10
    |
216 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `sigset_t` should have an upper camel case name
   --> src/tcc.rs:222:10
    |
222 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/tcc.rs:229:10
    |
229 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tcc.rs:265:10
    |
265 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tcc.rs:267:10
    |
267 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tcc.rs:275:10
    |
275 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `__sigval_t` should have an upper camel case name
   --> src/tcc.rs:291:10
    |
291 | pub type __sigval_t = sigval;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `SigvalT`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tcc.rs:713:10
    |
713 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tcc.rs:714:10
    |
714 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tcc.rs:725:10
    |
725 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tcc.rs:726:10
    |
726 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `uint16_t` should have an upper camel case name
   --> src/tcc.rs:727:10
    |
727 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tcc.rs:728:10
    |
728 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `uint32_t` should have an upper camel case name
   --> src/tcc.rs:729:10
    |
729 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tcc.rs:798:10
    |
798 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `uint8_t` should have an upper camel case name
    --> src/tcc.rs:1041:10
     |
1041 | pub type uint8_t = __uint8_t;
     |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `nwchar_t` should have an upper camel case name
    --> src/tcc.rs:1105:10
     |
1105 | pub type nwchar_t = libc::c_int;
     |          ^^^^^^^^ help: convert the identifier to upper camel case: `NwcharT`

warning: type `X86_64_Mode` should have an upper camel case name
    --> src/tcc.rs:1228:10
     |
1228 | pub type X86_64_Mode = libc::c_uint;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `X86_64Mode`

warning: type `__va_arg_type` should have an upper camel case name
    --> src/tcc.rs:1381:10
     |
1381 | pub type __va_arg_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `VaArgType`

warning: type `Elf64_Half` should have an upper camel case name
    --> src/tcc.rs:2009:10
     |
2009 | pub type Elf64_Half = uint16_t;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Half`

warning: type `Elf64_Off` should have an upper camel case name
    --> src/tcc.rs:2054:10
     |
2054 | pub type Elf64_Off = uint64_t;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Off`

warning: type `uintptr_t` should have an upper camel case name
    --> src/tcc.rs:2122:10
     |
2122 | pub type uintptr_t = libc::c_ulong;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UintptrT`

warning: type `Elf32_Word` should have an upper camel case name
    --> src/tcc.rs:2166:10
     |
2166 | pub type Elf32_Word = uint32_t;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf32Word`

warning: type `__sighandler_t` should have an upper camel case name
    --> src/tcc.rs:2275:10
     |
2275 | pub type __sighandler_t = Option::<unsafe extern "C" fn(libc::c_int) -> ()>;
     |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SighandlerT`

warning: type `fpregset_t` should have an upper camel case name
    --> src/tcc.rs:2355:10
     |
2355 | pub type fpregset_t = *mut _libc_fpstate;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `FpregsetT`

warning: type `gregset_t` should have an upper camel case name
    --> src/tcc.rs:2356:10
     |
2356 | pub type gregset_t = [greg_t; 23];
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `GregsetT`

warning: type `greg_t` should have an upper camel case name
    --> src/tcc.rs:2357:10
     |
2357 | pub type greg_t = libc::c_longlong;
     |          ^^^^^^ help: convert the identifier to upper camel case: `GregT`

warning: type `__stab_debug_code` should have an upper camel case name
    --> src/tcc.rs:2373:10
     |
2373 | pub type __stab_debug_code = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `StabDebugCode`

warning: type `C2RustUnnamed_38` should have an upper camel case name
    --> src/tcc.rs:2404:10
     |
2404 | pub type C2RustUnnamed_38 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed38`

warning: type `C2RustUnnamed_39` should have an upper camel case name
    --> src/tcc.rs:2412:10
     |
2412 | pub type C2RustUnnamed_39 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed39`

warning: type `C2RustUnnamed_40` should have an upper camel case name
    --> src/tcc.rs:2478:10
     |
2478 | pub type C2RustUnnamed_40 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed40`

warning: type `C2RustUnnamed_41` should have an upper camel case name
    --> src/tcc.rs:2635:10
     |
2635 | pub type C2RustUnnamed_41 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed41`

warning: type `C2RustUnnamed_42` should have an upper camel case name
    --> src/tcc.rs:2668:10
     |
2668 | pub type C2RustUnnamed_42 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed42`

warning: type `C2RustUnnamed_43` should have an upper camel case name
    --> src/tcc.rs:2846:10
     |
2846 | pub type C2RustUnnamed_43 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed43`

warning: type `C2RustUnnamed_44` should have an upper camel case name
    --> src/tcc.rs:2862:10
     |
2862 | pub type C2RustUnnamed_44 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed44`

warning: type `C2RustUnnamed_45` should have an upper camel case name
    --> src/tcc.rs:2901:10
     |
2901 | pub type C2RustUnnamed_45 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed45`

warning: type `C2RustUnnamed_46` should have an upper camel case name
    --> src/tcc.rs:2907:10
     |
2907 | pub type C2RustUnnamed_46 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed46`

warning: type `C2RustUnnamed_47` should have an upper camel case name
    --> src/tcc.rs:2913:10
     |
2913 | pub type C2RustUnnamed_47 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed47`

warning: type `C2RustUnnamed_48` should have an upper camel case name
    --> src/tcc.rs:2918:10
     |
2918 | pub type C2RustUnnamed_48 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed48`

warning: type `C2RustUnnamed_49` should have an upper camel case name
    --> src/tcc.rs:2946:10
     |
2946 | pub type C2RustUnnamed_49 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed49`

warning: type `C2RustUnnamed_50` should have an upper camel case name
    --> src/tcc.rs:2958:10
     |
2958 | pub type C2RustUnnamed_50 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed50`

warning: type `tcc_token` should have an upper camel case name
    --> src/tcc.rs:2965:10
     |
2965 | pub type tcc_token = libc::c_uint;
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `line_macro_output_format` should have an upper camel case name
    --> src/tcc.rs:3522:10
     |
3522 | pub type line_macro_output_format = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `LineMacroOutputFormat`

warning: type `gotplt_entry` should have an upper camel case name
    --> src/tcc.rs:3524:10
     |
3524 | pub type gotplt_entry = libc::c_uint;
     |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: type `C2RustUnnamed_51` should have an upper camel case name
    --> src/tcc.rs:3525:10
     |
3525 | pub type C2RustUnnamed_51 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed51`

warning: type `C2RustUnnamed_52` should have an upper camel case name
    --> src/tcc.rs:3534:10
     |
3534 | pub type C2RustUnnamed_52 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed52`

warning: type `C2RustUnnamed_53` should have an upper camel case name
    --> src/tcc.rs:3556:10
     |
3556 | pub type C2RustUnnamed_53 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed53`

warning: type `C2RustUnnamed_54` should have an upper camel case name
    --> src/tcc.rs:3558:10
     |
3558 | pub type C2RustUnnamed_54 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed54`

warning: type `C2RustUnnamed_55` should have an upper camel case name
    --> src/tcc.rs:3559:10
     |
3559 | pub type C2RustUnnamed_55 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed55`

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3609:13
     |
3609 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
3610 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
3611 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3609 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
3610 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3622:14
     |
3622 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3626:12
     |
3626 |       return read16le(p) as uint32_t
     |  ____________^
3627 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
3628 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3626 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
3627 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3641:12
     |
3641 |       return read32le(p) as uint64_t
     |  ____________^
3642 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
3643 | |             << 32 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3641 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
3642 ~             << 32 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3676:19
     |
3676 |         retval |= (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3708:19
     |
3708 |           retval = (retval as uint64_t
     |  ___________________^
3709 | |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     | |______________________________________________________________________________^ help: consider parenthesizing your expression: `retval as uint64_t | ((byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3709:15
     |
3709 |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3715:27
     |
3715 |                   retval = (retval as libc::c_longlong
     |  ___________________________^
3716 | |                     | -(1 as libc::c_longlong)
3717 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3715 ~                 retval = (retval as libc::c_longlong | (-(1 as libc::c_longlong)
3716 ~                         << (i + 1 as libc::c_int) * 7 as libc::c_int)) as int64_t;
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3716:23
     |
3716 |                       | -(1 as libc::c_longlong)
     |  _______________________^
3717 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `-(1 as libc::c_longlong) << ((i + 1 as libc::c_int) * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:3984:8
     |
3984 |     if nb & nb - 1 as libc::c_int == 0 as libc::c_int {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `nb & (nb - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unnecessary parentheses around assigned value
    --> src/tcc.rs:5853:17
     |
5853 |         value = (if value != 0 {
     |                 ^
...
5857 |         });
     |          ^
     |
help: remove these parentheses
     |
5853 ~         value = if value != 0 {
5854 |             1 as libc::c_int | 2 as libc::c_int
5855 |         } else {
5856 |             4 as libc::c_int
5857 ~         };
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:7300:16
     |
7300 |               |= (1 as libc::c_int) << 4 as libc::c_int
     |  ________________^
7301 | |                 | (1 as libc::c_int) << 5 as libc::c_int;
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 4 as libc::c_int) | ((1 as libc::c_int) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:7675:33
     |
7675 |             as *mut uint8_t) = (byte as libc::c_int | 0x80 as libc::c_int * more)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:7718:14
     |
7718 |             (byte as libc::c_int | 0x80 as libc::c_int * more) as libc::c_uchar,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `else` branch is empty
    --> src/tcc.rs:7997:31
     |
7997 | ...                   } else {};
     |                         ^^^^^^^ help: you can remove it
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: operator precedence can trip the unwary
    --> src/tcc.rs:8507:20
     |
8507 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
8508 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8509 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8507 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8508 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:8507:21
     |
8507 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:8511:21
     |
8511 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9338:24
     |
9338 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________________^
9339 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
9340 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint
     | |__________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9338 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9339 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
9340 +                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9338:25
     |
9338 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9342:25
     |
9342 |                     == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9374:28
     |
9374 |                         + ((*t).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9375:28
     |
9375 |                       size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |  ____________________________^
9376 | |                         & 0x3f as libc::c_int;
     | |_____________________________________________^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9375:28
     |
9375 |                     size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*t).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9407:12
     |
9407 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
9408 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9409 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9407 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9408 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9407:13
     |
9407 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9470:17
     |
9470 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
9471 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9472 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9470 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9471 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9470:18
     |
9470 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9604:20
     |
9604 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
9605 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9606 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9604 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9605 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9604:21
     |
9604 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9608:21
     |
9608 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9702:28
     |
9702 |                         + ((*e).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*e).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9703:49
     |
9703 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
9704 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9703 ~                     let mut size: libc::c_int = ((*e).type_0.t
9704 ~                         >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9703:49
     |
9703 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
9704 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `(*e).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9756:12
     |
9756 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
9757 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9758 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9756 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9757 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9756:13
     |
9756 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9878:17
     |
9878 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
9879 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9880 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9878 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9879 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tcc.rs:9878:18
     |
9878 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:10907:14
      |
10907 |             ((*(*s1).dState).tcov_data.line << 8 as libc::c_int | 0xff as libc::c_int)
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*(*s1).dState).tcov_data.line << 8 as libc::c_int) | 0xff as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:10949:14
      |
10949 |               (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
      |  ______________^
10950 | |                 & 0xfffffffff as libc::c_ulonglong | nline << 36 as libc::c_int)
      | |_______________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10949 ~             (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
10950 ~                 & 0xfffffffff as libc::c_ulonglong | (nline << 36 as libc::c_int))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:10991:13
      |
10991 | /             (1 as libc::c_int) << 1 as libc::c_int
10992 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
      | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:11026:9
      |
11026 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 2 as libc::c_int,
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:11033:9
      |
11033 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:11047:9
      |
11047 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12246:33
      |
12246 |     while ndef >= bloom_size * ((1 as libc::c_int) << bloom_shift - 3 as libc::c_int) {
      |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (bloom_shift - 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12419:24
      |
12419 |                       |= (1 as libc::c_int as Elf64_Addr)
      |  ________________________^
12420 | |                         << *hash.offset(cur as isize)
12421 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
12422 | |                         | (1 as libc::c_int as Elf64_Addr)
12423 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
12424 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
12419 ~                     |= ((1 as libc::c_int as Elf64_Addr)
12420 +                         << *hash.offset(cur as isize)
12421 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word) | ((1 as libc::c_int as Elf64_Addr)
12422 +                             << (*hash.offset(cur as isize) >> bloom_shift)
12423 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12419:24
      |
12419 |                       |= (1 as libc::c_int as Elf64_Addr)
      |  ________________________^
12420 | |                         << *hash.offset(cur as isize)
12421 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
      | |_________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
12419 ~                     |= (1 as libc::c_int as Elf64_Addr) << (*hash.offset(cur as isize)
12420 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12422:27
      |
12422 |                           | (1 as libc::c_int as Elf64_Addr)
      |  ___________________________^
12423 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
12424 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
12422 ~                         | (1 as libc::c_int as Elf64_Addr) << ((*hash.offset(cur as isize) >> bloom_shift)
12423 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12616:8
      |
12616 |     if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12650:16
      |
12650 |             if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:12696:24
      |
12696 |                   } else if !((*s1).output_type != 4 as libc::c_int) {
      |  ________________________^
12697 | |                     if (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
12698 | |                         count += 1;
12699 | |                         count;
12700 | |                     }
12701 | |                 }
      | |_________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
12696 ~                 } else if !((*s1).output_type != 4 as libc::c_int) && (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
12697 +                     count += 1;
12698 +                     count;
12699 +                 }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12716:9
      |
12716 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:12757:17
      |
12757 | /                 (1 as libc::c_int) << 1 as libc::c_int
12758 | |                     | (1 as libc::c_int) << 2 as libc::c_int,
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:12859:13
      |
12859 | /             if !((*s).sh_type != 4 as libc::c_int) {
12860 | |                 if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
12861 | |                     let mut current_block_19: u64;
12862 | |                     rel = ((*s).data as *mut Elf64_Rela)
...     |
13032 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
12859 ~             if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
12860 +                 let mut current_block_19: u64;
12861 +                 rel = ((*s).data as *mut Elf64_Rela)
12862 +                     .offset(0 as libc::c_int as isize);
12863 +                 while rel
12864 +                     < ((*s).data).offset((*s).data_offset as isize)
12865 +                         as *mut Elf64_Rela
12866 +                 {
12867 +                     type_0 = ((*rel).r_info
12868 +                         & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
12869 +                     gotplt_entry = gotplt_entry_type(type_0);
12870 +                     if gotplt_entry == -(1 as libc::c_int) {
12871 +                         tcc_enter_state(s1);
12872 +                         (Some(
12873 +                             _tcc_error_noabort
12874 +                                 as unsafe extern "C" fn(
12875 +                                     *const libc::c_char,
12876 +                                     ...
12877 +                                 ) -> libc::c_int,
12878 +                         ))
12879 +                             .expect(
12880 +                                 "non-null function pointer",
12881 +                             )(
12882 +                             b"Unknown relocation type for got: %d\0" as *const u8
12883 +                                 as *const libc::c_char,
12884 +                             type_0,
12885 +                         );
12886 +                     } else {
12887 +                         sym_index = ((*rel).r_info >> 32 as libc::c_int)
12888 +                             as libc::c_int;
12889 +                         sym = &mut *((*(*s1).c2rust_unnamed.symtab_section).data
12890 +                             as *mut Elf64_Sym)
12891 +                             .offset(sym_index as isize) as *mut Elf64_Sym;
12892 +                         if !(gotplt_entry == NO_GOTPLT_ENTRY as libc::c_int) {
12893 +                             if gotplt_entry == AUTO_GOTPLT_ENTRY as libc::c_int {
12894 +                                 if (*sym).st_shndx as libc::c_int == 0 as libc::c_int {
12895 +                                     let mut esym: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
12896 +                                     let mut dynindex: libc::c_int = 0;
12897 +                                     if 1 as libc::c_int == 0
12898 +                                         && (*s1).output_type & 4 as libc::c_int != 0
12899 +                                     {
12900 +                                         current_block_19 = 7351195479953500246;
12901 +                                     } else if !((*s1).dynsym).is_null() {
12902 +                                         dynindex = (*get_sym_attr(s1, sym_index, 0 as libc::c_int))
12903 +                                             .dyn_index;
12904 +                                         esym = ((*(*s1).dynsym).data as *mut Elf64_Sym)
12905 +                                             .offset(dynindex as isize);
12906 +                                         if dynindex != 0
12907 +                                             && ((*esym).st_info as libc::c_int & 0xf as libc::c_int
12908 +                                                 == 2 as libc::c_int
12909 +                                                 || (*esym).st_info as libc::c_int & 0xf as libc::c_int
12910 +                                                     == 0 as libc::c_int
12911 +                                                     && (*sym).st_info as libc::c_int & 0xf as libc::c_int
12912 +                                                         == 2 as libc::c_int)
12913 +                                         {
12914 +                                             current_block_19 = 11793550633721587306;
12915 +                                         } else {
12916 +                                             current_block_19 = 4068382217303356765;
12917 +                                         }
12918 +                                     } else {
12919 +                                         current_block_19 = 4068382217303356765;
12920 +                                     }
12921 +                                 } else if (*sym).st_shndx as libc::c_int
12922 +                                     == 0xfff1 as libc::c_int
12923 +                                 {
12924 +                                     if (*sym).st_value == 0 as libc::c_int as Elf64_Addr {
12925 +                                         current_block_19 = 7351195479953500246;
12926 +                                     } else if 8 as libc::c_int != 8 as libc::c_int {
12927 +                                         current_block_19 = 7351195479953500246;
12928 +                                     } else {
12929 +                                         current_block_19 = 4068382217303356765;
12930 +                                     }
12931 +                                 } else {
12932 +                                     current_block_19 = 7351195479953500246;
12933 +                                 }
12934 +                             } else {
12935 +                                 current_block_19 = 4068382217303356765;
12936 +                             }
12937 +                             match current_block_19 {
12938 +                                 7351195479953500246 => {}
12939 +                                 _ => {
12940 +                                     match current_block_19 {
12941 +                                         4068382217303356765 => {
12942 +                                             if (type_0 == 4 as libc::c_int
12943 +                                                 || type_0 == 2 as libc::c_int)
12944 +                                                 && (*sym).st_shndx as libc::c_int != 0 as libc::c_int
12945 +                                                 && ((*sym).st_other as libc::c_int & 0x3 as libc::c_int
12946 +                                                     != 0 as libc::c_int
12947 +                                                     || (*sym).st_info as libc::c_int >> 4 as libc::c_int
12948 +                                                         == 0 as libc::c_int
12949 +                                                     || (*s1).output_type & 2 as libc::c_int != 0)
12950 +                                             {
12951 +                                                 if pass != 0 as libc::c_int {
12952 +                                                     current_block_19 = 7351195479953500246;
12953 +                                                 } else {
12954 +                                                     (*rel)
12955 +                                                         .r_info = ((sym_index as Elf64_Xword) << 32 as libc::c_int)
12956 +                                                         .wrapping_add(2 as libc::c_int as Elf64_Xword);
12957 +                                                     current_block_19 = 7351195479953500246;
12958 +                                                 }
12959 +                                             } else {
12960 +                                                 reloc_type = code_reloc(type_0);
12961 +                                                 if reloc_type == -(1 as libc::c_int) {
12962 +                                                     tcc_enter_state(s1);
12963 +                                                     (Some(
12964 +                                                         _tcc_error_noabort
12965 +                                                             as unsafe extern "C" fn(
12966 +                                                                 *const libc::c_char,
12967 +                                                                 ...
12968 +                                                             ) -> libc::c_int,
12969 +                                                     ))
12970 +                                                         .expect(
12971 +                                                             "non-null function pointer",
12972 +                                                         )(
12973 +                                                         b"Unknown relocation type: %d\0" as *const u8
12974 +                                                             as *const libc::c_char,
12975 +                                                         type_0,
12976 +                                                     );
12977 +                                                     current_block_19 = 7351195479953500246;
12978 +                                                 } else if reloc_type != 0 as libc::c_int {
12979 +                                                     current_block_19 = 11793550633721587306;
12980 +                                                 } else if pass != 1 as libc::c_int {
12981 +                                                     current_block_19 = 7351195479953500246;
12982 +                                                 } else {
12983 +                                                     reloc_type = 6 as libc::c_int;
12984 +                                                     current_block_19 = 14832935472441733737;
12985 +                                                 }
12986 +                                             }
12987 +                                         }
12988 +                                         _ => {}
12989 +                                     }
12990 +                                     match current_block_19 {
12991 +                                         7351195479953500246 => {}
12992 +                                         _ => {
12993 +                                             match current_block_19 {
12994 +                                                 11793550633721587306 => {
12995 +                                                     if pass != 0 as libc::c_int {
12996 +                                                         current_block_19 = 7351195479953500246;
12997 +                                                     } else {
12998 +                                                         reloc_type = 7 as libc::c_int;
12999 +                                                         current_block_19 = 14832935472441733737;
13000 +                                                     }
13001 +                                                 }
13002 +                                                 _ => {}
13003 +                                             }
13004 +                                             match current_block_19 {
13005 +                                                 7351195479953500246 => {}
13006 +                                                 _ => {
13007 +                                                     if ((*s1).got).is_null() {
13008 +                                                         got_sym = build_got(s1);
13009 +                                                     }
13010 +                                                     if !(gotplt_entry == BUILD_GOT_ONLY as libc::c_int) {
13011 +                                                         attr = put_got_entry(s1, reloc_type, sym_index);
13012 +                                                         if reloc_type == 7 as libc::c_int {
13013 +                                                             (*rel)
13014 +                                                                 .r_info = (((*attr).plt_sym as Elf64_Xword)
13015 +                                                                 << 32 as libc::c_int)
13016 +                                                                 .wrapping_add(type_0 as Elf64_Xword);
13017 +                                                         }
13018 +                                                     }
13019 +                                                 }
13020 +                                             }
13021 +                                         }
13022 +                                     }
13023 +                                 }
13024 +                             }
13025 +                         }
13026 +                     }
13027 +                     rel = rel.offset(1);
13028 +                     rel;
13029 +                 }
13030 +             }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13085:23
      |
13085 |     if s.is_null() || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13388:12
      |
13388 |         if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:13493:9
      |
13493 | /         if !((*s).sh_type != 4 as libc::c_int) {
13494 | |             if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
13495 | |                 rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
13496 | |                 while rel
...     |
13509 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
13493 ~         if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
13494 +             rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
13495 +             while rel
13496 +                 < ((*s).data).offset((*s).data_offset as isize) as *mut Elf64_Rela
13497 +             {
13498 +                 match (*rel).r_info & 0xffffffff as libc::c_uint as Elf64_Xword {
13499 +                     3 | 9 | 41 | 42 | 4 => {
13500 +                         fill_got_entry(s1, rel);
13501 +                     }
13502 +                     _ => {}
13503 +                 }
13504 +                 rel = rel.offset(1);
13505 +                 rel;
13506 +             }
13507 +         }
      |

warning: this `if` statement can be collapsed
     --> src/tcc.rs:13725:13
      |
13725 | /             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int {
13726 | |                 if (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int
13727 | |                 {
13728 | |                     tcc_enter_state(s1);
...     |
13741 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
13725 ~             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int && (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int {
13726 +                 tcc_enter_state(s1);
13727 +                 (Some(
13728 +                     _tcc_warning
13729 +                         as unsafe extern "C" fn(*const libc::c_char, ...) -> (),
13730 +                 ))
13731 +                     .expect(
13732 +                         "non-null function pointer",
13733 +                     )(
13734 +                     b"undefined dynamic symbol '%s'\0" as *const u8
13735 +                         as *const libc::c_char,
13736 +                     name,
13737 +                 );
13738 +             }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13791:16
      |
13791 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13794:20
      |
13794 |                   && (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
      |  ____________________^
13795 | |                     & (1 as libc::c_int) << 1 as libc::c_int != 0
      | |____________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13805:24
      |
13805 |                       if (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
      |  ________________________^
13806 | |                         & (1 as libc::c_int) << 2 as libc::c_int != 0
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13812:19
      |
13812 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13841:19
      |
13841 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13843:16
      |
13843 |             if (*s).sh_flags & (1 as libc::c_int) << 0 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13846:16
      |
13846 |             if (*s).sh_flags & (1 as libc::c_int) << 10 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 10 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13882:19
      |
13882 |         } else if (*s).sh_flags & (1 as libc::c_int) << 2 as libc::c_int != 0 {
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13895:16
      |
13895 |             && (*(*s).reloc).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*(*s).reloc).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13946:20
      |
13946 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
13947 | |                     | (1 as libc::c_int) << 0 as libc::c_int
13948 | |                     | (1 as libc::c_int) << 2 as libc::c_int
13949 | |                     | (1 as libc::c_int) << 10 as libc::c_int);
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
13946 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
13947 +                     | (1 as libc::c_int) << 0 as libc::c_int
13948 ~                     | (1 as libc::c_int) << 2 as libc::c_int | ((1 as libc::c_int) << 10 as libc::c_int));
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13946:20
      |
13946 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
13947 | |                     | (1 as libc::c_int) << 0 as libc::c_int
13948 | |                     | (1 as libc::c_int) << 2 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
13946 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
13947 +                     | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:13946:20
      |
13946 |                   & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________^
13947 | |                     | (1 as libc::c_int) << 0 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14072:16
      |
14072 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 && n != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14088:16
      |
14088 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14093:20
      |
14093 |                 if f & (1 as libc::c_int) << 0 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14097:20
      |
14097 |                 if f & (1 as libc::c_int) << 2 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14101:20
      |
14101 |                 if f & (1 as libc::c_int) << 10 as libc::c_int != 0 {
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 10 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14115:16
      |
14115 |             if f & (1 as libc::c_int) << 4 as libc::c_int != 0 {
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 4 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14498:16
      |
14498 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14745:13
      |
14745 | /             (1 as libc::c_int) << 1 as libc::c_int
14746 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
      | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14906:16
      |
14906 |             || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 || is_obj != 0
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:14936:23
      |
14936 |         file_offset = file_offset + 15 as libc::c_int & -(16 as libc::c_int);
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(file_offset + 15 as libc::c_int) & -(16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:15018:12
      |
15018 |       } else if size >= 8 as libc::c_int {
      |  ____________^
15019 | |         if 0 as libc::c_int
15020 | |             == memcmp(
15021 | |                 h as *const libc::c_void,
...     |
15029 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
15018 ~     } else if size >= 8 as libc::c_int && 0 as libc::c_int == memcmp(
15019 +                 h as *const libc::c_void,
15020 +                 b"!<arch>\n\0" as *const u8 as *const libc::c_char
15021 +                     as *const libc::c_void,
15022 +                 8 as libc::c_int as libc::c_ulong,
15023 +             ) {
15024 +         return 3 as libc::c_int;
15025 +     }
      |

warning: this `if` statement can be collapsed
     --> src/tcc.rs:15079:5
      |
15079 | /     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) {
15080 | |         if !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
15081 | |             || ehdr.e_machine as libc::c_int != 62 as libc::c_int)
...     |
15548 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
15079 ~     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) && !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
15080 +             || ehdr.e_machine as libc::c_int != 62 as libc::c_int) {
15081 +         shdr = load_data(
15082 +             fd,
15083 +             file_offset.wrapping_add(ehdr.e_shoff),
15084 +             (::core::mem::size_of::<Elf64_Shdr>() as libc::c_ulong)
15085 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
15086 +         ) as *mut Elf64_Shdr;
15087 +         sm_table = tcc_mallocz(
15088 +             (::core::mem::size_of::<SectionMergeInfo>() as libc::c_ulong)
15089 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
15090 +         ) as *mut SectionMergeInfo;
15091 +         sh = &mut *shdr.offset(ehdr.e_shstrndx as isize) as *mut Elf64_Shdr;
15092 +         strsec = load_data(
15093 +             fd,
15094 +             file_offset.wrapping_add((*sh).sh_offset),
15095 +             (*sh).sh_size,
15096 +         ) as *mut libc::c_char;
15097 +         old_to_new_syms = 0 as *mut libc::c_int;
15098 +         symtab = 0 as *mut Elf64_Sym;
15099 +         strtab = 0 as *mut libc::c_char;
15100 +         nb_syms = 0 as libc::c_int;
15101 +         seencompressed = 0 as libc::c_int;
15102 +         stabstr_index = 0 as libc::c_int;
15103 +         stab_index = stabstr_index;
15104 +         ret = -(1 as libc::c_int);
15105 +         i = 1 as libc::c_int;
15106 +         loop {
15107 +             if !(i < ehdr.e_shnum as libc::c_int) {
15108 +                 current_block = 6669252993407410313;
15109 +                 break;
15110 +             }
15111 +             sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
15112 +             if (*sh).sh_type == 2 as libc::c_int as Elf64_Word {
15113 +                 if !symtab.is_null() {
15114 +                     tcc_enter_state(s1);
15115 +                     (Some(
15116 +                         _tcc_error_noabort
15117 +                             as unsafe extern "C" fn(
15118 +                                 *const libc::c_char,
15119 +                                 ...
15120 +                             ) -> libc::c_int,
15121 +                     ))
15122 +                         .expect(
15123 +                             "non-null function pointer",
15124 +                         )(
15125 +                         b"object must contain only one symtab\0" as *const u8
15126 +                             as *const libc::c_char,
15127 +                     );
15128 +                     current_block = 3957405341070239145;
15129 +                     break;
15130 +                 } else {
15131 +                     nb_syms = ((*sh).sh_size)
15132 +                         .wrapping_div(
15133 +                             ::core::mem::size_of::<Elf64_Sym>() as libc::c_ulong,
15134 +                         ) as libc::c_int;
15135 +                     symtab = load_data(
15136 +                         fd,
15137 +                         file_offset.wrapping_add((*sh).sh_offset),
15138 +                         (*sh).sh_size,
15139 +                     ) as *mut Elf64_Sym;
15140 +                     let ref mut fresh55 = (*sm_table.offset(i as isize)).s;
15141 +                     *fresh55 = (*s1).c2rust_unnamed.symtab_section;
15142 +                     sh = &mut *shdr.offset((*sh).sh_link as isize)
15143 +                         as *mut Elf64_Shdr;
15144 +                     strtab = load_data(
15145 +                         fd,
15146 +                         file_offset.wrapping_add((*sh).sh_offset),
15147 +                         (*sh).sh_size,
15148 +                     ) as *mut libc::c_char;
15149 +                 }
15150 +             }
15151 +             if (*sh).sh_flags
15152 +                 & ((1 as libc::c_int) << 11 as libc::c_int) as Elf64_Xword != 0
15153 +             {
15154 +                 seencompressed = 1 as libc::c_int;
15155 +             }
15156 +             i += 1;
15157 +             i;
15158 +         }
15159 +         match current_block {
15160 +             6669252993407410313 => {
15161 +                 i = 1 as libc::c_int;
15162 +                 's_132: loop {
15163 +                     if !(i < ehdr.e_shnum as libc::c_int) {
15164 +                         current_block = 5028470053297453708;
15165 +                         break;
15166 +                     }
15167 +                     if !(i == ehdr.e_shstrndx as libc::c_int) {
15168 +                         sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
15169 +                         if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
15170 +                             sh = &mut *shdr.offset((*sh).sh_info as isize)
15171 +                                 as *mut Elf64_Shdr;
15172 +                         }
15173 +                         sh_name = strsec.offset((*sh).sh_name as isize);
15174 +                         if 0 as libc::c_int
15175 +                             == strncmp(
15176 +                                 sh_name,
15177 +                                 b".debug_\0" as *const u8 as *const libc::c_char,
15178 +                                 7 as libc::c_int as libc::c_ulong,
15179 +                             )
15180 +                             || 0 as libc::c_int
15181 +                                 == strncmp(
15182 +                                     sh_name,
15183 +                                     b".stab\0" as *const u8 as *const libc::c_char,
15184 +                                     5 as libc::c_int as libc::c_ulong,
15185 +                                 )
15186 +                         {
15187 +                             if (*s1).do_debug == 0 || seencompressed != 0 {
15188 +                                 current_block = 7056779235015430508;
15189 +                             } else {
15190 +                                 current_block = 15597372965620363352;
15191 +                             }
15192 +                         } else if 0 as libc::c_int
15193 +                             == strncmp(
15194 +                                 sh_name,
15195 +                                 b".eh_frame\0" as *const u8 as *const libc::c_char,
15196 +                                 9 as libc::c_int as libc::c_ulong,
15197 +                             )
15198 +                         {
15199 +                             if ((*s1).eh_frame_section).is_null() {
15200 +                                 current_block = 7056779235015430508;
15201 +                             } else {
15202 +                                 current_block = 15597372965620363352;
15203 +                             }
15204 +                         } else if (*sh).sh_type != 1 as libc::c_int as Elf64_Word
15205 +                             && (*sh).sh_type != 7 as libc::c_int as Elf64_Word
15206 +                             && (*sh).sh_type != 8 as libc::c_int as Elf64_Word
15207 +                             && (*sh).sh_type != 16 as libc::c_int as Elf64_Word
15208 +                             && (*sh).sh_type != 14 as libc::c_int as Elf64_Word
15209 +                             && (*sh).sh_type != 15 as libc::c_int as Elf64_Word
15210 +                         {
15211 +                             current_block = 7056779235015430508;
15212 +                         } else {
15213 +                             current_block = 15597372965620363352;
15214 +                         }
15215 +                         match current_block {
15216 +                             7056779235015430508 => {}
15217 +                             _ => {
15218 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
15219 +                                 sh_name = strsec.offset((*sh).sh_name as isize);
15220 +                                 if (*sh).sh_addralign < 1 as libc::c_int as Elf64_Xword {
15221 +                                     (*sh).sh_addralign = 1 as libc::c_int as Elf64_Xword;
15222 +                                 }
15223 +                                 j = 1 as libc::c_int;
15224 +                                 loop {
15225 +                                     if !(j < (*s1).nb_sections) {
15226 +                                         current_block = 2290177392965769716;
15227 +                                         break;
15228 +                                     }
15229 +                                     s = *((*s1).sections).offset(j as isize);
15230 +                                     if strcmp(((*s).name).as_mut_ptr(), sh_name) != 0 {
15231 +                                         j += 1;
15232 +                                         j;
15233 +                                     } else if (*sh).sh_type != (*s).sh_type as Elf64_Word
15234 +                                         && strcmp(
15235 +                                             ((*s).name).as_mut_ptr(),
15236 +                                             b".eh_frame\0" as *const u8 as *const libc::c_char,
15237 +                                         ) != 0
15238 +                                     {
15239 +                                         tcc_enter_state(s1);
15240 +                                         (Some(
15241 +                                             _tcc_error_noabort
15242 +                                                 as unsafe extern "C" fn(
15243 +                                                     *const libc::c_char,
15244 +                                                     ...
15245 +                                                 ) -> libc::c_int,
15246 +                                         ))
15247 +                                             .expect(
15248 +                                                 "non-null function pointer",
15249 +                                             )(
15250 +                                             b"section type conflict: %s %02x <> %02x\0" as *const u8
15251 +                                                 as *const libc::c_char,
15252 +                                             ((*s).name).as_mut_ptr(),
15253 +                                             (*sh).sh_type,
15254 +                                             (*s).sh_type,
15255 +                                         );
15256 +                                         current_block = 3957405341070239145;
15257 +                                         break 's_132;
15258 +                                     } else if strncmp(
15259 +                                         sh_name,
15260 +                                         b".gnu.linkonce\0" as *const u8 as *const libc::c_char,
15261 +                                         13 as libc::c_int as libc::c_ulong,
15262 +                                     ) == 0
15263 +                                     {
15264 +                                         (*sm_table.offset(i as isize))
15265 +                                             .link_once = 1 as libc::c_int as uint8_t;
15266 +                                         current_block = 7056779235015430508;
15267 +                                         break;
15268 +                                     } else {
15269 +                                         if !((*s1).stab_section).is_null() {
15270 +                                             if s == (*s1).stab_section {
15271 +                                                 stab_index = i;
15272 +                                             }
15273 +                                             if s == (*(*s1).stab_section).link {
15274 +                                                 stabstr_index = i;
15275 +                                             }
15276 +                                         }
15277 +                                         current_block = 18390240475710248433;
15278 +                                         break;
15279 +                                     }
15280 +                                 }
15281 +                                 match current_block {
15282 +                                     7056779235015430508 => {}
15283 +                                     _ => {
15284 +                                         match current_block {
15285 +                                             2290177392965769716 => {
15286 +                                                 s = new_section(
15287 +                                                     s1,
15288 +                                                     sh_name,
15289 +                                                     (*sh).sh_type as libc::c_int,
15290 +                                                     ((*sh).sh_flags
15291 +                                                         & !((1 as libc::c_int) << 9 as libc::c_int) as Elf64_Xword)
15292 +                                                         as libc::c_int,
15293 +                                                 );
15294 +                                                 (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
15295 +                                                 (*s).sh_entsize = (*sh).sh_entsize as libc::c_int;
15296 +                                                 (*sm_table.offset(i as isize))
15297 +                                                     .new_section = 1 as libc::c_int as uint8_t;
15298 +                                             }
15299 +                                             _ => {}
15300 +                                         }
15301 +                                         (*s)
15302 +                                             .data_offset = ((*s).data_offset)
15303 +                                             .wrapping_add(
15304 +                                                 ((*s).data_offset).wrapping_neg()
15305 +                                                     & ((*sh).sh_addralign)
15306 +                                                         .wrapping_sub(1 as libc::c_int as Elf64_Xword),
15307 +                                             );
15308 +                                         if (*sh).sh_addralign > (*s).sh_addralign as Elf64_Xword {
15309 +                                             (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
15310 +                                         }
15311 +                                         (*sm_table.offset(i as isize)).offset = (*s).data_offset;
15312 +                                         let ref mut fresh56 = (*sm_table.offset(i as isize)).s;
15313 +                                         *fresh56 = s;
15314 +                                         size = (*sh).sh_size;
15315 +                                         if (*sh).sh_type != 8 as libc::c_int as Elf64_Word {
15316 +                                             let mut ptr: *mut libc::c_uchar = 0 as *mut libc::c_uchar;
15317 +                                             lseek(
15318 +                                                 fd,
15319 +                                                 file_offset.wrapping_add((*sh).sh_offset) as __off_t,
15320 +                                                 0 as libc::c_int,
15321 +                                             );
15322 +                                             ptr = section_ptr_add(s, size) as *mut libc::c_uchar;
15323 +                                             full_read(fd, ptr as *mut libc::c_void, size);
15324 +                                         } else {
15325 +                                             (*s).data_offset = ((*s).data_offset).wrapping_add(size);
15326 +                                         }
15327 +                                     }
15328 +                                 }
15329 +                             }
15330 +                         }
15331 +                     }
15332 +                     i += 1;
15333 +                     i;
15334 +                 }
15335 +                 match current_block {
15336 +                     3957405341070239145 => {}
15337 +                     _ => {
15338 +                         if stab_index != 0 && stabstr_index != 0 {
15339 +                             let mut a: *mut Stab_Sym = 0 as *mut Stab_Sym;
15340 +                             let mut b: *mut Stab_Sym = 0 as *mut Stab_Sym;
15341 +                             let mut o_0: libc::c_uint = 0;
15342 +                             s = (*sm_table.offset(stab_index as isize)).s;
15343 +                             a = ((*s).data)
15344 +                                 .offset(
15345 +                                     (*sm_table.offset(stab_index as isize)).offset as isize,
15346 +                                 ) as *mut Stab_Sym;
15347 +                             b = ((*s).data).offset((*s).data_offset as isize)
15348 +                                 as *mut Stab_Sym;
15349 +                             o_0 = (*sm_table.offset(stabstr_index as isize)).offset
15350 +                                 as libc::c_uint;
15351 +                             while a < b {
15352 +                                 if (*a).n_strx != 0 {
15353 +                                     (*a).n_strx = ((*a).n_strx).wrapping_add(o_0);
15354 +                                 }
15355 +                                 a = a.offset(1);
15356 +                                 a;
15357 +                             }
15358 +                         }
15359 +                         i = 1 as libc::c_int;
15360 +                         while i < ehdr.e_shnum as libc::c_int {
15361 +                             s = (*sm_table.offset(i as isize)).s;
15362 +                             if !(s.is_null()
15363 +                                 || (*sm_table.offset(i as isize)).new_section == 0)
15364 +                             {
15365 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
15366 +                                 if (*sh).sh_link > 0 as libc::c_int as Elf64_Word {
15367 +                                     (*s).link = (*sm_table.offset((*sh).sh_link as isize)).s;
15368 +                                 }
15369 +                                 if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
15370 +                                     (*s)
15371 +                                         .sh_info = (*(*sm_table.offset((*sh).sh_info as isize)).s)
15372 +                                         .sh_num;
15373 +                                     let ref mut fresh57 = (**((*s1).sections)
15374 +                                         .offset((*s).sh_info as isize))
15375 +                                         .reloc;
15376 +                                     *fresh57 = s;
15377 +                                 }
15378 +                             }
15379 +                             i += 1;
15380 +                             i;
15381 +                         }
15382 +                         old_to_new_syms = tcc_mallocz(
15383 +                             (nb_syms as libc::c_ulong)
15384 +                                 .wrapping_mul(
15385 +                                     ::core::mem::size_of::<libc::c_int>() as libc::c_ulong,
15386 +                                 ),
15387 +                         ) as *mut libc::c_int;
15388 +                         sym = symtab.offset(1 as libc::c_int as isize);
15389 +                         let mut current_block_95: u64;
15390 +                         i = 1 as libc::c_int;
15391 +                         while i < nb_syms {
15392 +                             if (*sym).st_shndx as libc::c_int != 0 as libc::c_int
15393 +                                 && ((*sym).st_shndx as libc::c_int) < 0xff00 as libc::c_int
15394 +                             {
15395 +                                 sm = &mut *sm_table.offset((*sym).st_shndx as isize)
15396 +                                     as *mut SectionMergeInfo;
15397 +                                 if (*sm).link_once != 0 {
15398 +                                     if (*sym).st_info as libc::c_int >> 4 as libc::c_int
15399 +                                         != 0 as libc::c_int
15400 +                                     {
15401 +                                         name = strtab.offset((*sym).st_name as isize);
15402 +                                         sym_index = find_elf_sym(
15403 +                                             (*s1).c2rust_unnamed.symtab_section,
15404 +                                             name,
15405 +                                         );
15406 +                                         if sym_index != 0 {
15407 +                                             *old_to_new_syms.offset(i as isize) = sym_index;
15408 +                                         }
15409 +                                     }
15410 +                                     current_block_95 = 12705158477165241210;
15411 +                                 } else if ((*sm).s).is_null() {
15412 +                                     current_block_95 = 12705158477165241210;
15413 +                                 } else {
15414 +                                     (*sym).st_shndx = (*(*sm).s).sh_num as Elf64_Section;
15415 +                                     (*sym)
15416 +                                         .st_value = ((*sym).st_value as libc::c_ulong)
15417 +                                         .wrapping_add((*sm).offset) as Elf64_Addr as Elf64_Addr;
15418 +                                     current_block_95 = 1417769144978639029;
15419 +                                 }
15420 +                             } else {
15421 +                                 current_block_95 = 1417769144978639029;
15422 +                             }
15423 +                             match current_block_95 {
15424 +                                 1417769144978639029 => {
15425 +                                     name = strtab.offset((*sym).st_name as isize);
15426 +                                     sym_index = set_elf_sym(
15427 +                                         (*s1).c2rust_unnamed.symtab_section,
15428 +                                         (*sym).st_value,
15429 +                                         (*sym).st_size,
15430 +                                         (*sym).st_info as libc::c_int,
15431 +                                         (*sym).st_other as libc::c_int,
15432 +                                         (*sym).st_shndx as libc::c_int,
15433 +                                         name,
15434 +                                     );
15435 +                                     *old_to_new_syms.offset(i as isize) = sym_index;
15436 +                                 }
15437 +                                 _ => {}
15438 +                             }
15439 +                             i += 1;
15440 +                             i;
15441 +                             sym = sym.offset(1);
15442 +                             sym;
15443 +                         }
15444 +                         i = 1 as libc::c_int;
15445 +                         's_516: loop {
15446 +                             if !(i < ehdr.e_shnum as libc::c_int) {
15447 +                                 current_block = 9180031981464905198;
15448 +                                 break;
15449 +                             }
15450 +                             s = (*sm_table.offset(i as isize)).s;
15451 +                             if !s.is_null() {
15452 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
15453 +                                 offset = (*sm_table.offset(i as isize)).offset;
15454 +                                 size = (*sh).sh_size;
15455 +                                 match (*s).sh_type {
15456 +                                     4 => {
15457 +                                         offseti = (*sm_table.offset((*sh).sh_info as isize)).offset;
15458 +                                         rel = ((*s).data as *mut Elf64_Rela)
15459 +                                             .offset(
15460 +                                                 offset
15461 +                                                     .wrapping_div(
15462 +                                                         ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
15463 +                                                     ) as isize,
15464 +                                             );
15465 +                                         while rel
15466 +                                             < ((*s).data as *mut Elf64_Rela)
15467 +                                                 .offset(
15468 +                                                     offset
15469 +                                                         .wrapping_add(size)
15470 +                                                         .wrapping_div(
15471 +                                                             ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
15472 +                                                         ) as isize,
15473 +                                                 )
15474 +                                         {
15475 +                                             let mut type_0: libc::c_int = 0;
15476 +                                             let mut sym_index_0: libc::c_uint = 0;
15477 +                                             type_0 = ((*rel).r_info
15478 +                                                 & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
15479 +                                             sym_index_0 = ((*rel).r_info >> 32 as libc::c_int)
15480 +                                                 as libc::c_uint;
15481 +                                             if !(sym_index_0 >= nb_syms as libc::c_uint) {
15482 +                                                 sym_index_0 = *old_to_new_syms.offset(sym_index_0 as isize)
15483 +                                                     as libc::c_uint;
15484 +                                                 if !(sym_index_0 == 0
15485 +                                                     && (*sm_table.offset((*sh).sh_info as isize)).link_once
15486 +                                                         == 0)
15487 +                                                 {
15488 +                                                     (*rel)
15489 +                                                         .r_info = ((sym_index_0 as Elf64_Xword)
15490 +                                                         << 32 as libc::c_int)
15491 +                                                         .wrapping_add(type_0 as Elf64_Xword);
15492 +                                                     (*rel)
15493 +                                                         .r_offset = ((*rel).r_offset as libc::c_ulong)
15494 +                                                         .wrapping_add(offseti) as Elf64_Addr as Elf64_Addr;
15495 +                                                     rel = rel.offset(1);
15496 +                                                     rel;
15497 +                                                     continue;
15498 +                                                 }
15499 +                                             }
15500 +                                             tcc_enter_state(s1);
15501 +                                             (Some(
15502 +                                                 _tcc_error_noabort
15503 +                                                     as unsafe extern "C" fn(
15504 +                                                         *const libc::c_char,
15505 +                                                         ...
15506 +                                                     ) -> libc::c_int,
15507 +                                             ))
15508 +                                                 .expect(
15509 +                                                     "non-null function pointer",
15510 +                                                 )(
15511 +                                                 b"Invalid relocation entry [%2d] '%s' @ %.8x\0" as *const u8
15512 +                                                     as *const libc::c_char,
15513 +                                                 i,
15514 +                                                 strsec.offset((*sh).sh_name as isize),
15515 +                                                 (*rel).r_offset as libc::c_int,
15516 +                                             );
15517 +                                             current_block = 3957405341070239145;
15518 +                                             break 's_516;
15519 +                                         }
15520 +                                     }
15521 +                                     _ => {}
15522 +                                 }
15523 +                             }
15524 +                             i += 1;
15525 +                             i;
15526 +                         }
15527 +                         match current_block {
15528 +                             3957405341070239145 => {}
15529 +                             _ => {
15530 +                                 ret = 0 as libc::c_int;
15531 +                             }
15532 +                         }
15533 +                     }
15534 +                 }
15535 +             }
15536 +             _ => {}
15537 +         }
15538 +         tcc_free(symtab as *mut libc::c_void);
15539 +         tcc_free(strtab as *mut libc::c_void);
15540 +         tcc_free(old_to_new_syms as *mut libc::c_void);
15541 +         tcc_free(sm_table as *mut libc::c_void);
15542 +         tcc_free(strsec as *mut libc::c_void);
15543 +         tcc_free(shdr as *mut libc::c_void);
15544 +         return ret;
15545 +     }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:15566:15
      |
15566 |         ret = ret << 8 as libc::c_int | *fresh58 as libc::c_ulonglong;
      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ret << 8 as libc::c_int) | *fresh58 as libc::c_ulonglong`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:16801:22
      |
16801 |                       ((1 as libc::c_int) << 1 as libc::c_int
      |  ______________________^
16802 | |                         | (1 as libc::c_int) << 2 as libc::c_int) as libc::c_char,
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:16804:22
      |
16804 |                       ((1 as libc::c_int) << 1 as libc::c_int
      |  ______________________^
16805 | |                         | (1 as libc::c_int) << 0 as libc::c_int) as libc::c_char,
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:16810:28
      |
16810 |                           & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________________^
16811 | |                             | (1 as libc::c_int) << 0 as libc::c_int
16812 | |                             | (1 as libc::c_int) << 2 as libc::c_int))
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
16810 ~                         & ((1 as libc::c_int) << 1 as libc::c_int
16811 ~                             | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:16810:28
      |
16810 |                           & ((1 as libc::c_int) << 1 as libc::c_int
      |  ____________________________^
16811 | |                             | (1 as libc::c_int) << 0 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:16884:13
      |
16884 | /             if copy == 2 as libc::c_int as libc::c_uint {
16885 | |                 if !(n == 0 as libc::c_int as libc::c_uint) {
16886 | |                     f = k;
16887 | |                     if f >= 0 as libc::c_int as libc::c_uint {
...     |
16942 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
16884 ~             if copy == 2 as libc::c_int as libc::c_uint && !(n == 0 as libc::c_int as libc::c_uint) {
16885 +                 f = k;
16886 +                 if f >= 0 as libc::c_int as libc::c_uint {
16887 +                     if f != 0 as libc::c_int as libc::c_uint {
16888 +                         current_block_50 = 12209867499936983673;
16889 +                     } else {
16890 +                         f = 3 as libc::c_int as libc::c_uint;
16891 +                         current_block_50 = 1356832168064818221;
16892 +                     }
16893 +                 } else {
16894 +                     current_block_50 = 1356832168064818221;
16895 +                 }
16896 +                 match current_block_50 {
16897 +                     12209867499936983673 => {}
16898 +                     _ => {
16899 +                         n = (n as Elf64_Addr)
16900 +                             .wrapping_add(
16901 +                                 (n as Elf64_Addr).wrapping_neg()
16902 +                                     & (sysconf(_SC_PAGESIZE as libc::c_int)
16903 +                                         - 1 as libc::c_int as libc::c_long) as Elf64_Addr,
16904 +                             ) as libc::c_uint;
16905 +                         if (*s1).verbose as libc::c_int == 2 as libc::c_int {
16906 +                             printf(
16907 +                                 b"protect         %3s %p  len %05x\n\0" as *const u8
16908 +                                     as *const libc::c_char,
16909 +                                 &*(b"rx\0ro\0rw\0rwx\0" as *const u8 as *const libc::c_char)
16910 +                                     .offset(
16911 +                                         f.wrapping_mul(3 as libc::c_int as libc::c_uint) as isize,
16912 +                                     ) as *const libc::c_char,
16913 +                                 addr as *mut libc::c_void,
16914 +                                 n,
16915 +                             );
16916 +                         }
16917 +                         if protect_pages(
16918 +                             addr as *mut libc::c_void,
16919 +                             n as libc::c_ulong,
16920 +                             f as libc::c_int,
16921 +                         ) < 0 as libc::c_int
16922 +                         {
16923 +                             tcc_enter_state(s1);
16924 +                             return (Some(
16925 +                                 _tcc_error_noabort
16926 +                                     as unsafe extern "C" fn(
16927 +                                         *const libc::c_char,
16928 +                                         ...
16929 +                                     ) -> libc::c_int,
16930 +                             ))
16931 +                                 .expect(
16932 +                                     "non-null function pointer",
16933 +                                 )(
16934 +                                 b"mprotect failed (did you mean to configure --with-selinux?)\0"
16935 +                                     as *const u8 as *const libc::c_char,
16936 +                             );
16937 +                         }
16938 +                     }
16939 +                 }
16940 +             }
      |

warning: this `else { if .. }` block can be collapsed
     --> src/tcc.rs:17553:32
      |
17553 |                           } else {
      |  ________________________________^
17554 | |                             if ln.offset(7 as libc::c_int as isize) < end {
17555 | |                                 ln = ln.offset(8 as libc::c_int as isize);
17556 | |                                 read64le(ln.offset(-(8 as libc::c_int as isize)));
17557 | |                             } else {};
17558 | |                         };
      | |_________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
      |
17553 ~                         } else if ln.offset(7 as libc::c_int as isize) < end {
17554 +                             ln = ln.offset(8 as libc::c_int as isize);
17555 +                             read64le(ln.offset(-(8 as libc::c_int as isize)));
17556 ~                         } else {};
      |

warning: this `else` branch is empty
     --> src/tcc.rs:17552:31
      |
17552 | ...                   } else {};
      |                         ^^^^^^^ help: you can remove it
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: this `else` branch is empty
     --> src/tcc.rs:17557:31
      |
17557 | ...                   } else {};
      |                         ^^^^^^^ help: you can remove it
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18431:19
      |
18431 |     if ll != 0 || r >> 3 as libc::c_int & 1 as libc::c_int != 0
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18432:12
      |
18432 |         || r2 >> 3 as libc::c_int & 1 as libc::c_int != 0
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18435:14
      |
18435 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |  ______________^
18436 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
18437 | |                 | ll << 3 as libc::c_int) as libc::c_uint,
      | |________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18435 ~             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
18436 ~                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int | (ll << 3 as libc::c_int)) as libc::c_uint,
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18435:14
      |
18435 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |  ______________^
18436 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
      | |_________________________________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int | ((r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18435:36
      |
18435 |             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
      |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18436:20
      |
18436 |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18710:20
      |
18710 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
18711 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
18712 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18710 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18711 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18710:21
      |
18710 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18717:24
      |
18717 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
18718 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
18719 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint))
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18717 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18718 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
18719 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18717:25
      |
18717 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18726:20
      |
18726 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
18727 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
18728 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18726 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18727 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18726:21
      |
18726 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18735:20
      |
18735 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
18736 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
18737 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18735 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18736 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18735:21
      |
18735 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18744:20
      |
18744 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
18745 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
18746 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18744 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18745 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18744:21
      |
18744 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18753:20
      |
18753 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
18754 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
18755 | |                     | 0x80 as libc::c_int as libc::c_uint))
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
18753 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
18754 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18753:21
      |
18753 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/tcc.rs:18778:13
      |
18778 |             'c_32725: {
      |             ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18872:25
      |
18872 |                     + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:18890:21
      |
18890 |                 + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/tcc.rs:18922:17
      |
18922 |                 'c_23764: {
      |                 ^^^^^^^^

warning: unused label
     --> src/tcc.rs:18956:21
      |
18956 |                     'c_23709: {
      |                     ^^^^^^^^

warning: unused label
     --> src/tcc.rs:18994:13
      |
18994 |             'c_23606: {
      |             ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19283:5
      |
19283 |     'c_42430: {
      |     ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/tcc.rs:19317:18
      |
19317 |         *psize = size + 7 as libc::c_int & !(7 as libc::c_int);
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & !(7 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:19318:19
      |
19318 |         *palign = align + 7 as libc::c_int & !(7 as libc::c_int);
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(align + 7 as libc::c_int) & !(7 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/tcc.rs:19579:17
      |
19579 |                 'c_43010: {
      |                 ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19623:17
      |
19623 |                 'c_42931: {
      |                 ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19672:5
      |
19672 |     'c_42793: {
      |     ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19700:5
      |
19700 |     'c_42757: {
      |     ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19757:21
      |
19757 |                     'c_42090: {
      |                     ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19822:5
      |
19822 |     'c_41835: {
      |     ^^^^^^^^

warning: unused label
     --> src/tcc.rs:19850:5
      |
19850 |     'c_41798: {
      |     ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/tcc.rs:19961:32
      |
19961 |             seen_stack_size = (seen_stack_size + align - 1 as libc::c_int & -align)
      |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(seen_stack_size + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20043:28
      |
20043 |                     addr = addr + align - 1 as libc::c_int & -align;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20049:24
      |
20049 |                 addr = addr + align - 1 as libc::c_int & -align;
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20072:28
      |
20072 |                     addr = addr + align - 1 as libc::c_int & -align;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20104:9
      |
20104 |     v = -loc + 15 as libc::c_int & -(16 as libc::c_int);
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 15 as libc::c_int) & -(16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20280:19
      |
20280 |             opc = 0xc0 as libc::c_int | opc << 3 as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20314:26
      |
20314 |                         (0xc0 as libc::c_int | opc << 3 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20321:25
      |
20321 |                         0xc0 as libc::c_int | opc << 3 as libc::c_int
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:20330:33
      |
20330 |                 orex(ll, r, fr, opc << 3 as libc::c_int | 0x1 as libc::c_int);
      |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(opc << 3 as libc::c_int) | 0x1 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
     --> src/tcc.rs:20543:9
      |
20543 |         'c_38059: {
      |         ^^^^^^^^

warning: unused label
     --> src/tcc.rs:20603:9
      |
20603 |         'c_37881: {
      |         ^^^^^^^^

warning: unused label
     --> src/tcc.rs:20648:9
      |
20648 |         'c_37787: {
      |         ^^^^^^^^

warning: unused label
     --> src/tcc.rs:20710:9
      |
20710 |         'c_37661: {
      |         ^^^^^^^^

warning: unused label
     --> src/tcc.rs:20741:13
      |
20741 |             'c_37617: {
      |             ^^^^^^^^

warning: unused label
     --> src/tcc.rs:20963:9
      |
20963 |         'c_40936: {
      |         ^^^^^^^^

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21010:9
      |
21010 | /         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
21011 | |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
21012 | |                 << 16 as libc::c_int,
      | |____________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
21010 ~         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int | (((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
21011 ~                 << 16 as libc::c_int),
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21010:9
      |
21010 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0b60f as libc::c_int | ((sz << 3 as libc::c_int | xl) << 8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21010:36
      |
21010 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
      |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(sz << 3 as libc::c_int) | xl`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21011:16
      |
21011 |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((r & 7 as libc::c_int) << 3 as libc::c_int) | r & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21603:43
      |
21603 |             cstr_ccat(cstr, '0' as i32 + (c >> 6 as libc::c_int & 7 as libc::c_int));
      |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 6 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:21604:43
      |
21604 |             cstr_ccat(cstr, '0' as i32 + (c >> 3 as libc::c_int & 7 as libc::c_int));
      |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 3 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:23234:36
      |
23234 | ...                   || val & val - 1 as libc::c_int != 0 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `val & (val - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:23567:17
      |
23567 | /                 if is_bof != 0 {
23568 | |                     if c != 0 {
23569 | |                         (*file).ifndef_macro = tok;
23570 | |                     }
23571 | |                 }
      | |_________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
23567 ~                 if is_bof != 0 && c != 0 {
23568 +                     (*file).ifndef_macro = tok;
23569 +                 }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:25616:37
      |
25616 |   ...                   n = n << 6 as libc::c_int
      |  ___________________________^
25617 | | ...                       | *p.offset(i_0 as isize) as libc::c_int
25618 | | ...                           & 0x3f as libc::c_int;
      | |___________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
25616 ~                                 n = (n << 6 as libc::c_int) | *p.offset(i_0 as isize) as libc::c_int
25617 ~                                         & 0x3f as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:25737:21
      |
25737 |                   c = c << 8 as libc::c_int
      |  _____________________^
25738 | |                     | *(tokcstr.data).offset(i as isize) as libc::c_int;
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `(c << 8 as libc::c_int) | *(tokcstr.data).offset(i as isize) as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:25764:34
      |
25764 |         *bn.offset(i as isize) = v << shift | or_val as libc::c_uint;
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v << shift) | or_val as libc::c_uint`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:25765:19
      |
25765 |         or_val = (v >> 32 as libc::c_int - shift) as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v >> (32 as libc::c_int - shift)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:26077:25
      |
26077 | /                         if lcount
26078 | |                             <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int
26079 | |                         {
26080 | |                             if n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
...     |
26084 | |                         }
      | |_________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
26077 ~                         if lcount <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int && n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
26078 +                             lcount = (8 as libc::c_int == 4 as libc::c_int)
26079 +                                 as libc::c_int + 1 as libc::c_int;
26080 +                         }
      |

warning: this `if` statement can be collapsed
     --> src/tcc.rs:27700:17
      |
27700 | /                 if t == '\\' as i32 {
27701 | |                     if parse_flags & 0x20 as libc::c_int == 0 {
27702 | |                         _tcc_error(
27703 | |                             b"stray '\\' in program\0" as *const u8
...     |
27707 | |                 }
      | |_________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
27700 ~                 if t == '\\' as i32 && parse_flags & 0x20 as libc::c_int == 0 {
27701 +                     _tcc_error(
27702 +                         b"stray '\\' in program\0" as *const u8
27703 +                             as *const libc::c_char,
27704 +                     );
27705 +                 }
      |

warning: this `if` statement can be collapsed
     --> src/tcc.rs:27717:12
      |
27717 |       } else if t == 0xce as libc::c_int {
      |  ____________^
27718 | |         if parse_flags & 0x40 as libc::c_int != 0 {
27719 | |             parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
27720 | |         }
27721 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
27717 ~     } else if t == 0xce as libc::c_int && parse_flags & 0x40 as libc::c_int != 0 {
27718 +         parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
27719 +     }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28564:20
      |
28564 |       debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
      |  ____________________^
28565 | |         1 as libc::c_int
28566 | |     } else {
28567 | |         0 as libc::c_int
28568 | |     }) | ((*s1).test_coverage as libc::c_int) << 1 as libc::c_int) as libc::c_char;
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
28564 ~     debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
28565 +         1 as libc::c_int
28566 +     } else {
28567 +         0 as libc::c_int
28568 ~     }) | (((*s1).test_coverage as libc::c_int) << 1 as libc::c_int)) as libc::c_char;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28669:24
      |
28669 |                       | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ________________________^
28670 | |                         | (2 as libc::c_int) << 20 as libc::c_int))
      | |_________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28669:24
      |
28669 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28671:20
      |
28671 |                   == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ____________________^
28672 | |                     | (2 as libc::c_int) << 20 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28671:20
      |
28671 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28869:12
      |
28869 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
28870 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
28871 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
28869 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
28870 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:28869:13
      |
28869 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29439:16
      |
29439 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29440:12
      |
29440 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29451:16
      |
29451 |               t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ________________^
29452 | |                 | (2 as libc::c_int) << 20 as libc::c_int,
      | |_________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29451:16
      |
29451 |             t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29531:16
      |
29531 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
29532 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
29533 | |                 | 0x80 as libc::c_int as libc::c_uint)
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
29531 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
29532 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29531:17
      |
29531 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29546:16
      |
29546 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29547:12
      |
29547 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:29575:9
      |
29575 | /         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 {
29576 | |             if ((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0
29577 | |                 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0
...     |
29581 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
29575 ~         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 && (((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0) {
29576 +             static_proto |= 0x8000 as libc::c_int;
29577 +         }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:29912:19
      |
29912 |             loc = loc - size & -align;
      |                   ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:30106:9
      |
30106 | /         if !((*s).v == 0
30107 | |             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int)
30108 | |         {
30109 | |             if (*s).type_0.t & 0x40 as libc::c_int != 0
...     |
30128 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
30106 ~         if !((*s).v == 0
30107 +             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int) && ((*s).type_0.t & 0x40 as libc::c_int != 0
30108 +                 || (*s).type_0.t & 0xf as libc::c_int == 7 as libc::c_int || ((*s).a).addrtaken() as libc::c_int != 0) {
30109 +             let mut align: libc::c_int = 0;
30110 +             let mut size: libc::c_int = type_size(&mut (*s).type_0, &mut align);
30111 +             let mut bounds_ptr: *mut Elf64_Addr = section_ptr_add(
30112 +                 (*tcc_state).lbounds_section,
30113 +                 (2 as libc::c_int as libc::c_ulong)
30114 +                     .wrapping_mul(
30115 +                         ::core::mem::size_of::<Elf64_Addr>() as libc::c_ulong,
30116 +                     ),
30117 +             ) as *mut Elf64_Addr;
30118 +             *bounds_ptr
30119 +                 .offset(
30120 +                     0 as libc::c_int as isize,
30121 +                 ) = (*s).c2rust_unnamed.c2rust_unnamed.c as Elf64_Addr;
30122 +             *bounds_ptr.offset(1 as libc::c_int as isize) = size as Elf64_Addr;
30123 +         }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30315:19
      |
30315 |         bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30316:20
      |
30316 |           bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ____________________^
30317 | |             & 0x3f as libc::c_int;
      | |_________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30316:20
      |
30316 |         bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30321:17
      |
30321 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  _________________^
30322 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
30323 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
30321 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
30322 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30321:18
      |
30321 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30520:14
      |
30520 |     return ((a ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int)
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:30521:11
      |
30521 |         < b ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int) as libc::c_int;
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `b ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:34821:20
      |
34821 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
34822 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
34823 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34821 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
34822 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:34821:21
      |
34821 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:34882:20
      |
34882 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
34883 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
34884 | |                     | 0x80 as libc::c_int as libc::c_uint
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
34882 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
34883 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:34882:21
      |
34882 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:34886:21
      |
34886 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35025:20
      |
35025 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
35026 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35027 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35025 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35026 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35025:21
      |
35025 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35202:12
      |
35202 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
35203 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35204 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35202 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35203 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35202:13
      |
35202 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35208:16
      |
35208 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
35209 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35210 | |                 | 0x80 as libc::c_int as libc::c_uint)
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35208 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35209 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35208:17
      |
35208 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35217:12
      |
35217 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
35218 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35219 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35217 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35218 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35217:13
      |
35217 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35227:16
      |
35227 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
35228 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35229 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35227 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35228 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35227:17
      |
35227 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35233:16
      |
35233 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________^
35234 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35235 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35233 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35234 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35233:17
      |
35233 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35726:12
      |
35726 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
35727 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
35728 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
35726 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
35727 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:35726:13
      |
35726 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36073:12
      |
36073 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________^
36074 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
36075 | |             | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36073 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
36074 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36073:13
      |
36073 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36238:44
      |
36238 |   ...                   & (((1 as libc::c_uint)
      |  __________________________^
36239 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
36240 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
36241 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36238 ~                                         & ((((1 as libc::c_uint)
36239 +                                             << 6 as libc::c_int + 6 as libc::c_int)
36240 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
36241 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36238:45
      |
36238 |   ...                   & (((1 as libc::c_uint)
      |  ___________________________^
36239 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36245:48
      |
36245 |   ...                   & (((1 as libc::c_uint)
      |  __________________________^
36246 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
36247 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
36248 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36245 ~                                             & ((((1 as libc::c_uint)
36246 +                                                 << 6 as libc::c_int + 6 as libc::c_int)
36247 +                                                 .wrapping_sub(1 as libc::c_int as libc::c_uint)
36248 ~                                                 << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36245:49
      |
36245 |   ...                   & (((1 as libc::c_uint)
      |  ___________________________^
36246 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36378:19
      |
36378 |         bit_pos = ft >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36379:20
      |
36379 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36379:20
      |
36379 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ft >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36383:17
      |
36383 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  _________________^
36384 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
36385 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36383 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
36384 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36383:18
      |
36383 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36466:24
      |
36466 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
36467 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
36468 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)))
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
36466 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
36467 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
36468 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36466:25
      |
36466 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36700:32
      |
36700 | ...                   || n & n - 1 as libc::c_int != 0 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36713:28
      |
36713 |                           != (1 as libc::c_int)
      |  ____________________________^
36714 | |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36928:24
      |
36928 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
36929 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36928:24
      |
36928 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36935:13
      |
36935 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*f).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36962:16
      |
36962 |             == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36965:24
      |
36965 |                 size = bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36973:22
      |
36973 |                 c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:36975:17
      |
36975 |             c = c + align - 1 as libc::c_int & -align;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37003:29
      |
37003 |                           c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |  _____________________________^
37004 | |                             - 1 as libc::c_int & -align;
      | |_______________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
37003 ~                         c = (c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
37004 ~                             - 1 as libc::c_int) & -align;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37003:34
      |
37003 |                         c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37029:25
      |
37029 |                     c = c + align - 1 as libc::c_int & -align;
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37044:22
      |
37044 |                   .t = (*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int)
      |  ______________________^
37045 | |                 | bit_pos << 20 as libc::c_int;
      | |______________________________________________^ help: consider parenthesizing your expression: `(*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37056:14
      |
37056 |         c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37059:9
      |
37059 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37074:9
      |
37074 |     c = c + a - 1 as libc::c_int & -a;
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + a - 1 as libc::c_int) & -a`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37093:24
      |
37093 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
37094 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37093:24
      |
37093 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37096:27
      |
37096 |                 bit_pos = (*f).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37108:30
      |
37108 |                         cx = px >> 3 as libc::c_int & -align;
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px >> 3 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37113:29
      |
37113 |                         s = px + bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px + bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37131:34
      |
37131 |   ...                   .t = (*f).type_0.t
      |  ____________________________^
37132 | | ...                   & !((0x3f as libc::c_int) << 20 as libc::c_int)
37133 | | ...                   | bit_pos << 20 as libc::c_int;
      | |____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
37131 ~                             .t = (*f).type_0.t
37132 ~                             & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37241:24
      |
37241 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
37242 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
37243 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
37241 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
37242 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
37243 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37241:25
      |
37241 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37304:22
      |
37304 |                   .t = 3 as libc::c_int | 0x2000 as libc::c_int
      |  ______________________^
37305 | |                 | (3 as libc::c_int) << 20 as libc::c_int;
      | |_________________________________________________________^ help: consider parenthesizing your expression: `3 as libc::c_int | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37308:26
      |
37308 |                       .t = bt | 0x2000 as libc::c_int
      |  __________________________^
37309 | |                     | (3 as libc::c_int) << 20 as libc::c_int;
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `bt | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37408:27
      |
37408 |             (*type_0).t = t.t | (2 as libc::c_int) << 20 as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `t.t | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:37441:37
      |
37441 | / ...                   if v_0 & 0x20000000 as libc::c_int == 0
37442 | | ...                       && v_0 & !(0x40000000 as libc::c_int)
37443 | | ...                           < 0x10000000 as libc::c_int
...     |
37450 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
37441 ~                                     if v_0 & 0x20000000 as libc::c_int == 0 && v_0 & !(0x40000000 as libc::c_int)
37442 +                                             < 0x10000000 as libc::c_int && (*tcc_state).ms_extensions as libc::c_int == 0 as libc::c_int {
37443 +                                         expect(b"identifier\0" as *const u8 as *const libc::c_char);
37444 +                                     }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37528:45
      |
37528 |   ...                   & !(((1 as libc::c_uint)
      |  ___________________________^
37529 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
37530 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
37531 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
37528 ~                                         & !((((1 as libc::c_uint)
37529 +                                             << 6 as libc::c_int + 6 as libc::c_int)
37530 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
37531 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37528:46
      |
37528 |   ...                   & !(((1 as libc::c_uint)
      |  ____________________________^
37529 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37533:44
      |
37533 | ...                   | (bit_size << 20 as libc::c_int + 6 as libc::c_int)
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `bit_size << (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37687:31
      |
37687 |                           n_0 = (1 as libc::c_int)
      |  _______________________________^
37688 | |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      | |__________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << ((ad1.a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37695:28
      |
37695 |                         || n_0 & n_0 - 1 as libc::c_int != 0 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n_0 & (n_0 - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:37768:21
      |
37768 |                     (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int,
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:37977:5
      |
37977 | /     if (*tcc_state).char_is_unsigned != 0 {
37978 | |         if t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
37979 | |             t |= 0x10 as libc::c_int;
37980 | |         }
37981 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
37977 ~     if (*tcc_state).char_is_unsigned != 0 && t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
37978 +         t |= 0x10 as libc::c_int;
37979 +     }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:38641:47
      |
38641 |                 if size > 8 as libc::c_int || size & size - 1 as libc::c_int != 0
      |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `size & (size - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:38981:33
      |
38981 |                           align = (1 as libc::c_int)
      |  _________________________________^
38982 | |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |___________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*s).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39345:28
      |
39345 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39346:24
      |
39346 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39384:24
      |
39384 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
39385 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
39386 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
39384 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
39385 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
39386 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39384:25
      |
39384 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39538:27
      |
39538 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39648:28
      |
39648 |                     size = size + regsize - 1 as libc::c_int & -regsize;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + regsize - 1 as libc::c_int) & -regsize`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:39652:27
      |
39652 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unnecessary parentheses around assigned value
     --> src/tcc.rs:39736:14
      |
39736 |         p2 = (if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
      |              ^
...
39740 |         });
      |          ^
      |
help: remove these parentheses
      |
39736 ~         p2 = if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
39737 |             prec[t as usize] as libc::c_int
39738 |         } else {
39739 |             0 as libc::c_int
39740 ~         };
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:40092:20
      |
40092 |                 if align & ret_align - 1 as libc::c_int != 0
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `align & (ret_align - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:40098:27
      |
40098 |                     loc = loc - size & -ret_align;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -ret_align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:40628:13
      |
40628 | /             if tok != ';' as i32 {
40629 | |                 if decl(0x34 as libc::c_int) == 0 {
40630 | |                     gexpr();
40631 | |                     vpop();
40632 | |                 }
40633 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
40628 ~             if tok != ';' as i32 && decl(0x34 as libc::c_int) == 0 {
40629 +                 gexpr();
40630 +                 vpop();
40631 +             }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41322:18
      |
41322 |         size = (((*type_0).t >> 20 as libc::c_int & 0x3f as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41323:16
      |
41323 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41323:16
      |
41323 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*type_0).t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41406:23
      |
41406 |             bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41407:24
      |
41407 |               bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
41408 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41407:24
      |
41407 |             bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41799:28
      |
41799 |                         == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41930:38
      |
41930 |           let mut speca: libc::c_int = (1 as libc::c_int)
      |  ______________________________________^
41931 | |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:41947:15
      |
41947 |         loc = loc - size & -align;
      |               ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:42202:13
      |
42202 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*sym).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:42431:20
      |
42431 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
42432 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
42433 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
42431 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
42432 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:42431:21
      |
42431 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:43278:9
      |
43278 |         0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:43688:24
      |
43688 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:43689:20
      |
43689 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:43837:44
      |
43837 |                 if n < 0 as libc::c_int || n & n - 1 as libc::c_int != 0 as libc::c_int {
      |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:43843:26
      |
43843 |                 offset = ind + n - 1 as libc::c_int & -n;
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ind + n - 1 as libc::c_int) & -n`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:44214:28
      |
44214 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:44215:24
      |
44215 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:44220:29
      |
44220 |                         & !(0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int)
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:44221:28
      |
44221 |                           | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |  ____________________________^
44222 | |                             | (2 as libc::c_int) << 20 as libc::c_int);
      | |_____________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:44221:28
      |
44221 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45269:20
      |
45269 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45270 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45271 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45272 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45269 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45270 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45271 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45269:20
      |
45269 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45270 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45271 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45269 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45270 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45269:20
      |
45269 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45270 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45343:32
      |
45343 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
45344 | |                     | (1 as libc::c_int) << OPT_REG8_LOW as libc::c_int) as uint32_t;
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG8_LOW as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45516:12
      |
45516 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
45517 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45519 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45520 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
45521 | |             | (1 as libc::c_int) << OPT_SSE as libc::c_int) as uint32_t != 0
      | |__________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45516 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45517 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45519 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45520 ~             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45516:12
      |
45516 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
45517 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45519 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45520 | |             | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |__________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45516 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45517 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45519 +             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45516:12
      |
45516 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
45517 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45519 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45516 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45517 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 +             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45516:12
      |
45516 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
45517 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45518 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45516 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45517 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45516:12
      |
45516 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
45517 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45598:20
      |
45598 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45599 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45600 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45601 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45602 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45598 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45599 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45600 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45601 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45598:20
      |
45598 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45599 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45600 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45601 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45598 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45599 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45600 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45598:20
      |
45598 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45599 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45600 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45598 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45599 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45598:20
      |
45598 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
45599 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45647 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
45648 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
45649 | |                 | (1 as libc::c_int) << OPT_CR as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45643 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45644 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45647 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
45648 +                 | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45647 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
45648 | |                 | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45643 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45644 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45647 +                 | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
45647 | |                 | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45643 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45644 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 +                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45646 | |                 | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45643 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45644 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 +                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45645 | |                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45643 ~             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45644 +                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45643:16
      |
45643 |               & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________^
45644 | |                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:45924:21
      |
45924 | /                     if !((*pa).nb_ops as libc::c_int != nb_ops) {
45925 | |                         if !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
45926 | |                             && ops[0 as libc::c_int as usize].type_0
45927 | |                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
...     |
45997 | |                     }
      | |_____________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
45924 ~                     if !((*pa).nb_ops as libc::c_int != nb_ops) && !((*pa).opcode as libc::c_int == 0xb0 as libc::c_int
45925 +                             && ops[0 as libc::c_int as usize].type_0
45926 +                                 != ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
45927 +                                     as uint32_t
45928 +                             && ops[1 as libc::c_int as usize].type_0
45929 +                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45930 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45931 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45932 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
45933 +                                     as uint32_t
45934 +                                 == ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
45935 +                                     as uint32_t
45936 +                             && (*pa).instr_type as libc::c_int & 0x100 as libc::c_int
45937 +                                 == 0) {
45938 +                         alltypes = 0 as libc::c_int;
45939 +                         i = 0 as libc::c_int;
45940 +                         loop {
45941 +                             if !(i < nb_ops) {
45942 +                                 break 's_124;
45943 +                             }
45944 +                             let mut op1_0: libc::c_int = 0;
45945 +                             let mut op2: libc::c_int = 0;
45946 +                             op1_0 = (*pa).op_type[i as usize] as libc::c_int;
45947 +                             op2 = op1_0 & 0x1f as libc::c_int;
45948 +                             match op2 {
45949 +                                 24 => {
45950 +                                     v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
45951 +                                         | (1 as libc::c_int) << OPT_IM16 as libc::c_int
45952 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
45953 +                                 }
45954 +                                 25 => {
45955 +                                     v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
45956 +                                         | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45957 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45958 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
45959 +                                 }
45960 +                                 26 => {
45961 +                                     v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
45962 +                                         | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45963 +                                         | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
45964 +                                 }
45965 +                                 27 => {
45966 +                                     v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
45967 +                                         | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
45968 +                                 }
45969 +                                 28 => {
45970 +                                     v = (1 as libc::c_int) << OPT_MMX as libc::c_int
45971 +                                         | (1 as libc::c_int) << OPT_SSE as libc::c_int;
45972 +                                 }
45973 +                                 29 | 30 => {
45974 +                                     v = (1 as libc::c_int) << OPT_ADDR as libc::c_int;
45975 +                                 }
45976 +                                 _ => {
45977 +                                     v = (1 as libc::c_int) << op2;
45978 +                                 }
45979 +                             }
45980 +                             if op1_0 & OPT_EA as libc::c_int != 0 {
45981 +                                 v |= 0x40000000 as libc::c_int;
45982 +                             }
45983 +                             op_type[i as usize] = v;
45984 +                             if ops[i as usize].type_0 & v as uint32_t
45985 +                                 == 0 as libc::c_int as uint32_t
45986 +                             {
45987 +                                 break;
45988 +                             }
45989 +                             alltypes = (alltypes as uint32_t | ops[i as usize].type_0)
45990 +                                 as libc::c_int;
45991 +                             i += 1;
45992 +                             i;
45993 +                         }
45994 +                     }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45930:36
      |
45930 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
45931 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45932 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45933 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45930 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45931 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45932 ~                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45930:36
      |
45930 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
45931 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45932 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45930 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
45931 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45930:36
      |
45930 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
45931 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45952:45
      |
45952 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ___________________________^
45953 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
45954 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45952 ~                                         v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
45953 ~                                             | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45952:45
      |
45952 |   ...                   v = (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ___________________________^
45953 | | ...                       | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45957:45
      |
45957 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
45958 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45959 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45960 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45957 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
45958 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45959 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45957:45
      |
45957 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
45958 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
45959 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45957 ~                                         v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
45958 +                                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45957:45
      |
45957 |   ...                   v = (1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ___________________________^
45958 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45963:45
      |
45963 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
      |  ___________________________^
45964 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
45965 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int;
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
45963 ~                                         v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
45964 ~                                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45963:45
      |
45963 |   ...                   v = (1 as libc::c_int) << OPT_REG16 as libc::c_int
      |  ___________________________^
45964 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG16 as libc::c_int) | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45968:45
      |
45968 |   ...                   v = (1 as libc::c_int) << OPT_IM16 as libc::c_int
      |  ___________________________^
45969 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int;
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM16 as libc::c_int) | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:45972:45
      |
45972 |   ...                   v = (1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ___________________________^
45973 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int;
      | |________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46064:28
      |
46064 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46065 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46066 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46067 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46064 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46065 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46066 ~                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46064:28
      |
46064 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46065 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46066 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46064 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46065 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46064:28
      |
46064 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46065 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46070:32
      |
46070 |   ...                   & ((1 as libc::c_int) << OPT_CL as libc::c_int
      |  __________________________^
46071 | | ...                       | (1 as libc::c_int) << OPT_DX as libc::c_int) == 0
      | |_______________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_CL as libc::c_int) | ((1 as libc::c_int) << OPT_DX as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46074:32
      |
46074 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46075 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46076 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46077 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int)
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46074 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46075 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46076 ~                                 | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int))
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46074:32
      |
46074 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46075 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46076 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46074 ~                             & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46075 +                                 | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46074:32
      |
46074 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46075 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46087:32
      |
46087 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
      |  __________________________^
46088 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
46089 | | ...                       | (1 as libc::c_int) << OPT_IM32 as libc::c_int) as uint32_t
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46087 ~                             & ((1 as libc::c_int) << OPT_SEG as libc::c_int
46088 ~                                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)) as uint32_t
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46087:32
      |
46087 |   ...                   & ((1 as libc::c_int) << OPT_SEG as libc::c_int
      |  __________________________^
46088 | | ...                       | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |_________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_SEG as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46111:20
      |
46111 |                 || alltypes & (1 as libc::c_int) << OPT_REG64 as libc::c_int != 0
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `alltypes & ((1 as libc::c_int) << OPT_REG64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46168:28
      |
46168 |                           & ((1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ____________________________^
46169 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int)
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46170:28
      |
46170 |                           == (1 as libc::c_int) << OPT_MMX as libc::c_int
      |  ____________________________^
46171 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_MMX as libc::c_int) | ((1 as libc::c_int) << OPT_SSE as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46202:21
      |
46202 |                   v = (v & !(0xff as libc::c_int)) << 8 as libc::c_int
      |  _____________________^
46203 | |                     | 0xf00 as libc::c_int | v & 0xff as libc::c_int;
      | |__________________________________________^ help: consider parenthesizing your expression: `((v & !(0xff as libc::c_int)) << 8 as libc::c_int) | 0xf00 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46257:32
      |
46257 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
46258 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46259 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46260 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t;
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46257 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46258 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46259 ~                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t;
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46257:32
      |
46257 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
46258 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46259 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46257 ~                     .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46258 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46257:32
      |
46257 |                       .type_0 = ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ________________________________^
46258 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46297 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
46298 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
46299 | | ...                       | (1 as libc::c_int) << OPT_INDIR as libc::c_int) != 0
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46293 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46294 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46297 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int
46298 ~                                     | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_INDIR as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46297 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
46298 | | ...                       | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46293 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46294 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46297 +                                     | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46297 | | ...                       | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46293 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46294 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 +                                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46296 | | ...                       | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46293 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46294 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 +                                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46295 | | ...                       | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46293 ~                                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46294 +                                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46293:36
      |
46293 |   ...                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  __________________________^
46294 | | ...                       | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |__________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
46323 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
46324 | |                             | (1 as libc::c_int) << OPT_SEG as libc::c_int) != 0
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
46321 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
46322 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int
46323 ~                             | (1 as libc::c_int) << OPT_DB as libc::c_int | ((1 as libc::c_int) << OPT_SEG as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
46322 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
46323 | |                             | (1 as libc::c_int) << OPT_DB as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
46321 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int
46322 +                             | (1 as libc::c_int) << OPT_TR as libc::c_int | ((1 as libc::c_int) << OPT_DB as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
...     |
46321 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
46322 | |                             | (1 as libc::c_int) << OPT_TR as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
46321 +                             | (1 as libc::c_int) << OPT_CR as libc::c_int | ((1 as libc::c_int) << OPT_TR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
46321 | |                             | (1 as libc::c_int) << OPT_CR as libc::c_int
      | |_________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 +                             | (1 as libc::c_int) << OPT_SSE as libc::c_int | ((1 as libc::c_int) << OPT_CR as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
46320 | |                             | (1 as libc::c_int) << OPT_SSE as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 +                             | (1 as libc::c_int) << OPT_MMX as libc::c_int | ((1 as libc::c_int) << OPT_SSE as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46319 | |                             | (1 as libc::c_int) << OPT_MMX as libc::c_int
      | |__________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 +                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_MMX as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46318 | |                             | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 +                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46317 | |                             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46315 ~                         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46316 +                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46315:28
      |
46315 |                           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________________^
46316 | |                             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46351:20
      |
46351 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
46352 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46353 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46354 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
46355 | |                     | (1 as libc::c_int) << OPT_ST as libc::c_int) != 0
      | |_________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46351 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46352 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46353 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46354 ~                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int | ((1 as libc::c_int) << OPT_ST as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46351:20
      |
46351 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
46352 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46353 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46354 | |                     | (1 as libc::c_int) << OPT_REG64 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46351 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46352 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46353 +                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46351:20
      |
46351 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
46352 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46353 | |                     | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46351 ~                 & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46352 +                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46351:20
      |
46351 |                   & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________________^
46352 | |                     | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46423:11
      |
46423 |     op1 = v >> 8 as libc::c_int & 0xff as libc::c_int;
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v >> 8 as libc::c_int) & 0xff as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46442:15
      |
46442 |         reg = (*pa).instr_type as libc::c_int >> 13 as libc::c_int & 7 as libc::c_int;
      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*pa).instr_type as libc::c_int >> 13 as libc::c_int) & 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46455:16
      |
46455 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46456 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46458 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
46459 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
46460 | |                 | (1 as libc::c_int) << OPT_ADDR as libc::c_int) != 0
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46455 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
46456 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46458 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
46459 ~                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_ADDR as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46455:16
      |
46455 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46456 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46458 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
46459 | |                 | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46455 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
46456 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46458 +                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46455:16
      |
46455 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46456 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46458 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46455 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
46456 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 +                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46455:16
      |
46455 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46456 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46457 | |                 | (1 as libc::c_int) << OPT_IM32 as libc::c_int
      | |_______________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46455 ~             & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
46456 +                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46455:16
      |
46455 |               & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46456 | |                 | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |_______________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46462:16
      |
46462 |               if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ________________^
46463 | |                 | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |_______________________________________________________________^ help: consider parenthesizing your expression: `v | (1 as libc::c_int) << OPT_IM8 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46462:16
      |
46462 |             if v | (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v | ((1 as libc::c_int) << OPT_IM8 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46464:20
      |
46464 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46465 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46466 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
46467 | |                     | (1 as libc::c_int) << OPT_IM64 as libc::c_int
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46464 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
46465 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46466 +                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int | ((1 as libc::c_int) << OPT_IM64 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46464:20
      |
46464 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46465 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
46466 | |                     | (1 as libc::c_int) << OPT_IM32 as libc::c_int
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46464 ~                 == (1 as libc::c_int) << OPT_IM8 as libc::c_int
46465 +                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int | ((1 as libc::c_int) << OPT_IM32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46464:20
      |
46464 |                   == (1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46465 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46474:24
      |
46474 |                     || v & (1 as libc::c_int) << OPT_IM64 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46483:20
      |
46483 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46484 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
46485 | |                     | (1 as libc::c_int) << OPT_IM16 as libc::c_int) != 0
      | |___________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46483 ~                 & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
46484 ~                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int | ((1 as libc::c_int) << OPT_IM16 as libc::c_int)) != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46483:20
      |
46483 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46484 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46491:20
      |
46491 |                   & ((1 as libc::c_int) << OPT_IM8 as libc::c_int
      |  ____________________^
46492 | |                     | (1 as libc::c_int) << OPT_IM8S as libc::c_int) != 0
      | |___________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_IM8 as libc::c_int) | ((1 as libc::c_int) << OPT_IM8S as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46495:23
      |
46495 |             } else if v & (1 as libc::c_int) << OPT_IM16 as libc::c_int != 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46497:23
      |
46497 |             } else if v & (1 as libc::c_int) << OPT_IM64 as libc::c_int != 0 {
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v & ((1 as libc::c_int) << OPT_IM64 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46597:12
      |
46597 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
46598 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46599 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
46600 | |             | (1 as libc::c_int) << OPT_REG64 as libc::c_int) as uint32_t != 0
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46597 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46598 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46599 ~             | (1 as libc::c_int) << OPT_REG32 as libc::c_int | ((1 as libc::c_int) << OPT_REG64 as libc::c_int)) as uint32_t != 0
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46597:12
      |
46597 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
46598 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
46599 | |             | (1 as libc::c_int) << OPT_REG32 as libc::c_int
      | |____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
46597 ~         & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
46598 +             | (1 as libc::c_int) << OPT_REG16 as libc::c_int | ((1 as libc::c_int) << OPT_REG32 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:46597:12
      |
46597 |           & ((1 as libc::c_int) << OPT_REG8 as libc::c_int
      |  ____________^
46598 | |             | (1 as libc::c_int) << OPT_REG16 as libc::c_int
      | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << OPT_REG8 as libc::c_int) | ((1 as libc::c_int) << OPT_REG16 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tcc.rs:47820:41
      |
47820 | / ...                   if (*shdr).sh_type == 3 as libc::c_int as Elf64_Word {
47821 | | ...                       if strcmp(
47822 | | ...                           shstr.offset((*shdr).sh_name as isize),
47823 | | ...                           b".strtab\0" as *const u8 as *const libc::c_char,
...     |
47828 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
47820 ~                                         if (*shdr).sh_type == 3 as libc::c_int as Elf64_Word && strcmp(
47821 +                                                 shstr.offset((*shdr).sh_name as isize),
47822 +                                                 b".strtab\0" as *const u8 as *const libc::c_char,
47823 +                                             ) == 0 {
47824 +                                             strtab = buf.offset((*shdr).sh_offset as isize);
47825 +                                         }
      |

warning: this `if` statement can be collapsed
     --> src/tcc.rs:48589:16
      |
48589 |           } else if !((*s).output_type == 5 as libc::c_int) {
      |  ________________^
48590 | |             if 0 as libc::c_int == ret {
48591 | |                 if (*s).output_type == 1 as libc::c_int {
48592 | |                     ret = tcc_run(s, argc, argv);
...     |
48605 | |         }
      | |_________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
48589 ~         } else if !((*s).output_type == 5 as libc::c_int) && 0 as libc::c_int == ret {
48590 +             if (*s).output_type == 1 as libc::c_int {
48591 +                 ret = tcc_run(s, argc, argv);
48592 +             } else {
48593 +                 if ((*s).outfile).is_null() {
48594 +                     (*s).outfile = default_outputfile(s, first_file);
48595 +                 }
48596 +                 if (*s).just_deps == 0 {
48597 +                     ret = tcc_output_file(s, (*s).outfile);
48598 +                 }
48599 +                 if ret == 0 && (*s).gen_deps as libc::c_int != 0 {
48600 +                     gen_makedeps(s, (*s).outfile, (*s).deps_outfile);
48601 +                 }
48602 +             }
48603 +         }
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48848:21
      |
48848 |                     0xc1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48853:30
      |
48853 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
48854 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48873:21
      |
48873 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48878:30
      |
48878 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
48879 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48898:21
      |
48898 |                     0xc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48903:30
      |
48903 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
48904 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48923:21
      |
48923 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48928:30
      |
48928 |                   instr_type: (0x60 as libc::c_int
      |  ______________________________^
48929 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x60 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48948:21
      |
48948 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48953:30
      |
48953 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48954 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48973:21
      |
48973 |                     0xa6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48978:30
      |
48978 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
48979 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:48998:21
      |
48998 |                     0x6c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49003:30
      |
49003 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49004 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49023:21
      |
49023 |                     0x6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49028:30
      |
49028 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
49029 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49048:21
      |
49048 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49053:30
      |
49053 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49054 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49073:21
      |
49073 |                     0xac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49078:30
      |
49078 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49079 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49098:21
      |
49098 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49103:30
      |
49103 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49104 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49123:21
      |
49123 |                     0xa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49128:30
      |
49128 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49129 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49148:21
      |
49148 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49153:30
      |
49153 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49154 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49173:21
      |
49173 |                     0xae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49178:30
      |
49178 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49179 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49198:21
      |
49198 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49203:30
      |
49203 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49204 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49223:21
      |
49223 |                     0xaa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xaa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49228:30
      |
49228 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49229 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49248:21
      |
49248 |                     0xfbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49253:30
      |
49253 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49254 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49277:21
      |
49277 |                     0xfbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49282:30
      |
49282 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49283 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49306:21
      |
49306 |                     0xfa3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49311:30
      |
49311 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49312 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49335:21
      |
49335 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49340:30
      |
49340 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49341 | |                     | (4 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49364:21
      |
49364 |                     0xfab as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfab as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49369:30
      |
49369 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49370 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49393:21
      |
49393 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49398:30
      |
49398 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49399 | |                     | (5 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49422:21
      |
49422 |                     0xfb3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49427:30
      |
49427 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49428 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49451:21
      |
49451 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49456:30
      |
49456 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49457 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49480:21
      |
49480 |                     0xfbb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49485:30
      |
49485 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49486 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49509:21
      |
49509 |                     0xfba as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfba as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49514:30
      |
49514 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49515 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49538:21
      |
49538 |                     0xf30fb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49543:30
      |
49543 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49544 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49567:21
      |
49567 |                     0xf30fbc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49572:30
      |
49572 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49573 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49596:21
      |
49596 |                     0xf30fbd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30fbd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49601:30
      |
49601 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49602 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49625:21
      |
49625 |                     0x480f07 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x480f07 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49630:30
      |
49630 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49649:21
      |
49649 |                     0x88 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x88 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49654:30
      |
49654 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49655 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49656 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49654 ~                 instr_type: (0x8 as libc::c_int
49655 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49679:21
      |
49679 |                     0x8a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49684:30
      |
49684 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49685 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49686 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49684 ~                 instr_type: (0x8 as libc::c_int
49685 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49709:21
      |
49709 |                     0xb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49714:30
      |
49714 |                   instr_type: (0x4 as libc::c_int
      |  ______________________________^
49715 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49716 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49714 ~                 instr_type: (0x4 as libc::c_int
49715 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49739:21
      |
49739 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49744:30
      |
49744 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49767:21
      |
49767 |                     0xb8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xb8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49772:30
      |
49772 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49795:21
      |
49795 |                     0xc6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49800:30
      |
49800 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
49801 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
49802 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
49800 ~                 instr_type: (0x8 as libc::c_int
49801 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49825:21
      |
49825 |                     0x8c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49830:30
      |
49830 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49831 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49854:21
      |
49854 |                     0x8e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49859:30
      |
49859 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49860 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49883:21
      |
49883 |                     0xf20 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf20 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49888:30
      |
49888 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49889 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49912:21
      |
49912 |                     0xf21 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf21 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49917:30
      |
49917 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49918 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49941:21
      |
49941 |                     0xf22 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf22 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49946:30
      |
49946 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49947 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49970:21
      |
49970 |                     0xf23 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf23 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49975:30
      |
49975 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
49976 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:49999:21
      |
49999 |                     0x660fbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50004:30
      |
50004 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50027:21
      |
50027 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50032:30
      |
50032 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50055:21
      |
50055 |                     0xfbe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50060:30
      |
50060 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50083:21
      |
50083 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50088:30
      |
50088 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50111:21
      |
50111 |                     0xfbf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfbf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50116:30
      |
50116 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50139:21
      |
50139 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50144:30
      |
50144 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50167:21
      |
50167 |                     0xfb6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50172:30
      |
50172 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50173 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50196:21
      |
50196 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50201:30
      |
50201 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50224:21
      |
50224 |                     0xfb7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50229:30
      |
50229 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50252:21
      |
50252 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50257:30
      |
50257 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50276:21
      |
50276 |                     0x6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50281:30
      |
50281 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50300:21
      |
50300 |                     0x666a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x666a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50305:30
      |
50305 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50324:21
      |
50324 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50329:30
      |
50329 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50330 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50349:21
      |
50349 |                     0x50 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x50 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50354:30
      |
50354 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50355 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50374:21
      |
50374 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50379:30
      |
50379 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50380 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50403:21
      |
50403 |                     0x6668 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6668 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50408:30
      |
50408 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50427:21
      |
50427 |                     0x68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50432:30
      |
50432 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
50433 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50452:21
      |
50452 |                     0x6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50457:30
      |
50457 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
50458 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50477:21
      |
50477 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50482:30
      |
50482 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50483 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50502:21
      |
50502 |                     0x58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50507:30
      |
50507 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50508 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50527:21
      |
50527 |                     0x8f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50532:30
      |
50532 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50533 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50556:21
      |
50556 |                     0x7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50561:30
      |
50561 |                   instr_type: (0x1000 as libc::c_int
      |  ______________________________^
50562 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50581:21
      |
50581 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50586:30
      |
50586 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50587 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50610:21
      |
50610 |                     0x90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50615:30
      |
50615 |                   instr_type: (0x4 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50616 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50639:21
      |
50639 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50644:30
      |
50644 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50645 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50646 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50644 ~                 instr_type: (0x8 as libc::c_int
50645 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50669:21
      |
50669 |                     0x86 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x86 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50674:30
      |
50674 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
50675 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
50676 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
50674 ~                 instr_type: (0x8 as libc::c_int
50675 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50699:21
      |
50699 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50704:30
      |
50704 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50705 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50728:21
      |
50728 |                     0xe4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50733:30
      |
50733 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50734 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50753:21
      |
50753 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50758:30
      |
50758 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50759 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50782:21
      |
50782 |                     0xec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50787:30
      |
50787 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50788 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50807:21
      |
50807 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50812:30
      |
50812 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50813 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50836:21
      |
50836 |                     0xe6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50841:30
      |
50841 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50842 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50861:21
      |
50861 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50866:30
      |
50866 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50867 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50890:21
      |
50890 |                     0xee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50895:30
      |
50895 |                   instr_type: (0x1 as libc::c_int | 0x2 as libc::c_int
      |  ______________________________^
50896 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x2 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50915:21
      |
50915 |                     0x8d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x8d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50920:30
      |
50920 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
50921 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50944:21
      |
50944 |                     0xc4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50949:30
      |
50949 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50972:21
      |
50972 |                     0xc5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:50977:30
      |
50977 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51000:21
      |
51000 |                     0xfb2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51005:30
      |
51005 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51028:21
      |
51028 |                     0xfb4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51033:30
      |
51033 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51056:21
      |
51056 |                     0xfb5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51061:30
      |
51061 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51084:21
      |
51084 |                     0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51089:30
      |
51089 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51090 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51091 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51089 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
51090 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51114:21
      |
51114 |                     0x2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51119:30
      |
51119 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51120 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51121 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51119 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
51120 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51144:21
      |
51144 |                     0x4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51149:30
      |
51149 |                   instr_type: (0x30 as libc::c_int
      |  ______________________________^
51150 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51151 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51149 ~                 instr_type: (0x30 as libc::c_int
51150 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51174:21
      |
51174 |                     0x83 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x83 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51179:30
      |
51179 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51180 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51179 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
51180 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51203:21
      |
51203 |                     0x80 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x80 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51208:30
      |
51208 |                   instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
51209 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51210 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51208 ~                 instr_type: (0x30 as libc::c_int | 0x8 as libc::c_int
51209 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51233:21
      |
51233 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51238:30
      |
51238 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51239 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51240 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51238 ~                 instr_type: (0x8 as libc::c_int
51239 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51263:21
      |
51263 |                     0x84 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x84 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51268:30
      |
51268 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51269 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51270 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51268 ~                 instr_type: (0x8 as libc::c_int
51269 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51293:21
      |
51293 |                     0xa8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xa8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51298:30
      |
51298 |                   instr_type: (0x1 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51299 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x1 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51322:21
      |
51322 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51327:30
      |
51327 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51328 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51329 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51327 ~                 instr_type: (0x8 as libc::c_int
51328 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51352:21
      |
51352 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51357:30
      |
51357 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51358 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51359 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51357 ~                 instr_type: (0x8 as libc::c_int
51358 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51382:21
      |
51382 |                     0xfe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51387:30
      |
51387 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51388 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51389 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51387 ~                 instr_type: (0x8 as libc::c_int
51388 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((1 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51412:21
      |
51412 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51417:30
      |
51417 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51418 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51419 | |                     | (2 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51417 ~                 instr_type: (0x8 as libc::c_int
51418 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((2 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51442:21
      |
51442 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51447:30
      |
51447 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51448 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51449 | |                     | (3 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51447 ~                 instr_type: (0x8 as libc::c_int
51448 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((3 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51472:21
      |
51472 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51477:30
      |
51477 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51478 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51479 | |                     | (4 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51477 ~                 instr_type: (0x8 as libc::c_int
51478 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((4 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51502:21
      |
51502 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51507:30
      |
51507 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51508 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51509 | |                     | (5 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51507 ~                 instr_type: (0x8 as libc::c_int
51508 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((5 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51532:21
      |
51532 |                     0xfaf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfaf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51537:30
      |
51537 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51538 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51561:21
      |
51561 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51566:30
      |
51566 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51567 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51590:21
      |
51590 |                     0x6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51595:30
      |
51595 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51596 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51619:21
      |
51619 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51624:30
      |
51624 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51625 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51648:21
      |
51648 |                     0x69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51653:30
      |
51653 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51654 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51677:21
      |
51677 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51682:30
      |
51682 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51683 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51684 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51682 ~                 instr_type: (0x8 as libc::c_int
51683 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51707:21
      |
51707 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51712:30
      |
51712 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51713 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51714 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51712 ~                 instr_type: (0x8 as libc::c_int
51713 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((6 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51737:21
      |
51737 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51742:30
      |
51742 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51743 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51744 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51742 ~                 instr_type: (0x8 as libc::c_int
51743 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51767:21
      |
51767 |                     0xf6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51772:30
      |
51772 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51773 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
51774 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51772 ~                 instr_type: (0x8 as libc::c_int
51773 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((7 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51797:21
      |
51797 |                     0xc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51802:30
      |
51802 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51803 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
51804 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51802 ~                 instr_type: (0x8 as libc::c_int
51803 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51827:21
      |
51827 |                     0xd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51832:30
      |
51832 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51833 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
51834 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51832 ~                 instr_type: (0x8 as libc::c_int
51833 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51857:21
      |
51857 |                     0xd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51862:30
      |
51862 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
51863 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int
51864 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
51862 ~                 instr_type: (0x8 as libc::c_int
51863 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | 0x20 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51887:21
      |
51887 |                     0xfa4 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa4 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51892:30
      |
51892 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51893 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51916:21
      |
51916 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51921:30
      |
51921 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51922 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51945:21
      |
51945 |                     0xfa5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfa5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51950:30
      |
51950 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51951 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51974:21
      |
51974 |                     0xfac as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfac as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:51979:30
      |
51979 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
51980 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52003:21
      |
52003 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52008:30
      |
52008 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
52009 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52032:21
      |
52032 |                     0xfad as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfad as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52037:30
      |
52037 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
52038 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52061:21
      |
52061 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52066:30
      |
52066 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52085:21
      |
52085 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52090:30
      |
52090 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52109:21
      |
52109 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52114:30
      |
52114 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52133:21
      |
52133 |                     0xe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52138:30
      |
52138 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52157:21
      |
52157 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52162:30
      |
52162 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52181:21
      |
52181 |                     0xeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52186:30
      |
52186 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52205:21
      |
52205 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52210:30
      |
52210 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52229:21
      |
52229 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52234:30
      |
52234 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52253:21
      |
52253 |                     0x66ff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x66ff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52258:30
      |
52258 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52277:21
      |
52277 |                     0xff as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52282:30
      |
52282 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52301:21
      |
52301 |                     0xcd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xcd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52306:30
      |
52306 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52325:21
      |
52325 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52330:30
      |
52330 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
52331 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52354:21
      |
52354 |                     0xf90 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf90 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52359:30
      |
52359 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
52360 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52383:21
      |
52383 |                     0xc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52388:30
      |
52388 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52411:21
      |
52411 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52416:30
      |
52416 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52435:21
      |
52435 |                     0xc2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xc2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52440:30
      |
52440 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52459:21
      |
52459 |                     0xca as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xca as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52464:30
      |
52464 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52483:21
      |
52483 |                     0x70 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x70 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52488:30
      |
52488 |                   instr_type: (0x50 as libc::c_int
      |  ______________________________^
52489 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x50 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52508:21
      |
52508 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52513:30
      |
52513 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52532:21
      |
52532 |                     0xe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52537:30
      |
52537 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52556:21
      |
52556 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52561:30
      |
52561 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52580:21
      |
52580 |                     0xe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52585:30
      |
52585 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52604:21
      |
52604 |                     0xe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52609:30
      |
52609 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52628:21
      |
52628 |                     0x67e3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x67e3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52633:30
      |
52633 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52652:21
      |
52652 |                     0xd8d9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8d9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52657:30
      |
52657 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52676:21
      |
52676 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52681:30
      |
52681 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52682 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52701:21
      |
52701 |                     0xd8c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52706:30
      |
52706 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52707 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52730:21
      |
52730 |                     0xdcc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52735:30
      |
52735 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52736 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52759:21
      |
52759 |                     0xdcc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdcc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52764:30
      |
52764 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52765 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52788:21
      |
52788 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52793:30
      |
52793 |                   instr_type: (0x40 as libc::c_int
      |  ______________________________^
52794 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52813:21
      |
52813 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52818:30
      |
52818 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52819 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52838:21
      |
52838 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52843:30
      |
52843 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52844 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52867:21
      |
52867 |                     0xdec0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52872:30
      |
52872 |                   instr_type: (0x40 as libc::c_int | 0x4 as libc::c_int
      |  ______________________________^
52873 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52896:21
      |
52896 |                     0xdec1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdec1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52901:30
      |
52901 |                   instr_type: (0x40 as libc::c_int
      |  ______________________________^
52902 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52921:21
      |
52921 |                     0xd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52926:30
      |
52926 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
52927 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52946:21
      |
52946 |                     0xda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52951:30
      |
52951 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
52952 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52971:21
      |
52971 |                     0xdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52976:30
      |
52976 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
52977 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:52996:21
      |
52996 |                     0xde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53001:30
      |
53001 |                   instr_type: (0x40 as libc::c_int | 0x8 as libc::c_int
      |  ______________________________^
53002 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | 0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53021:21
      |
53021 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53026:30
      |
53026 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53045:21
      |
53045 |                     0xd9c0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53050:30
      |
53050 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53069:21
      |
53069 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53074:30
      |
53074 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53093:21
      |
53093 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53098:30
      |
53098 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53117:21
      |
53117 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53122:30
      |
53122 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53141:21
      |
53141 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53146:30
      |
53146 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53165:21
      |
53165 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53170:30
      |
53170 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53189:21
      |
53189 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53194:30
      |
53194 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53213:21
      |
53213 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53218:30
      |
53218 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53237:21
      |
53237 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53242:30
      |
53242 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53261:21
      |
53261 |                     0xddd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53266:30
      |
53266 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53285:21
      |
53285 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53290:30
      |
53290 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53309:21
      |
53309 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53314:30
      |
53314 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53333:21
      |
53333 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53338:30
      |
53338 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53357:21
      |
53357 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53362:30
      |
53362 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53381:21
      |
53381 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53386:30
      |
53386 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53405:21
      |
53405 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53410:30
      |
53410 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53429:21
      |
53429 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53434:30
      |
53434 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53453:21
      |
53453 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53458:30
      |
53458 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53477:21
      |
53477 |                     0xddd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53482:30
      |
53482 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53501:21
      |
53501 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53506:30
      |
53506 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53525:21
      |
53525 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53530:30
      |
53530 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53549:21
      |
53549 |                     0xdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53554:30
      |
53554 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53573:21
      |
53573 |                     0xdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53578:30
      |
53578 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53597:21
      |
53597 |                     0xd9c8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9c8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53602:30
      |
53602 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53621:21
      |
53621 |                     0xdde0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53626:30
      |
53626 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53645:21
      |
53645 |                     0xdde8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdde8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53650:30
      |
53650 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53669:21
      |
53669 |                     0xdbe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53674:30
      |
53674 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
53675 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53694:21
      |
53694 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53699:30
      |
53699 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53718:21
      |
53718 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53723:30
      |
53723 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53742:21
      |
53742 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53747:30
      |
53747 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
53748 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53767:21
      |
53767 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53772:30
      |
53772 |                 instr_type: (0 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53791:21
      |
53791 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53796:30
      |
53796 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53815:21
      |
53815 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53820:30
      |
53820 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
53821 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53840:21
      |
53840 |                     0xdfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53845:30
      |
53845 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
53846 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53865:21
      |
53865 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53870:30
      |
53870 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
53871 | |                     | (7 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53890:21
      |
53890 |                     0xdbe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53895:30
      |
53895 |                   instr_type: (0x10 as libc::c_int
      |  ______________________________^
53896 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x10 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53915:21
      |
53915 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53920:30
      |
53920 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53939:21
      |
53939 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53944:30
      |
53944 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
53945 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53964:21
      |
53964 |                     0xd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53969:30
      |
53969 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53988:21
      |
53988 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:53993:30
      |
53993 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54012:21
      |
54012 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54017:30
      |
54017 |                   instr_type: (0x8 as libc::c_int | 0x10 as libc::c_int
      |  ______________________________^
54018 | |                     | (6 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x10 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54037:21
      |
54037 |                     0xdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54042:30
      |
54042 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54061:21
      |
54061 |                     0xddc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xddc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54066:30
      |
54066 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54085:21
      |
54085 |                     0xdfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54090:30
      |
54090 |                 instr_type: (0x4 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54109:21
      |
54109 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54114:30
      |
54114 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54133:21
      |
54133 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54138:30
      |
54138 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54157:21
      |
54157 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54162:30
      |
54162 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
54163 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54182:21
      |
54182 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54187:30
      |
54187 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
54188 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54207:21
      |
54207 |                     0x63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54212:30
      |
54212 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54235:21
      |
54235 |                     0xf02 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf02 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54240:30
      |
54240 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
54241 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54264:21
      |
54264 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54269:30
      |
54269 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54288:21
      |
54288 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54293:30
      |
54293 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54312:21
      |
54312 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54317:30
      |
54317 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54336:21
      |
54336 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54341:30
      |
54341 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54360:21
      |
54360 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54365:30
      |
54365 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54388:21
      |
54388 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54393:30
      |
54393 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54416:21
      |
54416 |                     0xf03 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf03 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54421:30
      |
54421 |                   instr_type: (0x8 as libc::c_int | 0x1000 as libc::c_int
      |  ______________________________^
54422 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54445:21
      |
54445 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54450:30
      |
54450 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54473:21
      |
54473 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54478:30
      |
54478 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54497:21
      |
54497 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54502:30
      |
54502 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54521:21
      |
54521 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54526:30
      |
54526 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54545:21
      |
54545 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54550:30
      |
54550 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54569:21
      |
54569 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54574:30
      |
54574 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54597:21
      |
54597 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54602:30
      |
54602 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54625:21
      |
54625 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54630:30
      |
54630 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54653:21
      |
54653 |                     0x660f00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660f00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54658:30
      |
54658 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54677:21
      |
54677 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54682:30
      |
54682 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
54683 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54702:21
      |
54702 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54707:30
      |
54707 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54730:21
      |
54730 |                     0xf00 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf00 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54735:30
      |
54735 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54758:21
      |
54758 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54763:30
      |
54763 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54782:21
      |
54782 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54787:30
      |
54787 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54806:21
      |
54806 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54811:30
      |
54811 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54830:21
      |
54830 |                     0xfc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54835:30
      |
54835 |                   instr_type: (0x4 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
54836 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x4 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54855:21
      |
54855 |                     0xfc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54860:30
      |
54860 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
54861 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
54862 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
54860 ~                 instr_type: (0x8 as libc::c_int
54861 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54885:21
      |
54885 |                     0xfb0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfb0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54890:30
      |
54890 |                   instr_type: (0x8 as libc::c_int
      |  ______________________________^
54891 | |                     | (0x1 as libc::c_int | 0x1000 as libc::c_int)
54892 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
54890 ~                 instr_type: (0x8 as libc::c_int
54891 +                     | (0x1 as libc::c_int | 0x1000 as libc::c_int) | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54915:21
      |
54915 |                     0xf01 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf01 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54920:30
      |
54920 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54939:21
      |
54939 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54944:30
      |
54944 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54963:21
      |
54963 |                     0xfc7 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc7 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54968:30
      |
54968 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
54969 | |                     | (1 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54988:21
      |
54988 |                     0xf40 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf40 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:54993:30
      |
54993 |                   instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
      |  ______________________________^
54994 | |                     | 0x1000 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
54993 ~                 instr_type: (0x8 as libc::c_int | 0x50 as libc::c_int
54994 +                     | 0x1000 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)
      |

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55017:21
      |
55017 |                     0xdac0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55022:30
      |
55022 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55045:21
      |
55045 |                     0xdac8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdac8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55050:30
      |
55050 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55073:21
      |
55073 |                     0xdad0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55078:30
      |
55078 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55101:21
      |
55101 |                     0xdad8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdad8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55106:30
      |
55106 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55129:21
      |
55129 |                     0xdbc0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55134:30
      |
55134 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55157:21
      |
55157 |                     0xdbc8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbc8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55162:30
      |
55162 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55185:21
      |
55185 |                     0xdbd0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55190:30
      |
55190 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55213:21
      |
55213 |                     0xdbd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55218:30
      |
55218 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55241:21
      |
55241 |                     0xdbe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55246:30
      |
55246 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55269:21
      |
55269 |                     0xdbf0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdbf0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55274:30
      |
55274 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55297:21
      |
55297 |                     0xdfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55302:30
      |
55302 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55325:21
      |
55325 |                     0xdff0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xdff0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55330:30
      |
55330 |                 instr_type: (0x4 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x4 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55353:21
      |
55353 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55358:30
      |
55358 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55381:21
      |
55381 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55386:30
      |
55386 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55409:21
      |
55409 |                     0xf6e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55414:30
      |
55414 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
55415 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55438:21
      |
55438 |                     0xf6f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55443:30
      |
55443 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55466:21
      |
55466 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55471:30
      |
55471 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55494:21
      |
55494 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55499:30
      |
55499 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55522:21
      |
55522 |                     0xf7f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55527:30
      |
55527 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55550:21
      |
55550 |                     0x660fd6 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0x660fd6 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55555:30
      |
55555 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55578:21
      |
55578 |                     0xf30f7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55583:30
      |
55583 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55606:21
      |
55606 |                     0xf7e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf7e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55611:30
      |
55611 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55634:21
      |
55634 |                     0xf6b as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6b as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55639:30
      |
55639 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55662:21
      |
55662 |                     0xf63 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf63 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55667:30
      |
55667 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55690:21
      |
55690 |                     0xf67 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf67 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55695:30
      |
55695 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55718:21
      |
55718 |                     0xffc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55723:30
      |
55723 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55746:21
      |
55746 |                     0xffd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55751:30
      |
55751 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55774:21
      |
55774 |                     0xffe as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffe as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55779:30
      |
55779 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55802:21
      |
55802 |                     0xfec as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfec as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55807:30
      |
55807 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55830:21
      |
55830 |                     0xfed as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfed as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55835:30
      |
55835 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55858:21
      |
55858 |                     0xfdc as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdc as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55863:30
      |
55863 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55886:21
      |
55886 |                     0xfdd as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdd as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55891:30
      |
55891 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55914:21
      |
55914 |                     0xfdb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55919:30
      |
55919 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55942:21
      |
55942 |                     0xfdf as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfdf as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55947:30
      |
55947 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55970:21
      |
55970 |                     0xf74 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf74 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55975:30
      |
55975 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:55998:21
      |
55998 |                     0xf75 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf75 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56003:30
      |
56003 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56026:21
      |
56026 |                     0xf76 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf76 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56031:30
      |
56031 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56054:21
      |
56054 |                     0xf64 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf64 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56059:30
      |
56059 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56082:21
      |
56082 |                     0xf65 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf65 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56087:30
      |
56087 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56110:21
      |
56110 |                     0xf66 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf66 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56115:30
      |
56115 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56138:21
      |
56138 |                     0xff5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56143:30
      |
56143 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56166:21
      |
56166 |                     0xfe5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56171:30
      |
56171 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56194:21
      |
56194 |                     0xfd5 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd5 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56199:30
      |
56199 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56222:21
      |
56222 |                     0xfeb as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfeb as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56227:30
      |
56227 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56250:21
      |
56250 |                     0xff1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56255:30
      |
56255 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56278:21
      |
56278 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56283:30
      |
56283 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56306:21
      |
56306 |                     0xff2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56311:30
      |
56311 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56334:21
      |
56334 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56339:30
      |
56339 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56362:21
      |
56362 |                     0xff3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56367:30
      |
56367 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56390:21
      |
56390 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56395:30
      |
56395 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56418:21
      |
56418 |                     0xfe1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56423:30
      |
56423 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56446:21
      |
56446 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56451:30
      |
56451 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56474:21
      |
56474 |                     0xfe2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56479:30
      |
56479 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56502:21
      |
56502 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56507:30
      |
56507 |                 instr_type: (0x8 as libc::c_int | (4 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((4 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56530:21
      |
56530 |                     0xfd1 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd1 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56535:30
      |
56535 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56558:21
      |
56558 |                     0xf71 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf71 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56563:30
      |
56563 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56586:21
      |
56586 |                     0xfd2 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd2 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56591:30
      |
56591 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56614:21
      |
56614 |                     0xf72 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf72 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56619:30
      |
56619 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56642:21
      |
56642 |                     0xfd3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56647:30
      |
56647 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56670:21
      |
56670 |                     0xf73 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf73 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56675:30
      |
56675 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56698:21
      |
56698 |                     0xff8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56703:30
      |
56703 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56726:21
      |
56726 |                     0xff9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xff9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56731:30
      |
56731 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56754:21
      |
56754 |                     0xffa as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xffa as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56759:30
      |
56759 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56782:21
      |
56782 |                     0xfe8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56787:30
      |
56787 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56810:21
      |
56810 |                     0xfe9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56815:30
      |
56815 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56838:21
      |
56838 |                     0xfd8 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd8 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56843:30
      |
56843 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56866:21
      |
56866 |                     0xfd9 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfd9 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56871:30
      |
56871 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56894:21
      |
56894 |                     0xf68 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf68 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56899:30
      |
56899 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56922:21
      |
56922 |                     0xf69 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf69 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56927:30
      |
56927 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56950:21
      |
56950 |                     0xf6a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf6a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56955:30
      |
56955 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56978:21
      |
56978 |                     0xf60 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf60 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:56983:30
      |
56983 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57006:21
      |
57006 |                     0xf61 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf61 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57011:30
      |
57011 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57034:21
      |
57034 |                     0xf62 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf62 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57039:30
      |
57039 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57062:21
      |
57062 |                     0xfef as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfef as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57067:30
      |
57067 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57090:21
      |
57090 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57095:30
      |
57095 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57114:21
      |
57114 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57119:30
      |
57119 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57138:21
      |
57138 |                     0xf10 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf10 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57143:30
      |
57143 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57166:21
      |
57166 |                     0xf11 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf11 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57171:30
      |
57171 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57194:21
      |
57194 |                     0xf28 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf28 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57199:30
      |
57199 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57222:21
      |
57222 |                     0xf29 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf29 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57227:30
      |
57227 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57250:21
      |
57250 |                     0xf16 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf16 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57255:30
      |
57255 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57278:21
      |
57278 |                     0xf17 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf17 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57283:30
      |
57283 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57306:21
      |
57306 |                     0xf58 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf58 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57311:30
      |
57311 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57334:21
      |
57334 |                     0xf2a as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2a as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57339:30
      |
57339 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57362:21
      |
57362 |                     0xf2d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57367:30
      |
57367 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57390:21
      |
57390 |                     0xf2c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf2c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57395:30
      |
57395 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57418:21
      |
57418 |                     0xf5e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57423:30
      |
57423 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57446:21
      |
57446 |                     0xf5f as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5f as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57451:30
      |
57451 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57474:21
      |
57474 |                     0xf5d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57479:30
      |
57479 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57502:21
      |
57502 |                     0xf59 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf59 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57507:30
      |
57507 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57530:21
      |
57530 |                     0xfe0 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe0 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57535:30
      |
57535 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57558:21
      |
57558 |                     0xfe3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfe3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57563:30
      |
57563 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57586:21
      |
57586 |                     0xfee as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfee as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57591:30
      |
57591 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57614:21
      |
57614 |                     0xfde as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfde as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57619:30
      |
57619 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57642:21
      |
57642 |                     0xfea as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfea as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57647:30
      |
57647 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57670:21
      |
57670 |                     0xfda as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfda as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57675:30
      |
57675 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57698:21
      |
57698 |                     0xf53 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf53 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57703:30
      |
57703 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57726:21
      |
57726 |                     0xf52 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf52 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57731:30
      |
57731 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57754:21
      |
57754 |                     0xf51 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf51 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57759:30
      |
57759 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57782:21
      |
57782 |                     0xf5c as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf5c as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57787:30
      |
57787 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57810:21
      |
57810 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57815:30
      |
57815 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57838:21
      |
57838 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57843:30
      |
57843 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57866:21
      |
57866 |                     0xfc3 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfc3 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57871:30
      |
57871 |                   instr_type: (0x8 as libc::c_int | 0x200 as libc::c_int
      |  ______________________________^
57872 | |                     | (0 as libc::c_int) << 13 as libc::c_int
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `0x8 as libc::c_int | 0x200 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57895:21
      |
57895 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57900:30
      |
57900 |                 instr_type: (0x8 as libc::c_int | (0 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((0 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57919:21
      |
57919 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57924:30
      |
57924 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57943:21
      |
57943 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57948:30
      |
57948 |                 instr_type: (0x8 as libc::c_int | (2 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((2 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57967:21
      |
57967 |                     0xf18 as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf18 as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57972:30
      |
57972 |                 instr_type: (0x8 as libc::c_int | (3 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((3 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57991:21
      |
57991 |                     0xf0d as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf0d as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:57996:30
      |
57996 |                 instr_type: (0x8 as libc::c_int | (1 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((1 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58015:21
      |
58015 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58020:30
      |
58020 |                 instr_type: (0x8 as libc::c_int | (5 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((5 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58039:21
      |
58039 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58044:30
      |
58044 |                 instr_type: (0x8 as libc::c_int | (6 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((6 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58063:21
      |
58063 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58068:30
      |
58068 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58087:21
      |
58087 |                     0xfae as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xfae as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58092:30
      |
58092 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58111:21
      |
58111 |                     0xf30f1e as libc::c_int >> 8 as libc::c_int & !(0xff as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(0xf30f1e as libc::c_int >> 8 as libc::c_int) & !(0xff as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tcc.rs:58116:30
      |
58116 |                 instr_type: (0x8 as libc::c_int | (7 as libc::c_int) << 13 as libc::c_int
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0x8 as libc::c_int | ((7 as libc::c_int) << 13 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
   --> src/tccasm.rs:145:10
    |
145 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccasm.rs:146:10
    |
146 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tccasm.rs:147:10
    |
147 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccasm.rs:148:10
    |
148 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccasm.rs:149:10
    |
149 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccasm.rs:150:10
    |
150 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
   --> src/tccasm.rs:151:10
    |
151 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccasm.rs:152:10
    |
152 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
   --> src/tccasm.rs:153:10
    |
153 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccasm.rs:192:10
    |
192 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccasm.rs:194:10
    |
194 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccasm.rs:202:10
    |
202 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccasm.rs:406:10
    |
406 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccasm.rs:407:10
    |
407 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccasm.rs:415:10
    |
415 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccasm.rs:416:10
    |
416 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccasm.rs:556:10
    |
556 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/tccasm.rs:573:10
    |
573 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccasm.rs:574:10
    |
574 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tccasm.rs:575:10
    |
575 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tccasm.rs:576:10
    |
576 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `tcc_token` should have an upper camel case name
   --> src/tccasm.rs:671:10
    |
671 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:1811:9
     |
1811 |         0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2227:24
     |
2227 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2228:20
     |
2228 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2376:44
     |
2376 |                 if n < 0 as libc::c_int || n & n - 1 as libc::c_int != 0 as libc::c_int {
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2382:26
     |
2382 |                 offset = ind + n - 1 as libc::c_int & -n;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ind + n - 1 as libc::c_int) & -n`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2753:28
     |
2753 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2754:24
     |
2754 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2759:29
     |
2759 |                         & !(0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int)
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2760:28
     |
2760 |                           | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |  ____________________________^
2761 | |                             | (2 as libc::c_int) << 20 as libc::c_int);
     | |_____________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccasm.rs:2760:28
     |
2760 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
   --> src/tccdbg.rs:110:10
    |
110 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccdbg.rs:111:10
    |
111 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tccdbg.rs:112:10
    |
112 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
   --> src/tccdbg.rs:113:10
    |
113 | pub type __int32_t = libc::c_int;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccdbg.rs:114:10
    |
114 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccdbg.rs:115:10
    |
115 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccdbg.rs:116:10
    |
116 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
   --> src/tccdbg.rs:117:10
    |
117 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccdbg.rs:118:10
    |
118 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int32_t` should have an upper camel case name
   --> src/tccdbg.rs:119:10
    |
119 | pub type int32_t = __int32_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
   --> src/tccdbg.rs:120:10
    |
120 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/tccdbg.rs:126:10
    |
126 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccdbg.rs:162:10
    |
162 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccdbg.rs:164:10
    |
164 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccdbg.rs:172:10
    |
172 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccdbg.rs:376:10
    |
376 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccdbg.rs:377:10
    |
377 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccdbg.rs:385:10
    |
385 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccdbg.rs:386:10
    |
386 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccdbg.rs:629:10
    |
629 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/tccdbg.rs:646:10
    |
646 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccdbg.rs:647:10
    |
647 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__stab_debug_code` should have an upper camel case name
   --> src/tccdbg.rs:648:10
    |
648 | pub type __stab_debug_code = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `StabDebugCode`

warning: type `C2RustUnnamed_8` should have an upper camel case name
   --> src/tccdbg.rs:692:10
    |
692 | pub type C2RustUnnamed_8 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed8`

warning: type `C2RustUnnamed_9` should have an upper camel case name
   --> src/tccdbg.rs:701:10
    |
701 | pub type C2RustUnnamed_9 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed9`

warning: type `C2RustUnnamed_10` should have an upper camel case name
   --> src/tccdbg.rs:783:10
    |
783 | pub type C2RustUnnamed_10 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed10`

warning: type `C2RustUnnamed_11` should have an upper camel case name
   --> src/tccdbg.rs:961:10
    |
961 | pub type C2RustUnnamed_11 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed11`

warning: type `C2RustUnnamed_12` should have an upper camel case name
    --> src/tccdbg.rs:1009:10
     |
1009 | pub type C2RustUnnamed_12 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed12`

warning: type `C2RustUnnamed_13` should have an upper camel case name
    --> src/tccdbg.rs:1190:10
     |
1190 | pub type C2RustUnnamed_13 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed13`

warning: type `C2RustUnnamed_14` should have an upper camel case name
    --> src/tccdbg.rs:1212:10
     |
1212 | pub type C2RustUnnamed_14 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed14`

warning: type `C2RustUnnamed_15` should have an upper camel case name
    --> src/tccdbg.rs:1253:10
     |
1253 | pub type C2RustUnnamed_15 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed15`

warning: type `C2RustUnnamed_16` should have an upper camel case name
    --> src/tccdbg.rs:1261:10
     |
1261 | pub type C2RustUnnamed_16 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed16`

warning: type `C2RustUnnamed_17` should have an upper camel case name
    --> src/tccdbg.rs:1274:10
     |
1274 | pub type C2RustUnnamed_17 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed17`

warning: type `C2RustUnnamed_18` should have an upper camel case name
    --> src/tccdbg.rs:1283:10
     |
1283 | pub type C2RustUnnamed_18 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed18`

warning: type `C2RustUnnamed_19` should have an upper camel case name
    --> src/tccdbg.rs:1318:10
     |
1318 | pub type C2RustUnnamed_19 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed19`

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1410:13
     |
1410 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1411 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1412 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1410 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1411 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1423:14
     |
1423 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1427:12
     |
1427 |       return read16le(p) as uint32_t
     |  ____________^
1428 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1429 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1427 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1428 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1442:12
     |
1442 |       return read32le(p) as uint64_t
     |  ____________^
1443 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
1444 | |             << 32 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1442 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
1443 ~             << 32 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1473:19
     |
1473 |         retval |= (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1505:19
     |
1505 |           retval = (retval as uint64_t
     |  ___________________^
1506 | |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     | |______________________________________________________________________________^ help: consider parenthesizing your expression: `retval as uint64_t | ((byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1506:15
     |
1506 |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1512:27
     |
1512 |                   retval = (retval as libc::c_longlong
     |  ___________________________^
1513 | |                     | -(1 as libc::c_longlong)
1514 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1512 ~                 retval = (retval as libc::c_longlong | (-(1 as libc::c_longlong)
1513 ~                         << (i + 1 as libc::c_int) * 7 as libc::c_int)) as int64_t;
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:1513:23
     |
1513 |                       | -(1 as libc::c_longlong)
     |  _______________________^
1514 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `-(1 as libc::c_longlong) << ((i + 1 as libc::c_int) * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:2194:16
     |
2194 |               |= (1 as libc::c_int) << 4 as libc::c_int
     |  ________________^
2195 | |                 | (1 as libc::c_int) << 5 as libc::c_int;
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 4 as libc::c_int) | ((1 as libc::c_int) << 5 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:2569:33
     |
2569 |             as *mut uint8_t) = (byte as libc::c_int | 0x80 as libc::c_int * more)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:2612:14
     |
2612 |             (byte as libc::c_int | 0x80 as libc::c_int * more) as libc::c_uchar,
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `byte as libc::c_int | (0x80 as libc::c_int * more)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `else` branch is empty
    --> src/tccdbg.rs:2897:31
     |
2897 | ...                   } else {};
     |                         ^^^^^^^ help: you can remove it
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:3409:20
     |
3409 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
3410 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
3411 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3409 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
3410 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:3409:21
     |
3409 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:3413:21
     |
3413 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4246:24
     |
4246 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________________^
4247 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
4248 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint
     | |__________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4246 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4247 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
4248 +                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4246:25
     |
4246 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4250:25
     |
4250 |                     == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4282:28
     |
4282 |                         + ((*t).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4283:28
     |
4283 |                       size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |  ____________________________^
4284 | |                         & 0x3f as libc::c_int;
     | |_____________________________________________^ help: consider parenthesizing your expression: `((*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4283:28
     |
4283 |                     size = (*t).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*t).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4315:12
     |
4315 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
4316 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4317 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4315 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4316 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4315:13
     |
4315 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4378:17
     |
4378 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
4379 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4380 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4378 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4379 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4378:18
     |
4378 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4512:20
     |
4512 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
4513 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4514 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4512 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4513 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4512:21
     |
4512 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4516:21
     |
4516 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4610:28
     |
4610 |                         + ((*e).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*e).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4611:49
     |
4611 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
4612 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4611 ~                     let mut size: libc::c_int = ((*e).type_0.t
4612 ~                         >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4611:49
     |
4611 |                       let mut size: libc::c_int = (*e).type_0.t
     |  _________________________________________________^
4612 | |                         >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
     | |_______________________________________________________________^ help: consider parenthesizing your expression: `(*e).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4664:12
     |
4664 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
4665 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4666 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4664 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4665 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4664:13
     |
4664 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4786:17
     |
4786 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
4787 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4788 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4786 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4787 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:4786:18
     |
4786 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:5825:14
     |
5825 |             ((*(*s1).dState).tcov_data.line << 8 as libc::c_int | 0xff as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*(*s1).dState).tcov_data.line << 8 as libc::c_int) | 0xff as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:5871:14
     |
5871 |               (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
     |  ______________^
5872 | |                 & 0xfffffffff as libc::c_ulonglong | nline << 36 as libc::c_int)
     | |_______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
5871 ~             (read64le(ptr as *mut libc::c_uchar) as libc::c_ulonglong
5872 ~                 & 0xfffffffff as libc::c_ulonglong | (nline << 36 as libc::c_int))
     |

warning: operator precedence can trip the unwary
    --> src/tccdbg.rs:5918:13
     |
5918 | /             (1 as libc::c_int) << 1 as libc::c_int
5919 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
   --> src/tccelf.rs:138:10
    |
138 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccelf.rs:139:10
    |
139 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tccelf.rs:140:10
    |
140 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
   --> src/tccelf.rs:141:10
    |
141 | pub type __int32_t = libc::c_int;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccelf.rs:142:10
    |
142 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccelf.rs:143:10
    |
143 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccelf.rs:144:10
    |
144 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
   --> src/tccelf.rs:145:10
    |
145 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccelf.rs:146:10
    |
146 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__ssize_t` should have an upper camel case name
   --> src/tccelf.rs:147:10
    |
147 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `ssize_t` should have an upper camel case name
   --> src/tccelf.rs:148:10
    |
148 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `int32_t` should have an upper camel case name
   --> src/tccelf.rs:149:10
    |
149 | pub type int32_t = __int32_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
   --> src/tccelf.rs:150:10
    |
150 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccelf.rs:189:10
    |
189 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccelf.rs:191:10
    |
191 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccelf.rs:199:10
    |
199 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccelf.rs:403:10
    |
403 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccelf.rs:404:10
    |
404 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccelf.rs:420:10
    |
420 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccelf.rs:421:10
    |
421 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccelf.rs:561:10
    |
561 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uintptr_t` should have an upper camel case name
   --> src/tccelf.rs:578:10
    |
578 | pub type uintptr_t = libc::c_ulong;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `UintptrT`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tccelf.rs:589:10
    |
589 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `uint16_t` should have an upper camel case name
   --> src/tccelf.rs:590:10
    |
590 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tccelf.rs:591:10
    |
591 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccelf.rs:592:10
    |
592 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Off` should have an upper camel case name
   --> src/tccelf.rs:605:10
    |
605 | pub type Elf64_Off = uint64_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Off`

warning: type `Elf64_Half` should have an upper camel case name
   --> src/tccelf.rs:660:10
    |
660 | pub type Elf64_Half = uint16_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Half`

warning: type `Elf32_Word` should have an upper camel case name
   --> src/tccelf.rs:661:10
    |
661 | pub type Elf32_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf32Word`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/tccelf.rs:756:10
    |
756 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:769:13
    |
769 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
770 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
771 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
769 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
770 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:782:14
    |
782 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:786:12
    |
786 |       return read16le(p) as uint32_t
    |  ____________^
787 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
788 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
786 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
787 ~             << 16 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:820:9
    |
820 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 2 as libc::c_int,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:827:9
    |
827 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/tccelf.rs:841:9
    |
841 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2060:33
     |
2060 |     while ndef >= bloom_size * ((1 as libc::c_int) << bloom_shift - 3 as libc::c_int) {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (bloom_shift - 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2233:24
     |
2233 |                       |= (1 as libc::c_int as Elf64_Addr)
     |  ________________________^
2234 | |                         << *hash.offset(cur as isize)
2235 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
2236 | |                         | (1 as libc::c_int as Elf64_Addr)
2237 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
2238 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2233 ~                     |= ((1 as libc::c_int as Elf64_Addr)
2234 +                         << *hash.offset(cur as isize)
2235 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word) | ((1 as libc::c_int as Elf64_Addr)
2236 +                             << (*hash.offset(cur as isize) >> bloom_shift)
2237 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2233:24
     |
2233 |                       |= (1 as libc::c_int as Elf64_Addr)
     |  ________________________^
2234 | |                         << *hash.offset(cur as isize)
2235 | |                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word
     | |_________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2233 ~                     |= (1 as libc::c_int as Elf64_Addr) << (*hash.offset(cur as isize)
2234 +                             % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word)
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2236:27
     |
2236 |                           | (1 as libc::c_int as Elf64_Addr)
     |  ___________________________^
2237 | |                             << (*hash.offset(cur as isize) >> bloom_shift)
2238 | |                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word;
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2236 ~                         | (1 as libc::c_int as Elf64_Addr) << ((*hash.offset(cur as isize) >> bloom_shift)
2237 ~                                 % (8 as libc::c_int * 8 as libc::c_int) as Elf32_Word);
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2431:8
     |
2431 |     if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2466:16
     |
2466 |             if (*sr).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*sr).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:2512:24
     |
2512 |                   } else if !((*s1).output_type != 4 as libc::c_int) {
     |  ________________________^
2513 | |                     if (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
2514 | |                         count += 1;
2515 | |                         count;
2516 | |                     }
2517 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2512 ~                 } else if !((*s1).output_type != 4 as libc::c_int) && (*get_sym_attr(s1, sym_index, 0 as libc::c_int)).dyn_index != 0 {
2513 +                     count += 1;
2514 +                     count;
2515 +                 }
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2532:9
     |
2532 |         (1 as libc::c_int) << 1 as libc::c_int | (1 as libc::c_int) << 0 as libc::c_int,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2573:17
     |
2573 | /                 (1 as libc::c_int) << 1 as libc::c_int
2574 | |                     | (1 as libc::c_int) << 2 as libc::c_int,
     | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:2679:13
     |
2679 | /             if !((*s).sh_type != 4 as libc::c_int) {
2680 | |                 if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
2681 | |                     let mut current_block_19: u64;
2682 | |                     rel = ((*s).data as *mut Elf64_Rela)
...    |
2852 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2679 ~             if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
2680 +                 let mut current_block_19: u64;
2681 +                 rel = ((*s).data as *mut Elf64_Rela)
2682 +                     .offset(0 as libc::c_int as isize);
2683 +                 while rel
2684 +                     < ((*s).data).offset((*s).data_offset as isize)
2685 +                         as *mut Elf64_Rela
2686 +                 {
2687 +                     type_0 = ((*rel).r_info
2688 +                         & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
2689 +                     gotplt_entry = gotplt_entry_type(type_0);
2690 +                     if gotplt_entry == -(1 as libc::c_int) {
2691 +                         tcc_enter_state(s1);
2692 +                         (Some(
2693 +                             _tcc_error_noabort
2694 +                                 as unsafe extern "C" fn(
2695 +                                     *const libc::c_char,
2696 +                                     ...
2697 +                                 ) -> libc::c_int,
2698 +                         ))
2699 +                             .expect(
2700 +                                 "non-null function pointer",
2701 +                             )(
2702 +                             b"Unknown relocation type for got: %d\0" as *const u8
2703 +                                 as *const libc::c_char,
2704 +                             type_0,
2705 +                         );
2706 +                     } else {
2707 +                         sym_index = ((*rel).r_info >> 32 as libc::c_int)
2708 +                             as libc::c_int;
2709 +                         sym = &mut *((*(*s1).c2rust_unnamed.symtab_section).data
2710 +                             as *mut Elf64_Sym)
2711 +                             .offset(sym_index as isize) as *mut Elf64_Sym;
2712 +                         if !(gotplt_entry == NO_GOTPLT_ENTRY as libc::c_int) {
2713 +                             if gotplt_entry == AUTO_GOTPLT_ENTRY as libc::c_int {
2714 +                                 if (*sym).st_shndx as libc::c_int == 0 as libc::c_int {
2715 +                                     let mut esym: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
2716 +                                     let mut dynindex: libc::c_int = 0;
2717 +                                     if 1 as libc::c_int == 0
2718 +                                         && (*s1).output_type & 4 as libc::c_int != 0
2719 +                                     {
2720 +                                         current_block_19 = 7351195479953500246;
2721 +                                     } else if !((*s1).dynsym).is_null() {
2722 +                                         dynindex = (*get_sym_attr(s1, sym_index, 0 as libc::c_int))
2723 +                                             .dyn_index;
2724 +                                         esym = ((*(*s1).dynsym).data as *mut Elf64_Sym)
2725 +                                             .offset(dynindex as isize);
2726 +                                         if dynindex != 0
2727 +                                             && ((*esym).st_info as libc::c_int & 0xf as libc::c_int
2728 +                                                 == 2 as libc::c_int
2729 +                                                 || (*esym).st_info as libc::c_int & 0xf as libc::c_int
2730 +                                                     == 0 as libc::c_int
2731 +                                                     && (*sym).st_info as libc::c_int & 0xf as libc::c_int
2732 +                                                         == 2 as libc::c_int)
2733 +                                         {
2734 +                                             current_block_19 = 16827425992766083582;
2735 +                                         } else {
2736 +                                             current_block_19 = 4068382217303356765;
2737 +                                         }
2738 +                                     } else {
2739 +                                         current_block_19 = 4068382217303356765;
2740 +                                     }
2741 +                                 } else if (*sym).st_shndx as libc::c_int
2742 +                                     == 0xfff1 as libc::c_int
2743 +                                 {
2744 +                                     if (*sym).st_value == 0 as libc::c_int as Elf64_Addr {
2745 +                                         current_block_19 = 7351195479953500246;
2746 +                                     } else if 8 as libc::c_int != 8 as libc::c_int {
2747 +                                         current_block_19 = 7351195479953500246;
2748 +                                     } else {
2749 +                                         current_block_19 = 4068382217303356765;
2750 +                                     }
2751 +                                 } else {
2752 +                                     current_block_19 = 7351195479953500246;
2753 +                                 }
2754 +                             } else {
2755 +                                 current_block_19 = 4068382217303356765;
2756 +                             }
2757 +                             match current_block_19 {
2758 +                                 7351195479953500246 => {}
2759 +                                 _ => {
2760 +                                     match current_block_19 {
2761 +                                         4068382217303356765 => {
2762 +                                             if (type_0 == 4 as libc::c_int
2763 +                                                 || type_0 == 2 as libc::c_int)
2764 +                                                 && (*sym).st_shndx as libc::c_int != 0 as libc::c_int
2765 +                                                 && ((*sym).st_other as libc::c_int & 0x3 as libc::c_int
2766 +                                                     != 0 as libc::c_int
2767 +                                                     || (*sym).st_info as libc::c_int >> 4 as libc::c_int
2768 +                                                         == 0 as libc::c_int
2769 +                                                     || (*s1).output_type & 2 as libc::c_int != 0)
2770 +                                             {
2771 +                                                 if pass != 0 as libc::c_int {
2772 +                                                     current_block_19 = 7351195479953500246;
2773 +                                                 } else {
2774 +                                                     (*rel)
2775 +                                                         .r_info = ((sym_index as Elf64_Xword) << 32 as libc::c_int)
2776 +                                                         .wrapping_add(2 as libc::c_int as Elf64_Xword);
2777 +                                                     current_block_19 = 7351195479953500246;
2778 +                                                 }
2779 +                                             } else {
2780 +                                                 reloc_type = code_reloc(type_0);
2781 +                                                 if reloc_type == -(1 as libc::c_int) {
2782 +                                                     tcc_enter_state(s1);
2783 +                                                     (Some(
2784 +                                                         _tcc_error_noabort
2785 +                                                             as unsafe extern "C" fn(
2786 +                                                                 *const libc::c_char,
2787 +                                                                 ...
2788 +                                                             ) -> libc::c_int,
2789 +                                                     ))
2790 +                                                         .expect(
2791 +                                                             "non-null function pointer",
2792 +                                                         )(
2793 +                                                         b"Unknown relocation type: %d\0" as *const u8
2794 +                                                             as *const libc::c_char,
2795 +                                                         type_0,
2796 +                                                     );
2797 +                                                     current_block_19 = 7351195479953500246;
2798 +                                                 } else if reloc_type != 0 as libc::c_int {
2799 +                                                     current_block_19 = 16827425992766083582;
2800 +                                                 } else if pass != 1 as libc::c_int {
2801 +                                                     current_block_19 = 7351195479953500246;
2802 +                                                 } else {
2803 +                                                     reloc_type = 6 as libc::c_int;
2804 +                                                     current_block_19 = 14832935472441733737;
2805 +                                                 }
2806 +                                             }
2807 +                                         }
2808 +                                         _ => {}
2809 +                                     }
2810 +                                     match current_block_19 {
2811 +                                         7351195479953500246 => {}
2812 +                                         _ => {
2813 +                                             match current_block_19 {
2814 +                                                 16827425992766083582 => {
2815 +                                                     if pass != 0 as libc::c_int {
2816 +                                                         current_block_19 = 7351195479953500246;
2817 +                                                     } else {
2818 +                                                         reloc_type = 7 as libc::c_int;
2819 +                                                         current_block_19 = 14832935472441733737;
2820 +                                                     }
2821 +                                                 }
2822 +                                                 _ => {}
2823 +                                             }
2824 +                                             match current_block_19 {
2825 +                                                 7351195479953500246 => {}
2826 +                                                 _ => {
2827 +                                                     if ((*s1).got).is_null() {
2828 +                                                         got_sym = build_got(s1);
2829 +                                                     }
2830 +                                                     if !(gotplt_entry == BUILD_GOT_ONLY as libc::c_int) {
2831 +                                                         attr = put_got_entry(s1, reloc_type, sym_index);
2832 +                                                         if reloc_type == 7 as libc::c_int {
2833 +                                                             (*rel)
2834 +                                                                 .r_info = (((*attr).plt_sym as Elf64_Xword)
2835 +                                                                 << 32 as libc::c_int)
2836 +                                                                 .wrapping_add(type_0 as Elf64_Xword);
2837 +                                                         }
2838 +                                                     }
2839 +                                                 }
2840 +                                             }
2841 +                                         }
2842 +                                     }
2843 +                                 }
2844 +                             }
2845 +                         }
2846 +                     }
2847 +                     rel = rel.offset(1);
2848 +                     rel;
2849 +                 }
2850 +             }
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:2906:23
     |
2906 |     if s.is_null() || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0 {
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3215:12
     |
3215 |         if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:3326:9
     |
3326 | /         if !((*s).sh_type != 4 as libc::c_int) {
3327 | |             if !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
3328 | |                 rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
3329 | |                 while rel
...    |
3342 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3326 ~         if !((*s).sh_type != 4 as libc::c_int) && !((*s).link != (*s1).c2rust_unnamed.symtab_section) {
3327 +             rel = ((*s).data as *mut Elf64_Rela).offset(0 as libc::c_int as isize);
3328 +             while rel
3329 +                 < ((*s).data).offset((*s).data_offset as isize) as *mut Elf64_Rela
3330 +             {
3331 +                 match (*rel).r_info & 0xffffffff as libc::c_uint as Elf64_Xword {
3332 +                     3 | 9 | 41 | 42 | 4 => {
3333 +                         fill_got_entry(s1, rel);
3334 +                     }
3335 +                     _ => {}
3336 +                 }
3337 +                 rel = rel.offset(1);
3338 +                 rel;
3339 +             }
3340 +         }
     |

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:3558:13
     |
3558 | /             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int {
3559 | |                 if (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int
3560 | |                 {
3561 | |                     tcc_enter_state(s1);
...    |
3574 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3558 ~             if (*esym).st_shndx as libc::c_int == 0 as libc::c_int && (*esym).st_info as libc::c_int >> 4 as libc::c_int != 2 as libc::c_int {
3559 +                 tcc_enter_state(s1);
3560 +                 (Some(
3561 +                     _tcc_warning
3562 +                         as unsafe extern "C" fn(*const libc::c_char, ...) -> (),
3563 +                 ))
3564 +                     .expect(
3565 +                         "non-null function pointer",
3566 +                     )(
3567 +                     b"undefined dynamic symbol '%s'\0" as *const u8
3568 +                         as *const libc::c_char,
3569 +                     name,
3570 +                 );
3571 +             }
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3624:16
     |
3624 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int == 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3627:20
     |
3627 |                   && (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
     |  ____________________^
3628 | |                     & (1 as libc::c_int) << 1 as libc::c_int != 0
     | |____________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3638:24
     |
3638 |                       if (**((*s1).sections).offset((*s).sh_info as isize)).sh_flags
     |  ________________________^
3639 | |                         & (1 as libc::c_int) << 2 as libc::c_int != 0
     | |________________________________________________________________^ help: consider parenthesizing your expression: `(**((*s1).sections).offset((*s).sh_info as isize)).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3645:19
     |
3645 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3674:19
     |
3674 |         } else if (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 {
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3676:16
     |
3676 |             if (*s).sh_flags & (1 as libc::c_int) << 0 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3679:16
     |
3679 |             if (*s).sh_flags & (1 as libc::c_int) << 10 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3715:19
     |
3715 |         } else if (*s).sh_flags & (1 as libc::c_int) << 2 as libc::c_int != 0 {
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3728:16
     |
3728 |             && (*(*s).reloc).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*(*s).reloc).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3779:20
     |
3779 |                   & ((1 as libc::c_int) << 1 as libc::c_int
     |  ____________________^
3780 | |                     | (1 as libc::c_int) << 0 as libc::c_int
3781 | |                     | (1 as libc::c_int) << 2 as libc::c_int
3782 | |                     | (1 as libc::c_int) << 10 as libc::c_int);
     | |_____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3779 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
3780 +                     | (1 as libc::c_int) << 0 as libc::c_int
3781 ~                     | (1 as libc::c_int) << 2 as libc::c_int | ((1 as libc::c_int) << 10 as libc::c_int));
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3779:20
     |
3779 |                   & ((1 as libc::c_int) << 1 as libc::c_int
     |  ____________________^
3780 | |                     | (1 as libc::c_int) << 0 as libc::c_int
3781 | |                     | (1 as libc::c_int) << 2 as libc::c_int
     | |____________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3779 ~                 & ((1 as libc::c_int) << 1 as libc::c_int
3780 +                     | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3779:20
     |
3779 |                   & ((1 as libc::c_int) << 1 as libc::c_int
     |  ____________________^
3780 | |                     | (1 as libc::c_int) << 0 as libc::c_int
     | |____________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3905:16
     |
3905 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 && n != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3921:16
     |
3921 |             if f & (1 as libc::c_int) << 8 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3926:20
     |
3926 |                 if f & (1 as libc::c_int) << 0 as libc::c_int != 0 {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3930:20
     |
3930 |                 if f & (1 as libc::c_int) << 2 as libc::c_int != 0 {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3934:20
     |
3934 |                 if f & (1 as libc::c_int) << 10 as libc::c_int != 0 {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 10 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:3948:16
     |
3948 |             if f & (1 as libc::c_int) << 4 as libc::c_int != 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `f & ((1 as libc::c_int) << 4 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:4331:16
     |
4331 |             && (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:4578:13
     |
4578 | /             (1 as libc::c_int) << 1 as libc::c_int
4579 | |                 | (1 as libc::c_int) << 0 as libc::c_int,
     | |________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:4739:16
     |
4739 |             || (*s).sh_flags & (1 as libc::c_int) << 1 as libc::c_int != 0 || is_obj != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*s).sh_flags & ((1 as libc::c_int) << 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:4769:23
     |
4769 |         file_offset = file_offset + 15 as libc::c_int & -(16 as libc::c_int);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(file_offset + 15 as libc::c_int) & -(16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:4854:12
     |
4854 |       } else if size >= 8 as libc::c_int {
     |  ____________^
4855 | |         if 0 as libc::c_int
4856 | |             == memcmp(
4857 | |                 h as *const libc::c_void,
...    |
4865 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4854 ~     } else if size >= 8 as libc::c_int && 0 as libc::c_int == memcmp(
4855 +                 h as *const libc::c_void,
4856 +                 b"!<arch>\n\0" as *const u8 as *const libc::c_char
4857 +                     as *const libc::c_void,
4858 +                 8 as libc::c_int as libc::c_ulong,
4859 +             ) {
4860 +         return 3 as libc::c_int;
4861 +     }
     |

warning: this `if` statement can be collapsed
    --> src/tccelf.rs:4916:5
     |
4916 | /     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) {
4917 | |         if !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
4918 | |             || ehdr.e_machine as libc::c_int != 62 as libc::c_int)
...    |
5385 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4916 ~     if !(tcc_object_type(fd, &mut ehdr) != 1 as libc::c_int) && !(ehdr.e_ident[5 as libc::c_int as usize] as libc::c_int != 1 as libc::c_int
4917 +             || ehdr.e_machine as libc::c_int != 62 as libc::c_int) {
4918 +         shdr = load_data(
4919 +             fd,
4920 +             file_offset.wrapping_add(ehdr.e_shoff),
4921 +             (::core::mem::size_of::<Elf64_Shdr>() as libc::c_ulong)
4922 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
4923 +         ) as *mut Elf64_Shdr;
4924 +         sm_table = tcc_mallocz(
4925 +             (::core::mem::size_of::<SectionMergeInfo>() as libc::c_ulong)
4926 +                 .wrapping_mul(ehdr.e_shnum as libc::c_ulong),
4927 +         ) as *mut SectionMergeInfo;
4928 +         sh = &mut *shdr.offset(ehdr.e_shstrndx as isize) as *mut Elf64_Shdr;
4929 +         strsec = load_data(
4930 +             fd,
4931 +             file_offset.wrapping_add((*sh).sh_offset),
4932 +             (*sh).sh_size,
4933 +         ) as *mut libc::c_char;
4934 +         old_to_new_syms = 0 as *mut libc::c_int;
4935 +         symtab = 0 as *mut Elf64_Sym;
4936 +         strtab = 0 as *mut libc::c_char;
4937 +         nb_syms = 0 as libc::c_int;
4938 +         seencompressed = 0 as libc::c_int;
4939 +         stabstr_index = 0 as libc::c_int;
4940 +         stab_index = stabstr_index;
4941 +         ret = -(1 as libc::c_int);
4942 +         i = 1 as libc::c_int;
4943 +         loop {
4944 +             if !(i < ehdr.e_shnum as libc::c_int) {
4945 +                 current_block = 6669252993407410313;
4946 +                 break;
4947 +             }
4948 +             sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
4949 +             if (*sh).sh_type == 2 as libc::c_int as Elf64_Word {
4950 +                 if !symtab.is_null() {
4951 +                     tcc_enter_state(s1);
4952 +                     (Some(
4953 +                         _tcc_error_noabort
4954 +                             as unsafe extern "C" fn(
4955 +                                 *const libc::c_char,
4956 +                                 ...
4957 +                             ) -> libc::c_int,
4958 +                     ))
4959 +                         .expect(
4960 +                             "non-null function pointer",
4961 +                         )(
4962 +                         b"object must contain only one symtab\0" as *const u8
4963 +                             as *const libc::c_char,
4964 +                     );
4965 +                     current_block = 11719220873777950690;
4966 +                     break;
4967 +                 } else {
4968 +                     nb_syms = ((*sh).sh_size)
4969 +                         .wrapping_div(
4970 +                             ::core::mem::size_of::<Elf64_Sym>() as libc::c_ulong,
4971 +                         ) as libc::c_int;
4972 +                     symtab = load_data(
4973 +                         fd,
4974 +                         file_offset.wrapping_add((*sh).sh_offset),
4975 +                         (*sh).sh_size,
4976 +                     ) as *mut Elf64_Sym;
4977 +                     let ref mut fresh12 = (*sm_table.offset(i as isize)).s;
4978 +                     *fresh12 = (*s1).c2rust_unnamed.symtab_section;
4979 +                     sh = &mut *shdr.offset((*sh).sh_link as isize)
4980 +                         as *mut Elf64_Shdr;
4981 +                     strtab = load_data(
4982 +                         fd,
4983 +                         file_offset.wrapping_add((*sh).sh_offset),
4984 +                         (*sh).sh_size,
4985 +                     ) as *mut libc::c_char;
4986 +                 }
4987 +             }
4988 +             if (*sh).sh_flags
4989 +                 & ((1 as libc::c_int) << 11 as libc::c_int) as Elf64_Xword != 0
4990 +             {
4991 +                 seencompressed = 1 as libc::c_int;
4992 +             }
4993 +             i += 1;
4994 +             i;
4995 +         }
4996 +         match current_block {
4997 +             6669252993407410313 => {
4998 +                 i = 1 as libc::c_int;
4999 +                 's_132: loop {
5000 +                     if !(i < ehdr.e_shnum as libc::c_int) {
5001 +                         current_block = 5028470053297453708;
5002 +                         break;
5003 +                     }
5004 +                     if !(i == ehdr.e_shstrndx as libc::c_int) {
5005 +                         sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
5006 +                         if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
5007 +                             sh = &mut *shdr.offset((*sh).sh_info as isize)
5008 +                                 as *mut Elf64_Shdr;
5009 +                         }
5010 +                         sh_name = strsec.offset((*sh).sh_name as isize);
5011 +                         if 0 as libc::c_int
5012 +                             == strncmp(
5013 +                                 sh_name,
5014 +                                 b".debug_\0" as *const u8 as *const libc::c_char,
5015 +                                 7 as libc::c_int as libc::c_ulong,
5016 +                             )
5017 +                             || 0 as libc::c_int
5018 +                                 == strncmp(
5019 +                                     sh_name,
5020 +                                     b".stab\0" as *const u8 as *const libc::c_char,
5021 +                                     5 as libc::c_int as libc::c_ulong,
5022 +                                 )
5023 +                         {
5024 +                             if (*s1).do_debug == 0 || seencompressed != 0 {
5025 +                                 current_block = 7056779235015430508;
5026 +                             } else {
5027 +                                 current_block = 15597372965620363352;
5028 +                             }
5029 +                         } else if 0 as libc::c_int
5030 +                             == strncmp(
5031 +                                 sh_name,
5032 +                                 b".eh_frame\0" as *const u8 as *const libc::c_char,
5033 +                                 9 as libc::c_int as libc::c_ulong,
5034 +                             )
5035 +                         {
5036 +                             if ((*s1).eh_frame_section).is_null() {
5037 +                                 current_block = 7056779235015430508;
5038 +                             } else {
5039 +                                 current_block = 15597372965620363352;
5040 +                             }
5041 +                         } else if (*sh).sh_type != 1 as libc::c_int as Elf64_Word
5042 +                             && (*sh).sh_type != 7 as libc::c_int as Elf64_Word
5043 +                             && (*sh).sh_type != 8 as libc::c_int as Elf64_Word
5044 +                             && (*sh).sh_type != 16 as libc::c_int as Elf64_Word
5045 +                             && (*sh).sh_type != 14 as libc::c_int as Elf64_Word
5046 +                             && (*sh).sh_type != 15 as libc::c_int as Elf64_Word
5047 +                         {
5048 +                             current_block = 7056779235015430508;
5049 +                         } else {
5050 +                             current_block = 15597372965620363352;
5051 +                         }
5052 +                         match current_block {
5053 +                             7056779235015430508 => {}
5054 +                             _ => {
5055 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
5056 +                                 sh_name = strsec.offset((*sh).sh_name as isize);
5057 +                                 if (*sh).sh_addralign < 1 as libc::c_int as Elf64_Xword {
5058 +                                     (*sh).sh_addralign = 1 as libc::c_int as Elf64_Xword;
5059 +                                 }
5060 +                                 j = 1 as libc::c_int;
5061 +                                 loop {
5062 +                                     if !(j < (*s1).nb_sections) {
5063 +                                         current_block = 2290177392965769716;
5064 +                                         break;
5065 +                                     }
5066 +                                     s = *((*s1).sections).offset(j as isize);
5067 +                                     if strcmp(((*s).name).as_mut_ptr(), sh_name) != 0 {
5068 +                                         j += 1;
5069 +                                         j;
5070 +                                     } else if (*sh).sh_type != (*s).sh_type as Elf64_Word
5071 +                                         && strcmp(
5072 +                                             ((*s).name).as_mut_ptr(),
5073 +                                             b".eh_frame\0" as *const u8 as *const libc::c_char,
5074 +                                         ) != 0
5075 +                                     {
5076 +                                         tcc_enter_state(s1);
5077 +                                         (Some(
5078 +                                             _tcc_error_noabort
5079 +                                                 as unsafe extern "C" fn(
5080 +                                                     *const libc::c_char,
5081 +                                                     ...
5082 +                                                 ) -> libc::c_int,
5083 +                                         ))
5084 +                                             .expect(
5085 +                                                 "non-null function pointer",
5086 +                                             )(
5087 +                                             b"section type conflict: %s %02x <> %02x\0" as *const u8
5088 +                                                 as *const libc::c_char,
5089 +                                             ((*s).name).as_mut_ptr(),
5090 +                                             (*sh).sh_type,
5091 +                                             (*s).sh_type,
5092 +                                         );
5093 +                                         current_block = 11719220873777950690;
5094 +                                         break 's_132;
5095 +                                     } else if strncmp(
5096 +                                         sh_name,
5097 +                                         b".gnu.linkonce\0" as *const u8 as *const libc::c_char,
5098 +                                         13 as libc::c_int as libc::c_ulong,
5099 +                                     ) == 0
5100 +                                     {
5101 +                                         (*sm_table.offset(i as isize))
5102 +                                             .link_once = 1 as libc::c_int as uint8_t;
5103 +                                         current_block = 7056779235015430508;
5104 +                                         break;
5105 +                                     } else {
5106 +                                         if !((*s1).stab_section).is_null() {
5107 +                                             if s == (*s1).stab_section {
5108 +                                                 stab_index = i;
5109 +                                             }
5110 +                                             if s == (*(*s1).stab_section).link {
5111 +                                                 stabstr_index = i;
5112 +                                             }
5113 +                                         }
5114 +                                         current_block = 5056262341453043922;
5115 +                                         break;
5116 +                                     }
5117 +                                 }
5118 +                                 match current_block {
5119 +                                     7056779235015430508 => {}
5120 +                                     _ => {
5121 +                                         match current_block {
5122 +                                             2290177392965769716 => {
5123 +                                                 s = new_section(
5124 +                                                     s1,
5125 +                                                     sh_name,
5126 +                                                     (*sh).sh_type as libc::c_int,
5127 +                                                     ((*sh).sh_flags
5128 +                                                         & !((1 as libc::c_int) << 9 as libc::c_int) as Elf64_Xword)
5129 +                                                         as libc::c_int,
5130 +                                                 );
5131 +                                                 (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
5132 +                                                 (*s).sh_entsize = (*sh).sh_entsize as libc::c_int;
5133 +                                                 (*sm_table.offset(i as isize))
5134 +                                                     .new_section = 1 as libc::c_int as uint8_t;
5135 +                                             }
5136 +                                             _ => {}
5137 +                                         }
5138 +                                         (*s)
5139 +                                             .data_offset = ((*s).data_offset)
5140 +                                             .wrapping_add(
5141 +                                                 ((*s).data_offset).wrapping_neg()
5142 +                                                     & ((*sh).sh_addralign)
5143 +                                                         .wrapping_sub(1 as libc::c_int as Elf64_Xword),
5144 +                                             );
5145 +                                         if (*sh).sh_addralign > (*s).sh_addralign as Elf64_Xword {
5146 +                                             (*s).sh_addralign = (*sh).sh_addralign as libc::c_int;
5147 +                                         }
5148 +                                         (*sm_table.offset(i as isize)).offset = (*s).data_offset;
5149 +                                         let ref mut fresh13 = (*sm_table.offset(i as isize)).s;
5150 +                                         *fresh13 = s;
5151 +                                         size = (*sh).sh_size;
5152 +                                         if (*sh).sh_type != 8 as libc::c_int as Elf64_Word {
5153 +                                             let mut ptr: *mut libc::c_uchar = 0 as *mut libc::c_uchar;
5154 +                                             lseek(
5155 +                                                 fd,
5156 +                                                 file_offset.wrapping_add((*sh).sh_offset) as __off_t,
5157 +                                                 0 as libc::c_int,
5158 +                                             );
5159 +                                             ptr = section_ptr_add(s, size) as *mut libc::c_uchar;
5160 +                                             full_read(fd, ptr as *mut libc::c_void, size);
5161 +                                         } else {
5162 +                                             (*s).data_offset = ((*s).data_offset).wrapping_add(size);
5163 +                                         }
5164 +                                     }
5165 +                                 }
5166 +                             }
5167 +                         }
5168 +                     }
5169 +                     i += 1;
5170 +                     i;
5171 +                 }
5172 +                 match current_block {
5173 +                     11719220873777950690 => {}
5174 +                     _ => {
5175 +                         if stab_index != 0 && stabstr_index != 0 {
5176 +                             let mut a: *mut Stab_Sym = 0 as *mut Stab_Sym;
5177 +                             let mut b: *mut Stab_Sym = 0 as *mut Stab_Sym;
5178 +                             let mut o: libc::c_uint = 0;
5179 +                             s = (*sm_table.offset(stab_index as isize)).s;
5180 +                             a = ((*s).data)
5181 +                                 .offset(
5182 +                                     (*sm_table.offset(stab_index as isize)).offset as isize,
5183 +                                 ) as *mut Stab_Sym;
5184 +                             b = ((*s).data).offset((*s).data_offset as isize)
5185 +                                 as *mut Stab_Sym;
5186 +                             o = (*sm_table.offset(stabstr_index as isize)).offset
5187 +                                 as libc::c_uint;
5188 +                             while a < b {
5189 +                                 if (*a).n_strx != 0 {
5190 +                                     (*a).n_strx = ((*a).n_strx).wrapping_add(o);
5191 +                                 }
5192 +                                 a = a.offset(1);
5193 +                                 a;
5194 +                             }
5195 +                         }
5196 +                         i = 1 as libc::c_int;
5197 +                         while i < ehdr.e_shnum as libc::c_int {
5198 +                             s = (*sm_table.offset(i as isize)).s;
5199 +                             if !(s.is_null()
5200 +                                 || (*sm_table.offset(i as isize)).new_section == 0)
5201 +                             {
5202 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
5203 +                                 if (*sh).sh_link > 0 as libc::c_int as Elf64_Word {
5204 +                                     (*s).link = (*sm_table.offset((*sh).sh_link as isize)).s;
5205 +                                 }
5206 +                                 if (*sh).sh_type == 4 as libc::c_int as Elf64_Word {
5207 +                                     (*s)
5208 +                                         .sh_info = (*(*sm_table.offset((*sh).sh_info as isize)).s)
5209 +                                         .sh_num;
5210 +                                     let ref mut fresh14 = (**((*s1).sections)
5211 +                                         .offset((*s).sh_info as isize))
5212 +                                         .reloc;
5213 +                                     *fresh14 = s;
5214 +                                 }
5215 +                             }
5216 +                             i += 1;
5217 +                             i;
5218 +                         }
5219 +                         old_to_new_syms = tcc_mallocz(
5220 +                             (nb_syms as libc::c_ulong)
5221 +                                 .wrapping_mul(
5222 +                                     ::core::mem::size_of::<libc::c_int>() as libc::c_ulong,
5223 +                                 ),
5224 +                         ) as *mut libc::c_int;
5225 +                         sym = symtab.offset(1 as libc::c_int as isize);
5226 +                         let mut current_block_95: u64;
5227 +                         i = 1 as libc::c_int;
5228 +                         while i < nb_syms {
5229 +                             if (*sym).st_shndx as libc::c_int != 0 as libc::c_int
5230 +                                 && ((*sym).st_shndx as libc::c_int) < 0xff00 as libc::c_int
5231 +                             {
5232 +                                 sm = &mut *sm_table.offset((*sym).st_shndx as isize)
5233 +                                     as *mut SectionMergeInfo;
5234 +                                 if (*sm).link_once != 0 {
5235 +                                     if (*sym).st_info as libc::c_int >> 4 as libc::c_int
5236 +                                         != 0 as libc::c_int
5237 +                                     {
5238 +                                         name = strtab.offset((*sym).st_name as isize);
5239 +                                         sym_index = find_elf_sym(
5240 +                                             (*s1).c2rust_unnamed.symtab_section,
5241 +                                             name,
5242 +                                         );
5243 +                                         if sym_index != 0 {
5244 +                                             *old_to_new_syms.offset(i as isize) = sym_index;
5245 +                                         }
5246 +                                     }
5247 +                                     current_block_95 = 12705158477165241210;
5248 +                                 } else if ((*sm).s).is_null() {
5249 +                                     current_block_95 = 12705158477165241210;
5250 +                                 } else {
5251 +                                     (*sym).st_shndx = (*(*sm).s).sh_num as Elf64_Section;
5252 +                                     (*sym)
5253 +                                         .st_value = ((*sym).st_value as libc::c_ulong)
5254 +                                         .wrapping_add((*sm).offset) as Elf64_Addr as Elf64_Addr;
5255 +                                     current_block_95 = 1417769144978639029;
5256 +                                 }
5257 +                             } else {
5258 +                                 current_block_95 = 1417769144978639029;
5259 +                             }
5260 +                             match current_block_95 {
5261 +                                 1417769144978639029 => {
5262 +                                     name = strtab.offset((*sym).st_name as isize);
5263 +                                     sym_index = set_elf_sym(
5264 +                                         (*s1).c2rust_unnamed.symtab_section,
5265 +                                         (*sym).st_value,
5266 +                                         (*sym).st_size,
5267 +                                         (*sym).st_info as libc::c_int,
5268 +                                         (*sym).st_other as libc::c_int,
5269 +                                         (*sym).st_shndx as libc::c_int,
5270 +                                         name,
5271 +                                     );
5272 +                                     *old_to_new_syms.offset(i as isize) = sym_index;
5273 +                                 }
5274 +                                 _ => {}
5275 +                             }
5276 +                             i += 1;
5277 +                             i;
5278 +                             sym = sym.offset(1);
5279 +                             sym;
5280 +                         }
5281 +                         i = 1 as libc::c_int;
5282 +                         's_516: loop {
5283 +                             if !(i < ehdr.e_shnum as libc::c_int) {
5284 +                                 current_block = 9180031981464905198;
5285 +                                 break;
5286 +                             }
5287 +                             s = (*sm_table.offset(i as isize)).s;
5288 +                             if !s.is_null() {
5289 +                                 sh = &mut *shdr.offset(i as isize) as *mut Elf64_Shdr;
5290 +                                 offset = (*sm_table.offset(i as isize)).offset;
5291 +                                 size = (*sh).sh_size;
5292 +                                 match (*s).sh_type {
5293 +                                     4 => {
5294 +                                         offseti = (*sm_table.offset((*sh).sh_info as isize)).offset;
5295 +                                         rel = ((*s).data as *mut Elf64_Rela)
5296 +                                             .offset(
5297 +                                                 offset
5298 +                                                     .wrapping_div(
5299 +                                                         ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
5300 +                                                     ) as isize,
5301 +                                             );
5302 +                                         while rel
5303 +                                             < ((*s).data as *mut Elf64_Rela)
5304 +                                                 .offset(
5305 +                                                     offset
5306 +                                                         .wrapping_add(size)
5307 +                                                         .wrapping_div(
5308 +                                                             ::core::mem::size_of::<Elf64_Rela>() as libc::c_ulong,
5309 +                                                         ) as isize,
5310 +                                                 )
5311 +                                         {
5312 +                                             let mut type_0: libc::c_int = 0;
5313 +                                             let mut sym_index_0: libc::c_uint = 0;
5314 +                                             type_0 = ((*rel).r_info
5315 +                                                 & 0xffffffff as libc::c_uint as Elf64_Xword) as libc::c_int;
5316 +                                             sym_index_0 = ((*rel).r_info >> 32 as libc::c_int)
5317 +                                                 as libc::c_uint;
5318 +                                             if !(sym_index_0 >= nb_syms as libc::c_uint) {
5319 +                                                 sym_index_0 = *old_to_new_syms.offset(sym_index_0 as isize)
5320 +                                                     as libc::c_uint;
5321 +                                                 if !(sym_index_0 == 0
5322 +                                                     && (*sm_table.offset((*sh).sh_info as isize)).link_once
5323 +                                                         == 0)
5324 +                                                 {
5325 +                                                     (*rel)
5326 +                                                         .r_info = ((sym_index_0 as Elf64_Xword)
5327 +                                                         << 32 as libc::c_int)
5328 +                                                         .wrapping_add(type_0 as Elf64_Xword);
5329 +                                                     (*rel)
5330 +                                                         .r_offset = ((*rel).r_offset as libc::c_ulong)
5331 +                                                         .wrapping_add(offseti) as Elf64_Addr as Elf64_Addr;
5332 +                                                     rel = rel.offset(1);
5333 +                                                     rel;
5334 +                                                     continue;
5335 +                                                 }
5336 +                                             }
5337 +                                             tcc_enter_state(s1);
5338 +                                             (Some(
5339 +                                                 _tcc_error_noabort
5340 +                                                     as unsafe extern "C" fn(
5341 +                                                         *const libc::c_char,
5342 +                                                         ...
5343 +                                                     ) -> libc::c_int,
5344 +                                             ))
5345 +                                                 .expect(
5346 +                                                     "non-null function pointer",
5347 +                                                 )(
5348 +                                                 b"Invalid relocation entry [%2d] '%s' @ %.8x\0" as *const u8
5349 +                                                     as *const libc::c_char,
5350 +                                                 i,
5351 +                                                 strsec.offset((*sh).sh_name as isize),
5352 +                                                 (*rel).r_offset as libc::c_int,
5353 +                                             );
5354 +                                             current_block = 11719220873777950690;
5355 +                                             break 's_516;
5356 +                                         }
5357 +                                     }
5358 +                                     _ => {}
5359 +                                 }
5360 +                             }
5361 +                             i += 1;
5362 +                             i;
5363 +                         }
5364 +                         match current_block {
5365 +                             11719220873777950690 => {}
5366 +                             _ => {
5367 +                                 ret = 0 as libc::c_int;
5368 +                             }
5369 +                         }
5370 +                     }
5371 +                 }
5372 +             }
5373 +             _ => {}
5374 +         }
5375 +         tcc_free(symtab as *mut libc::c_void);
5376 +         tcc_free(strtab as *mut libc::c_void);
5377 +         tcc_free(old_to_new_syms as *mut libc::c_void);
5378 +         tcc_free(sm_table as *mut libc::c_void);
5379 +         tcc_free(strsec as *mut libc::c_void);
5380 +         tcc_free(shdr as *mut libc::c_void);
5381 +         return ret;
5382 +     }
     |

warning: operator precedence can trip the unwary
    --> src/tccelf.rs:5403:15
     |
5403 |         ret = ret << 8 as libc::c_int | *fresh15 as libc::c_ulonglong;
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ret << 8 as libc::c_int) | *fresh15 as libc::c_ulonglong`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
   --> src/tccgen.rs:196:10
    |
196 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccgen.rs:197:10
    |
197 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tccgen.rs:198:10
    |
198 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccgen.rs:199:10
    |
199 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccgen.rs:200:10
    |
200 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccgen.rs:201:10
    |
201 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
   --> src/tccgen.rs:202:10
    |
202 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccgen.rs:203:10
    |
203 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
   --> src/tccgen.rs:204:10
    |
204 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__compar_fn_t` should have an upper camel case name
   --> src/tccgen.rs:210:10
    |
210 | pub type __compar_fn_t = Option::<
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ComparFnT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccgen.rs:246:10
    |
246 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccgen.rs:248:10
    |
248 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccgen.rs:256:10
    |
256 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccgen.rs:460:10
    |
460 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccgen.rs:461:10
    |
461 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccgen.rs:469:10
    |
469 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccgen.rs:470:10
    |
470 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccgen.rs:610:10
    |
610 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/tccgen.rs:627:10
    |
627 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccgen.rs:628:10
    |
628 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tccgen.rs:629:10
    |
629 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tccgen.rs:630:10
    |
630 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `__stab_debug_code` should have an upper camel case name
   --> src/tccgen.rs:641:10
    |
641 | pub type __stab_debug_code = libc::c_uint;
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `StabDebugCode`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/tccgen.rs:685:10
    |
685 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: type `nwchar_t` should have an upper camel case name
   --> src/tccgen.rs:718:10
    |
718 | pub type nwchar_t = libc::c_int;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `NwcharT`

warning: type `tcc_token` should have an upper camel case name
   --> src/tccgen.rs:779:10
    |
779 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:1918:14
     |
1918 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2211:20
     |
2211 |       debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
     |  ____________________^
2212 | |         1 as libc::c_int
2213 | |     } else {
2214 | |         0 as libc::c_int
2215 | |     }) | ((*s1).test_coverage as libc::c_int) << 1 as libc::c_int) as libc::c_char;
     | |_________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2211 ~     debug_modes = ((if (*s1).do_debug as libc::c_int != 0 {
2212 +         1 as libc::c_int
2213 +     } else {
2214 +         0 as libc::c_int
2215 ~     }) | (((*s1).test_coverage as libc::c_int) << 1 as libc::c_int)) as libc::c_char;
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2320:24
     |
2320 |                       | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |  ________________________^
2321 | |                         | (2 as libc::c_int) << 20 as libc::c_int))
     | |_________________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2320:24
     |
2320 |                     | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2322:20
     |
2322 |                   == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |  ____________________^
2323 | |                     | (2 as libc::c_int) << 20 as libc::c_int
     | |_____________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2322:20
     |
2322 |                 == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2524:12
     |
2524 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
2525 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2526 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2524 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2525 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:2524:13
     |
2524 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3112:16
     |
3112 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3113:12
     |
3113 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3125:16
     |
3125 |               t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |  ________________^
3126 | |                 | (2 as libc::c_int) << 20 as libc::c_int,
     | |_________________________________________________________^ help: consider parenthesizing your expression: `0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int | ((2 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3125:16
     |
3125 |             t: 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3206:16
     |
3206 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________^
3207 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
3208 | |                 | 0x80 as libc::c_int as libc::c_uint)
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
3206 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
3207 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3206:17
     |
3206 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3221:16
     |
3221 |             | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3222:12
     |
3222 |         == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccgen.rs:3250:9
     |
3250 | /         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 {
3251 | |             if ((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0
3252 | |                 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0
...    |
3256 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3250 ~         if ((*type_0).t | (*sym).type_0.t) & 0x8000 as libc::c_int != 0 && (((*type_0).t ^ (*sym).type_0.t) & 0x8000 as libc::c_int == 0 || ((*type_0).t | (*sym).type_0.t) & 0x2000 as libc::c_int != 0) {
3251 +             static_proto |= 0x8000 as libc::c_int;
3252 +         }
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3591:19
     |
3591 |             loc = loc - size & -align;
     |                   ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccgen.rs:3787:9
     |
3787 | /         if !((*s).v == 0
3788 | |             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int)
3789 | |         {
3790 | |             if (*s).type_0.t & 0x40 as libc::c_int != 0
...    |
3809 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
3787 ~         if !((*s).v == 0
3788 +             || (*s).r as libc::c_int & 0x3f as libc::c_int != 0x32 as libc::c_int) && ((*s).type_0.t & 0x40 as libc::c_int != 0
3789 +                 || (*s).type_0.t & 0xf as libc::c_int == 7 as libc::c_int || ((*s).a).addrtaken() as libc::c_int != 0) {
3790 +             let mut align: libc::c_int = 0;
3791 +             let mut size: libc::c_int = type_size(&mut (*s).type_0, &mut align);
3792 +             let mut bounds_ptr: *mut Elf64_Addr = section_ptr_add(
3793 +                 (*tcc_state).lbounds_section,
3794 +                 (2 as libc::c_int as libc::c_ulong)
3795 +                     .wrapping_mul(
3796 +                         ::core::mem::size_of::<Elf64_Addr>() as libc::c_ulong,
3797 +                     ),
3798 +             ) as *mut Elf64_Addr;
3799 +             *bounds_ptr
3800 +                 .offset(
3801 +                     0 as libc::c_int as isize,
3802 +                 ) = (*s).c2rust_unnamed.c2rust_unnamed.c as Elf64_Addr;
3803 +             *bounds_ptr.offset(1 as libc::c_int as isize) = size as Elf64_Addr;
3804 +         }
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3997:19
     |
3997 |         bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3998:20
     |
3998 |           bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |  ____________________^
3999 | |             & 0x3f as libc::c_int;
     | |_________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:3998:20
     |
3998 |         bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:4003:17
     |
4003 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  _________________^
4004 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
4005 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4003 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
4004 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:4003:18
     |
4003 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:4203:14
     |
4203 |     return ((a ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `a ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:4204:11
     |
4204 |         < b ^ (1 as libc::c_int as uint64_t) << 63 as libc::c_int) as libc::c_int;
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `b ^ ((1 as libc::c_int as uint64_t) << 63 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8504:20
     |
8504 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
8505 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8506 | |                     | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8504 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8505 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8504:21
     |
8504 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8565:20
     |
8565 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
8566 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8567 | |                     | 0x80 as libc::c_int as libc::c_uint
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8565 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8566 +                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8565:21
     |
8565 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8569:21
     |
8569 |                 == ((1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8708:20
     |
8708 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
8709 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8710 | |                     | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8708 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8709 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8708:21
     |
8708 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8885:12
     |
8885 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
8886 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8887 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8885 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8886 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8885:13
     |
8885 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8891:16
     |
8891 |               & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________^
8892 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8893 | |                 | 0x80 as libc::c_int as libc::c_uint)
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8891 ~             & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8892 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8891:17
     |
8891 |             & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8900:12
     |
8900 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
8901 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8902 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8900 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8901 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8900:13
     |
8900 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8910:16
     |
8910 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________^
8911 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8912 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8910 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8911 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8910:17
     |
8910 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8916:16
     |
8916 |               | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________^
8917 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
8918 | |                 | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
     | |_____________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
8916 ~             | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
8917 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))) as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:8916:17
     |
8916 |             | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9410:12
     |
9410 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
9411 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9412 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9410 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9411 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9410:13
     |
9410 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9758:12
     |
9758 |           & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________^
9759 | |             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
9760 | |             | 0x80 as libc::c_int as libc::c_uint)
     | |_________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9758 ~         & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
9759 ~             .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9758:13
     |
9758 |         & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9924:44
     |
9924 |   ...                   & (((1 as libc::c_uint)
     |  __________________________^
9925 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
9926 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
9927 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9924 ~                                         & ((((1 as libc::c_uint)
9925 +                                             << 6 as libc::c_int + 6 as libc::c_int)
9926 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
9927 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9924:45
     |
9924 |   ...                   & (((1 as libc::c_uint)
     |  ___________________________^
9925 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
     | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9931:48
     |
9931 |   ...                   & (((1 as libc::c_uint)
     |  __________________________^
9932 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
9933 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
9934 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
     | |____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
9931 ~                                             & ((((1 as libc::c_uint)
9932 +                                                 << 6 as libc::c_int + 6 as libc::c_int)
9933 +                                                 .wrapping_sub(1 as libc::c_int as libc::c_uint)
9934 ~                                                 << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
     |

warning: operator precedence can trip the unwary
    --> src/tccgen.rs:9931:49
     |
9931 |   ...                   & (((1 as libc::c_uint)
     |  ___________________________^
9932 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
     | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10065:19
      |
10065 |         bit_pos = ft >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10066:20
      |
10066 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(ft >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10066:20
      |
10066 |         bit_size = ft >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int;
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `ft >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10070:17
      |
10070 |               & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  _________________^
10071 | |                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
10072 | |                 | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      | |_____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10070 ~             & !((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
10071 ~                 .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)) as libc::c_int;
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10070:18
      |
10070 |             & !(((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10153:24
      |
10153 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
10154 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
10155 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)))
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10153 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
10154 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
10155 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)))
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10153:25
      |
10153 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10390:32
      |
10390 | ...                   || n & n - 1 as libc::c_int != 0 as libc::c_int
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n & (n - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10403:28
      |
10403 |                           != (1 as libc::c_int)
      |  ____________________________^
10404 | |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      | |____________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10618:24
      |
10618 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
10619 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10618:24
      |
10618 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10625:13
      |
10625 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*f).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10652:16
      |
10652 |             == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10655:24
      |
10655 |                 size = bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10663:22
      |
10663 |                 c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10665:17
      |
10665 |             c = c + align - 1 as libc::c_int & -align;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10693:29
      |
10693 |                           c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |  _____________________________^
10694 | |                             - 1 as libc::c_int & -align;
      | |_______________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10693 ~                         c = (c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
10694 ~                             - 1 as libc::c_int) & -align;
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10693:34
      |
10693 |                         c = c + (bit_pos + 7 as libc::c_int >> 3 as libc::c_int) + align
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10719:25
      |
10719 |                     c = c + align - 1 as libc::c_int & -align;
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + align - 1 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10734:22
      |
10734 |                   .t = (*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int)
      |  ______________________^
10735 | |                 | bit_pos << 20 as libc::c_int;
      | |______________________________________________^ help: consider parenthesizing your expression: `(*f).type_0.t & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10746:14
      |
10746 |         c += bit_pos + 7 as libc::c_int >> 3 as libc::c_int;
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(bit_pos + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10749:9
      |
10749 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10764:9
      |
10764 |     c = c + a - 1 as libc::c_int & -a;
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c + a - 1 as libc::c_int) & -a`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10783:24
      |
10783 |               bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
10784 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10783:24
      |
10783 |             bit_size = (*f).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*f).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10786:27
      |
10786 |                 bit_pos = (*f).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*f).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10798:30
      |
10798 |                         cx = px >> 3 as libc::c_int & -align;
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px >> 3 as libc::c_int) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10803:29
      |
10803 |                         s = px + bit_size + 7 as libc::c_int >> 3 as libc::c_int;
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(px + bit_size + 7 as libc::c_int) >> 3 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10821:34
      |
10821 |   ...                   .t = (*f).type_0.t
      |  ____________________________^
10822 | | ...                   & !((0x3f as libc::c_int) << 20 as libc::c_int)
10823 | | ...                   | bit_pos << 20 as libc::c_int;
      | |____________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10821 ~                             .t = (*f).type_0.t
10822 ~                             & !((0x3f as libc::c_int) << 20 as libc::c_int) | (bit_pos << 20 as libc::c_int);
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10931:24
      |
10931 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
10932 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
10933 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
10931 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
10932 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
10933 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10931:25
      |
10931 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10994:22
      |
10994 |                   .t = 3 as libc::c_int | 0x2000 as libc::c_int
      |  ______________________^
10995 | |                 | (3 as libc::c_int) << 20 as libc::c_int;
      | |_________________________________________________________^ help: consider parenthesizing your expression: `3 as libc::c_int | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:10998:26
      |
10998 |                       .t = bt | 0x2000 as libc::c_int
      |  __________________________^
10999 | |                     | (3 as libc::c_int) << 20 as libc::c_int;
      | |_____________________________________________________________^ help: consider parenthesizing your expression: `bt | 0x2000 as libc::c_int | ((3 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11098:27
      |
11098 |             (*type_0).t = t.t | (2 as libc::c_int) << 20 as libc::c_int;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `t.t | ((2 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tccgen.rs:11131:37
      |
11131 | / ...                   if v_0 & 0x20000000 as libc::c_int == 0
11132 | | ...                       && v_0 & !(0x40000000 as libc::c_int)
11133 | | ...                           < 0x10000000 as libc::c_int
...     |
11140 | | ...                   }
      | |_______________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
11131 ~                                     if v_0 & 0x20000000 as libc::c_int == 0 && v_0 & !(0x40000000 as libc::c_int)
11132 +                                             < 0x10000000 as libc::c_int && (*tcc_state).ms_extensions as libc::c_int == 0 as libc::c_int {
11133 +                                         expect(b"identifier\0" as *const u8 as *const libc::c_char);
11134 +                                     }
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11218:45
      |
11218 |   ...                   & !(((1 as libc::c_uint)
      |  ___________________________^
11219 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
11220 | | ...                       .wrapping_sub(1 as libc::c_int as libc::c_uint)
11221 | | ...                       << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |____________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
11218 ~                                         & !((((1 as libc::c_uint)
11219 +                                             << 6 as libc::c_int + 6 as libc::c_int)
11220 +                                             .wrapping_sub(1 as libc::c_int as libc::c_uint)
11221 ~                                             << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11218:46
      |
11218 |   ...                   & !(((1 as libc::c_uint)
      |  ____________________________^
11219 | | ...                       << 6 as libc::c_int + 6 as libc::c_int)
      | |________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11223:44
      |
11223 | ...                   | (bit_size << 20 as libc::c_int + 6 as libc::c_int)
      |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `bit_size << (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11377:31
      |
11377 |                           n_0 = (1 as libc::c_int)
      |  _______________________________^
11378 | |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      | |__________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << ((ad1.a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11385:28
      |
11385 |                         || n_0 & n_0 - 1 as libc::c_int != 0 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `n_0 & (n_0 - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:11458:21
      |
11458 |                     (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int,
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tccgen.rs:11667:5
      |
11667 | /     if (*tcc_state).char_is_unsigned != 0 {
11668 | |         if t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
11669 | |             t |= 0x10 as libc::c_int;
11670 | |         }
11671 | |     }
      | |_____^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
11667 ~     if (*tcc_state).char_is_unsigned != 0 && t & (0x20 as libc::c_int | 0xf as libc::c_int) == 1 as libc::c_int {
11668 +         t |= 0x10 as libc::c_int;
11669 +     }
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:12333:47
      |
12333 |                 if size > 8 as libc::c_int || size & size - 1 as libc::c_int != 0
      |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `size & (size - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:12674:33
      |
12674 |                           align = (1 as libc::c_int)
      |  _________________________________^
12675 | |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |___________________________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*s).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13038:28
      |
13038 |                         | (0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int))
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13039:24
      |
13039 |                     == 0 as libc::c_int | (1 as libc::c_int) << 20 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0 as libc::c_int | ((1 as libc::c_int) << 20 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13077:24
      |
13077 |                       & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ________________________^
13078 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
13079 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint)
      | |__________________________________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
13077 ~                     & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
13078 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
13079 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13077:25
      |
13077 |                     & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13231:27
      |
13231 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13341:28
      |
13341 |                     size = size + regsize - 1 as libc::c_int & -regsize;
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + regsize - 1 as libc::c_int) & -regsize`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13345:27
      |
13345 |                     loc = loc - size & -align;
      |                           ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unnecessary parentheses around assigned value
     --> src/tccgen.rs:13429:14
      |
13429 |         p2 = (if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
      |              ^
...
13433 |         });
      |          ^
      |
help: remove these parentheses
      |
13429 ~         p2 = if (t as libc::c_uint) < 256 as libc::c_int as libc::c_uint {
13430 |             prec[t as usize] as libc::c_int
13431 |         } else {
13432 |             0 as libc::c_int
13433 ~         };
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13787:20
      |
13787 |                 if align & ret_align - 1 as libc::c_int != 0
      |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `align & (ret_align - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:13793:27
      |
13793 |                     loc = loc - size & -ret_align;
      |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -ret_align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
     --> src/tccgen.rs:14323:13
      |
14323 | /             if tok != ';' as i32 {
14324 | |                 if decl(0x34 as libc::c_int) == 0 {
14325 | |                     gexpr();
14326 | |                     vpop();
14327 | |                 }
14328 | |             }
      | |_____________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
      |
14323 ~             if tok != ';' as i32 && decl(0x34 as libc::c_int) == 0 {
14324 +                 gexpr();
14325 +                 vpop();
14326 +             }
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15017:18
      |
15017 |         size = (((*type_0).t >> 20 as libc::c_int & 0x3f as libc::c_int)
      |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15018:16
      |
15018 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15018:16
      |
15018 |             + ((*type_0).t >> 20 as libc::c_int + 6 as libc::c_int & 0x3f as libc::c_int)
      |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*type_0).t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15101:23
      |
15101 |             bit_pos = (*vtop).type_0.t >> 20 as libc::c_int & 0x3f as libc::c_int;
      |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15102:24
      |
15102 |               bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |  ________________________^
15103 | |                 & 0x3f as libc::c_int;
      | |_____________________________________^ help: consider parenthesizing your expression: `((*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int) & 0x3f as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15102:24
      |
15102 |             bit_size = (*vtop).type_0.t >> 20 as libc::c_int + 6 as libc::c_int
      |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(*vtop).type_0.t >> (20 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15494:28
      |
15494 |                         == (1 as libc::c_int) << 20 as libc::c_int | 7 as libc::c_int
      |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 20 as libc::c_int) | 7 as libc::c_int`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15625:38
      |
15625 |           let mut speca: libc::c_int = (1 as libc::c_int)
      |  ______________________________________^
15626 | |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      | |____________________________________________________________________^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*ad).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15642:15
      |
15642 |         loc = loc - size & -align;
      |               ^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(loc - size) & -align`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:15897:13
      |
15897 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_int) << (((*sym).a).aligned() as libc::c_int - 1 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:16126:20
      |
16126 |                   & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |  ____________________^
16127 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
16128 | |                     | 0x80 as libc::c_int as libc::c_uint)
      | |_________________________________________________________^
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
      |
16126 ~                 & ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
16127 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint)
      |

warning: operator precedence can trip the unwary
     --> src/tccgen.rs:16126:21
      |
16126 |                 & (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
      |
      = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `__builtin_va_list` should have an upper camel case name
   --> src/tccpp.rs:122:10
    |
122 | pub type __builtin_va_list = [__va_list_tag; 1];
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuiltinVaList`

warning: type `va_list` should have an upper camel case name
   --> src/tccpp.rs:131:10
    |
131 | pub type va_list = __builtin_va_list;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `VaList`

warning: type `size_t` should have an upper camel case name
   --> src/tccpp.rs:132:10
    |
132 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccpp.rs:133:10
    |
133 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccpp.rs:134:10
    |
134 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccpp.rs:135:10
    |
135 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccpp.rs:136:10
    |
136 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
   --> src/tccpp.rs:137:10
    |
137 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccpp.rs:138:10
    |
138 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__time_t` should have an upper camel case name
   --> src/tccpp.rs:139:10
    |
139 | pub type __time_t = libc::c_long;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `__ssize_t` should have an upper camel case name
   --> src/tccpp.rs:140:10
    |
140 | pub type __ssize_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `ssize_t` should have an upper camel case name
   --> src/tccpp.rs:141:10
    |
141 | pub type ssize_t = __ssize_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `SsizeT`

warning: type `time_t` should have an upper camel case name
   --> src/tccpp.rs:142:10
    |
142 | pub type time_t = __time_t;
    |          ^^^^^^ help: convert the identifier to upper camel case: `TimeT`

warning: type `int64_t` should have an upper camel case name
   --> src/tccpp.rs:143:10
    |
143 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccpp.rs:182:10
    |
182 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccpp.rs:184:10
    |
184 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccpp.rs:192:10
    |
192 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccpp.rs:411:10
    |
411 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccpp.rs:412:10
    |
412 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccpp.rs:420:10
    |
420 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccpp.rs:421:10
    |
421 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccpp.rs:561:10
    |
561 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccpp.rs:578:10
    |
578 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `nwchar_t` should have an upper camel case name
   --> src/tccpp.rs:591:10
    |
591 | pub type nwchar_t = libc::c_int;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `NwcharT`

warning: type `tcc_token` should have an upper camel case name
   --> src/tccpp.rs:608:10
    |
608 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `line_macro_output_format` should have an upper camel case name
    --> src/tccpp.rs:1674:10
     |
1674 | pub type line_macro_output_format = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `LineMacroOutputFormat`

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:2250:43
     |
2250 |             cstr_ccat(cstr, '0' as i32 + (c >> 6 as libc::c_int & 7 as libc::c_int));
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 6 as libc::c_int) & 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:2251:43
     |
2251 |             cstr_ccat(cstr, '0' as i32 + (c >> 3 as libc::c_int & 7 as libc::c_int));
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(c >> 3 as libc::c_int) & 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:3896:36
     |
3896 | ...                   || val & val - 1 as libc::c_int != 0 as libc::c_int
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `val & (val - 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccpp.rs:4231:17
     |
4231 | /                 if is_bof != 0 {
4232 | |                     if c != 0 {
4233 | |                         (*file).ifndef_macro = tok;
4234 | |                     }
4235 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
4231 ~                 if is_bof != 0 && c != 0 {
4232 +                     (*file).ifndef_macro = tok;
4233 +                 }
     |

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:6280:37
     |
6280 |   ...                   n = n << 6 as libc::c_int
     |  ___________________________^
6281 | | ...                       | *p.offset(i_0 as isize) as libc::c_int
6282 | | ...                           & 0x3f as libc::c_int;
     | |___________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
6280 ~                                 n = (n << 6 as libc::c_int) | *p.offset(i_0 as isize) as libc::c_int
6281 ~                                         & 0x3f as libc::c_int;
     |

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:6401:21
     |
6401 |                   c = c << 8 as libc::c_int
     |  _____________________^
6402 | |                     | *(tokcstr.data).offset(i as isize) as libc::c_int;
     | |_______________________________________________________________________^ help: consider parenthesizing your expression: `(c << 8 as libc::c_int) | *(tokcstr.data).offset(i as isize) as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:6428:34
     |
6428 |         *bn.offset(i as isize) = v << shift | or_val as libc::c_uint;
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(v << shift) | or_val as libc::c_uint`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccpp.rs:6429:19
     |
6429 |         or_val = (v >> 32 as libc::c_int - shift) as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `v >> (32 as libc::c_int - shift)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccpp.rs:6741:25
     |
6741 | /                         if lcount
6742 | |                             <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int
6743 | |                         {
6744 | |                             if n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
...    |
6748 | |                         }
     | |_________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
6741 ~                         if lcount <= (8 as libc::c_int == 4 as libc::c_int) as libc::c_int && n >= 0x80000000 as libc::c_uint as libc::c_ulonglong {
6742 +                             lcount = (8 as libc::c_int == 4 as libc::c_int)
6743 +                                 as libc::c_int + 1 as libc::c_int;
6744 +                         }
     |

warning: this `if` statement can be collapsed
    --> src/tccpp.rs:8368:17
     |
8368 | /                 if t == '\\' as i32 {
8369 | |                     if parse_flags & 0x20 as libc::c_int == 0 {
8370 | |                         _tcc_error(
8371 | |                             b"stray '\\' in program\0" as *const u8
...    |
8375 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
8368 ~                 if t == '\\' as i32 && parse_flags & 0x20 as libc::c_int == 0 {
8369 +                     _tcc_error(
8370 +                         b"stray '\\' in program\0" as *const u8
8371 +                             as *const libc::c_char,
8372 +                     );
8373 +                 }
     |

warning: this `if` statement can be collapsed
    --> src/tccpp.rs:8385:12
     |
8385 |       } else if t == 0xce as libc::c_int {
     |  ____________^
8386 | |         if parse_flags & 0x40 as libc::c_int != 0 {
8387 | |             parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
8388 | |         }
8389 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
8385 ~     } else if t == 0xce as libc::c_int && parse_flags & 0x40 as libc::c_int != 0 {
8386 +         parse_string(tokc.str_0.data, tokc.str_0.size - 1 as libc::c_int);
8387 +     }
     |

warning: type `__builtin_va_list` should have an upper camel case name
   --> src/tccrun.rs:116:10
    |
116 | pub type __builtin_va_list = [__va_list_tag; 1];
    |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `BuiltinVaList`

warning: type `va_list` should have an upper camel case name
   --> src/tccrun.rs:125:10
    |
125 | pub type va_list = __builtin_va_list;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `VaList`

warning: type `size_t` should have an upper camel case name
   --> src/tccrun.rs:126:10
    |
126 | pub type size_t = libc::c_ulong;
    |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
   --> src/tccrun.rs:127:10
    |
127 | pub type __uint8_t = libc::c_uchar;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
   --> src/tccrun.rs:128:10
    |
128 | pub type __uint16_t = libc::c_ushort;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
   --> src/tccrun.rs:129:10
    |
129 | pub type __uint32_t = libc::c_uint;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
   --> src/tccrun.rs:130:10
    |
130 | pub type __int64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
   --> src/tccrun.rs:131:10
    |
131 | pub type __uint64_t = libc::c_ulong;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__uid_t` should have an upper camel case name
   --> src/tccrun.rs:132:10
    |
132 | pub type __uid_t = libc::c_uint;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `UidT`

warning: type `__off_t` should have an upper camel case name
   --> src/tccrun.rs:133:10
    |
133 | pub type __off_t = libc::c_long;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
   --> src/tccrun.rs:134:10
    |
134 | pub type __off64_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `__pid_t` should have an upper camel case name
   --> src/tccrun.rs:135:10
    |
135 | pub type __pid_t = libc::c_int;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `PidT`

warning: type `__clock_t` should have an upper camel case name
   --> src/tccrun.rs:136:10
    |
136 | pub type __clock_t = libc::c_long;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `ClockT`

warning: type `int64_t` should have an upper camel case name
   --> src/tccrun.rs:137:10
    |
137 | pub type int64_t = __int64_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `sigset_t` should have an upper camel case name
   --> src/tccrun.rs:143:10
    |
143 | pub type sigset_t = __sigset_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `SigsetT`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tccrun.rs:177:10
    |
177 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tccrun.rs:179:10
    |
179 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tccrun.rs:187:10
    |
187 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `__sigval_t` should have an upper camel case name
   --> src/tccrun.rs:188:10
    |
188 | pub type __sigval_t = sigval;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `SigvalT`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tccrun.rs:606:10
    |
606 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tccrun.rs:607:10
    |
607 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tccrun.rs:618:10
    |
618 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tccrun.rs:619:10
    |
619 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `uint16_t` should have an upper camel case name
   --> src/tccrun.rs:620:10
    |
620 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tccrun.rs:621:10
    |
621 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `uint32_t` should have an upper camel case name
   --> src/tccrun.rs:622:10
    |
622 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tccrun.rs:683:10
    |
683 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tccrun.rs:823:10
    |
823 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__sighandler_t` should have an upper camel case name
   --> src/tccrun.rs:950:10
    |
950 | pub type __sighandler_t = Option::<unsafe extern "C" fn(libc::c_int) -> ()>;
    |          ^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `SighandlerT`

warning: type `fpregset_t` should have an upper camel case name
    --> src/tccrun.rs:1049:10
     |
1049 | pub type fpregset_t = *mut _libc_fpstate;
     |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `FpregsetT`

warning: type `gregset_t` should have an upper camel case name
    --> src/tccrun.rs:1050:10
     |
1050 | pub type gregset_t = [greg_t; 23];
     |          ^^^^^^^^^ help: convert the identifier to upper camel case: `GregsetT`

warning: type `greg_t` should have an upper camel case name
    --> src/tccrun.rs:1051:10
     |
1051 | pub type greg_t = libc::c_longlong;
     |          ^^^^^^ help: convert the identifier to upper camel case: `GregT`

warning: type `__stab_debug_code` should have an upper camel case name
    --> src/tccrun.rs:1067:10
     |
1067 | pub type __stab_debug_code = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `StabDebugCode`

warning: type `C2RustUnnamed_22` should have an upper camel case name
    --> src/tccrun.rs:1105:10
     |
1105 | pub type C2RustUnnamed_22 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed22`

warning: type `C2RustUnnamed_23` should have an upper camel case name
    --> src/tccrun.rs:1146:10
     |
1146 | pub type C2RustUnnamed_23 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed23`

warning: type `C2RustUnnamed_24` should have an upper camel case name
    --> src/tccrun.rs:1152:10
     |
1152 | pub type C2RustUnnamed_24 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed24`

warning: type `C2RustUnnamed_25` should have an upper camel case name
    --> src/tccrun.rs:1160:10
     |
1160 | pub type C2RustUnnamed_25 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed25`

warning: type `C2RustUnnamed_26` should have an upper camel case name
    --> src/tccrun.rs:1165:10
     |
1165 | pub type C2RustUnnamed_26 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed26`

warning: type `C2RustUnnamed_27` should have an upper camel case name
    --> src/tccrun.rs:1174:10
     |
1174 | pub type C2RustUnnamed_27 = libc::c_uint;
     |          ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed27`

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1198:13
     |
1198 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1199 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1200 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1198 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1199 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1204:12
     |
1204 |       return read16le(p) as uint32_t
     |  ____________^
1205 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1206 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1204 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1205 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1210:12
     |
1210 |       return read32le(p) as uint64_t
     |  ____________^
1211 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
1212 | |             << 32 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1210 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
1211 ~             << 32 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1236:19
     |
1236 |         retval |= (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1268:19
     |
1268 |           retval = (retval as uint64_t
     |  ___________________^
1269 | |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     | |______________________________________________________________________________^ help: consider parenthesizing your expression: `retval as uint64_t | ((byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1269:15
     |
1269 |             | (byte & 0x7f as libc::c_int as uint64_t) << i * 7 as libc::c_int)
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(byte & 0x7f as libc::c_int as uint64_t) << (i * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1275:27
     |
1275 |                   retval = (retval as libc::c_longlong
     |  ___________________________^
1276 | |                     | -(1 as libc::c_longlong)
1277 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1275 ~                 retval = (retval as libc::c_longlong | (-(1 as libc::c_longlong)
1276 ~                         << (i + 1 as libc::c_int) * 7 as libc::c_int)) as int64_t;
     |

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1276:23
     |
1276 |                       | -(1 as libc::c_longlong)
     |  _______________________^
1277 | |                         << (i + 1 as libc::c_int) * 7 as libc::c_int) as int64_t;
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `-(1 as libc::c_longlong) << ((i + 1 as libc::c_int) * 7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1648:22
     |
1648 |                       ((1 as libc::c_int) << 1 as libc::c_int
     |  ______________________^
1649 | |                         | (1 as libc::c_int) << 2 as libc::c_int) as libc::c_char,
     | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1651:22
     |
1651 |                       ((1 as libc::c_int) << 1 as libc::c_int
     |  ______________________^
1652 | |                         | (1 as libc::c_int) << 0 as libc::c_int) as libc::c_char,
     | |________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1657:28
     |
1657 |                           & ((1 as libc::c_int) << 1 as libc::c_int
     |  ____________________________^
1658 | |                             | (1 as libc::c_int) << 0 as libc::c_int
1659 | |                             | (1 as libc::c_int) << 2 as libc::c_int))
     | |____________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1657 ~                         & ((1 as libc::c_int) << 1 as libc::c_int
1658 ~                             | (1 as libc::c_int) << 0 as libc::c_int | ((1 as libc::c_int) << 2 as libc::c_int)))
     |

warning: operator precedence can trip the unwary
    --> src/tccrun.rs:1657:28
     |
1657 |                           & ((1 as libc::c_int) << 1 as libc::c_int
     |  ____________________________^
1658 | |                             | (1 as libc::c_int) << 0 as libc::c_int
     | |____________________________________________________________________^ help: consider parenthesizing your expression: `((1 as libc::c_int) << 1 as libc::c_int) | ((1 as libc::c_int) << 0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: this `if` statement can be collapsed
    --> src/tccrun.rs:1731:13
     |
1731 | /             if copy == 2 as libc::c_int as libc::c_uint {
1732 | |                 if !(n == 0 as libc::c_int as libc::c_uint) {
1733 | |                     f = k;
1734 | |                     if f >= 0 as libc::c_int as libc::c_uint {
...    |
1789 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1731 ~             if copy == 2 as libc::c_int as libc::c_uint && !(n == 0 as libc::c_int as libc::c_uint) {
1732 +                 f = k;
1733 +                 if f >= 0 as libc::c_int as libc::c_uint {
1734 +                     if f != 0 as libc::c_int as libc::c_uint {
1735 +                         current_block_50 = 12209867499936983673;
1736 +                     } else {
1737 +                         f = 3 as libc::c_int as libc::c_uint;
1738 +                         current_block_50 = 1356832168064818221;
1739 +                     }
1740 +                 } else {
1741 +                     current_block_50 = 1356832168064818221;
1742 +                 }
1743 +                 match current_block_50 {
1744 +                     12209867499936983673 => {}
1745 +                     _ => {
1746 +                         n = (n as Elf64_Addr)
1747 +                             .wrapping_add(
1748 +                                 (n as Elf64_Addr).wrapping_neg()
1749 +                                     & (sysconf(_SC_PAGESIZE as libc::c_int)
1750 +                                         - 1 as libc::c_int as libc::c_long) as Elf64_Addr,
1751 +                             ) as libc::c_uint;
1752 +                         if (*s1).verbose as libc::c_int == 2 as libc::c_int {
1753 +                             printf(
1754 +                                 b"protect         %3s %p  len %05x\n\0" as *const u8
1755 +                                     as *const libc::c_char,
1756 +                                 &*(b"rx\0ro\0rw\0rwx\0" as *const u8 as *const libc::c_char)
1757 +                                     .offset(
1758 +                                         f.wrapping_mul(3 as libc::c_int as libc::c_uint) as isize,
1759 +                                     ) as *const libc::c_char,
1760 +                                 addr as *mut libc::c_void,
1761 +                                 n,
1762 +                             );
1763 +                         }
1764 +                         if protect_pages(
1765 +                             addr as *mut libc::c_void,
1766 +                             n as libc::c_ulong,
1767 +                             f as libc::c_int,
1768 +                         ) < 0 as libc::c_int
1769 +                         {
1770 +                             tcc_enter_state(s1);
1771 +                             return (Some(
1772 +                                 _tcc_error_noabort
1773 +                                     as unsafe extern "C" fn(
1774 +                                         *const libc::c_char,
1775 +                                         ...
1776 +                                     ) -> libc::c_int,
1777 +                             ))
1778 +                                 .expect(
1779 +                                     "non-null function pointer",
1780 +                                 )(
1781 +                                 b"mprotect failed (did you mean to configure --with-selinux?)\0"
1782 +                                     as *const u8 as *const libc::c_char,
1783 +                             );
1784 +                         }
1785 +                     }
1786 +                 }
1787 +             }
     |

warning: this `else { if .. }` block can be collapsed
    --> src/tccrun.rs:2400:32
     |
2400 |                           } else {
     |  ________________________________^
2401 | |                             if ln.offset(7 as libc::c_int as isize) < end {
2402 | |                                 ln = ln.offset(8 as libc::c_int as isize);
2403 | |                                 read64le(ln.offset(-(8 as libc::c_int as isize)));
2404 | |                             } else {};
2405 | |                         };
     | |_________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
     |
2400 ~                         } else if ln.offset(7 as libc::c_int as isize) < end {
2401 +                             ln = ln.offset(8 as libc::c_int as isize);
2402 +                             read64le(ln.offset(-(8 as libc::c_int as isize)));
2403 ~                         } else {};
     |

warning: this `else` branch is empty
    --> src/tccrun.rs:2399:31
     |
2399 | ...                   } else {};
     |                         ^^^^^^^ help: you can remove it
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: this `else` branch is empty
    --> src/tccrun.rs:2404:31
     |
2404 | ...                   } else {};
     |                         ^^^^^^^ help: you can remove it
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_else

warning: type `size_t` should have an upper camel case name
  --> src/tcctools.rs:77:10
   |
77 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/tcctools.rs:78:10
   |
78 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/tcctools.rs:79:10
   |
79 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/tcctools.rs:80:10
   |
80 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/tcctools.rs:81:10
   |
81 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/tcctools.rs:82:10
   |
82 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/tcctools.rs:83:10
   |
83 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/tcctools.rs:84:10
   |
84 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/tcctools.rs:85:10
   |
85 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/tcctools.rs:124:10
    |
124 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/tcctools.rs:126:10
    |
126 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/tcctools.rs:134:10
    |
134 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/tcctools.rs:338:10
    |
338 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/tcctools.rs:339:10
    |
339 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/tcctools.rs:347:10
    |
347 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/tcctools.rs:348:10
    |
348 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/tcctools.rs:488:10
    |
488 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/tcctools.rs:505:10
    |
505 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/tcctools.rs:506:10
    |
506 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Half` should have an upper camel case name
   --> src/tcctools.rs:507:10
    |
507 | pub type Elf64_Half = uint16_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Half`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/tcctools.rs:508:10
    |
508 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Off` should have an upper camel case name
   --> src/tcctools.rs:509:10
    |
509 | pub type Elf64_Off = uint64_t;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Off`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/tcctools.rs:510:10
    |
510 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: this `if` statement can be collapsed
   --> src/tcctools.rs:991:41
    |
991 | / ...                   if (*shdr).sh_type == 3 as libc::c_int as Elf64_Word {
992 | | ...                       if strcmp(
993 | | ...                           shstr.offset((*shdr).sh_name as isize),
994 | | ...                           b".strtab\0" as *const u8 as *const libc::c_char,
...   |
999 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
991 ~                                         if (*shdr).sh_type == 3 as libc::c_int as Elf64_Word && strcmp(
992 +                                                 shstr.offset((*shdr).sh_name as isize),
993 +                                                 b".strtab\0" as *const u8 as *const libc::c_char,
994 +                                             ) == 0 {
995 +                                             strtab = buf.offset((*shdr).sh_offset as isize);
996 +                                         }
    |

warning: type `size_t` should have an upper camel case name
  --> src/x86_64_gen.rs:68:10
   |
68 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/x86_64_gen.rs:69:10
   |
69 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/x86_64_gen.rs:70:10
   |
70 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/x86_64_gen.rs:71:10
   |
71 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/x86_64_gen.rs:72:10
   |
72 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/x86_64_gen.rs:73:10
   |
73 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/x86_64_gen.rs:74:10
   |
74 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/x86_64_gen.rs:75:10
   |
75 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int64_t` should have an upper camel case name
  --> src/x86_64_gen.rs:76:10
   |
76 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
   --> src/x86_64_gen.rs:115:10
    |
115 | pub type _IO_lock_t = ();
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
   --> src/x86_64_gen.rs:117:10
    |
117 | pub type __jmp_buf = [libc::c_long; 8];
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
   --> src/x86_64_gen.rs:125:10
    |
125 | pub type jmp_buf = [__jmp_buf_tag; 1];
    |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/x86_64_gen.rs:329:10
    |
329 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/x86_64_gen.rs:330:10
    |
330 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/x86_64_gen.rs:338:10
    |
338 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/x86_64_gen.rs:339:10
    |
339 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/x86_64_gen.rs:479:10
    |
479 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/x86_64_gen.rs:496:10
    |
496 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/x86_64_gen.rs:497:10
    |
497 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `C2RustUnnamed_4` should have an upper camel case name
   --> src/x86_64_gen.rs:498:10
    |
498 | pub type C2RustUnnamed_4 = libc::c_uint;
    |          ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `C2rustUnnamed4`

warning: type `tcc_token` should have an upper camel case name
   --> src/x86_64_gen.rs:568:10
    |
568 | pub type tcc_token = libc::c_uint;
    |          ^^^^^^^^^ help: convert the identifier to upper camel case: `TccToken`

warning: type `X86_64_Mode` should have an upper camel case name
    --> src/x86_64_gen.rs:1639:10
     |
1639 | pub type X86_64_Mode = libc::c_uint;
     |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `X86_64Mode`

warning: type `__va_arg_type` should have an upper camel case name
    --> src/x86_64_gen.rs:1643:10
     |
1643 | pub type __va_arg_type = libc::c_uint;
     |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `VaArgType`

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1646:13
     |
1646 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
     |  _____________^
1647 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1648 | |             << 8 as libc::c_int) as uint16_t;
     | |_______________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1646 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
1647 ~             << 8 as libc::c_int)) as uint16_t;
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1659:14
     |
1659 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1663:12
     |
1663 |       return read16le(p) as uint32_t
     |  ____________^
1664 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1665 | |             << 16 as libc::c_int;
     | |________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1663 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
1664 ~             << 16 as libc::c_int);
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1764:19
     |
1764 |     if ll != 0 || r >> 3 as libc::c_int & 1 as libc::c_int != 0
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1765:12
     |
1765 |         || r2 >> 3 as libc::c_int & 1 as libc::c_int != 0
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1768:14
     |
1768 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
     |  ______________^
1769 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
1770 | |                 | ll << 3 as libc::c_int) as libc::c_uint,
     | |________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
1768 ~             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
1769 ~                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int | (ll << 3 as libc::c_int)) as libc::c_uint,
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1768:14
     |
1768 |               (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
     |  ______________^
1769 | |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
     | |_________________________________________________________________________________^ help: consider parenthesizing your expression: `0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int | ((r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1768:36
     |
1768 |             (0x40 as libc::c_int | r >> 3 as libc::c_int & 1 as libc::c_int
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:1769:20
     |
1769 |                 | (r2 >> 3 as libc::c_int & 1 as libc::c_int) << 2 as libc::c_int
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r2 >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2052:20
     |
2052 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2053 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2054 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2052 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2053 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2052:21
     |
2052 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2059:24
     |
2059 |                       | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ________________________^
2060 | |                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
2061 | |                         << 20 as libc::c_int | 0x80 as libc::c_int as libc::c_uint))
     | |__________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2059 ~                     | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2060 +                         .wrapping_sub(1 as libc::c_int as libc::c_uint)
2061 ~                         << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2059:25
     |
2059 |                     | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2068:20
     |
2068 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2069 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2070 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2068 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2069 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2068:21
     |
2068 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2077:20
     |
2077 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2078 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2079 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2077 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2078 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2077:21
     |
2077 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2086:20
     |
2086 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2087 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2088 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2086 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2087 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2086:21
     |
2086 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2095:20
     |
2095 |                   | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |  ____________________^
2096 | |                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int
2097 | |                     | 0x80 as libc::c_int as libc::c_uint))
     | |_________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
2095 ~                 | ((((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
2096 ~                     .wrapping_sub(1 as libc::c_int as libc::c_uint) << 20 as libc::c_int) | 0x80 as libc::c_int as libc::c_uint))
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2095:21
     |
2095 |                 | (((1 as libc::c_uint) << 6 as libc::c_int + 6 as libc::c_int)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(1 as libc::c_uint) << (6 as libc::c_int + 6 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/x86_64_gen.rs:2120:13
     |
2120 |             'c_13564: {
     |             ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2214:25
     |
2214 |                     + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2232:21
     |
2232 |                 + ((r >> 3 as libc::c_int & 1 as libc::c_int) << 8 as libc::c_int))
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(r >> 3 as libc::c_int) & 1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/x86_64_gen.rs:2264:17
     |
2264 |                 'c_12383: {
     |                 ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:2298:21
     |
2298 |                     'c_12328: {
     |                     ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:2336:13
     |
2336 |             'c_12235: {
     |             ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:2626:5
     |
2626 |     'c_11235: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2660:18
     |
2660 |         *psize = size + 7 as libc::c_int & !(7 as libc::c_int);
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(size + 7 as libc::c_int) & !(7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:2661:19
     |
2661 |         *palign = align + 7 as libc::c_int & !(7 as libc::c_int);
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(align + 7 as libc::c_int) & !(7 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/x86_64_gen.rs:2925:17
     |
2925 |                 'c_15779: {
     |                 ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:2969:17
     |
2969 |                 'c_15699: {
     |                 ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3018:5
     |
3018 |     'c_15558: {
     |     ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3046:5
     |
3046 |     'c_15522: {
     |     ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3103:21
     |
3103 |                     'c_15384: {
     |                     ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3168:5
     |
3168 |     'c_15144: {
     |     ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3196:5
     |
3196 |     'c_15105: {
     |     ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3308:32
     |
3308 |             seen_stack_size = (seen_stack_size + align - 1 as libc::c_int & -align)
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(seen_stack_size + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3390:28
     |
3390 |                     addr = addr + align - 1 as libc::c_int & -align;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3396:24
     |
3396 |                 addr = addr + align - 1 as libc::c_int & -align;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3419:28
     |
3419 |                     addr = addr + align - 1 as libc::c_int & -align;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(addr + align - 1 as libc::c_int) & -align`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3452:9
     |
3452 |     v = -loc + 15 as libc::c_int & -(16 as libc::c_int);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(-loc + 15 as libc::c_int) & -(16 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3640:19
     |
3640 |             opc = 0xc0 as libc::c_int | opc << 3 as libc::c_int;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3674:26
     |
3674 |                         (0xc0 as libc::c_int | opc << 3 as libc::c_int
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3681:25
     |
3681 |                         0xc0 as libc::c_int | opc << 3 as libc::c_int
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0 as libc::c_int | (opc << 3 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:3690:33
     |
3690 |                 orex(ll, r, fr, opc << 3 as libc::c_int | 0x1 as libc::c_int);
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(opc << 3 as libc::c_int) | 0x1 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: unused label
    --> src/x86_64_gen.rs:3905:9
     |
3905 |         'c_18903: {
     |         ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:3965:9
     |
3965 |         'c_18723: {
     |         ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:4010:9
     |
4010 |         'c_18628: {
     |         ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:4072:9
     |
4072 |         'c_18502: {
     |         ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:4103:13
     |
4103 |             'c_18457: {
     |             ^^^^^^^^

warning: unused label
    --> src/x86_64_gen.rs:4328:9
     |
4328 |         'c_19662: {
     |         ^^^^^^^^

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:4377:9
     |
4377 | /         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
4378 | |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
4379 | |                 << 16 as libc::c_int,
     | |____________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
     |
4377 ~         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int | (((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
4378 ~                 << 16 as libc::c_int),
     |

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:4377:9
     |
4377 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `0xc0b60f as libc::c_int | ((sz << 3 as libc::c_int | xl) << 8 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:4377:36
     |
4377 |         0xc0b60f as libc::c_int | (sz << 3 as libc::c_int | xl) << 8 as libc::c_int
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(sz << 3 as libc::c_int) | xl`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
    --> src/x86_64_gen.rs:4378:16
     |
4378 |             | ((r & 7 as libc::c_int) << 3 as libc::c_int | r & 7 as libc::c_int)
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((r & 7 as libc::c_int) << 3 as libc::c_int) | r & 7 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: type `size_t` should have an upper camel case name
  --> src/x86_64_link.rs:31:10
   |
31 | pub type size_t = libc::c_ulong;
   |          ^^^^^^ help: convert the identifier to upper camel case: `SizeT`

warning: type `__uint8_t` should have an upper camel case name
  --> src/x86_64_link.rs:32:10
   |
32 | pub type __uint8_t = libc::c_uchar;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `__uint16_t` should have an upper camel case name
  --> src/x86_64_link.rs:33:10
   |
33 | pub type __uint16_t = libc::c_ushort;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `__int32_t` should have an upper camel case name
  --> src/x86_64_link.rs:34:10
   |
34 | pub type __int32_t = libc::c_int;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `__uint32_t` should have an upper camel case name
  --> src/x86_64_link.rs:35:10
   |
35 | pub type __uint32_t = libc::c_uint;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `__int64_t` should have an upper camel case name
  --> src/x86_64_link.rs:36:10
   |
36 | pub type __int64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `__uint64_t` should have an upper camel case name
  --> src/x86_64_link.rs:37:10
   |
37 | pub type __uint64_t = libc::c_ulong;
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `__off_t` should have an upper camel case name
  --> src/x86_64_link.rs:38:10
   |
38 | pub type __off_t = libc::c_long;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `OffT`

warning: type `__off64_t` should have an upper camel case name
  --> src/x86_64_link.rs:39:10
   |
39 | pub type __off64_t = libc::c_long;
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `Off64T`

warning: type `int32_t` should have an upper camel case name
  --> src/x86_64_link.rs:40:10
   |
40 | pub type int32_t = __int32_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int32T`

warning: type `int64_t` should have an upper camel case name
  --> src/x86_64_link.rs:41:10
   |
41 | pub type int64_t = __int64_t;
   |          ^^^^^^^ help: convert the identifier to upper camel case: `Int64T`

warning: type `_IO_lock_t` should have an upper camel case name
  --> src/x86_64_link.rs:80:10
   |
80 | pub type _IO_lock_t = ();
   |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `IoLockT`

warning: type `__jmp_buf` should have an upper camel case name
  --> src/x86_64_link.rs:82:10
   |
82 | pub type __jmp_buf = [libc::c_long; 8];
   |          ^^^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `jmp_buf` should have an upper camel case name
  --> src/x86_64_link.rs:90:10
   |
90 | pub type jmp_buf = [__jmp_buf_tag; 1];
   |          ^^^^^^^ help: convert the identifier to upper camel case: `JmpBuf`

warning: type `Elf64_Addr` should have an upper camel case name
   --> src/x86_64_link.rs:294:10
    |
294 | pub type Elf64_Addr = uint64_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Addr`

warning: type `uint64_t` should have an upper camel case name
   --> src/x86_64_link.rs:295:10
    |
295 | pub type uint64_t = __uint64_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint64T`

warning: type `Elf64_Sxword` should have an upper camel case name
   --> src/x86_64_link.rs:303:10
    |
303 | pub type Elf64_Sxword = int64_t;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Sxword`

warning: type `Elf64_Xword` should have an upper camel case name
   --> src/x86_64_link.rs:304:10
    |
304 | pub type Elf64_Xword = uint64_t;
    |          ^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Xword`

warning: type `uint8_t` should have an upper camel case name
   --> src/x86_64_link.rs:444:10
    |
444 | pub type uint8_t = __uint8_t;
    |          ^^^^^^^ help: convert the identifier to upper camel case: `Uint8T`

warning: type `uint16_t` should have an upper camel case name
   --> src/x86_64_link.rs:461:10
    |
461 | pub type uint16_t = __uint16_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint16T`

warning: type `uint32_t` should have an upper camel case name
   --> src/x86_64_link.rs:462:10
    |
462 | pub type uint32_t = __uint32_t;
    |          ^^^^^^^^ help: convert the identifier to upper camel case: `Uint32T`

warning: type `Elf64_Word` should have an upper camel case name
   --> src/x86_64_link.rs:463:10
    |
463 | pub type Elf64_Word = uint32_t;
    |          ^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Word`

warning: type `Elf64_Section` should have an upper camel case name
   --> src/x86_64_link.rs:464:10
    |
464 | pub type Elf64_Section = uint16_t;
    |          ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Elf64Section`

warning: type `gotplt_entry` should have an upper camel case name
   --> src/x86_64_link.rs:479:10
    |
479 | pub type gotplt_entry = libc::c_uint;
    |          ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `GotpltEntry`

warning: operator precedence can trip the unwary
   --> src/x86_64_link.rs:482:13
    |
482 |       return (*p.offset(0 as libc::c_int as isize) as libc::c_int
    |  _____________^
483 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
484 | |             << 8 as libc::c_int) as uint16_t;
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
482 ~     return (*p.offset(0 as libc::c_int as isize) as libc::c_int | ((*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
483 ~             << 8 as libc::c_int)) as uint16_t;
    |

warning: operator precedence can trip the unwary
   --> src/x86_64_link.rs:495:14
    |
495 |         ) = (x as libc::c_int >> 8 as libc::c_int & 255 as libc::c_int) as libc::c_uchar;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(x as libc::c_int >> 8 as libc::c_int) & 255 as libc::c_int`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence

warning: operator precedence can trip the unwary
   --> src/x86_64_link.rs:499:12
    |
499 |       return read16le(p) as uint32_t
    |  ____________^
500 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
501 | |             << 16 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
499 ~     return read16le(p) as uint32_t | ((read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
500 ~             << 16 as libc::c_int);
    |

warning: operator precedence can trip the unwary
   --> src/x86_64_link.rs:514:12
    |
514 |       return read32le(p) as uint64_t
    |  ____________^
515 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
516 | |             << 32 as libc::c_int;
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
514 ~     return read32le(p) as uint64_t | ((read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
515 ~             << 32 as libc::c_int);
    |

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:13581:25
      |
13581 |                         ::core::ffi::VaList,
      |                         ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:13591:29
      |
13591 | ...                   ::core::ffi::VaList,
      |                       ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:14216:13
      |
14216 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:14226:17
      |
14226 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:15105:13
      |
15105 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:15299:17
      |
15299 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:18626:13
      |
18626 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:18628:16
      |
18628 |     let mut v: ::core::ffi::VaListImpl;
      |                ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:18657:17
      |
18657 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:25115:17
      |
25115 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:44897:13
      |
44897 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45037:17
      |
45037 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45044:17
      |
45044 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45051:17
      |
45051 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/libtcc.rs:54:12
   |
54 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/libtcc.rs:66:12
   |
66 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4169:13
     |
4169 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4309:17
     |
4309 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4316:17
     |
4316 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4323:17
     |
4323 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:16510:25
      |
16510 |                         ::core::ffi::VaList,
      |                         ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:16520:29
      |
16520 | ...                   ::core::ffi::VaList,
      |                       ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:17145:13
      |
17145 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:17155:17
      |
17155 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:18034:13
      |
18034 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:18228:17
      |
18228 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:21555:13
      |
21555 |     mut ap: ::core::ffi::VaList,
      |             ^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:21557:16
      |
21557 |     let mut v: ::core::ffi::VaListImpl;
      |                ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:21586:17
      |
21586 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:28044:17
      |
28044 |     let mut ap: ::core::ffi::VaListImpl;
      |                 ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tcc.rs:56:12
   |
56 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tcc.rs:68:12
   |
68 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:2201:13
     |
2201 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:2203:16
     |
2203 |     let mut v: ::core::ffi::VaListImpl;
     |                ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:2233:17
     |
2233 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:8723:17
     |
8723 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tccpp.rs:20:12
   |
20 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tccpp.rs:32:12
   |
32 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:1356:25
     |
1356 |                         ::core::ffi::VaList,
     |                         ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:1366:29
     |
1366 | ...                   ::core::ffi::VaList,
     |                       ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:1992:13
     |
1992 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:2002:17
     |
2002 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:2881:13
     |
2881 |     mut ap: ::core::ffi::VaList,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:3075:17
     |
3075 |     let mut ap: ::core::ffi::VaListImpl;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tccrun.rs:18:12
   |
18 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
  --> src/tccrun.rs:30:12
   |
30 |         _: ::core::ffi::VaList,
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0223]: ambiguous associated type
   --> src/arm64_asm.rs:445:13
    |
445 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
445 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/arm64_gen.rs:526:13
    |
526 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
526 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/c67_gen.rs:496:13
    |
496 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
496 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/i386_asm.rs:553:13
    |
553 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
553 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/riscv64_asm.rs:504:13
    |
504 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
504 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/riscv64_gen.rs:537:13
    |
537 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
537 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/tccasm.rs:602:13
    |
602 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
602 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
    --> src/tccdbg.rs:1339:13
     |
1339 |     pub ld: f128::f128,
     |             ^^^^^^^^^^
     |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
     |
1339 |     pub ld: <f128 as Example>::f128,
     |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/x86_64_gen.rs:522:13
    |
522 |     pub ld: f128::f128,
    |             ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `f128` implemented for `f128`, you could use the fully-qualified path
    |
522 |     pub ld: <f128 as Example>::f128,
    |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1683:30
     |
1683 |         0x1 as libc::c_int | RC_R(0 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1683 -         0x1 as libc::c_int | RC_R(0 as libc::c_int),
1683 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1684:30
     |
1684 |         0x1 as libc::c_int | RC_R(1 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1684 -         0x1 as libc::c_int | RC_R(1 as libc::c_int),
1684 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1685:30
     |
1685 |         0x1 as libc::c_int | RC_R(2 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1685 -         0x1 as libc::c_int | RC_R(2 as libc::c_int),
1685 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1686:30
     |
1686 |         0x1 as libc::c_int | RC_R(3 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1686 -         0x1 as libc::c_int | RC_R(3 as libc::c_int),
1686 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1687:30
     |
1687 |         0x1 as libc::c_int | RC_R(4 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1687 -         0x1 as libc::c_int | RC_R(4 as libc::c_int),
1687 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1688:30
     |
1688 |         0x1 as libc::c_int | RC_R(5 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1688 -         0x1 as libc::c_int | RC_R(5 as libc::c_int),
1688 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1689:30
     |
1689 |         0x1 as libc::c_int | RC_R(6 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1689 -         0x1 as libc::c_int | RC_R(6 as libc::c_int),
1689 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1690:30
     |
1690 |         0x1 as libc::c_int | RC_R(7 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1690 -         0x1 as libc::c_int | RC_R(7 as libc::c_int),
1690 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1691:30
     |
1691 |         0x2 as libc::c_int | RC_F(0 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1691 -         0x2 as libc::c_int | RC_F(0 as libc::c_int),
1691 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1692:30
     |
1692 |         0x2 as libc::c_int | RC_F(1 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1692 -         0x2 as libc::c_int | RC_F(1 as libc::c_int),
1692 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1693:30
     |
1693 |         0x2 as libc::c_int | RC_F(2 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1693 -         0x2 as libc::c_int | RC_F(2 as libc::c_int),
1693 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1694:30
     |
1694 |         0x2 as libc::c_int | RC_F(3 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1694 -         0x2 as libc::c_int | RC_F(3 as libc::c_int),
1694 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1695:30
     |
1695 |         0x2 as libc::c_int | RC_F(4 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1695 -         0x2 as libc::c_int | RC_F(4 as libc::c_int),
1695 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1696:30
     |
1696 |         0x2 as libc::c_int | RC_F(5 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1696 -         0x2 as libc::c_int | RC_F(5 as libc::c_int),
1696 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1697:30
     |
1697 |         0x2 as libc::c_int | RC_F(6 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1697 -         0x2 as libc::c_int | RC_F(6 as libc::c_int),
1697 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:1698:30
     |
1698 |         0x2 as libc::c_int | RC_F(7 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
1698 -         0x2 as libc::c_int | RC_F(7 as libc::c_int),
1698 +         0x2 as libc::c_int | RC_F(),
     |

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_R` in this scope
    --> src/arm64_gen.rs:1676:8
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1676 |     if TREG_R(0 as libc::c_int) <= r && r <= TREG_R10 as libc::c_int {} else {
     |        ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_R` in this scope
    --> src/arm64_gen.rs:1690:12
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1690 |         if TREG_R(0 as libc::c_int) <= r && r <= TREG_R10 as libc::c_int {} else {
     |            ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:1707:8
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1707 |     if TREG_F(0 as libc::c_int) <= r && r <= TREG_F(7 as libc::c_int) {} else {
     |        ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:1707:46
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1707 |     if TREG_F(0 as libc::c_int) <= r && r <= TREG_F(7 as libc::c_int) {} else {
     |                                              ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:1721:12
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1721 |         if TREG_F(0 as libc::c_int) <= r && r <= TREG_F(7 as libc::c_int) {} else {
     |            ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:1721:50
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1721 |         if TREG_F(0 as libc::c_int) <= r && r <= TREG_F(7 as libc::c_int) {} else {
     |                                                  ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:1736:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
1736 |     return (r - TREG_F(0 as libc::c_int)) as uint32_t;
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

warning: unreachable statement
    --> src/arm64_gen.rs:2067:5
     |
2056 | /     __assert_fail(
2057 | |         b"0\0" as *const u8 as *const libc::c_char,
2058 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
2059 | |             as *const u8 as *const libc::c_char,
...    |
2065 | |             .as_ptr(),
2066 | |     );
     | |_____- any code following this expression is unreachable
2067 | /     'c_14603: {
2068 | |         __assert_fail(
2069 | |             b"0\0" as *const u8 as *const libc::c_char,
2070 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
2078 | |         );
2079 | |     };
     | |______^ unreachable statement
     |
     = note: `#[warn(unreachable_code)]` on by default

warning: unreachable statement
    --> src/arm64_gen.rs:2457:13
     |
2446 | /             __assert_fail(
2447 | |                 b"0\0" as *const u8 as *const libc::c_char,
2448 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
2449 | |                     as *const u8 as *const libc::c_char,
...    |
2455 | |                     .as_ptr(),
2456 | |             );
     | |_____________- any code following this expression is unreachable
2457 | /             'c_18855: {
2458 | |                 __assert_fail(
2459 | |                     b"0\0" as *const u8 as *const libc::c_char,
2460 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
2468 | |                 );
2469 | |             };
     | |______________^ unreachable statement

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2611:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2611 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2643:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2643 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2672:21
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2672 |             if r >= TREG_F(0 as libc::c_int) {
     |                     ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2697:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2697 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2733:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2733 |         if r >= TREG_F(0 as libc::c_int) && svr >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2733:52
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2733 |         if r >= TREG_F(0 as libc::c_int) && svr >= TREG_F(0 as libc::c_int) {
     |                                                    ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2745:26
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2745 |         } else if !(r >= TREG_F(0 as libc::c_int)) && !(svr >= TREG_F(0 as libc::c_int))
     |                          ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2745:64
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2745 |         } else if !(r >= TREG_F(0 as libc::c_int)) && !(svr >= TREG_F(0 as libc::c_int))
     |                                                                ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

warning: unreachable statement
    --> src/arm64_gen.rs:2760:13
     |
2749 | /             __assert_fail(
2750 | |                 b"0\0" as *const u8 as *const libc::c_char,
2751 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
2752 | |                     as *const u8 as *const libc::c_char,
...    |
2758 | |                     .as_ptr(),
2759 | |             );
     | |_____________- any code following this expression is unreachable
2760 | /             'c_15295: {
2761 | |                 __assert_fail(
2762 | |                     b"0\0" as *const u8 as *const libc::c_char,
2763 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
2771 | |                 );
2772 | |             };
     | |______________^ unreachable statement

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2807:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2807 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

warning: unreachable statement
    --> src/arm64_gen.rs:2847:5
     |
2836 | /     __assert_fail(
2837 | |         b"0\0" as *const u8 as *const libc::c_char,
2838 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
2839 | |             as *const u8 as *const libc::c_char,
...    |
2845 | |             .as_ptr(),
2846 | |     );
     | |_____- any code following this expression is unreachable
2847 | /     'c_11368: {
2848 | |         __assert_fail(
2849 | |             b"0\0" as *const u8 as *const libc::c_char,
2850 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
2858 | |         );
2859 | |     };
     | |______^ unreachable statement

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2873:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2873 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2904:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2904 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2931:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2931 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_F` in this scope
    --> src/arm64_gen.rs:2954:17
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
2954 |         if r >= TREG_F(0 as libc::c_int) {
     |                 ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

warning: unreachable statement
    --> src/arm64_gen.rs:2989:5
     |
2978 | /     __assert_fail(
2979 | |         b"0\0" as *const u8 as *const libc::c_char,
2980 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
2981 | |             as *const u8 as *const libc::c_char,
...    |
2987 | |             .as_ptr(),
2988 | |     );
     | |_____- any code following this expression is unreachable
2989 | /     'c_16227: {
2990 | |         __assert_fail(
2991 | |             b"0\0" as *const u8 as *const libc::c_char,
2992 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
3000 | |         );
3001 | |     };
     | |______^ unreachable statement

error[E0599]: no method named `func_type` found for struct `arm64_gen::FuncAttr` in the current scope
    --> src/arm64_gen.rs:3461:10
     |
417  |   pub struct FuncAttr {
     |   ------------------- method `func_type` not found for this struct
...
3456 |       let mut variadic: libc::c_int = (((*(*vtop.offset(-nb_args as isize)).type_0.ref_0)
     |  ______________________________________-
3457 | |         .c2rust_unnamed
3458 | |         .c2rust_unnamed
3459 | |         .c2rust_unnamed
3460 | |         .f)
3461 | |         .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
     | |         -^^^^^^^^^ method not found in `FuncAttr`
     | |_________|
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:3642:25
     |
3642 |                           RC_R(
     |                           ^^^^
3643 | /                             (*a.offset(i as isize))
3644 | |                                 .wrapping_div(2 as libc::c_int as libc::c_ulong),
     | |________________________________________________________________________________- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3643 -                             (*a.offset(i as isize))
3644 -                                 .wrapping_div(2 as libc::c_int as libc::c_ulong),
3645 -                         ),
3643 +                             ),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:3656:21
     |
3656 |                       RC_R(
     |                       ^^^^
3657 | /                         (*a.offset(i as isize))
3658 | |                             .wrapping_div(2 as libc::c_int as libc::c_ulong),
     | |____________________________________________________________________________- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3657 -                         (*a.offset(i as isize))
3658 -                             .wrapping_div(2 as libc::c_int as libc::c_ulong),
3659 -                     ),
3657 +                         ),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:3696:21
     |
3696 |                       RC_F(
     |                       ^^^^
3697 | /                         (*a.offset(i as isize))
3698 | |                             .wrapping_div(2 as libc::c_int as libc::c_ulong)
3699 | |                             .wrapping_sub(8 as libc::c_int as libc::c_ulong),
     | |____________________________________________________________________________- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3697 -                         (*a.offset(i as isize))
3698 -                             .wrapping_div(2 as libc::c_int as libc::c_ulong)
3699 -                             .wrapping_sub(8 as libc::c_int as libc::c_ulong),
3700 -                     ),
3697 +                         ),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:3711:16
     |
3711 |             gv(RC_R(8 as libc::c_int));
     |                ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3711 -             gv(RC_R(8 as libc::c_int));
3711 +             gv(RC_R());
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:3740:12
     |
3740 |         gv(RC_R(8 as libc::c_int));
     |            ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3740 -         gv(RC_R(8 as libc::c_int));
3740 +         gv(RC_R());
     |

error[E0599]: no method named `func_type` found for struct `arm64_gen::FuncAttr` in the current scope
    --> src/arm64_gen.rs:3840:10
     |
417  |   pub struct FuncAttr {
     |   ------------------- method `func_type` not found for this struct
...
3835 |       let mut variadic: libc::c_int = (((*(*func_sym).type_0.ref_0)
     |  ______________________________________-
3836 | |         .c2rust_unnamed
3837 | |         .c2rust_unnamed
3838 | |         .c2rust_unnamed
3839 | |         .f)
3840 | |         .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
     | |         -^^^^^^^^^ method not found in `FuncAttr`
     | |_________|
     |

warning: unreachable statement
    --> src/arm64_gen.rs:4133:13
     |
4122 | /             __assert_fail(
4123 | |                 b"0\0" as *const u8 as *const libc::c_char,
4124 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
4125 | |                     as *const u8 as *const libc::c_char,
...    |
4131 | |                     .as_ptr(),
4132 | |             );
     | |_____________- any code following this expression is unreachable
4133 | /             'c_25641: {
4134 | |                 __assert_fail(
4135 | |                     b"0\0" as *const u8 as *const libc::c_char,
4136 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
4144 | |                 );
4145 | |             };
     | |______________^ unreachable statement

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:4249:20
     |
4249 |                 gv(RC_R(0 as libc::c_int));
     |                    ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
4249 -                 gv(RC_R(0 as libc::c_int));
4249 +                 gv(RC_R());
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:4270:20
     |
4270 |                 gv(RC_R(0 as libc::c_int));
     |                    ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
4270 -                 gv(RC_R(0 as libc::c_int));
4270 +                 gv(RC_R());
     |

warning: unreachable statement
    --> src/arm64_gen.rs:4300:13
     |
4289 | /             __assert_fail(
4290 | |                 b"0\0" as *const u8 as *const libc::c_char,
4291 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
4292 | |                     as *const u8 as *const libc::c_char,
...    |
4298 | |                     .as_ptr(),
4299 | |             );
     | |_____________- any code following this expression is unreachable
4300 | /             'c_25764: {
4301 | |                 __assert_fail(
4302 | |                     b"0\0" as *const u8 as *const libc::c_char,
4303 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
4311 | |                 );
4312 | |             };
     | |______________^ unreachable statement

warning: unreachable statement
    --> src/arm64_gen.rs:4945:13
     |
4934 | /             __assert_fail(
4935 | |                 b"0\0" as *const u8 as *const libc::c_char,
4936 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
4937 | |                     as *const u8 as *const libc::c_char,
...    |
4943 | |                     .as_ptr(),
4944 | |             );
     | |_____________- any code following this expression is unreachable
4945 | /             'c_11576: {
4946 | |                 __assert_fail(
4947 | |                     b"0\0" as *const u8 as *const libc::c_char,
4948 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
4956 | |                 );
4957 | |             };
     | |______________^ unreachable statement

warning: unreachable statement
    --> src/arm64_gen.rs:5013:17
     |
5002 | /                 __assert_fail(
5003 | |                     b"0\0" as *const u8 as *const libc::c_char,
5004 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
5005 | |                         as *const u8 as *const libc::c_char,
...    |
5011 | |                         .as_ptr(),
5012 | |                 );
     | |_________________- any code following this expression is unreachable
5013 | /                 'c_23157: {
5014 | |                     __assert_fail(
5015 | |                         b"0\0" as *const u8 as *const libc::c_char,
5016 | |                         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
5024 | |                     );
5025 | |                 };
     | |__________________^ unreachable statement

warning: unreachable statement
    --> src/arm64_gen.rs:5188:13
     |
5177 | /             __assert_fail(
5178 | |                 b"0\0" as *const u8 as *const libc::c_char,
5179 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
5180 | |                     as *const u8 as *const libc::c_char,
...    |
5186 | |                     .as_ptr(),
5187 | |             );
     | |_____________- any code following this expression is unreachable
5188 | /             'c_22517: {
5189 | |                 __assert_fail(
5190 | |                     b"0\0" as *const u8 as *const libc::c_char,
5191 | |                     b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/arm64-gen.c\0"
...    |
5199 | |                 );
5200 | |             };
     | |______________^ unreachable statement

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_R` in this scope
    --> src/arm64_gen.rs:5564:21
     |
516  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
5564 |         (*vtop).r = TREG_R(0 as libc::c_int) as libc::c_ushort;
     |                     ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5575:30
     |
5575 |         0x1 as libc::c_int | RC_R(0 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5575 -         0x1 as libc::c_int | RC_R(0 as libc::c_int),
5575 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5576:30
     |
5576 |         0x1 as libc::c_int | RC_R(1 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5576 -         0x1 as libc::c_int | RC_R(1 as libc::c_int),
5576 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5577:30
     |
5577 |         0x1 as libc::c_int | RC_R(2 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5577 -         0x1 as libc::c_int | RC_R(2 as libc::c_int),
5577 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5578:30
     |
5578 |         0x1 as libc::c_int | RC_R(3 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5578 -         0x1 as libc::c_int | RC_R(3 as libc::c_int),
5578 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5579:30
     |
5579 |         0x1 as libc::c_int | RC_R(4 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5579 -         0x1 as libc::c_int | RC_R(4 as libc::c_int),
5579 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5580:30
     |
5580 |         0x1 as libc::c_int | RC_R(5 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5580 -         0x1 as libc::c_int | RC_R(5 as libc::c_int),
5580 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5581:30
     |
5581 |         0x1 as libc::c_int | RC_R(6 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5581 -         0x1 as libc::c_int | RC_R(6 as libc::c_int),
5581 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5582:30
     |
5582 |         0x1 as libc::c_int | RC_R(7 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5582 -         0x1 as libc::c_int | RC_R(7 as libc::c_int),
5582 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5583:30
     |
5583 |         0x1 as libc::c_int | RC_R(8 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5583 -         0x1 as libc::c_int | RC_R(8 as libc::c_int),
5583 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5584:30
     |
5584 |         0x1 as libc::c_int | RC_R(9 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5584 -         0x1 as libc::c_int | RC_R(9 as libc::c_int),
5584 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5585:30
     |
5585 |         0x1 as libc::c_int | RC_R(10 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5585 -         0x1 as libc::c_int | RC_R(10 as libc::c_int),
5585 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5586:30
     |
5586 |         0x1 as libc::c_int | RC_R(11 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5586 -         0x1 as libc::c_int | RC_R(11 as libc::c_int),
5586 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5587:30
     |
5587 |         0x1 as libc::c_int | RC_R(12 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5587 -         0x1 as libc::c_int | RC_R(12 as libc::c_int),
5587 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5588:30
     |
5588 |         0x1 as libc::c_int | RC_R(13 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5588 -         0x1 as libc::c_int | RC_R(13 as libc::c_int),
5588 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5589:30
     |
5589 |         0x1 as libc::c_int | RC_R(14 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5589 -         0x1 as libc::c_int | RC_R(14 as libc::c_int),
5589 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5590:30
     |
5590 |         0x1 as libc::c_int | RC_R(15 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5590 -         0x1 as libc::c_int | RC_R(15 as libc::c_int),
5590 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5591:30
     |
5591 |         0x1 as libc::c_int | RC_R(16 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5591 -         0x1 as libc::c_int | RC_R(16 as libc::c_int),
5591 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5592:30
     |
5592 |         0x1 as libc::c_int | RC_R(17 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5592 -         0x1 as libc::c_int | RC_R(17 as libc::c_int),
5592 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5593:30
     |
5593 |         0x1 as libc::c_int | RC_R(18 as libc::c_int),
     |                              ^^^^ ----------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5593 -         0x1 as libc::c_int | RC_R(18 as libc::c_int),
5593 +         0x1 as libc::c_int | RC_R(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5605:30
     |
5605 |         0x2 as libc::c_int | RC_F(0 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5605 -         0x2 as libc::c_int | RC_F(0 as libc::c_int),
5605 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5606:30
     |
5606 |         0x2 as libc::c_int | RC_F(1 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5606 -         0x2 as libc::c_int | RC_F(1 as libc::c_int),
5606 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5607:30
     |
5607 |         0x2 as libc::c_int | RC_F(2 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5607 -         0x2 as libc::c_int | RC_F(2 as libc::c_int),
5607 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5608:30
     |
5608 |         0x2 as libc::c_int | RC_F(3 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5608 -         0x2 as libc::c_int | RC_F(3 as libc::c_int),
5608 +         0x2 as libc::c_int | RC_F(),
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/arm64_gen.rs:5609:30
     |
5609 |         0x2 as libc::c_int | RC_F(4 as libc::c_int),
     |                              ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/arm64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
5609 -         0x2 as libc::c_int | RC_F(4 as libc::c_int),
5609 +         0x2 as libc::c_int | RC_F(),
     |

error[E0425]: cannot find function `greloc` in this scope
   --> src/c67_gen.rs:603:9
    |
603 |         greloc((*tcc_state).cur_text_section, sym, t, 0x54 as libc::c_int);
    |         ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
   --> src/c67_gen.rs:604:9
    |
604 |         greloc(
    |         ^^^^^^ not found in this scope

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:688:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
688 |             C67_map_regn(b) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:691:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
691 |                 | C67_map_regs(b) << 1 as libc::c_int,
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:697:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
697 |             C67_map_regn(b) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:700:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
700 |                 | C67_map_regs(b) << 1 as libc::c_int,
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:706:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
706 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:714:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
714 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:721:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
721 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:729:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
729 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:736:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
736 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:744:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
744 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:751:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
751 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:759:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
759 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:766:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
766 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:774:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
774 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:781:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
781 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:789:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
789 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:796:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
796 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:796:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
796 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:800:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
800 |                 | C67_map_regs(b) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:803:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
803 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:810:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
810 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:810:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
810 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:814:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
814 |                 | C67_map_regs(b) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:817:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
817 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:824:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
824 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:824:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
824 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:828:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
828 |                 | C67_map_regs(b) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:831:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
831 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:847:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
847 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:847:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
847 |             C67_map_regn(a) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:850:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
850 |                 | C67_map_regs(b) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:853:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
853 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:860:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
860 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:868:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
868 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:875:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
875 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:883:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
883 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:890:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
890 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:898:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
898 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:905:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
905 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:913:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
913 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:920:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
920 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:928:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
928 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:935:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
935 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:943:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
943 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:950:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
950 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:958:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
958 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:965:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
965 |             C67_map_regn(a) << 23 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:973:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
973 |                 | C67_map_regs(a) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:980:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
980 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:980:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
980 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:984:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
984 |                 | C67_map_regs(a) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:987:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
987 |                 | C67_map_regs(b) << 1 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:994:13
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
994 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
   --> src/c67_gen.rs:994:52
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
994 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
    |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
   --> src/c67_gen.rs:998:19
    |
621 | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
    | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
998 |                 | C67_map_regs(a) << 7 as libc::c_int
    |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1001:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1001 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1008:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1008 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1008:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1008 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1012:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1012 |                 | C67_map_regs(a) << 7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1015:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1015 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1022:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1022 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1022:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1022 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1026:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1026 |                 | C67_map_regs(a) << 7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1029:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1029 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1036:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1036 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1036:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1036 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1040:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1040 |                 | C67_map_regs(a) << 7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1043:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1043 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1050:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1050 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1050:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1050 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1054:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1054 |                 | C67_map_regs(a) << 7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1057:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1057 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1064:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1064 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1064:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1064 |             C67_map_regn(b) << 23 as libc::c_int | C67_map_regn(a) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1068:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1068 |                 | C67_map_regs(a) << 7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1071:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1071 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1077:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1077 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1077:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1077 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1078:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1078 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1078:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1078 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1088:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1088 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1088:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1088 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1089:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1089 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1092:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1092 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1098:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1098 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1098:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1098 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1099:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1099 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1099:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1099 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1109:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1109 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1109:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1109 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1110:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1110 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1113:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1113 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1119:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1119 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1119:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1119 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1120:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1120 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1120:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1120 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1130:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1130 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1130:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1130 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1131:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1131 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1134:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1134 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1140:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1140 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1140:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1140 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1141:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1141 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1141:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1141 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1151:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1151 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1151:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1151 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1152:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1152 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1155:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1155 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1161:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1161 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1161:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1161 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1162:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1162 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1162:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1162 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1172:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1172 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1172:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1172 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1173:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1173 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1176:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1176 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1182:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1182 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1182:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1182 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1183:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1183 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1183:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1183 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1193:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1193 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1193:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1193 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1194:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1194 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1197:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1197 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1203:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1203 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1203:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1203 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1204:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1204 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1204:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1204 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1214:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1214 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1214:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1214 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1215:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1215 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1218:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1218 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1224:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1224 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1224:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1224 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1225:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1225 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1225:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1225 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1235:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1235 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1235:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1235 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1236:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1236 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1239:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1239 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1245:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1245 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1245:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1245 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1246:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1246 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1246:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1246 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1256:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1256 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1256:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1256 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1257:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1257 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1260:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1260 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1266:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1266 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1266:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1266 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1267:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1267 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1267:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1267 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1277:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1277 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1277:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1277 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1278:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1278 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1281:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1281 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1287:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1287 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1287:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1287 |         xpath = C67_map_regs(a) ^ C67_map_regs(b);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1288:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1288 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1288:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1288 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1298:13
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1298 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |             ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1298:52
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1298 |             C67_map_regn(c) << 23 as libc::c_int | C67_map_regn(b) << 18 as libc::c_int
     |                                                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1299:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1299 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1302:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1302 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1318:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1318 |         xpath = C67_map_regs(c) ^ 1 as libc::c_int;
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1322:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1322 |                 | C67_map_regn(c) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1332:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1332 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1332:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1332 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1336:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1336 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1337:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1337 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1341:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1341 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1347:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1347 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1347:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1347 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1351:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1351 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1352:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1352 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1356:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1356 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1362:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1362 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1362:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1362 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1366:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1366 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1367:20
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1367 |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     |                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1371:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1371 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1377:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1377 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1377:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1377 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1381:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1381 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1382:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1382 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1386:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1386 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1392:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1392 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1392:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1392 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1396:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1396 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1397:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1397 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1401:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1401 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1407:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1407 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1407:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1407 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1411:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1411 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1412:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1412 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1416:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1416 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1422:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1422 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1422:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1422 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1426:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1426 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1427:20
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1427 |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     |                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1431:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1431 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1437:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1437 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1437:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1437 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1441:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1441 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1442:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1442 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1446:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1446 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1452:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1452 |         if !(C67_map_regs(b) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1452:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1452 |         if !(C67_map_regs(b) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1464:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1464 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1465:20
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1465 |                 | (C67_map_regn(b) + 1 as libc::c_int) << 18 as libc::c_int
     |                    ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1470:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1470 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1476:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1476 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1476:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1476 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1477:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1477 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1477:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1477 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1489:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1489 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1490:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1490 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1491:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1491 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1494:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1494 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1500:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1500 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1500:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1500 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1501:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1501 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1501:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1501 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1513:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1513 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1514:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1514 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1515:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1515 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1518:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1518 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1524:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1524 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1524:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1524 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1525:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1525 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1525:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1525 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1537:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1537 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1538:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1538 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1539:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1539 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1542:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1542 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1548:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1548 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1548:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1548 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1549:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1549 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1549:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1549 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1561:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1561 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1562:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1562 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1563:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1563 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1566:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1566 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1572:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1572 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1572:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1572 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1573:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1573 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1573:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1573 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1585:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1585 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1586:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1586 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1587:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1587 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1590:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1590 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1596:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1596 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1596:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1596 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1597:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1597 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1597:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1597 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1609:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1609 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1610:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1610 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1611:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1611 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1614:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1614 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1620:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1620 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1620:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1620 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1621:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1621 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1621:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1621 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1633:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1633 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1634:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1634 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1635:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1635 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1638:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1638 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1644:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1644 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1644:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1644 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1645:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1645 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1645:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1645 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1657:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1657 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1658:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1658 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1659:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1659 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1662:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1662 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1668:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1668 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1668:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1668 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1669:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1669 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1669:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1669 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1681:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1681 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1682:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1682 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1683:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1683 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1686:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1686 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1692:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1692 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1692:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1692 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1693:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1693 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1693:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1693 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1705:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1705 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1706:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1706 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1707:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1707 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1710:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1710 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1716:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1716 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1716:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1716 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1717:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1717 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1717:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1717 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1729:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1729 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1730:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1730 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1731:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1731 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1734:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1734 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1740:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1740 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1740:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1740 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1741:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1741 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1741:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1741 |         if !(C67_map_regs(a) == C67_map_regs(c)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1753:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1753 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1754:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1754 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1755:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1755 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1758:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1758 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1764:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1764 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1764:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1764 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1765:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1765 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1765:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1765 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1777:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1777 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1778:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1778 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1779:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1779 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1782:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1782 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1788:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1788 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1788:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1788 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1789:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1789 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1789:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1789 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1801:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1801 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1802:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1802 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1803:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1803 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1806:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1806 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1812:17
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1812 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1812:35
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1812 |         xpath = C67_map_regs(b) ^ C67_map_regs(c);
     |                                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1813:14
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1813 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |              ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1813:33
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1813 |         if !(C67_map_regs(c) == C67_map_regs(a)) {
     |                                 ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1825:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1825 |                 | C67_map_regn(c) << 23 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1826:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1826 |                 | C67_map_regn(b) << 18 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1827:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1827 |                 | C67_map_regn(a) << 13 as libc::c_int | xpath << 12 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1830:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1830 |                 | C67_map_regs(c) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1840:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1840 |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1842:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1842 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regn` in this scope
    --> src/c67_gen.rs:1852:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1852 |                 | C67_map_regn(b) << 23 as libc::c_int | a << 0o7 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function, tuple struct or tuple variant `C67_map_regs` in this scope
    --> src/c67_gen.rs:1854:19
     |
621  | pub unsafe extern "C" fn C67_map_regc(mut r: libc::c_int) -> libc::c_int {
     | ------------------------------------------------------------------------ similarly named function `C67_map_regc` defined here
...
1854 |                 | C67_map_regs(b) << 1 as libc::c_int
     |                   ^^^^^^^^^^^^ help: a function with a similar name exists: `C67_map_regc`

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2413:13
     |
2413 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2419:13
     |
2419 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2472:13
     |
2472 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2478:13
     |
2478 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2534:17
     |
2534 |                 greloc(
     |                 ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2540:17
     |
2540 |                 greloc(
     |                 ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2616:13
     |
2616 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2622:13
     |
2622 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2640:17
     |
2640 |                 greloc((*tcc_state).cur_text_section, sym, ind, 0x54 as libc::c_int);
     |                 ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2641:17
     |
2641 |                 greloc(
     |                 ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2672:13
     |
2672 |             greloc((*tcc_state).cur_text_section, sym, ind, 0x54 as libc::c_int);
     |             ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2673:13
     |
2673 |             greloc(
     |             ^^^^^^ not found in this scope

error[E0599]: no method named `func_call` found for struct `c67_gen::FuncAttr` in the current scope
    --> src/c67_gen.rs:2769:73
     |
389  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
2769 |     func_call = ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call()
     |                                                                         ^^^^^^^^^ method not found in `FuncAttr`

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2866:5
     |
2866 |     greloc((*tcc_state).cur_text_section, sym, ind, 0x54 as libc::c_int);
     |     ^^^^^^ not found in this scope

error[E0425]: cannot find function `greloc` in this scope
    --> src/c67_gen.rs:2867:5
     |
2867 |     greloc(
     |     ^^^^^^ not found in this scope

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
    --> src/libtcc.rs:6427:29
     |
879  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
6427 |                 if ((*t).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
    --> src/libtcc.rs:6656:29
     |
879  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
6656 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
    --> src/libtcc.rs:6726:29
     |
879  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
6726 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
    --> src/libtcc.rs:6801:29
     |
879  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
6801 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:14218:57
      |
14218 |     let mut ret: libc::c_int = vfprintf(stderr, fmt, ap.as_va_list());
      |                                                         ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:14229:28
      |
14229 |     r = rt_vprintf(fmt, ap.as_va_list());
      |                            ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:15155:12
      |
15155 |         ap.as_va_list(),
      |            ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:15309:50
      |
15309 |     ret = _tcc_backtrace(f, msg.as_mut_ptr(), ap.as_va_list());
      |                                                  ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

warning: unreachable statement
     --> src/libtcc.rs:16354:5
      |
16343 | /     __assert_fail(
16344 | |         b"0\0" as *const u8 as *const libc::c_char,
16345 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
16346 | |             as *const u8 as *const libc::c_char,
...     |
16352 | |             .as_ptr(),
16353 | |     );
      | |_____- any code following this expression is unreachable
16354 | /     'c_42430: {
16355 | |         __assert_fail(
16356 | |             b"0\0" as *const u8 as *const libc::c_char,
16357 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...     |
16365 | |         );
16366 | |     };
      | |______^ unreachable statement

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:16944:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
16943 |       if ((*(*vtop).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
16944 | |         .func_type() as libc::c_int != 1 as libc::c_int
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

warning: unreachable statement
     --> src/libtcc.rs:18034:9
      |
18023 | /         __assert_fail(
18024 | |             b"0\0" as *const u8 as *const libc::c_char,
18025 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
18026 | |                 as *const u8 as *const libc::c_char,
...     |
18032 | |                 .as_ptr(),
18033 | |         );
      | |_________- any code following this expression is unreachable
18034 | /         'c_40936: {
18035 | |             __assert_fail(
18036 | |                 b"0\0" as *const u8 as *const libc::c_char,
18037 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...     |
18045 | |             );
18046 | |         };
      | |__________^ unreachable statement

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:18642:15
      |
18642 |             v.as_va_list(),
      |               ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:18660:38
      |
18660 |     len = cstr_vprintf(cstr, fmt, ap.as_va_list());
      |                                      ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:25121:26
      |
25121 |     vfprintf(fp, msg, ap.as_va_list());
      |                          ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0599]: no method named `set_func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:25624:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `set_func_call` not found for this struct
...
25623 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
25624 | |         .set_func_call(0 as libc::c_int as libc::c_uint);
      | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `set_func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:25626:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `set_func_type` not found for this struct
...
25625 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
25626 | |         .set_func_type(2 as libc::c_int as libc::c_uint);
      | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:25695:19
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
25695 |     if ((*sym).a).visibility() != 0 {
      |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:25699:26
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
25699 |             | ((*sym).a).visibility() as libc::c_int) as libc::c_uchar;
      |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:25703:26
      |
879   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
25703 |     } else if ((*sym).a).weak() != 0 {
      |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26534:15
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
26534 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
      |               ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26534:54
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
26534 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
      |                                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26535:15
      |
879   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
26535 |         (*sa).set_aligned((*sa1).aligned());
      |               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26535:34
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
26535 |         (*sa).set_aligned((*sa1).aligned());
      |                                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26537:11
      |
879   | pub struct SymAttr {
      | ------------------ method `set_packed` not found for this struct
...
26537 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |           ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26537:28
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
26537 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26537:46
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
26537 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |                                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26538:11
      |
879   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
26538 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |           ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26538:26
      |
879   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
26538 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26538:42
      |
879   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
26538 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |                                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26540:10
      |
879   |   pub struct SymAttr {
      |   ------------------ method `set_nodebug` not found for this struct
...
26539 | /     (*sa)
26540 | |         .set_nodebug(
      | |         -^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26541:19
      |
879   | pub struct SymAttr {
      | ------------------ method `nodebug` not found for this struct
...
26541 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26541:38
      |
879   | pub struct SymAttr {
      | ------------------ method `nodebug` not found for this struct
...
26541 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
      |                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26543:15
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
26543 |     if (*sa1).visibility() as libc::c_int != 0 as libc::c_int {
      |               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26544:42
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
26544 |         let mut vis: libc::c_int = (*sa).visibility() as libc::c_int;
      |                                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26545:52
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
26545 |         if vis == 0 as libc::c_int || vis > (*sa1).visibility() as libc::c_int {
      |                                                    ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26546:26
      |
879   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
26546 |             vis = (*sa1).visibility() as libc::c_int;
      |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26548:15
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
26548 |         (*sa).set_visibility(vis as libc::c_ushort);
      |               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllexport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26551:10
      |
879   |   pub struct SymAttr {
      |   ------------------ method `set_dllexport` not found for this struct
...
26550 | /     (*sa)
26551 | |         .set_dllexport(
      | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `dllexport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26552:19
      |
879   | pub struct SymAttr {
      | ------------------ method `dllexport` not found for this struct
...
26552 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllexport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26552:40
      |
879   | pub struct SymAttr {
      | ------------------ method `dllexport` not found for this struct
...
26552 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
      |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26555:10
      |
879   |   pub struct SymAttr {
      |   ------------------ method `set_nodecorate` not found for this struct
...
26554 | /     (*sa)
26555 | |         .set_nodecorate(
      | |         -^^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `nodecorate` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26556:19
      |
879   | pub struct SymAttr {
      | ------------------ method `nodecorate` not found for this struct
...
26556 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodecorate` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26556:41
      |
879   | pub struct SymAttr {
      | ------------------ method `nodecorate` not found for this struct
...
26556 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
      |                                         ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26559:10
      |
879   |   pub struct SymAttr {
      |   ------------------ method `set_dllimport` not found for this struct
...
26558 | /     (*sa)
26559 | |         .set_dllimport(
      | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `dllimport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26560:19
      |
879   | pub struct SymAttr {
      | ------------------ method `dllimport` not found for this struct
...
26560 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllimport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:26560:40
      |
879   | pub struct SymAttr {
      | ------------------ method `dllimport` not found for this struct
...
26560 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
      |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26564:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
26564 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26564:56
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
26564 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26565:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
26565 |         (*fa).set_func_call((*fa1).func_call());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26565:36
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
26565 |         (*fa).set_func_call((*fa1).func_call());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26567:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
26567 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26567:56
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
26567 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26568:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_type` not found for this struct
...
26568 |         (*fa).set_func_type((*fa1).func_type());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26568:36
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
26568 |         (*fa).set_func_type((*fa1).func_type());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26570:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
26570 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26570:56
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
26570 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26571:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_args` not found for this struct
...
26571 |         (*fa).set_func_args((*fa1).func_args());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26571:36
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
26571 |         (*fa).set_func_args((*fa1).func_args());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_noreturn` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26573:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_noreturn` not found for this struct
...
26573 |     if (*fa1).func_noreturn() != 0 {
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26574:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
26574 |         (*fa).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_ctor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26576:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_ctor` not found for this struct
...
26576 |     if (*fa1).func_ctor() != 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26577:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_ctor` not found for this struct
...
26577 |         (*fa).set_func_ctor(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_dtor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26579:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_dtor` not found for this struct
...
26579 |     if (*fa1).func_dtor() != 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26580:15
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_dtor` not found for this struct
...
26580 |         (*fa).set_func_dtor(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26676:14
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
26675 |           if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ____________-
26676 | |             .func_type() as libc::c_int == 2 as libc::c_int
      | |             -^^^^^^^^^ method not found in `FuncAttr`
      | |_____________|
      |

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:26678:18
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
26677 |               && ((*(*type_0).ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________________-
26678 | |                 .func_type() as libc::c_int != 2 as libc::c_int
      | |                 -^^^^^^^^^ method not found in `FuncAttr`
      | |_________________|
      |

error[E0599]: no method named `addrtaken` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:27182:29
      |
879   | pub struct SymAttr {
      | ------------------ method `addrtaken` not found for this struct
...
27182 |                 || ((*s).a).addrtaken() as libc::c_int != 0
      |                             ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32013:70
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32013 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                      ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32227:63
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
32227 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call() as libc::c_int
      |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32228:67
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
32228 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32233:63
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32233 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type() as libc::c_int
      |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32234:67
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32234 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32236:67
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32236 |         && ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32238:67
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32238 |         && ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32247:67
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32247 |         if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:32249:71
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
32249 |             || ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                       ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33703:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_ctor` not found for this struct
...
33703 |                     ((*ad).f).set_func_ctor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33706:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_dtor` not found for this struct
...
33706 |                     ((*ad).f).set_func_dtor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_alwinl` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33709:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_alwinl` not found for this struct
...
33709 |                     ((*ad).f).set_func_alwinl(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33739:35
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
33739 |                         ((*ad).a).set_visibility(0 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33745:35
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
33745 |                         ((*ad).a).set_visibility(2 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33751:35
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
33751 |                         ((*ad).a).set_visibility(1 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33757:35
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
33757 |                         ((*ad).a).set_visibility(3 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33782:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
33782 |                     ((*ad).a).set_aligned(exact_log2p1(n) as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33785:42
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
33785 |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33795:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_packed` not found for this struct
...
33795 |                     ((*ad).a).set_packed(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33798:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
33798 |                     ((*ad).a).set_weak(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33801:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_nodebug` not found for this struct
...
33801 |                     ((*ad).a).set_nodebug(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33805:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
33805 |                     ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33808:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
33808 |                     ((*ad).f).set_func_call(0 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:33811:31
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
33811 |                     ((*ad).f).set_func_call(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_dllexport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33848:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_dllexport` not found for this struct
...
33848 |                     ((*ad).a).set_dllexport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33851:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_nodecorate` not found for this struct
...
33851 |                     ((*ad).a).set_nodecorate(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:33854:31
      |
879   | pub struct SymAttr {
      | ------------------ method `set_dllimport` not found for this struct
...
33854 |                     ((*ad).a).set_dllimport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34005:25
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34005 |         a = if ((*f).a).aligned() as libc::c_int != 0 {
      |                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34006:44
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34006 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                            ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34013:30
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
34013 |                 && (((*f).a).packed() as libc::c_int != 0
      |                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34014:34
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
34014 |                     || ((*ad).a).packed() as libc::c_int != 0)
      |                                  ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34058:36
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34058 |                 } else if ((*f).a).aligned() != 0 {
      |                                    ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34129:23
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34129 |     bt = if ((*ad).a).aligned() as libc::c_int != 0 {
      |                       ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34130:41
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34130 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34588:69
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
34588 |                             } else if !(bit_size == bsize && (ad.a).packed() == 0
      |                                                                     ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34589:44
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
34589 |                                 && (ad1.a).packed() == 0)
      |                                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34757:32
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34757 |                     if (ad1.a).aligned() != 0 {
      |                                ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34759:40
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
34759 |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                        ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:34775:27
      |
879   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
34775 |                 ((*ad).a).set_aligned(exact_log2p1(n_0) as libc::c_ushort);
      |                           ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:34926:27
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
34926 |                 ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                           ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:35224:19
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_args` not found for this struct
...
35224 |         ((*ad).f).set_func_args(arg_size as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:35225:19
      |
866   | pub struct FuncAttr {
      | ------------------- method `set_func_type` not found for this struct
...
35225 |         ((*ad).f).set_func_type(l as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:35476:74
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35476 |     func_type = ((*func).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                          ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_addrtaken` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:35991:26
      |
879   |   pub struct SymAttr {
      |   ------------------ method `set_addrtaken` not found for this struct
...
35990 | /                     ((*(*vtop).c2rust_unnamed_0.sym).a)
35991 | |                         .set_addrtaken(1 as libc::c_int as libc::c_ushort);
      | |                         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________________________|
      |

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:36051:49
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36051 |                     if !s.is_null() && ((*s).a).aligned() as libc::c_int != 0 {
      |                                                 ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:36053:41
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36053 |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `addrtaken` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:36127:64
      |
879   | pub struct SymAttr {
      | ------------------ method `addrtaken` not found for this struct
...
36127 |                         && ((*(*vtop).c2rust_unnamed_0.sym).a).addrtaken() as libc::c_int
      |                                                                ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:36599:22
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
36598 |                   variadic = (((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _____________________________-
36599 | |                     .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |                     -^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________|
      |

error[E0599]: no method named `func_noreturn` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:36761:70
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_noreturn` not found for this struct
...
36761 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_noreturn() != 0
      |                                                                      ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:36838:52
      |
879   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
36838 |             || ((*(*vtop).c2rust_unnamed_0.sym).a).weak() == 0)
      |                                                    ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:39000:18
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
39000 |     if ((*ad).a).aligned() != 0 {
      |                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:39002:26
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
39002 |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:39006:25
      |
879   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
39006 |     } else if ((*ad).a).packed() != 0 {
      |                         ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:39269:19
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
39269 |     if ((*sym).a).aligned() != 0 {
      |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:39273:46
      |
879   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
39273 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |                                              ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:39281:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
39280 |       func_var = (((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _________________-
39281 | |         .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_ctor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:39289:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_ctor` not found for this struct
...
39288 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
39289 | |         .func_ctor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_dtor` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:39298:10
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_dtor` not found for this struct
...
39297 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
39298 | |         .func_dtor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_type` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:39523:76
      |
866   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
39523 |                 if ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                            ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_alwinl` found for struct `libtcc::FuncAttr` in the current scope
     --> src/libtcc.rs:39534:30
      |
866   |   pub struct FuncAttr {
      |   ------------------- method `func_alwinl` not found for this struct
...
39533 |                           || ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ____________________________-
39534 | |                             .func_alwinl() as libc::c_int != 0
      | |                             -^^^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________________|
      |

error[E0599]: no method named `set_weak` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:41092:32
      |
879   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
41092 |                     ((*sym).a).set_weak(1 as libc::c_int as libc::c_ushort);
      |                                ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `libtcc::SymAttr` in the current scope
     --> src/libtcc.rs:41094:32
      |
879   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
41094 |                     ((*sym).a).set_visibility(2 as libc::c_int as libc::c_ushort);
      |                                ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:44936:19
      |
44936 |         line = ap.arg::<libc::c_int>();
      |                   ^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:44994:39
      |
44994 |         cstr_vprintf(&mut cs, fmt, ap.as_va_list());
      |                                       ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45039:50
      |
45039 |     error1(ERROR_NOABORT as libc::c_int, fmt, ap.as_va_list());
      |                                                  ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45046:48
      |
45046 |     error1(ERROR_ERROR as libc::c_int, fmt, ap.as_va_list());
      |                                                ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/libtcc.rs:45053:47
      |
45053 |     error1(ERROR_WARN as libc::c_int, fmt, ap.as_va_list());
      |                                               ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:3507:25
     |
3507 |                         RC_R(r)
     |                         ^^^^ - unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3507 -                         RC_R(r)
3507 +                         RC_R()
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:3509:25
     |
3509 |                         RC_F(r - 8 as libc::c_int)
     |                         ^^^^ -------------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
3509 -                         RC_F(r - 8 as libc::c_int)
3509 +                         RC_F()
     |

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_R` in this scope
    --> src/riscv64_gen.rs:6899:22
     |
527  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
6899 |         (*vtop).r2 = TREG_R(1 as libc::c_int) as libc::c_ushort;
     |                      ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:6976:16
     |
6976 |             gv(RC_F(0 as libc::c_int));
     |                ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:10:8
     |
10   |     fn RC_F() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
6976 -             gv(RC_F(0 as libc::c_int));
6976 +             gv(RC_F());
     |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
    --> src/riscv64_gen.rs:6978:16
     |
6978 |             gv(RC_R(0 as libc::c_int));
     |                ^^^^ ---------------- unexpected argument
     |
note: function defined here
    --> src/riscv64_gen.rs:11:8
     |
11   |     fn RC_R() -> libc::c_int;
     |        ^^^^
help: remove the extra argument
     |
6978 -             gv(RC_R(0 as libc::c_int));
6978 +             gv(RC_R());
     |

error[E0425]: cannot find function, tuple struct or tuple variant `TREG_R` in this scope
    --> src/riscv64_gen.rs:7339:21
     |
527  | pub const TREG_R8: C2RustUnnamed_4 = 8;
     | --------------------------------------- similarly named constant `TREG_R8` defined here
...
7339 |         (*vtop).r = TREG_R(0 as libc::c_int) as libc::c_ushort;
     |                     ^^^^^^ help: a constant with a similar name exists: `TREG_R8`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4208:19
     |
4208 |         line = ap.arg::<libc::c_int>();
     |                   ^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4266:39
     |
4266 |         cstr_vprintf(&mut cs, fmt, ap.as_va_list());
     |                                       ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4311:50
     |
4311 |     error1(ERROR_NOABORT as libc::c_int, fmt, ap.as_va_list());
     |                                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4318:48
     |
4318 |     error1(ERROR_ERROR as libc::c_int, fmt, ap.as_va_list());
     |                                                ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tcc.rs:4325:47
     |
4325 |     error1(ERROR_WARN as libc::c_int, fmt, ap.as_va_list());
     |                                               ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
    --> src/tcc.rs:9356:29
     |
907  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
9356 |                 if ((*t).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
    --> src/tcc.rs:9585:29
     |
907  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
9585 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
    --> src/tcc.rs:9655:29
     |
907  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
9655 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
    --> src/tcc.rs:9730:29
     |
907  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
9730 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:17147:57
      |
17147 |     let mut ret: libc::c_int = vfprintf(stderr, fmt, ap.as_va_list());
      |                                                         ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:17158:28
      |
17158 |     r = rt_vprintf(fmt, ap.as_va_list());
      |                            ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:18084:12
      |
18084 |         ap.as_va_list(),
      |            ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:18238:50
      |
18238 |     ret = _tcc_backtrace(f, msg.as_mut_ptr(), ap.as_va_list());
      |                                                  ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

warning: unreachable statement
     --> src/tcc.rs:19283:5
      |
19272 | /     __assert_fail(
19273 | |         b"0\0" as *const u8 as *const libc::c_char,
19274 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
19275 | |             as *const u8 as *const libc::c_char,
...     |
19281 | |             .as_ptr(),
19282 | |     );
      | |_____- any code following this expression is unreachable
19283 | /     'c_42430: {
19284 | |         __assert_fail(
19285 | |             b"0\0" as *const u8 as *const libc::c_char,
19286 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...     |
19294 | |         );
19295 | |     };
      | |______^ unreachable statement

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:19873:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
19872 |       if ((*(*vtop).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
19873 | |         .func_type() as libc::c_int != 1 as libc::c_int
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

warning: unreachable statement
     --> src/tcc.rs:20963:9
      |
20952 | /         __assert_fail(
20953 | |             b"0\0" as *const u8 as *const libc::c_char,
20954 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
20955 | |                 as *const u8 as *const libc::c_char,
...     |
20961 | |                 .as_ptr(),
20962 | |         );
      | |_________- any code following this expression is unreachable
20963 | /         'c_40936: {
20964 | |             __assert_fail(
20965 | |                 b"0\0" as *const u8 as *const libc::c_char,
20966 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...     |
20974 | |             );
20975 | |         };
      | |__________^ unreachable statement

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:21571:15
      |
21571 |             v.as_va_list(),
      |               ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:21589:38
      |
21589 |     len = cstr_vprintf(cstr, fmt, ap.as_va_list());
      |                                      ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
     --> src/tcc.rs:28050:26
      |
28050 |     vfprintf(fp, msg, ap.as_va_list());
      |                          ^^^^^^^^^^
      |
      = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0599]: no method named `set_func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:28553:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `set_func_call` not found for this struct
...
28552 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
28553 | |         .set_func_call(0 as libc::c_int as libc::c_uint);
      | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `set_func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:28555:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `set_func_type` not found for this struct
...
28554 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
28555 | |         .set_func_type(2 as libc::c_int as libc::c_uint);
      | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:28624:19
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
28624 |     if ((*sym).a).visibility() != 0 {
      |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:28628:26
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
28628 |             | ((*sym).a).visibility() as libc::c_int) as libc::c_uchar;
      |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:28632:26
      |
907   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
28632 |     } else if ((*sym).a).weak() != 0 {
      |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29463:15
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
29463 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
      |               ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29463:54
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
29463 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
      |                                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29464:15
      |
907   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
29464 |         (*sa).set_aligned((*sa1).aligned());
      |               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29464:34
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
29464 |         (*sa).set_aligned((*sa1).aligned());
      |                                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29466:11
      |
907   | pub struct SymAttr {
      | ------------------ method `set_packed` not found for this struct
...
29466 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |           ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29466:28
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
29466 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29466:46
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
29466 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
      |                                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29467:11
      |
907   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
29467 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |           ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29467:26
      |
907   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
29467 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29467:42
      |
907   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
29467 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
      |                                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29469:10
      |
907   |   pub struct SymAttr {
      |   ------------------ method `set_nodebug` not found for this struct
...
29468 | /     (*sa)
29469 | |         .set_nodebug(
      | |         -^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29470:19
      |
907   | pub struct SymAttr {
      | ------------------ method `nodebug` not found for this struct
...
29470 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29470:38
      |
907   | pub struct SymAttr {
      | ------------------ method `nodebug` not found for this struct
...
29470 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
      |                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29472:15
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
29472 |     if (*sa1).visibility() as libc::c_int != 0 as libc::c_int {
      |               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29473:42
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
29473 |         let mut vis: libc::c_int = (*sa).visibility() as libc::c_int;
      |                                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29474:52
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
29474 |         if vis == 0 as libc::c_int || vis > (*sa1).visibility() as libc::c_int {
      |                                                    ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29475:26
      |
907   | pub struct SymAttr {
      | ------------------ method `visibility` not found for this struct
...
29475 |             vis = (*sa1).visibility() as libc::c_int;
      |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29477:15
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
29477 |         (*sa).set_visibility(vis as libc::c_ushort);
      |               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllexport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29480:10
      |
907   |   pub struct SymAttr {
      |   ------------------ method `set_dllexport` not found for this struct
...
29479 | /     (*sa)
29480 | |         .set_dllexport(
      | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `dllexport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29481:19
      |
907   | pub struct SymAttr {
      | ------------------ method `dllexport` not found for this struct
...
29481 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllexport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29481:40
      |
907   | pub struct SymAttr {
      | ------------------ method `dllexport` not found for this struct
...
29481 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
      |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29484:10
      |
907   |   pub struct SymAttr {
      |   ------------------ method `set_nodecorate` not found for this struct
...
29483 | /     (*sa)
29484 | |         .set_nodecorate(
      | |         -^^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `nodecorate` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29485:19
      |
907   | pub struct SymAttr {
      | ------------------ method `nodecorate` not found for this struct
...
29485 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodecorate` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29485:41
      |
907   | pub struct SymAttr {
      | ------------------ method `nodecorate` not found for this struct
...
29485 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
      |                                         ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29488:10
      |
907   |   pub struct SymAttr {
      |   ------------------ method `set_dllimport` not found for this struct
...
29487 | /     (*sa)
29488 | |         .set_dllimport(
      | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________|
      |

error[E0599]: no method named `dllimport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29489:19
      |
907   | pub struct SymAttr {
      | ------------------ method `dllimport` not found for this struct
...
29489 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
      |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllimport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:29489:40
      |
907   | pub struct SymAttr {
      | ------------------ method `dllimport` not found for this struct
...
29489 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
      |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29493:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
29493 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29493:56
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
29493 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29494:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
29494 |         (*fa).set_func_call((*fa1).func_call());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29494:36
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
29494 |         (*fa).set_func_call((*fa1).func_call());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29496:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
29496 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29496:56
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
29496 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29497:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_type` not found for this struct
...
29497 |         (*fa).set_func_type((*fa1).func_type());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29497:36
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
29497 |         (*fa).set_func_type((*fa1).func_type());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29499:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
29499 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29499:56
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
29499 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
      |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29500:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_args` not found for this struct
...
29500 |         (*fa).set_func_args((*fa1).func_args());
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29500:36
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_args` not found for this struct
...
29500 |         (*fa).set_func_args((*fa1).func_args());
      |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_noreturn` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29502:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_noreturn` not found for this struct
...
29502 |     if (*fa1).func_noreturn() != 0 {
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29503:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
29503 |         (*fa).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_ctor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29505:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_ctor` not found for this struct
...
29505 |     if (*fa1).func_ctor() != 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29506:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_ctor` not found for this struct
...
29506 |         (*fa).set_func_ctor(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_dtor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29508:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_dtor` not found for this struct
...
29508 |     if (*fa1).func_dtor() != 0 {
      |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29509:15
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_dtor` not found for this struct
...
29509 |         (*fa).set_func_dtor(1 as libc::c_int as libc::c_uint);
      |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29605:14
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
29604 |           if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ____________-
29605 | |             .func_type() as libc::c_int == 2 as libc::c_int
      | |             -^^^^^^^^^ method not found in `FuncAttr`
      | |_____________|
      |

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:29607:18
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
29606 |               && ((*(*type_0).ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________________-
29607 | |                 .func_type() as libc::c_int != 2 as libc::c_int
      | |                 -^^^^^^^^^ method not found in `FuncAttr`
      | |_________________|
      |

error[E0599]: no method named `addrtaken` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:30111:29
      |
907   | pub struct SymAttr {
      | ------------------ method `addrtaken` not found for this struct
...
30111 |                 || ((*s).a).addrtaken() as libc::c_int != 0
      |                             ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:34942:70
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
34942 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                      ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35156:63
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
35156 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call() as libc::c_int
      |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35157:67
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_call` not found for this struct
...
35157 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35162:63
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35162 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type() as libc::c_int
      |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35163:67
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35163 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35165:67
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35165 |         && ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35167:67
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35167 |         && ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35176:67
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35176 |         if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:35178:71
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
35178 |             || ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                       ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36632:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_ctor` not found for this struct
...
36632 |                     ((*ad).f).set_func_ctor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36635:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_dtor` not found for this struct
...
36635 |                     ((*ad).f).set_func_dtor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_alwinl` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36638:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_alwinl` not found for this struct
...
36638 |                     ((*ad).f).set_func_alwinl(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36668:35
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
36668 |                         ((*ad).a).set_visibility(0 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36674:35
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
36674 |                         ((*ad).a).set_visibility(2 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36680:35
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
36680 |                         ((*ad).a).set_visibility(1 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36686:35
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
36686 |                         ((*ad).a).set_visibility(3 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36711:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
36711 |                     ((*ad).a).set_aligned(exact_log2p1(n) as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36714:42
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36714 |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36724:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_packed` not found for this struct
...
36724 |                     ((*ad).a).set_packed(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36727:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
36727 |                     ((*ad).a).set_weak(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36730:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_nodebug` not found for this struct
...
36730 |                     ((*ad).a).set_nodebug(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36734:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
36734 |                     ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36737:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
36737 |                     ((*ad).f).set_func_call(0 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:36740:31
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
36740 |                     ((*ad).f).set_func_call(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_dllexport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36777:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_dllexport` not found for this struct
...
36777 |                     ((*ad).a).set_dllexport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36780:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_nodecorate` not found for this struct
...
36780 |                     ((*ad).a).set_nodecorate(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36783:31
      |
907   | pub struct SymAttr {
      | ------------------ method `set_dllimport` not found for this struct
...
36783 |                     ((*ad).a).set_dllimport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36934:25
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36934 |         a = if ((*f).a).aligned() as libc::c_int != 0 {
      |                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36935:44
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36935 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                            ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36942:30
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
36942 |                 && (((*f).a).packed() as libc::c_int != 0
      |                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36943:34
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
36943 |                     || ((*ad).a).packed() as libc::c_int != 0)
      |                                  ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:36987:36
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
36987 |                 } else if ((*f).a).aligned() != 0 {
      |                                    ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37058:23
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
37058 |     bt = if ((*ad).a).aligned() as libc::c_int != 0 {
      |                       ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37059:41
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
37059 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37517:69
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
37517 |                             } else if !(bit_size == bsize && (ad.a).packed() == 0
      |                                                                     ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37518:44
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
37518 |                                 && (ad1.a).packed() == 0)
      |                                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37686:32
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
37686 |                     if (ad1.a).aligned() != 0 {
      |                                ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37688:40
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
37688 |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                        ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:37704:27
      |
907   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
37704 |                 ((*ad).a).set_aligned(exact_log2p1(n_0) as libc::c_ushort);
      |                           ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:37855:27
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
37855 |                 ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                           ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:38153:19
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_args` not found for this struct
...
38153 |         ((*ad).f).set_func_args(arg_size as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:38154:19
      |
894   | pub struct FuncAttr {
      | ------------------- method `set_func_type` not found for this struct
...
38154 |         ((*ad).f).set_func_type(l as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:38405:74
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
38405 |     func_type = ((*func).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                          ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_addrtaken` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:38920:26
      |
907   |   pub struct SymAttr {
      |   ------------------ method `set_addrtaken` not found for this struct
...
38919 | /                     ((*(*vtop).c2rust_unnamed_0.sym).a)
38920 | |                         .set_addrtaken(1 as libc::c_int as libc::c_ushort);
      | |                         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________________________|
      |

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:38980:49
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
38980 |                     if !s.is_null() && ((*s).a).aligned() as libc::c_int != 0 {
      |                                                 ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:38982:41
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
38982 |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `addrtaken` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:39056:64
      |
907   | pub struct SymAttr {
      | ------------------ method `addrtaken` not found for this struct
...
39056 |                         && ((*(*vtop).c2rust_unnamed_0.sym).a).addrtaken() as libc::c_int
      |                                                                ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:39528:22
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
39527 |                   variadic = (((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _____________________________-
39528 | |                     .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |                     -^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________|
      |

error[E0599]: no method named `func_noreturn` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:39690:70
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_noreturn` not found for this struct
...
39690 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_noreturn() != 0
      |                                                                      ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:39767:52
      |
907   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
39767 |             || ((*(*vtop).c2rust_unnamed_0.sym).a).weak() == 0)
      |                                                    ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:41929:18
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
41929 |     if ((*ad).a).aligned() != 0 {
      |                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:41931:26
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
41931 |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:41935:25
      |
907   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
41935 |     } else if ((*ad).a).packed() != 0 {
      |                         ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:42198:19
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
42198 |     if ((*sym).a).aligned() != 0 {
      |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:42202:46
      |
907   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
42202 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |                                              ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:42210:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
42209 |       func_var = (((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _________________-
42210 | |         .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_ctor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:42218:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_ctor` not found for this struct
...
42217 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
42218 | |         .func_ctor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_dtor` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:42227:10
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_dtor` not found for this struct
...
42226 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
42227 | |         .func_dtor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_type` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:42452:76
      |
894   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
42452 |                 if ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                            ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_alwinl` found for struct `tcc::FuncAttr` in the current scope
     --> src/tcc.rs:42463:30
      |
894   |   pub struct FuncAttr {
      |   ------------------- method `func_alwinl` not found for this struct
...
42462 |                           || ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ____________________________-
42463 | |                             .func_alwinl() as libc::c_int != 0
      | |                             -^^^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________________|
      |

error[E0599]: no method named `set_weak` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:44021:32
      |
907   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
44021 |                     ((*sym).a).set_weak(1 as libc::c_int as libc::c_ushort);
      |                                ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tcc::SymAttr` in the current scope
     --> src/tcc.rs:44023:32
      |
907   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
44023 |                     ((*sym).a).set_visibility(2 as libc::c_int as libc::c_ushort);
      |                                ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `tccasm::SymAttr` in the current scope
    --> src/tccasm.rs:2560:32
     |
503  | pub struct SymAttr {
     | ------------------ method `set_weak` not found for this struct
...
2560 |                     ((*sym).a).set_weak(1 as libc::c_int as libc::c_ushort);
     |                                ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tccasm::SymAttr` in the current scope
    --> src/tccasm.rs:2562:32
     |
503  | pub struct SymAttr {
     | ------------------ method `set_visibility` not found for this struct
...
2562 |                     ((*sym).a).set_visibility(2 as libc::c_int as libc::c_ushort);
     |                                ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tccdbg::SymAttr` in the current scope
    --> src/tccdbg.rs:4264:29
     |
495  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
4264 |                 if ((*t).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tccdbg::SymAttr` in the current scope
    --> src/tccdbg.rs:4493:29
     |
495  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
4493 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tccdbg::SymAttr` in the current scope
    --> src/tccdbg.rs:4563:29
     |
495  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
4563 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tccdbg::SymAttr` in the current scope
    --> src/tccdbg.rs:4638:29
     |
495  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
4638 |                 if ((*e).a).nodebug() as libc::c_int != 0
     |                             ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:2199:10
     |
544  |   pub struct FuncAttr {
     |   ------------------- method `set_func_call` not found for this struct
...
2198 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
2199 | |         .set_func_call(0 as libc::c_int as libc::c_uint);
     | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
     | |_________|
     |

error[E0599]: no method named `set_func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:2201:10
     |
544  |   pub struct FuncAttr {
     |   ------------------- method `set_func_type` not found for this struct
...
2200 | /     ((*func_old_type.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
2201 | |         .set_func_type(2 as libc::c_int as libc::c_uint);
     | |         -^^^^^^^^^^^^^ method not found in `FuncAttr`
     | |_________|
     |

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:2274:19
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
2274 |     if ((*sym).a).visibility() != 0 {
     |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:2278:26
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
2278 |             | ((*sym).a).visibility() as libc::c_int) as libc::c_uchar;
     |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:2282:26
     |
557  | pub struct SymAttr {
     | ------------------ method `weak` not found for this struct
...
2282 |     } else if ((*sym).a).weak() != 0 {
     |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3138:15
     |
557  | pub struct SymAttr {
     | ------------------ method `aligned` not found for this struct
...
3138 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
     |               ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3138:54
     |
557  | pub struct SymAttr {
     | ------------------ method `aligned` not found for this struct
...
3138 |     if (*sa1).aligned() as libc::c_int != 0 && (*sa).aligned() == 0 {
     |                                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3139:15
     |
557  | pub struct SymAttr {
     | ------------------ method `set_aligned` not found for this struct
...
3139 |         (*sa).set_aligned((*sa1).aligned());
     |               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3139:34
     |
557  | pub struct SymAttr {
     | ------------------ method `aligned` not found for this struct
...
3139 |         (*sa).set_aligned((*sa1).aligned());
     |                                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3141:11
     |
557  | pub struct SymAttr {
     | ------------------ method `set_packed` not found for this struct
...
3141 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
     |           ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3141:28
     |
557  | pub struct SymAttr {
     | ------------------ method `packed` not found for this struct
...
3141 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
     |                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3141:46
     |
557  | pub struct SymAttr {
     | ------------------ method `packed` not found for this struct
...
3141 |     (*sa).set_packed((*sa).packed() | (*sa1).packed() as libc::c_int as libc::c_ushort);
     |                                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3142:11
     |
557  | pub struct SymAttr {
     | ------------------ method `set_weak` not found for this struct
...
3142 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
     |           ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3142:26
     |
557  | pub struct SymAttr {
     | ------------------ method `weak` not found for this struct
...
3142 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
     |                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `weak` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3142:42
     |
557  | pub struct SymAttr {
     | ------------------ method `weak` not found for this struct
...
3142 |     (*sa).set_weak((*sa).weak() | (*sa1).weak() as libc::c_int as libc::c_ushort);
     |                                          ^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3144:10
     |
557  |   pub struct SymAttr {
     |   ------------------ method `set_nodebug` not found for this struct
...
3143 | /     (*sa)
3144 | |         .set_nodebug(
     | |         -^^^^^^^^^^^ method not found in `SymAttr`
     | |_________|
     |

error[E0599]: no method named `nodebug` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3145:19
     |
557  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
3145 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
     |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodebug` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3145:38
     |
557  | pub struct SymAttr {
     | ------------------ method `nodebug` not found for this struct
...
3145 |             (*sa).nodebug() | (*sa1).nodebug() as libc::c_int as libc::c_ushort,
     |                                      ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3147:15
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
3147 |     if (*sa1).visibility() as libc::c_int != 0 as libc::c_int {
     |               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3148:42
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
3148 |         let mut vis: libc::c_int = (*sa).visibility() as libc::c_int;
     |                                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3149:52
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
3149 |         if vis == 0 as libc::c_int || vis > (*sa1).visibility() as libc::c_int {
     |                                                    ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3150:26
     |
557  | pub struct SymAttr {
     | ------------------ method `visibility` not found for this struct
...
3150 |             vis = (*sa1).visibility() as libc::c_int;
     |                          ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3152:15
     |
557  | pub struct SymAttr {
     | ------------------ method `set_visibility` not found for this struct
...
3152 |         (*sa).set_visibility(vis as libc::c_ushort);
     |               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllexport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3155:10
     |
557  |   pub struct SymAttr {
     |   ------------------ method `set_dllexport` not found for this struct
...
3154 | /     (*sa)
3155 | |         .set_dllexport(
     | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
     | |_________|
     |

error[E0599]: no method named `dllexport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3156:19
     |
557  | pub struct SymAttr {
     | ------------------ method `dllexport` not found for this struct
...
3156 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
     |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllexport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3156:40
     |
557  | pub struct SymAttr {
     | ------------------ method `dllexport` not found for this struct
...
3156 |             (*sa).dllexport() | (*sa1).dllexport() as libc::c_int as libc::c_ushort,
     |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3159:10
     |
557  |   pub struct SymAttr {
     |   ------------------ method `set_nodecorate` not found for this struct
...
3158 | /     (*sa)
3159 | |         .set_nodecorate(
     | |         -^^^^^^^^^^^^^^ method not found in `SymAttr`
     | |_________|
     |

error[E0599]: no method named `nodecorate` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3160:19
     |
557  | pub struct SymAttr {
     | ------------------ method `nodecorate` not found for this struct
...
3160 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
     |                   ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `nodecorate` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3160:41
     |
557  | pub struct SymAttr {
     | ------------------ method `nodecorate` not found for this struct
...
3160 |             (*sa).nodecorate() | (*sa1).nodecorate() as libc::c_int as libc::c_ushort,
     |                                         ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3163:10
     |
557  |   pub struct SymAttr {
     |   ------------------ method `set_dllimport` not found for this struct
...
3162 | /     (*sa)
3163 | |         .set_dllimport(
     | |         -^^^^^^^^^^^^^ method not found in `SymAttr`
     | |_________|
     |

error[E0599]: no method named `dllimport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3164:19
     |
557  | pub struct SymAttr {
     | ------------------ method `dllimport` not found for this struct
...
3164 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
     |                   ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `dllimport` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3164:40
     |
557  | pub struct SymAttr {
     | ------------------ method `dllimport` not found for this struct
...
3164 |             (*sa).dllimport() | (*sa1).dllimport() as libc::c_int as libc::c_ushort,
     |                                        ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3168:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
3168 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
     |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3168:56
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
3168 |     if (*fa1).func_call() as libc::c_int != 0 && (*fa).func_call() == 0 {
     |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3169:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_call` not found for this struct
...
3169 |         (*fa).set_func_call((*fa1).func_call());
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3169:36
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
3169 |         (*fa).set_func_call((*fa1).func_call());
     |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3171:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
3171 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
     |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3171:56
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
3171 |     if (*fa1).func_type() as libc::c_int != 0 && (*fa).func_type() == 0 {
     |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3172:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_type` not found for this struct
...
3172 |         (*fa).set_func_type((*fa1).func_type());
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3172:36
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
3172 |         (*fa).set_func_type((*fa1).func_type());
     |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3174:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_args` not found for this struct
...
3174 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
     |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3174:56
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_args` not found for this struct
...
3174 |     if (*fa1).func_args() as libc::c_int != 0 && (*fa).func_args() == 0 {
     |                                                        ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3175:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_args` not found for this struct
...
3175 |         (*fa).set_func_args((*fa1).func_args());
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_args` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3175:36
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_args` not found for this struct
...
3175 |         (*fa).set_func_args((*fa1).func_args());
     |                                    ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_noreturn` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3177:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_noreturn` not found for this struct
...
3177 |     if (*fa1).func_noreturn() != 0 {
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3178:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_noreturn` not found for this struct
...
3178 |         (*fa).set_func_noreturn(1 as libc::c_int as libc::c_uint);
     |               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_ctor` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3180:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_ctor` not found for this struct
...
3180 |     if (*fa1).func_ctor() != 0 {
     |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3181:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_ctor` not found for this struct
...
3181 |         (*fa).set_func_ctor(1 as libc::c_int as libc::c_uint);
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_dtor` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3183:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_dtor` not found for this struct
...
3183 |     if (*fa1).func_dtor() != 0 {
     |               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3184:15
     |
544  | pub struct FuncAttr {
     | ------------------- method `set_func_dtor` not found for this struct
...
3184 |         (*fa).set_func_dtor(1 as libc::c_int as libc::c_uint);
     |               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3280:14
     |
544  |   pub struct FuncAttr {
     |   ------------------- method `func_type` not found for this struct
...
3279 |           if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
     |  ____________-
3280 | |             .func_type() as libc::c_int == 2 as libc::c_int
     | |             -^^^^^^^^^ method not found in `FuncAttr`
     | |_____________|
     |

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:3282:18
     |
544  |   pub struct FuncAttr {
     |   ------------------- method `func_type` not found for this struct
...
3281 |               && ((*(*type_0).ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
     |  ________________-
3282 | |                 .func_type() as libc::c_int != 2 as libc::c_int
     | |                 -^^^^^^^^^ method not found in `FuncAttr`
     | |_________________|
     |

error[E0599]: no method named `addrtaken` found for struct `tccgen::SymAttr` in the current scope
    --> src/tccgen.rs:3792:29
     |
557  | pub struct SymAttr {
     | ------------------ method `addrtaken` not found for this struct
...
3792 |                 || ((*s).a).addrtaken() as libc::c_int != 0
     |                             ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8625:70
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8625 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                      ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8839:63
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
8839 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call() as libc::c_int
     |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_call` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8840:67
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_call` not found for this struct
...
8840 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_call()
     |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8845:63
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8845 |     if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type() as libc::c_int
     |                                                               ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8846:67
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8846 |         != ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8848:67
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8848 |         && ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8850:67
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8850 |         && ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8859:67
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8859 |         if ((*s1).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                   ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
    --> src/tccgen.rs:8861:71
     |
544  | pub struct FuncAttr {
     | ------------------- method `func_type` not found for this struct
...
8861 |             || ((*s2).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
     |                                                                       ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_ctor` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10322:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_ctor` not found for this struct
...
10322 |                     ((*ad).f).set_func_ctor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_dtor` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10325:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_dtor` not found for this struct
...
10325 |                     ((*ad).f).set_func_dtor(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_alwinl` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10328:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_alwinl` not found for this struct
...
10328 |                     ((*ad).f).set_func_alwinl(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_visibility` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10358:35
      |
557   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
10358 |                         ((*ad).a).set_visibility(0 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10364:35
      |
557   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
10364 |                         ((*ad).a).set_visibility(2 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10370:35
      |
557   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
10370 |                         ((*ad).a).set_visibility(1 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_visibility` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10376:35
      |
557   | pub struct SymAttr {
      | ------------------ method `set_visibility` not found for this struct
...
10376 |                         ((*ad).a).set_visibility(3 as libc::c_int as libc::c_ushort);
      |                                   ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10401:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
10401 |                     ((*ad).a).set_aligned(exact_log2p1(n) as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10404:42
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10404 |                             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10414:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_packed` not found for this struct
...
10414 |                     ((*ad).a).set_packed(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_weak` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10417:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_weak` not found for this struct
...
10417 |                     ((*ad).a).set_weak(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodebug` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10420:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_nodebug` not found for this struct
...
10420 |                     ((*ad).a).set_nodebug(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10424:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
10424 |                     ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10427:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
10427 |                     ((*ad).f).set_func_call(0 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_call` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:10430:31
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_call` not found for this struct
...
10430 |                     ((*ad).f).set_func_call(1 as libc::c_int as libc::c_uint);
      |                               ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_dllexport` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10467:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_dllexport` not found for this struct
...
10467 |                     ((*ad).a).set_dllexport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_nodecorate` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10470:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_nodecorate` not found for this struct
...
10470 |                     ((*ad).a).set_nodecorate(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_dllimport` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10473:31
      |
557   | pub struct SymAttr {
      | ------------------ method `set_dllimport` not found for this struct
...
10473 |                     ((*ad).a).set_dllimport(1 as libc::c_int as libc::c_ushort);
      |                               ^^^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10624:25
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10624 |         a = if ((*f).a).aligned() as libc::c_int != 0 {
      |                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10625:44
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10625 |             (1 as libc::c_int) << ((*f).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                            ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10632:30
      |
557   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
10632 |                 && (((*f).a).packed() as libc::c_int != 0
      |                              ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10633:34
      |
557   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
10633 |                     || ((*ad).a).packed() as libc::c_int != 0)
      |                                  ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10677:36
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10677 |                 } else if ((*f).a).aligned() != 0 {
      |                                    ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10748:23
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10748 |     bt = if ((*ad).a).aligned() as libc::c_int != 0 {
      |                       ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:10749:41
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
10749 |         (1 as libc::c_int) << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:11207:69
      |
557   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
11207 |                             } else if !(bit_size == bsize && (ad.a).packed() == 0
      |                                                                     ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:11208:44
      |
557   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
11208 |                                 && (ad1.a).packed() == 0)
      |                                            ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:11376:32
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
11376 |                     if (ad1.a).aligned() != 0 {
      |                                ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:11378:40
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
11378 |                             << (ad1.a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                        ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:11394:27
      |
557   | pub struct SymAttr {
      | ------------------ method `set_aligned` not found for this struct
...
11394 |                 ((*ad).a).set_aligned(exact_log2p1(n_0) as libc::c_ushort);
      |                           ^^^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `set_func_noreturn` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:11545:27
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_noreturn` not found for this struct
...
11545 |                 ((*ad).f).set_func_noreturn(1 as libc::c_int as libc::c_uint);
      |                           ^^^^^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_args` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:11844:19
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_args` not found for this struct
...
11844 |         ((*ad).f).set_func_args(arg_size as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_func_type` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:11845:19
      |
544   | pub struct FuncAttr {
      | ------------------- method `set_func_type` not found for this struct
...
11845 |         ((*ad).f).set_func_type(l as libc::c_uint);
      |                   ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:12097:74
      |
544   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
12097 |     func_type = ((*func).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                          ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `set_addrtaken` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:12613:26
      |
557   |   pub struct SymAttr {
      |   ------------------ method `set_addrtaken` not found for this struct
...
12612 | /                     ((*(*vtop).c2rust_unnamed_0.sym).a)
12613 | |                         .set_addrtaken(1 as libc::c_int as libc::c_ushort);
      | |                         -^^^^^^^^^^^^^ method not found in `SymAttr`
      | |_________________________|
      |

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:12673:49
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
12673 |                     if !s.is_null() && ((*s).a).aligned() as libc::c_int != 0 {
      |                                                 ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:12675:41
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
12675 |                             << ((*s).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                                         ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `addrtaken` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:12749:64
      |
557   | pub struct SymAttr {
      | ------------------ method `addrtaken` not found for this struct
...
12749 |                         && ((*(*vtop).c2rust_unnamed_0.sym).a).addrtaken() as libc::c_int
      |                                                                ^^^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:13221:22
      |
544   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
13220 |                   variadic = (((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _____________________________-
13221 | |                     .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |                     -^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________|
      |

error[E0599]: no method named `func_noreturn` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:13383:70
      |
544   | pub struct FuncAttr {
      | ------------------- method `func_noreturn` not found for this struct
...
13383 |             if ((*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_noreturn() != 0
      |                                                                      ^^^^^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `weak` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:13460:52
      |
557   | pub struct SymAttr {
      | ------------------ method `weak` not found for this struct
...
13460 |             || ((*(*vtop).c2rust_unnamed_0.sym).a).weak() == 0)
      |                                                    ^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:15624:18
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
15624 |     if ((*ad).a).aligned() != 0 {
      |                  ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:15626:26
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
15626 |             << ((*ad).a).aligned() as libc::c_int - 1 as libc::c_int;
      |                          ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `packed` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:15630:25
      |
557   | pub struct SymAttr {
      | ------------------ method `packed` not found for this struct
...
15630 |     } else if ((*ad).a).packed() != 0 {
      |                         ^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:15893:19
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
15893 |     if ((*sym).a).aligned() != 0 {
      |                   ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `aligned` found for struct `tccgen::SymAttr` in the current scope
     --> src/tccgen.rs:15897:46
      |
557   | pub struct SymAttr {
      | ------------------ method `aligned` not found for this struct
...
15897 |             (1 as libc::c_int) << ((*sym).a).aligned() as libc::c_int - 1 as libc::c_int,
      |                                              ^^^^^^^ method not found in `SymAttr`

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:15905:10
      |
544   |   pub struct FuncAttr {
      |   ------------------- method `func_type` not found for this struct
...
15904 |       func_var = (((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  _________________-
15905 | |         .func_type() as libc::c_int == 3 as libc::c_int) as libc::c_int;
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_ctor` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:15913:10
      |
544   |   pub struct FuncAttr {
      |   ------------------- method `func_ctor` not found for this struct
...
15912 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
15913 | |         .func_ctor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_dtor` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:15922:10
      |
544   |   pub struct FuncAttr {
      |   ------------------- method `func_dtor` not found for this struct
...
15921 |       if ((*(*sym).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ________-
15922 | |         .func_dtor() != 0
      | |         -^^^^^^^^^ method not found in `FuncAttr`
      | |_________|
      |

error[E0599]: no method named `func_type` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:16147:76
      |
544   | pub struct FuncAttr {
      | ------------------- method `func_type` not found for this struct
...
16147 |                 if ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f).func_type()
      |                                                                            ^^^^^^^^^ method not found in `FuncAttr`

error[E0599]: no method named `func_alwinl` found for struct `tccgen::FuncAttr` in the current scope
     --> src/tccgen.rs:16158:30
      |
544   |   pub struct FuncAttr {
      |   ------------------- method `func_alwinl` not found for this struct
...
16157 |                           || ((*sym).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
      |  ____________________________-
16158 | |                             .func_alwinl() as libc::c_int != 0
      | |                             -^^^^^^^^^^^ method not found in `FuncAttr`
      | |_____________________________|
      |

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:2217:15
     |
2217 |             v.as_va_list(),
     |               ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:2236:38
     |
2236 |     len = cstr_vprintf(cstr, fmt, ap.as_va_list());
     |                                      ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccpp.rs:8729:26
     |
8729 |     vfprintf(fp, msg, ap.as_va_list());
     |                          ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:1994:57
     |
1994 |     let mut ret: libc::c_int = vfprintf(stderr, fmt, ap.as_va_list());
     |                                                         ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:2005:28
     |
2005 |     r = rt_vprintf(fmt, ap.as_va_list());
     |                            ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:2931:12
     |
2931 |         ap.as_va_list(),
     |            ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

error[E0658]: use of unstable library feature `c_variadic`: the `c_variadic` feature has not been properly tested on all supported platforms
    --> src/tccrun.rs:3085:50
     |
3085 |     ret = _tcc_backtrace(f, msg.as_mut_ptr(), ap.as_va_list());
     |                                                  ^^^^^^^^^^
     |
     = note: see issue #44930 <https://github.com/rust-lang/rust/issues/44930> for more information

warning: unreachable statement
    --> src/x86_64_gen.rs:2626:5
     |
2615 | /     __assert_fail(
2616 | |         b"0\0" as *const u8 as *const libc::c_char,
2617 | |         b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
2618 | |             as *const u8 as *const libc::c_char,
...    |
2624 | |             .as_ptr(),
2625 | |     );
     | |_____- any code following this expression is unreachable
2626 | /     'c_11235: {
2627 | |         __assert_fail(
2628 | |             b"0\0" as *const u8 as *const libc::c_char,
2629 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...    |
2637 | |         );
2638 | |     };
     | |______^ unreachable statement

error[E0599]: no method named `func_type` found for struct `x86_64_gen::FuncAttr` in the current scope
    --> src/x86_64_gen.rs:3219:10
     |
413  |   pub struct FuncAttr {
     |   ------------------- method `func_type` not found for this struct
...
3218 |       if ((*(*vtop).type_0.ref_0).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f)
     |  ________-
3219 | |         .func_type() as libc::c_int != 1 as libc::c_int
     | |         -^^^^^^^^^ method not found in `FuncAttr`
     | |_________|
     |

warning: unreachable statement
    --> src/x86_64_gen.rs:4328:9
     |
4317 | /         __assert_fail(
4318 | |             b"0\0" as *const u8 as *const libc::c_char,
4319 | |             b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
4320 | |                 as *const u8 as *const libc::c_char,
...    |
4326 | |                 .as_ptr(),
4327 | |         );
     | |_________- any code following this expression is unreachable
4328 | /         'c_19662: {
4329 | |             __assert_fail(
4330 | |                 b"0\0" as *const u8 as *const libc::c_char,
4331 | |                 b"/mnt/c/Users/mazin/Downloads/School/Research/datasets/tinycc/x86_64-gen.c\0"
...    |
4339 | |             );
4340 | |         };
     | |__________^ unreachable statement

warning[E0133]: call to unsafe function `libtcc::wait_sem` is unsafe and requires unsafe block
     --> src/libtcc.rs:13535:5
      |
13535 |     wait_sem(&mut rt_sem);
      |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:13534:1
      |
13534 | unsafe extern "C" fn rt_wait_sem() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:13535:19
      |
13535 |     wait_sem(&mut rt_sem);
      |                   ^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `libtcc::post_sem` is unsafe and requires unsafe block
     --> src/libtcc.rs:13538:5
      |
13538 |     post_sem(&mut rt_sem);
      |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:13537:1
      |
13537 | unsafe extern "C" fn rt_post_sem() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:13538:19
      |
13538 |     post_sem(&mut rt_sem);
      |                   ^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `libtcc::rt_wait_sem` is unsafe and requires unsafe block
     --> src/libtcc.rs:14100:5
      |
14100 |     rt_wait_sem();
      |     ^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:14099:1
      |
14099 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:14101:5
      |
14101 |     (*s1).next = g_s1;
      |     ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:14101:18
      |
14101 |     (*s1).next = g_s1;
      |                  ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:14102:5
      |
14102 |     g_s1 = s1;
      |     ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `libtcc::bt_link` is unsafe and requires unsafe block
     --> src/libtcc.rs:14103:5
      |
14103 |     bt_link(s1);
      |     ^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: call to unsafe function `libtcc::rt_post_sem` is unsafe and requires unsafe block
     --> src/libtcc.rs:14104:5
      |
14104 |     rt_post_sem();
      |     ^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:14099:30
      |
14099 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
      |                              ----^^
      |                              |
      |                              help: remove this `mut`
      |
      = note: `#[warn(unused_mut)]` on by default

warning: value assigned to `sym` is never read
     --> src/libtcc.rs:25880:13
      |
25880 |     let mut sym: *mut Sym = 0 as *mut Sym;
      |             ^^^
      |
      = help: maybe it is overwritten before being read?
      = note: `#[warn(unused_assignments)]` on by default

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:25881:11
      |
25881 |     sym = sym_free_first;
      |           ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:25879:1
      |
25879 | unsafe extern "C" fn sym_malloc() -> *mut Sym {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `libtcc::__sym_malloc` is unsafe and requires unsafe block
     --> src/libtcc.rs:25883:15
      |
25883 |         sym = __sym_malloc();
      |               ^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:25885:5
      |
25885 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |     ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/libtcc.rs:25885:22
      |
25885 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:25885:22
      |
25885 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |                      ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:25890:5
      |
25890 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
      |     ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:25889:1
      |
25889 | unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:25890:36
      |
25890 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
      |                                    ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:25891:5
      |
25891 |     sym_free_first = sym;
      |     ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:25889:31
      |
25889 | unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
      |                               ----^^^
      |                               |
      |                               help: remove this `mut`

warning[E0133]: call to unsafe function `libtcc::vpushv` is unsafe and requires unsafe block
     --> src/libtcc.rs:26263:5
      |
26263 |     vpushv(vtop);
      |     ^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:26262:1
      |
26262 | unsafe extern "C" fn vdup() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/libtcc.rs:26263:12
      |
26263 |     vpushv(vtop);
      |            ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:33190:17
      |
33190 |     return &mut (*(*type_0).ref_0).type_0;
      |                 ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:33189:1
      |
33189 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:33190:19
      |
33190 |     return &mut (*(*type_0).ref_0).type_0;
      |                   ^^^^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:33189:35
      |
33189 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
      |                                   ----^^^^^^
      |                                   |
      |                                   help: remove this `mut`

warning[E0133]: call to unsafe function `libtcc::verify_assign_cast` is unsafe and requires unsafe block
     --> src/libtcc.rs:33404:5
      |
33404 |     verify_assign_cast(dt);
      |     ^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:33403:1
      |
33403 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `libtcc::gen_cast` is unsafe and requires unsafe block
     --> src/libtcc.rs:33405:5
      |
33405 |     gen_cast(dt);
      |     ^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:33403:38
      |
33403 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      |                                      ----^^
      |                                      |
      |                                      help: remove this `mut`

warning[E0133]: call to unsafe function `libtcc::merge_symattr` is unsafe and requires unsafe block
     --> src/libtcc.rs:34659:5
      |
34659 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:34658:1
      |
34658 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:34659:24
      |
34659 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                        ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:34659:38
      |
34659 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                                      ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `libtcc::merge_funcattr` is unsafe and requires unsafe block
     --> src/libtcc.rs:34660:5
      |
34660 | /     merge_funcattr(
34661 | |         &mut (*ad).f,
34662 | |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
34663 | |     );
      | |_____^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:34661:14
      |
34661 |         &mut (*ad).f,
      |              ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/libtcc.rs:34662:14
      |
34662 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/libtcc.rs:34662:14
      |
34662 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:34662:14
      |
34662 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:34658:34
      |
34658 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                  ----^^
      |                                  |
      |                                  help: remove this `mut`

warning: variable does not need to be mutable
     --> src/libtcc.rs:34658:61
      |
34658 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                                             ----^
      |                                                             |
      |                                                             help: remove this `mut`

warning[E0133]: call to unsafe function `libtcc::try_call_scope_cleanup` is unsafe and requires unsafe block
     --> src/libtcc.rs:37491:5
      |
37491 |     try_call_scope_cleanup((*o_0).cl.s);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:37487:1
      |
37487 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/libtcc.rs:37491:28
      |
37491 |     try_call_scope_cleanup((*o_0).cl.s);
      |                            ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `libtcc::vla_leave` is unsafe and requires unsafe block
     --> src/libtcc.rs:37492:5
      |
37492 |     vla_leave(o_0);
      |     ^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/libtcc.rs:37487:34
      |
37487 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      |                                  ----^^^
      |                                  |
      |                                  help: remove this `mut`

warning[E0133]: call to unsafe function `libtcc::asm_expr_cmp` is unsafe and requires unsafe block
     --> src/libtcc.rs:40729:5
      |
40729 |     asm_expr_cmp(s1, pe);
      |     ^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/libtcc.rs:40728:1
      |
40728 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
     --> src/libtcc.rs:40728:31
      |
40728 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      |                               ----^^
      |                               |
      |                               help: remove this `mut`

warning: variable does not need to be mutable
     --> src/libtcc.rs:40728:54
      |
40728 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      |                                                      ----^^
      |                                                      |
      |                                                      help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::wait_sem` is unsafe and requires unsafe block
     --> src/tcc.rs:16464:5
      |
16464 |     wait_sem(&mut rt_sem);
      |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:16463:1
      |
16463 | unsafe extern "C" fn rt_wait_sem() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:16464:19
      |
16464 |     wait_sem(&mut rt_sem);
      |                   ^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tcc::post_sem` is unsafe and requires unsafe block
     --> src/tcc.rs:16467:5
      |
16467 |     post_sem(&mut rt_sem);
      |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:16466:1
      |
16466 | unsafe extern "C" fn rt_post_sem() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:16467:19
      |
16467 |     post_sem(&mut rt_sem);
      |                   ^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tcc::rt_wait_sem` is unsafe and requires unsafe block
     --> src/tcc.rs:17029:5
      |
17029 |     rt_wait_sem();
      |     ^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:17028:1
      |
17028 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:17030:5
      |
17030 |     (*s1).next = g_s1;
      |     ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:17030:18
      |
17030 |     (*s1).next = g_s1;
      |                  ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:17031:5
      |
17031 |     g_s1 = s1;
      |     ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tcc::bt_link` is unsafe and requires unsafe block
     --> src/tcc.rs:17032:5
      |
17032 |     bt_link(s1);
      |     ^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: call to unsafe function `tcc::rt_post_sem` is unsafe and requires unsafe block
     --> src/tcc.rs:17033:5
      |
17033 |     rt_post_sem();
      |     ^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:17028:30
      |
17028 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
      |                              ----^^
      |                              |
      |                              help: remove this `mut`

warning: value assigned to `sym` is never read
     --> src/tcc.rs:28809:13
      |
28809 |     let mut sym: *mut Sym = 0 as *mut Sym;
      |             ^^^
      |
      = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:28810:11
      |
28810 |     sym = sym_free_first;
      |           ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:28808:1
      |
28808 | unsafe extern "C" fn sym_malloc() -> *mut Sym {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `tcc::__sym_malloc` is unsafe and requires unsafe block
     --> src/tcc.rs:28812:15
      |
28812 |         sym = __sym_malloc();
      |               ^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:28814:5
      |
28814 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |     ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/tcc.rs:28814:22
      |
28814 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:28814:22
      |
28814 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
      |                      ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:28819:5
      |
28819 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
      |     ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:28818:1
      |
28818 | unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:28819:36
      |
28819 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
      |                                    ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:28820:5
      |
28820 |     sym_free_first = sym;
      |     ^^^^^^^^^^^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:28818:31
      |
28818 | unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
      |                               ----^^^
      |                               |
      |                               help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::vpushv` is unsafe and requires unsafe block
     --> src/tcc.rs:29192:5
      |
29192 |     vpushv(vtop);
      |     ^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:29191:1
      |
29191 | unsafe extern "C" fn vdup() {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
     --> src/tcc.rs:29192:12
      |
29192 |     vpushv(vtop);
      |            ^^^^ use of mutable static
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:36119:17
      |
36119 |     return &mut (*(*type_0).ref_0).type_0;
      |                 ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:36118:1
      |
36118 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:36119:19
      |
36119 |     return &mut (*(*type_0).ref_0).type_0;
      |                   ^^^^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:36118:35
      |
36118 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
      |                                   ----^^^^^^
      |                                   |
      |                                   help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::verify_assign_cast` is unsafe and requires unsafe block
     --> src/tcc.rs:36333:5
      |
36333 |     verify_assign_cast(dt);
      |     ^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:36332:1
      |
36332 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `tcc::gen_cast` is unsafe and requires unsafe block
     --> src/tcc.rs:36334:5
      |
36334 |     gen_cast(dt);
      |     ^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:36332:38
      |
36332 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      |                                      ----^^
      |                                      |
      |                                      help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::merge_symattr` is unsafe and requires unsafe block
     --> src/tcc.rs:37588:5
      |
37588 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:37587:1
      |
37587 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:37588:24
      |
37588 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                        ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:37588:38
      |
37588 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                                      ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `tcc::merge_funcattr` is unsafe and requires unsafe block
     --> src/tcc.rs:37589:5
      |
37589 | /     merge_funcattr(
37590 | |         &mut (*ad).f,
37591 | |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
37592 | |     );
      | |_____^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:37590:14
      |
37590 |         &mut (*ad).f,
      |              ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/tcc.rs:37591:14
      |
37591 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/tcc.rs:37591:14
      |
37591 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:37591:14
      |
37591 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:37587:34
      |
37587 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                  ----^^
      |                                  |
      |                                  help: remove this `mut`

warning: variable does not need to be mutable
     --> src/tcc.rs:37587:61
      |
37587 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                                             ----^
      |                                                             |
      |                                                             help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::try_call_scope_cleanup` is unsafe and requires unsafe block
     --> src/tcc.rs:40420:5
      |
40420 |     try_call_scope_cleanup((*o_0).cl.s);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:40416:1
      |
40416 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tcc.rs:40420:28
      |
40420 |     try_call_scope_cleanup((*o_0).cl.s);
      |                            ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `tcc::vla_leave` is unsafe and requires unsafe block
     --> src/tcc.rs:40421:5
      |
40421 |     vla_leave(o_0);
      |     ^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/tcc.rs:40416:34
      |
40416 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      |                                  ----^^^
      |                                  |
      |                                  help: remove this `mut`

warning[E0133]: call to unsafe function `tcc::asm_expr_cmp` is unsafe and requires unsafe block
     --> src/tcc.rs:43658:5
      |
43658 |     asm_expr_cmp(s1, pe);
      |     ^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tcc.rs:43657:1
      |
43657 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
     --> src/tcc.rs:43657:31
      |
43657 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      |                               ----^^
      |                               |
      |                               help: remove this `mut`

warning: variable does not need to be mutable
     --> src/tcc.rs:43657:54
      |
43657 | unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
      |                                                      ----^^
      |                                                      |
      |                                                      help: remove this `mut`

warning[E0133]: call to unsafe function `tccasm::asm_expr_cmp` is unsafe and requires unsafe block
    --> src/tccasm.rs:2196:5
     |
2196 |     asm_expr_cmp(s1, pe);
     |     ^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccasm.rs:2195:1
     |
2195 | pub unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
    --> src/tccasm.rs:2195:35
     |
2195 | pub unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
     |                                   ----^^
     |                                   |
     |                                   help: remove this `mut`

warning: variable does not need to be mutable
    --> src/tccasm.rs:2195:58
     |
2195 | pub unsafe extern "C" fn asm_expr(mut s1: *mut TCCState, mut pe: *mut ExprValue) {
     |                                                          ----^^
     |                                                          |
     |                                                          help: remove this `mut`

warning: value assigned to `sym` is never read
    --> src/tccgen.rs:2462:13
     |
2462 |     let mut sym: *mut Sym = 0 as *mut Sym;
     |             ^^^
     |
     = help: maybe it is overwritten before being read?

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccgen.rs:2463:11
     |
2463 |     sym = sym_free_first;
     |           ^^^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccgen.rs:2461:1
     |
2461 | unsafe extern "C" fn sym_malloc() -> *mut Sym {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `tccgen::__sym_malloc` is unsafe and requires unsafe block
    --> src/tccgen.rs:2465:15
     |
2465 |         sym = __sym_malloc();
     |               ^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccgen.rs:2467:5
     |
2467 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
     |     ^^^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
    --> src/tccgen.rs:2467:22
     |
2467 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tccgen.rs:2467:22
     |
2467 |     sym_free_first = (*sym).c2rust_unnamed_0.next;
     |                      ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tccgen.rs:2472:5
     |
2472 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
     |     ^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccgen.rs:2471:1
     |
2471 | pub unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccgen.rs:2472:36
     |
2472 |     (*sym).c2rust_unnamed_0.next = sym_free_first;
     |                                    ^^^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccgen.rs:2473:5
     |
2473 |     sym_free_first = sym;
     |     ^^^^^^^^^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning: variable does not need to be mutable
    --> src/tccgen.rs:2471:35
     |
2471 | pub unsafe extern "C" fn sym_free(mut sym: *mut Sym) {
     |                                   ----^^^
     |                                   |
     |                                   help: remove this `mut`

warning[E0133]: call to unsafe function `tccgen::vpushv` is unsafe and requires unsafe block
    --> src/tccgen.rs:2858:5
     |
2858 |     vpushv(vtop);
     |     ^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccgen.rs:2857:1
     |
2857 | unsafe extern "C" fn vdup() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccgen.rs:2858:12
     |
2858 |     vpushv(vtop);
     |            ^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tccgen.rs:9804:17
     |
9804 |     return &mut (*(*type_0).ref_0).type_0;
     |                 ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccgen.rs:9803:1
     |
9803 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tccgen.rs:9804:19
     |
9804 |     return &mut (*(*type_0).ref_0).type_0;
     |                   ^^^^^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
    --> src/tccgen.rs:9803:35
     |
9803 | unsafe extern "C" fn pointed_type(mut type_0: *mut CType) -> *mut CType {
     |                                   ----^^^^^^
     |                                   |
     |                                   help: remove this `mut`

warning[E0133]: call to unsafe function `tccgen::verify_assign_cast` is unsafe and requires unsafe block
     --> src/tccgen.rs:10019:5
      |
10019 |     verify_assign_cast(dt);
      |     ^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tccgen.rs:10018:1
      |
10018 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: call to unsafe function `tccgen::gen_cast` is unsafe and requires unsafe block
     --> src/tccgen.rs:10020:5
      |
10020 |     gen_cast(dt);
      |     ^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/tccgen.rs:10018:38
      |
10018 | unsafe extern "C" fn gen_assign_cast(mut dt: *mut CType) {
      |                                      ----^^
      |                                      |
      |                                      help: remove this `mut`

warning[E0133]: call to unsafe function `tccgen::merge_symattr` is unsafe and requires unsafe block
     --> src/tccgen.rs:11278:5
      |
11278 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tccgen.rs:11277:1
      |
11277 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tccgen.rs:11278:24
      |
11278 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                        ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tccgen.rs:11278:38
      |
11278 |     merge_symattr(&mut (*ad).a, &mut (*s).a);
      |                                      ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `tccgen::merge_funcattr` is unsafe and requires unsafe block
     --> src/tccgen.rs:11279:5
      |
11279 | /     merge_funcattr(
11280 | |         &mut (*ad).f,
11281 | |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
11282 | |     );
      | |_____^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tccgen.rs:11280:14
      |
11280 |         &mut (*ad).f,
      |              ^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/tccgen.rs:11281:14
      |
11281 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: access to union field is unsafe and requires unsafe block
     --> src/tccgen.rs:11281:14
      |
11281 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ access to union field
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tccgen.rs:11281:14
      |
11281 |         &mut (*s).c2rust_unnamed.c2rust_unnamed.c2rust_unnamed.f,
      |              ^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: variable does not need to be mutable
     --> src/tccgen.rs:11277:34
      |
11277 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                  ----^^
      |                                  |
      |                                  help: remove this `mut`

warning: variable does not need to be mutable
     --> src/tccgen.rs:11277:61
      |
11277 | unsafe extern "C" fn sym_to_attr(mut ad: *mut AttributeDef, mut s: *mut Sym) {
      |                                                             ----^
      |                                                             |
      |                                                             help: remove this `mut`

warning[E0133]: call to unsafe function `tccgen::try_call_scope_cleanup` is unsafe and requires unsafe block
     --> src/tccgen.rs:14115:5
      |
14115 |     try_call_scope_cleanup((*o_0).cl.s);
      |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
     --> src/tccgen.rs:14111:1
      |
14111 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
     --> src/tccgen.rs:14115:28
      |
14115 |     try_call_scope_cleanup((*o_0).cl.s);
      |                            ^^^^^^ dereference of raw pointer
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: call to unsafe function `tccgen::vla_leave` is unsafe and requires unsafe block
     --> src/tccgen.rs:14116:5
      |
14116 |     vla_leave(o_0);
      |     ^^^^^^^^^^^^^^ call to unsafe function
      |
      = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
      = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
     --> src/tccgen.rs:14111:34
      |
14111 | unsafe extern "C" fn leave_scope(mut o_0: *mut scope) {
      |                                  ----^^^
      |                                  |
      |                                  help: remove this `mut`

warning[E0133]: call to unsafe function `tccrun::wait_sem` is unsafe and requires unsafe block
    --> src/tccrun.rs:1310:5
     |
1310 |     wait_sem(&mut rt_sem);
     |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccrun.rs:1309:1
     |
1309 | unsafe extern "C" fn rt_wait_sem() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccrun.rs:1310:19
     |
1310 |     wait_sem(&mut rt_sem);
     |                   ^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tccrun::post_sem` is unsafe and requires unsafe block
    --> src/tccrun.rs:1313:5
     |
1313 |     post_sem(&mut rt_sem);
     |     ^^^^^^^^^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccrun.rs:1312:1
     |
1312 | unsafe extern "C" fn rt_post_sem() {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccrun.rs:1313:19
     |
1313 |     post_sem(&mut rt_sem);
     |                   ^^^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tccrun::rt_wait_sem` is unsafe and requires unsafe block
    --> src/tccrun.rs:1876:5
     |
1876 |     rt_wait_sem();
     |     ^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior
note: an unsafe function restricts its caller, but its body is safe by default
    --> src/tccrun.rs:1875:1
     |
1875 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning[E0133]: dereference of raw pointer is unsafe and requires unsafe block
    --> src/tccrun.rs:1877:5
     |
1877 |     (*s1).next = g_s1;
     |     ^^^^^ dereference of raw pointer
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccrun.rs:1877:18
     |
1877 |     (*s1).next = g_s1;
     |                  ^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: use of mutable static is unsafe and requires unsafe block
    --> src/tccrun.rs:1878:5
     |
1878 |     g_s1 = s1;
     |     ^^^^ use of mutable static
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

warning[E0133]: call to unsafe function `tccrun::bt_link` is unsafe and requires unsafe block
    --> src/tccrun.rs:1879:5
     |
1879 |     bt_link(s1);
     |     ^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning[E0133]: call to unsafe function `tccrun::rt_post_sem` is unsafe and requires unsafe block
    --> src/tccrun.rs:1880:5
     |
1880 |     rt_post_sem();
     |     ^^^^^^^^^^^^^ call to unsafe function
     |
     = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>
     = note: consult the function's documentation for information on how to avoid undefined behavior

warning: variable does not need to be mutable
    --> src/tccrun.rs:1875:30
     |
1875 | unsafe extern "C" fn st_link(mut s1: *mut TCCState) {
     |                              ----^^
     |                              |
     |                              help: remove this `mut`

Some errors have detailed explanations: E0061, E0133, E0223, E0425, E0432, E0599, E0658.
For more information about an error, try `rustc --explain E0061`.
warning: `tinycc_clippy` (bin "tinycc_clippy") generated 5297 warnings
error: could not compile `tinycc_clippy` (bin "tinycc_clippy") due to 2094 previous errors; 5297 warnings emitted
